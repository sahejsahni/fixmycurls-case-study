%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: vintage_pineapple_bw.eps
%%Creator: Adobe Illustrator(R) 13.0
%%For: Алексей Попов
%%CreationDate: 3/12/2016
%%BoundingBox: 0 0 619 811
%%HiResBoundingBox: 0 0 618.6319 810.9151
%%CropBox: 0 0 618.6319 810.9151
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 13.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 13.0.0 x406 R agm 4.4378 ct 5.1039%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 73 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		clonedict
		begin
			/Intent Intent def
			currentdict
		end
		setcolorrendering
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: (Page 1) 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="п»ї" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.1-c036 46.277092, Fri Feb 23 2007 14:17:08        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">vintage_ananas_bw</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xap="http://ns.adobe.com/xap/1.0/"
            xmlns:xapGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xap:CreatorTool>Adobe Illustrator CS3</xap:CreatorTool>
         <xap:CreateDate>2016-03-12T00:50:58+03:00</xap:CreateDate>
         <xap:ModifyDate>2016-03-12T00:50:58+03:00</xap:ModifyDate>
         <xap:MetadataDate>2016-03-12T00:50:58+03:00</xap:MetadataDate>
         <xap:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xapGImg:width>196</xapGImg:width>
                  <xapGImg:height>256</xapGImg:height>
                  <xapGImg:format>JPEG</xapGImg:format>
                  <xapGImg:image>/9j/4AAQSkZJRgABAgEBaAFoAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABABaAAAAAEA&#xA;AQFoAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAADEAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq5gGUg1oRTYkH7xirH9R8g+VdSYtf2klzIwIMklxcM1DtTkZK09siYhPEWOah+XlvpI+tWGl2&#xA;us2kY/eWZhhtdRRO/wBVvIFhLEdeEm7fzjAYsuJHaDLezacmqeUtUfVtNJZJNI1V3aVHTZ4luXBu&#xA;IpVOxWcP/sa1wjyQfNk+k6za6nE5jV4LmAhLqznHCaFyK8XWp6/sspKsN1JGEFBCOwoSzzD5n0Dy&#xA;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&#xA;i0VirsVdirsVdirsVf/Z</xapGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xap:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#">
         <xapMM:DocumentID>uuid:CF5CD139D1E7E5119BEA8FBC829CE640</xapMM:DocumentID>
         <xapMM:InstanceID>uuid:D05CD139D1E7E5119BEA8FBC829CE640</xapMM:InstanceID>
         <xapMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:07735145-a8df-0946-bd23-f5a048ac2000</stRef:instanceID>
            <stRef:documentID>xmp.did:FF2F935165206811822A8E87B3A63B49</stRef:documentID>
            <stRef:renditionClass>default</stRef:renditionClass>
         </xapMM:DerivedFrom>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Print</illustrator:StartupProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xapG="http://ns.adobe.com/xap/1.0/g/">
         <xapTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>352.777778</stDim:w>
            <stDim:h>352.777778</stDim:h>
            <stDim:unit>Millimeters</stDim:unit>
         </xapTPg:MaxPageSize>
         <xapTPg:NPages>1</xapTPg:NPages>
         <xapTPg:HasVisibleTransparency>False</xapTPg:HasVisibleTransparency>
         <xapTPg:HasVisibleOverprint>False</xapTPg:HasVisibleOverprint>
         <xapTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xapTPg:PlateNames>
         <xapTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xapG:groupName>Default Swatch Group</xapG:groupName>
                  <xapG:groupType>0</xapG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xapTPg:SwatchGroups>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -810.915 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 810.915 li
618.632 810.915 li
618.632 0 li
cp
clp
[1 0 0 1 0 0 ]ct
263.698 269.48 mo
263.698 269.48 249.245 282.91 243.062 292.848 cv
243.062 292.848 241.519 301.793 234.292 305.281 cv
227.073 308.758 220.878 315.223 217.265 331.637 cv
214.683 336.113 li
214.683 336.113 209.515 330.633 205.401 338.105 cv
205.401 338.105 216.229 334.617 209.515 345.059 cv
202.823 355.496 196.624 365.934 194.569 374.891 cv
193.011 379.363 li
189.401 376.375 li
186.304 375.387 li
186.304 375.387 192.495 376.375 187.343 387.324 cv
182.175 398.25 175.464 402.234 176.503 420.621 cv
176.503 420.621 174.956 432.066 172.378 438.535 cv
169.792 444.988 172.89 451.949 172.89 451.949 cv
172.89 451.949 168.245 456.922 166.183 460.41 cv
164.124 463.887 161.538 449.957 161.538 449.957 cv
161.538 449.957 162.577 460.906 160.511 467.363 cv
158.448 473.836 158.956 481.785 165.663 484.762 cv
164.636 487.754 li
156.897 484.277 li
156.897 484.277 164.124 492.223 161.026 504.16 cv
157.925 516.082 158.964 525.543 164.636 530.008 cv
164.636 530.008 162.058 534.48 162.058 537.965 cv
162.058 541.453 158.964 551.395 157.409 554.371 cv
155.862 557.363 155.862 557.363 155.862 557.363 cv
153.804 553.875 li
153.804 553.875 157.409 560.34 155.862 567.801 cv
154.319 575.262 160.511 589.176 160.511 589.176 cv
154.827 585.699 li
154.827 585.699 159.995 592.156 159.995 601.609 cv
159.995 611.051 162.573 613.543 162.573 613.543 cv
162.573 613.543 158.448 631.441 168.765 644.371 cv
162.573 640.887 li
162.573 640.887 168.245 644.863 169.792 658.785 cv
171.351 672.703 178.05 674.695 178.05 674.695 cv
178.05 674.695 166.187 670.223 162.058 680.164 cv
162.058 680.164 173.921 677.684 174.956 685.145 cv
175.991 692.598 184.761 698.563 188.886 701.043 cv
193.011 703.543 193.53 717.949 209.515 723.914 cv
209.515 723.914 209.515 735.348 227.577 744.305 cv
227.577 744.305 225.511 746.297 222.94 746.297 cv
220.354 746.297 226.034 749.762 236.354 753.746 cv
246.675 757.723 252.851 759.707 256.979 763.191 cv
261.128 766.676 267.304 773.629 284.847 779.598 cv
302.394 785.566 311.679 787.059 316.323 791.531 cv
320.96 796.004 318.386 799.988 318.386 799.988 cv
318.386 799.988 328.972 796.57 323.812 790.105 cv
318.651 783.652 324.058 791.531 324.058 791.531 cv
324.058 791.531 325.604 793.523 333.354 793.016 cv
341.089 792.535 340.569 791.035 347.28 794.02 cv
353.995 797 369.464 792.535 369.464 792.535 cv
369.464 792.535 381.847 797 395.269 795.02 cv
408.671 793.016 417.448 791.531 428.28 792.535 cv
439.112 793.523 449.948 788.551 449.948 788.551 cv
449.948 788.551 467.487 789.043 476.78 778.105 cv
476.78 778.105 485.55 783.582 494.839 776.121 cv
504.124 768.66 504.644 771.152 510.835 765.176 cv
517.019 759.215 523.726 763.191 531.464 752.262 cv
531.464 752.262 548.491 747.285 553.14 736.348 cv
557.784 725.41 561.909 724.91 561.909 724.91 cv
561.909 724.91 563.968 720.438 569.647 714.969 cv
575.323 709.5 574.815 693.082 581.519 683.652 cv
576.362 686.629 li
576.362 686.629 578.94 677.676 582.554 674.199 cv
586.155 670.711 585.132 658.289 588.737 653.316 cv
592.354 648.34 595.444 642.371 596.472 638.895 cv
597.515 635.418 603.694 629.949 603.694 629.949 cv
603.694 629.949 595.444 633.926 594.921 635.418 cv
594.409 636.902 604.222 617.52 604.729 606.082 cv
605.249 594.637 606.272 592.652 609.894 588.184 cv
613.503 583.707 614.019 569.785 617.628 562.82 cv
617.628 562.82 609.894 570.777 608.343 572.762 cv
606.796 574.754 604.573 551.551 608.187 542.605 cv
611.8 533.652 609.374 533.98 611.956 524.043 cv
614.534 514.09 610.921 507.137 614.534 499.176 cv
614.534 499.176 608.343 501.168 606.796 505.145 cv
605.249 509.129 606.796 499.188 603.694 488.238 cv
600.601 477.301 601.116 458.902 603.694 455.418 cv
606.272 451.949 594.409 459.902 594.409 459.902 cv
594.409 459.902 592.354 447.469 596.995 442.496 cv
601.636 437.527 603.694 440.02 603.694 440.02 cv
603.694 440.02 601.116 435.035 591.831 441.504 cv
591.831 441.504 591.315 434.043 587.706 420.125 cv
584.089 406.199 581.519 388.309 594.409 381.348 cv
594.409 381.348 588.737 377.859 582.03 389.801 cv
582.03 389.801 573.769 389.305 575.835 381.832 cv
577.905 374.383 575.323 374.383 574.292 368.914 cv
573.261 363.445 579.448 361.453 585.132 364.93 cv
585.132 364.93 584.089 355.984 579.964 355.488 cv
575.835 354.988 578.421 345.535 570.687 340.574 cv
562.94 335.605 568.104 333.613 559.323 314.227 cv
550.558 294.824 489.155 239.645 404.55 240.633 cv
319.937 241.629 280.722 251.102 263.698 269.48 cv
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
.27451 .207843 .145098 rgb
f
388.882 793.301 mo
379.276 793.301 371.546 790.543 371.472 790.527 cv
370.37 790.125 li
369.233 790.449 li
369.151 790.477 360.913 792.832 354.347 792.832 cv
351.694 792.832 350.257 792.43 349.519 792.105 cv
345.999 790.535 343.983 789.996 341.812 789.996 cv
340.722 789.996 339.722 790.137 338.554 790.301 cv
337.401 790.465 335.956 790.672 333.89 790.801 cv
333.112 790.855 332.405 790.887 331.772 790.887 cv
328.804 790.887 327.573 790.398 327.269 790.254 cv
322.851 785.723 322.085 785.281 320.519 785.281 cv
318.331 785.281 li
317.339 787.195 li
317.151 787.566 317.034 787.91 316.976 788.25 cv
313.265 785.848 308.12 784.277 300.601 781.98 cv
296.62 780.762 292.12 779.383 286.792 777.566 cv
272.183 772.605 265.96 767.051 261.858 763.379 cv
261.222 762.793 262.874 765.645 262.323 765.176 cv
258.378 761.855 250.901 756.504 242.991 753.504 cv
238.425 751.766 li
234.995 750.449 232.315 749.266 230.315 748.309 cv
230.589 748.094 230.769 747.918 230.831 747.848 cv
234.241 744.566 li
229.96 742.449 li
214.296 734.695 213.815 725.426 213.808 725.027 cv
213.733 722.781 li
211.562 721.922 li
202.054 718.379 198.753 711.355 196.347 706.238 cv
194.894 703.133 193.749 700.684 191.519 699.344 cv
184.276 694.988 179.788 690.066 179.206 685.848 cv
178.933 683.887 177.718 679.871 172.378 678.25 cv
172.558 678.238 172.745 678.23 172.929 678.23 cv
175.194 678.23 177.132 678.863 177.503 678.992 cv
183.983 682.809 li
183.94 682.801 175.292 670.672 174.058 659.59 cv
173.358 653.309 171.854 648.816 170.288 645.691 cv
180.815 657.223 li
171.651 645.75 166.737 615.594 166.776 615.426 cv
167.187 613.621 li
165.835 612.313 li
165.843 612.324 li
165.87 612.324 164.272 609.949 164.272 602.77 cv
164.272 600.176 163.929 597.793 163.409 595.652 cv
168.499 602.293 li
164.507 589.012 li
162.909 585.41 158.987 574.879 160.077 569.629 cv
160.839 565.957 160.534 562.508 159.933 559.754 cv
161.327 557.051 li
162.944 553.953 166.343 543.484 166.343 539.121 cv
166.343 537.156 167.772 534.02 168.479 532.809 cv
169.897 530.348 li
167.632 528.551 li
163.284 525.125 162.386 516.949 165.198 506.152 cv
166.581 500.828 166.167 496.207 165.151 492.527 cv
172.792 504.762 li
168.772 488.133 li
167.913 482.859 li
163.042 480.699 163.104 474.324 164.636 469.527 cv
165.034 468.27 165.327 466.895 165.546 465.465 cv
165.784 465.496 166.011 465.504 166.253 465.504 cv
166.253 465.504 li
166.987 465.504 168.792 465.293 170.003 463.238 cv
171.546 460.652 175.05 456.688 176.272 455.371 cv
177.776 453.77 li
176.89 451.777 li
176.874 451.738 174.413 445.957 176.425 440.906 cv
179.12 434.137 180.69 422.715 180.757 422.223 cv
180.796 421.922 li
180.776 421.598 li
180.077 409.004 183.12 404.004 186.968 397.676 cv
188.401 395.309 189.886 392.879 191.3 389.879 cv
192.222 387.938 192.87 386.168 193.245 384.539 cv
195.468 386.363 li
198.726 376.961 li
198.761 376.785 li
200.722 368.301 206.894 357.938 213.28 347.996 cv
214.276 346.453 215.39 344.488 215.815 342.508 cv
216.187 342.871 li
218.526 338.914 li
221.354 333.992 li
221.468 333.504 li
225.097 317.02 231.171 312.098 236.628 309.473 cv
244.151 305.848 246.577 297.723 247.147 295.27 cv
253.19 285.879 270.034 278.465 270.171 278.34 cv
287.476 259.668 327.866 253.863 407.671 252.918 cv
408.085 251.668 li
489.073 251.668 547.968 297.02 556.886 316.738 cv
560.726 325.223 561.761 330.098 562.503 333.641 cv
563.46 338.113 564.089 341.074 569.511 344.551 cv
572.71 346.598 573.538 349.734 574.339 352.762 cv
575.077 355.605 576.108 359.512 580.308 359.996 cv
580.479 360.137 580.706 360.496 580.94 361.004 cv
580.706 360.996 580.479 360.984 580.249 360.984 cv
577.358 360.984 574.886 362.012 573.261 363.887 cv
571.706 365.672 571.116 368.094 571.616 370.684 cv
572.015 372.832 572.632 374.285 573.128 375.449 cv
573.905 377.301 574.3 378.238 573.222 382.129 cv
572.124 386.102 573.253 388.746 574.394 390.281 cv
577.104 393.902 582.03 394.305 582.589 394.332 cv
582.757 394.344 li
580.87 403.184 582.874 413.629 585.081 422.105 cv
588.55 435.488 589.104 442.82 589.116 442.898 cv
589.542 448.965 li
592.144 447.156 li
590.444 453.301 591.546 460.535 591.722 461.598 cv
592.601 466.91 li
597.187 463.836 li
597.874 463.387 598.604 462.898 599.331 462.449 cv
598.276 470.777 599.003 482.949 601.089 490.293 cv
602.659 495.879 602.964 501.238 603.144 504.449 cv
603.304 507.324 603.479 510.574 607.046 510.574 cv
607.05 510.574 607.05 510.574 607.05 510.574 cv
608.554 510.574 609.491 509.793 610.073 509.004 cv
610.058 510.34 610.104 511.676 610.144 512.988 cv
610.272 516.543 610.405 520.23 609.331 524.383 cv
607.944 529.715 608.526 534.148 609.038 538.055 cv
609.55 542.012 610.003 545.426 608.421 549.332 cv
605.479 556.668 603.53 572.684 605.8 575.887 cv
606.854 577.371 li
602.812 594.539 li
603.628 594.539 605.374 591.543 606.019 591.063 cv
605.132 595.309 609.233 585.613 607.894 587.262 cv
603.655 592.508 602.522 595.387 602.003 607.098 cv
601.581 616.402 594.28 631.941 592.866 634.605 cv
590.374 637.918 li
589.741 638.902 591.288 641.355 590.999 642.293 cv
590.171 645.105 590.218 647.598 586.636 652.527 cv
584.39 655.621 583.675 660.262 582.983 664.723 cv
582.534 667.625 581.87 671.98 580.843 672.965 cv
576.694 676.961 574.038 685.879 573.745 686.883 cv
571.394 695.047 li
574.651 693.16 li
573.808 695.887 573.151 698.66 572.522 701.277 cv
571.312 706.402 570.042 711.699 567.933 713.73 cv
563.667 717.859 561.265 721.504 560.171 723.387 cv
557.8 724.578 554.245 727.781 550.663 736.219 cv
547.378 743.973 535.519 748.914 531.226 750.184 cv
530.042 750.527 li
529.347 751.512 li
525.456 757 522.21 757.965 518.46 759.082 cv
515.55 759.949 512.269 760.918 509.12 763.953 cv
506.37 766.598 505.058 767.273 503.069 768.289 cv
500.921 769.395 498.253 770.762 493.374 774.684 cv
490.769 776.754 488.007 777.82 485.12 777.82 cv
481.831 777.82 479.456 776.426 479.433 776.402 cv
476.812 774.852 li
474.839 777.129 li
467.237 786.074 452.706 786.324 451.069 786.324 cv
450.237 786.309 li
449.222 786.66 li
449.14 786.688 440.815 790.438 432.003 790.438 cv
431.136 790.438 430.257 790.398 429.39 790.32 cv
426.948 790.105 424.589 789.996 422.151 789.996 cv
414.534 789.996 407.245 791.082 398.022 792.449 cv
395.503 792.832 li
393.394 793.145 391.171 793.301 388.882 793.301 cv
cp
1 1 1 rgb
f
366.526 358.816 mo
366.526 358.816 369.202 351.316 366.526 344.355 cv
363.847 337.402 371.347 326.16 380.987 319.188 cv
390.62 312.234 395.979 305.27 409.897 304.199 cv
423.815 303.133 440.417 307.41 448.979 315.449 cv
457.542 323.473 459.687 335.789 459.687 335.789 cv
459.687 335.789 446.304 348.105 433.452 348.641 cv
433.452 348.641 417.394 354.004 397.581 356.141 cv
377.772 358.277 366.526 358.816 366.526 358.816 cv
cp
.27451 .207843 .145098 rgb
f
373.358 359.559 mo
373.511 355.984 373.218 351.754 371.819 347.535 cv
370.679 344.098 367.085 333.777 376.312 326.043 cv
378.425 324.266 393.222 313.992 395.062 312.293 cv
401.401 306.426 402.394 306.238 411.624 305.418 cv
412.894 305.301 418.456 306.785 419.749 306.98 cv
432.562 308.855 441.272 312.625 447.562 319.48 cv
452.229 324.559 454.886 333.074 455.999 337.293 cv
451.366 341.473 442.526 351.629 435.374 351.98 cv
433.187 351.355 li
432.249 351.98 li
432.093 352.039 415.886 354.656 396.972 357.027 cv
386.628 358.316 378.608 359.109 373.358 359.559 cv
cp
1 1 1 rgb
f
409.358 404.863 mo
409.358 404.863 400.257 375.945 388.476 370.594 cv
376.698 365.23 366.526 358.816 366.526 358.816 cv
366.526 358.816 373.011 357.605 383.187 357.605 cv
393.358 357.605 402.519 357.293 404.124 349.793 cv
405.729 342.293 406.679 333.113 414.179 333.652 cv
421.679 334.188 417.972 348.629 429.749 349.168 cv
441.526 349.707 446.835 338.465 459.155 337.938 cv
459.155 337.938 451.12 345.965 447.37 360.957 cv
443.628 375.945 455.94 395.223 455.94 395.223 cv
455.94 395.223 443.495 388.406 432.249 389.48 cv
421.003 390.543 409.358 404.863 409.358 404.863 cv
cp
.27451 .207843 .145098 rgb
f
409.124 397.605 mo
405.077 387.684 397.151 371.512 387.874 367.293 cv
384.112 365.574 383.452 361.883 380.312 360.203 cv
380.53 360.203 380.757 360.191 380.987 360.191 cv
391.897 360.191 405.378 360.191 407.944 348.223 cv
409.858 339.285 412.026 339.285 413.319 339.285 cv
413.894 339.316 li
413.862 339.41 414.386 340.516 414.729 341.238 cv
416.394 344.707 419.491 351.168 429.448 351.629 cv
429.917 351.648 430.374 351.66 430.831 351.66 cv
437.093 351.66 441.874 349.668 446.073 347.742 cv
444.495 351.102 443.003 355.059 441.874 359.578 cv
439.8 367.887 441.776 377.012 444.433 384.316 cv
440.792 383.262 436.8 382.496 432.909 382.496 cv
432.011 382.496 431.116 382.535 430.237 382.613 cv
422.671 383.34 413.804 392.73 409.124 397.605 cv
cp
1 1 1 rgb
f
413.647 353.465 mo
413.647 353.465 412.573 340.613 404.542 337.402 cv
404.542 337.402 408.827 331.512 414.179 333.652 cv
419.53 335.789 419.53 335.789 419.53 335.789 cv
419.53 335.789 416.854 346.504 413.647 353.465 cv
cp
.27451 .207843 .145098 rgb
f
408.827 396.832 mo
408.827 396.832 418.999 369.52 410.433 339.539 cv
410.433 339.539 416.854 356.668 416.315 370.059 cv
415.78 383.445 408.827 396.832 408.827 396.832 cv
cp
f
.91061 lw
0 lc
0 lj
10 ml
[] 0 dsh
true sadj
343.503 495.867 mo
343.503 495.867 333.331 486.766 338.151 478.199 cv
342.972 469.637 342.437 463.199 347.792 457.324 cv
353.144 451.434 351.542 450.359 363.847 449.824 cv
376.167 449.285 382.054 438.043 394.905 441.793 cv
407.753 445.535 413.112 454.109 420.065 459.461 cv
427.026 464.813 434.526 486.766 429.706 492.117 cv
424.886 497.48 396.511 509.785 379.909 509.785 cv
363.319 509.785 343.503 495.867 343.503 495.867 cv
cp
.486275 .796078 .945098 rgb
@
338.687 495.332 mo
338.687 495.332 364.921 515.152 362.245 546.738 cv
362.245 546.738 375.628 533.348 391.155 533.348 cv
406.69 533.348 414.179 537.625 414.179 537.625 cv
414.179 537.625 408.827 522.098 418.46 512.469 cv
428.101 502.832 438.269 487.84 438.269 487.84 cv
438.269 487.84 427.565 485.699 420.065 493.191 cv
412.573 500.691 408.292 494.254 403.472 494.254 cv
398.651 494.254 395.979 488.914 392.761 483.551 cv
389.55 478.199 391.155 473.387 391.155 473.387 cv
391.155 473.387 380.448 474.988 380.448 481.949 cv
380.448 488.902 379.374 484.617 375.628 492.117 cv
371.886 499.617 368.128 498.551 362.784 498.016 cv
357.425 497.48 350.999 492.652 338.687 495.332 cv
cp
.27451 .207843 .145098 rgb
f
364.12 536.297 mo
363.534 518.379 352.683 504.098 345.112 497.48 cv
347.925 497.84 354.347 499.5 356.511 500.184 cv
358.534 500.828 360.452 501.441 362.417 501.637 cv
363.581 501.766 li
364.909 501.902 366.151 502.039 367.323 502.039 cv
372.456 502.039 376.026 499.48 378.89 493.746 cv
380.21 491.102 381.011 490.359 381.589 489.813 cv
383.745 487.809 384.089 486.18 384.089 481.949 cv
384.089 480.41 385.558 479.238 387.237 478.418 cv
387.487 480.582 388.19 483.016 389.636 485.426 cv
390.495 486.871 li
393.554 492.051 397.015 497.91 403.472 497.91 cv
404.202 497.91 405.272 498.348 406.405 498.824 cv
408.151 499.559 410.323 500.465 412.905 500.465 cv
416.3 500.465 419.479 498.934 422.644 495.77 cv
425.257 493.152 428.386 491.973 431.198 491.492 cv
427.417 496.637 421.511 504.266 415.886 509.891 cv
409.065 516.715 409.194 528.004 409.897 534.16 cv
405.769 533.016 398.323 530.945 390.351 530.945 cv
380.351 530.945 369.479 533.992 364.12 536.297 cv
cp
1 1 1 rgb
f
367.065 533.887 mo
367.065 533.887 374.565 524.246 378.308 515.684 cv
382.054 507.105 382.589 501.23 382.054 497.48 cv
381.522 493.719 384.737 488.902 384.737 488.902 cv
384.737 488.902 378.847 496.941 378.308 504.969 cv
377.772 512.996 369.745 529.059 367.065 533.887 cv
cp
.27451 .207843 .145098 rgb
f
382.054 479.801 mo
382.054 479.801 385.804 468.027 392.761 468.563 cv
399.722 469.098 395.976 477.664 406.151 477.664 cv
406.151 477.664 397.581 479.801 393.839 476.59 cv
390.081 473.387 382.054 479.801 382.054 479.801 cv
cp
f
390.081 484.09 mo
390.081 484.09 392.226 490.516 394.905 494.254 cv
397.581 498.016 396.507 501.219 396.507 503.367 cv
396.507 505.504 400.796 514.07 400.796 514.07 cv
400.796 514.07 393.831 507.645 393.3 501.23 cv
392.761 494.793 390.081 484.09 390.081 484.09 cv
cp
f
400.796 443.395 mo
400.796 443.395 391.558 422.652 400.128 413.551 cv
408.69 404.461 413.647 392.535 426.499 389.324 cv
439.347 386.113 447.37 388.785 458.081 395.215 cv
468.788 401.637 475.753 408.602 481.104 411.277 cv
486.46 413.953 489.671 425.73 488.597 428.941 cv
487.534 432.156 481.104 438.043 481.104 438.043 cv
481.104 438.043 471.468 442.332 451.659 447.145 cv
431.847 451.961 413.647 452.496 400.796 443.395 cv
cp
f
426.702 446.922 mo
417.229 446.922 409.663 444.84 403.612 440.555 cv
402.108 437.332 396.675 424.434 402.37 418.016 cv
405.347 414.668 407.917 410.613 410.409 406.707 cv
415.362 398.914 420.038 391.543 427.378 389.59 cv
430.753 388.699 433.753 388.27 436.565 388.27 cv
443.577 388.27 449.28 391.004 456.21 395.41 cv
461.69 398.895 466.112 402.496 470.015 405.684 cv
473.569 408.574 476.64 411.074 479.476 412.574 cv
482.929 414.41 485.612 424.402 485.128 426.707 cv
484.714 428.004 481.714 431.609 479.097 434.215 cv
476.847 435.203 467.437 439.121 450.8 443.406 cv
441.624 445.77 433.745 446.922 426.702 446.922 cv
cp
1 1 1 rgb
f
404.542 441.793 mo
404.542 441.793 409.358 441.258 418.995 441.793 cv
428.636 442.332 434.526 441.258 436.132 439.121 cv
437.745 436.973 432.917 434.293 438.808 429.48 cv
444.698 424.656 440.413 421.453 446.835 416.09 cv
453.265 410.738 459.687 410.203 459.687 410.203 cv
459.687 410.203 448.979 416.09 453.804 422.52 cv
458.616 428.941 457.011 428.941 459.155 433.758 cv
461.292 438.582 464.511 435.371 469.862 433.758 cv
475.214 432.156 491.812 427.34 491.812 427.34 cv
491.812 427.34 483.245 435.371 480.026 443.395 cv
476.819 451.434 475.753 472.848 476.288 474.988 cv
476.819 477.129 477.354 480.879 477.354 480.879 cv
477.354 480.879 471.339 479.676 459.55 481.824 cv
447.776 483.965 426.226 492.262 426.226 492.262 cv
426.226 492.262 435.058 483.551 423.815 466.961 cv
412.573 450.359 400.128 445.281 400.128 445.281 cv
404.542 441.793 li
cp
.27451 .207843 .145098 rgb
f
432.315 486.961 mo
433.386 481.012 432.526 473.328 426.823 464.918 cv
420.487 455.566 413.995 449.148 409.331 445.215 cv
409.831 445.203 410.378 445.203 410.964 445.203 cv
413.382 445.203 416.019 445.27 418.8 445.426 cv
420.519 445.527 422.12 445.574 423.604 445.574 cv
434.569 445.574 437.671 443.133 439.046 441.297 cv
440.714 439.082 440.038 436.766 439.675 435.527 cv
439.308 434.285 439.19 433.875 441.116 432.293 cv
444.972 429.137 445.647 426.121 446.147 423.914 cv
446.55 422.137 446.815 420.926 448.909 419.109 cv
448.925 421.063 449.589 422.977 450.882 424.707 cv
453.632 428.367 453.917 429.41 454.347 431.004 cv
454.624 432.039 454.976 433.328 455.823 435.242 cv
457.558 439.129 460.261 439.949 462.237 439.949 cv
464.089 439.949 465.831 439.227 467.667 438.473 cv
468.644 438.066 469.714 437.613 470.909 437.254 cv
473.065 436.598 477.046 435.438 481.034 434.277 cv
479.335 436.676 477.729 439.344 476.651 442.051 cv
473.382 450.215 472.159 470.691 472.655 475.262 cv
471.46 475.074 470.097 474.969 468.538 474.969 cv
466.276 474.969 462.183 477.324 459.55 477.809 cv
451.89 479.199 440.894 482.77 432.315 486.961 cv
cp
1 1 1 rgb
f
445.233 432.684 mo
445.233 432.684 440.948 445.008 443.089 451.961 cv
445.233 458.926 438.808 476.59 438.808 476.59 cv
438.808 476.59 448.979 464.277 446.835 452.496 cv
444.698 440.723 445.233 432.684 445.233 432.684 cv
cp
.27451 .207843 .145098 rgb
f
391.823 309.707 mo
391.823 309.707 383.8 290.426 380.179 288.016 cv
376.565 285.605 374.96 281.59 369.741 280.789 cv
364.519 279.988 353.538 273.082 343.503 277.898 cv
333.464 282.723 329.183 288.418 321.55 290.426 cv
313.925 292.43 313.124 301.668 308.3 306.895 cv
303.487 312.105 304.284 319.734 304.284 319.734 cv
304.284 319.734 309.905 319.344 340.429 319.734 cv
370.948 320.145 391.823 309.707 391.823 309.707 cv
cp
f
340.468 316.902 mo
330.272 316.766 322.854 316.727 317.495 316.727 cv
312.437 316.727 309.183 316.766 307.151 316.805 cv
307.366 314.559 308.097 311.297 310.386 308.816 cv
312.421 306.609 313.761 303.941 315.05 301.363 cv
316.995 297.469 318.683 294.109 322.276 293.16 cv
328.007 291.66 331.382 289.93 336.495 287.324 cv
338.499 286.297 340.804 285.113 343.659 283.738 cv
346.714 282.285 350.218 281.57 354.386 281.57 cv
358.851 281.57 363.167 282.418 366.315 283.035 cv
367.46 283.262 368.472 283.457 369.312 283.59 cv
371.792 283.973 373.163 285.359 374.897 287.129 cv
375.937 288.184 377.112 289.383 378.608 290.379 cv
380.229 291.551 384.589 300.098 388.124 308.238 cv
382.011 310.777 364.878 316.91 342.167 316.91 cv
340.468 316.902 li
cp
1 1 1 rgb
f
338.815 369.527 mo
338.815 369.527 342.437 347.051 332.796 339.41 cv
323.163 331.785 326.776 333.395 320.753 328.574 cv
314.729 323.758 309.104 319.344 302.679 318.535 cv
296.261 317.73 292.241 318.934 292.241 318.934 cv
292.241 318.934 300.272 309.293 307.901 310.906 cv
315.53 312.52 321.952 313.316 325.569 311.707 cv
329.183 310.105 330.792 308.496 335.206 307.691 cv
339.624 306.895 337.616 301.27 338.019 298.055 cv
338.417 294.84 342.839 290.828 342.839 290.828 cv
342.839 290.828 349.261 296.453 352.874 301.668 cv
356.495 306.895 357.292 309.293 368.933 309.293 cv
380.581 309.293 395.038 304.879 399.854 305.691 cv
399.854 305.691 390.222 316.531 383.394 320.543 cv
376.565 324.559 366.929 336.441 367.671 340.828 cv
370.796 359.371 366.526 358.816 366.526 358.816 cv
366.526 358.816 353.683 356.277 338.815 369.527 cv
cp
.27451 .207843 .145098 rgb
f
342.249 363.223 mo
342.593 355.418 341.851 342.965 334.554 337.195 cv
329.335 333.055 328.179 331.766 327.151 330.633 cv
326.226 329.598 325.347 328.621 322.522 326.355 cv
316.55 321.582 310.374 316.648 303.03 315.723 cv
302.151 315.613 301.312 315.535 300.519 315.488 cv
302.319 314.371 304.28 313.563 306.136 313.563 cv
306.542 313.563 306.937 313.602 307.315 313.68 cv
313.022 314.879 317.015 315.418 320.276 315.418 cv
322.913 315.418 325.022 315.047 326.722 314.293 cv
327.948 313.746 328.964 313.211 329.921 312.691 cv
331.729 311.715 335.94 313.074 338.499 312.605 cv
344.214 311.57 341.054 303.641 340.874 300.848 cv
340.815 299.969 340.741 299.109 340.831 298.406 cv
340.94 297.496 341.894 296.074 342.964 294.801 cv
345.065 296.805 348.382 300.152 350.546 303.277 cv
351.229 304.285 li
354.843 309.59 357.104 312.137 368.933 312.137 cv
375.327 312.137 382.253 310.906 388.37 309.824 cv
389.909 309.551 391.378 309.285 392.722 309.07 cv
389.507 312.273 385.315 316.121 381.956 318.094 cv
373.308 323.184 363.19 331.27 364.104 340.887 cv
364.624 346.309 364.269 352.379 363.979 355.789 cv
363.925 355.789 363.866 355.789 363.808 355.789 cv
359.464 355.789 351.44 356.855 342.249 363.223 cv
cp
1 1 1 rgb
f
317.874 412.918 mo
317.874 412.918 319.792 407.156 318.187 403.543 cv
316.585 399.93 317.136 390.816 325.167 383.582 cv
333.198 376.355 338.019 367.527 346.448 363.113 cv
354.882 358.691 365.323 356.277 372.952 360.301 cv
380.581 364.316 386.604 368.73 392.226 370.738 cv
397.851 372.742 402.265 380.379 405.479 389.207 cv
408.69 398.043 411.233 402.441 409.358 404.863 cv
407.487 407.285 386.198 415.309 367.331 417.313 cv
348.46 419.324 317.874 412.918 317.874 412.918 cv
cp
.27451 .207843 .145098 rgb
f
355.491 414.238 mo
343.421 414.238 331.183 412.754 326.132 412.059 cv
325.386 409.051 324.077 404.082 322.874 401.387 cv
321.683 398.707 321.144 392.105 327.604 386.297 cv
330.843 383.387 333.515 380.301 336.104 377.324 cv
339.925 372.91 343.534 368.746 348.14 366.336 cv
353.608 363.465 359.222 361.895 363.956 361.895 cv
366.745 361.895 369.206 362.441 371.253 363.512 cv
374.112 365.02 376.722 366.57 379.253 368.082 cv
383.343 370.516 387.21 372.809 390.999 374.168 cv
394.804 375.527 398.729 381.309 402.058 390.457 cv
402.792 392.48 403.495 394.277 404.116 395.867 cv
405.144 398.504 406.3 401.473 406.354 402.637 cv
402.854 404.949 384.241 411.855 366.948 413.699 cv
363.569 414.059 359.714 414.238 355.491 414.238 cv
cp
1 1 1 rgb
f
310.312 409.285 mo
310.312 409.285 316.733 407.285 327.979 408.887 cv
339.222 410.488 352.874 407.285 356.495 404.473 cv
360.101 401.66 364.12 396.441 364.12 396.441 cv
364.12 396.441 367.331 394.832 370.948 399.645 cv
374.554 404.473 378.979 406.473 387.409 405.672 cv
395.839 404.871 412.308 398.848 412.308 398.848 cv
412.308 398.848 407.487 407.684 401.862 414.098 cv
396.245 420.527 397.046 436.988 404.272 447.43 cv
404.272 447.43 392.632 440.203 383.8 443.418 cv
374.96 446.629 375.362 449.441 363.714 451.855 cv
352.073 454.266 343.644 461.48 343.644 461.48 cv
343.644 461.48 349.261 449.043 338.019 435.789 cv
326.776 422.535 321.952 420.125 318.339 416.113 cv
314.729 412.098 310.312 409.285 310.312 409.285 cv
cp
.27451 .207843 .145098 rgb
f
348.698 453.719 mo
348.729 448.25 347.151 440.926 340.792 433.426 cv
333.124 424.395 328.397 420.301 324.948 417.313 cv
323.358 415.934 322.104 414.852 321.05 413.668 cv
320.487 413.055 319.921 412.469 319.351 411.91 cv
319.413 411.91 319.487 411.91 319.558 411.91 cv
322.081 411.91 324.741 412.098 327.464 412.488 cv
329.628 412.801 331.964 412.957 334.397 412.957 cv
343.995 412.957 354.675 410.488 358.729 407.34 cv
361.534 405.152 364.452 401.793 365.964 399.957 cv
366.507 400.191 367.229 400.762 368.03 401.832 cv
372.003 407.129 376.933 409.488 384.026 409.488 cv
385.183 409.488 386.425 409.422 387.753 409.293 cv
392.202 408.875 398.573 407.145 403.878 405.504 cv
402.44 407.586 400.819 409.773 399.12 411.707 cv
393.894 417.684 393.241 429.695 396.718 440.191 cv
394.269 439.473 391.546 438.953 388.804 438.953 cv
386.558 438.953 384.448 439.305 382.55 439.996 cv
378.675 441.402 376.382 442.77 374.37 443.973 cv
371.558 445.645 369.335 446.973 362.983 448.277 cv
357.343 449.449 352.417 451.637 348.698 453.719 cv
cp
1 1 1 rgb
f
359.706 420.527 mo
359.706 420.527 358.097 410.488 356.495 404.473 cv
354.882 398.445 360.901 398.043 364.12 396.441 cv
367.331 394.832 371.745 397.637 371.745 397.637 cv
371.745 397.637 363.319 404.07 359.706 420.527 cv
cp
.27451 .207843 .145098 rgb
f
391.823 436.59 mo
391.823 436.59 390.222 430.574 383.8 424.949 cv
377.366 419.324 369.335 408.887 369.335 402.859 cv
369.335 402.859 370.948 404.473 372.55 408.082 cv
374.159 411.699 375.765 414.91 381.386 420.527 cv
387.011 426.152 392.226 430.164 391.823 436.59 cv
cp
f
360.901 411.699 mo
360.901 411.699 359.956 421.023 356.604 430.504 cv
355.097 434.793 353.097 439.109 350.468 442.613 cv
342.03 453.855 346.851 446.629 346.851 446.629 cv
346.851 446.629 351.667 436.59 354.882 429.363 cv
358.097 422.137 360.901 411.699 360.901 411.699 cv
cp
f
260.116 369.129 mo
260.116 369.129 255.296 351.063 260.917 342.625 cv
266.542 334.199 268.956 330.582 271.757 328.973 cv
274.569 327.371 283.808 316.121 298.659 317.73 cv
313.519 319.344 310.714 319.734 322.358 327.77 cv
334.003 335.801 349.261 347.848 341.229 368.328 cv
341.229 368.328 308.706 370.34 291.034 369.93 cv
273.37 369.527 260.116 369.129 260.116 369.129 cv
cp
f
296.226 365.73 mo
294.429 365.73 292.718 365.723 291.132 365.684 cv
278.733 365.398 271.937 372.605 263.53 364.98 cv
262.249 358.457 261.636 349.215 264.456 344.988 cv
269.433 337.52 271.933 333.777 273.87 332.664 cv
274.749 332.168 275.62 331.426 276.819 330.398 cv
280.581 327.184 286.87 321.824 295.78 321.824 cv
296.565 321.824 297.37 321.863 298.202 321.961 cv
308.812 323.105 309.011 323.262 314.128 327.078 cv
315.624 328.191 317.464 329.559 319.944 331.27 cv
331.249 339.07 342.761 348.652 338.144 364.246 cv
330.784 364.668 310.62 365.73 296.226 365.73 cv
cp
1 1 1 rgb
f
246.862 365.516 mo
246.862 365.516 248.069 362.703 258.511 364.715 cv
268.956 366.727 273.769 369.93 278.187 366.727 cv
282.604 363.512 283.808 363.914 285.015 359.902 cv
286.214 355.879 291.835 352.262 294.647 350.66 cv
297.46 349.059 305.089 343.035 305.089 343.035 cv
305.089 343.035 300.272 349.059 299.472 354.277 cv
298.659 359.488 299.472 365.926 310.312 365.926 cv
321.151 365.926 323.163 362.703 330.386 362.301 cv
337.616 361.902 346.448 359.09 352.073 360.301 cv
352.073 360.301 339.624 369.527 334.804 375.957 cv
329.987 382.379 323.565 385.594 321.952 389.207 cv
320.351 392.82 317.835 412.301 322.249 417.918 cv
322.249 417.918 310.714 408.082 301.472 408.887 cv
292.241 409.684 288.62 412.098 283.003 416.512 cv
277.382 420.934 272.968 423.34 272.968 423.34 cv
272.968 423.34 270.956 410.098 272.562 403.262 cv
274.167 396.441 278.995 396.441 274.569 393.629 cv
270.155 390.816 262.929 388.004 260.519 381.18 cv
258.104 374.355 251.284 365.926 246.862 365.516 cv
cp
.27451 .207843 .145098 rgb
f
276.444 416.09 mo
276.12 411.973 276.011 407.184 276.702 404.227 cv
277.175 402.215 265.948 383.785 264.526 379.762 cv
263.37 376.492 261.151 372.48 258.394 369.02 cv
261.12 369.578 263.437 370.203 265.452 370.75 cv
268.714 371.637 271.288 372.332 273.882 372.332 cv
276.444 372.332 278.671 371.629 280.687 370.164 cv
281.761 369.383 282.628 368.836 283.343 368.387 cv
286.069 366.66 287.808 365.379 289.085 361.121 cv
289.464 359.863 291.44 357.684 295.062 355.371 cv
294.722 359.578 295.651 363.004 297.847 365.566 cv
300.468 368.621 304.663 370.176 310.312 370.176 cv
317.198 370.176 321.081 368.934 324.202 367.938 cv
326.37 367.246 328.085 366.688 330.62 366.551 cv
333.37 366.395 336.237 365.934 339.042 365.465 cv
336.144 368.074 333.28 370.906 331.401 373.406 cv
329.257 376.27 326.651 378.496 324.354 380.457 cv
321.62 382.793 319.257 384.801 318.069 387.469 cv
316.597 390.809 316.327 399.957 317.827 407.848 cv
313.241 406.152 307.69 404.566 302.89 404.566 cv
302.284 404.566 301.69 404.598 301.108 404.645 cv
290.729 405.555 286.351 408.473 280.374 413.172 cv
278.968 414.277 277.636 415.254 276.444 416.09 cv
cp
1 1 1 rgb
f
293.448 354.277 mo
293.448 354.277 289.433 359.488 289.433 366.316 cv
289.433 373.145 284.206 381.98 281.8 386.395 cv
279.39 390.816 276.624 395.418 276.624 395.418 cv
276.624 395.418 276.183 391.219 280.19 385.594 cv
284.206 379.969 286.62 375.152 287.019 369.93 cv
287.425 364.715 287.425 360.699 293.448 354.277 cv
cp
.27451 .207843 .145098 rgb
f
300.272 374.754 mo
300.272 374.754 297.862 386.395 312.323 397.637 cv
312.323 397.637 294.647 390.816 300.272 374.754 cv
cp
f
295.374 318.543 mo
295.374 318.543 300.675 312.09 297.46 302.059 cv
294.245 292.027 294.647 280.387 287.425 279.188 cv
280.19 277.977 267.749 282.801 260.519 286.012 cv
253.292 289.215 243.651 295.645 238.03 317.332 cv
238.03 317.332 244.452 320.543 258.909 320.543 cv
273.37 320.543 290.155 322.957 295.374 318.543 cv
cp
f
258.909 317.703 mo
249.999 317.703 244.296 316.434 241.456 315.566 cv
248.812 297.605 254.983 291.57 261.667 288.602 cv
271.499 284.238 279.753 281.832 284.925 281.832 cv
285.647 281.832 286.327 281.871 286.964 281.98 cv
289.976 282.48 291.077 286.805 292.542 293.875 cv
293.159 296.832 293.792 299.902 294.761 302.926 cv
297.226 310.621 293.917 313.34 293.772 313.445 cv
288.722 317.703 267.831 317.703 258.909 317.703 cv
cp
1 1 1 rgb
f
260.917 317.73 mo
264.534 314.121 li
264.534 314.121 261.722 312.52 261.722 308.094 cv
261.722 303.68 252.085 295.645 252.085 295.645 cv
252.085 295.645 255.296 303.68 252.085 308.895 cv
248.87 314.121 246.862 313.719 242.448 312.918 cv
238.03 312.105 230.401 312.918 230.401 312.918 cv
230.401 312.918 234.417 315.32 233.612 323.758 cv
232.812 332.184 239.636 335.41 236.019 340.223 cv
232.409 345.035 228.276 369.656 230.687 371.668 cv
233.101 373.668 238.675 368.68 244.749 366.355 cv
248.733 364.824 248.995 366.941 253.812 365.73 cv
258.632 364.527 260.917 365.516 260.917 365.516 cv
260.917 365.516 259.714 347.051 263.729 339.813 cv
267.749 332.598 280.995 322.949 292.241 318.934 cv
292.241 318.934 289.026 314.52 282.202 316.531 cv
275.374 318.535 272.968 321.348 269.351 319.734 cv
265.737 318.133 260.917 317.73 260.917 317.73 cv
cp
.27451 .207843 .145098 rgb
f
231.538 368.895 mo
231.483 363.27 235.468 345.684 238.292 341.922 cv
241.214 338.027 239.573 334.539 238.253 331.746 cv
237.206 329.527 236.128 327.246 236.433 324.02 cv
236.792 320.27 236.308 317.48 235.534 315.418 cv
236.128 315.41 236.741 315.387 237.362 315.387 cv
239.269 315.387 240.804 315.496 241.94 315.699 cv
243.519 315.996 244.808 316.23 246.089 316.23 cv
249.507 316.23 251.94 314.527 254.503 310.379 cv
255.757 308.34 256.253 306.043 256.347 303.855 cv
257.894 305.711 258.886 307.301 258.886 308.094 cv
258.886 310.645 259.644 312.625 260.585 314.059 cv
254.597 320.035 li
260.679 320.555 li
260.722 320.555 265.081 320.945 268.202 322.332 cv
269.292 322.809 270.37 323.055 271.499 323.055 cv
273.554 323.055 275.37 322.254 277.476 321.336 cv
279.007 320.672 280.741 319.91 283.003 319.246 cv
283.769 319.02 284.511 318.887 285.214 318.848 cv
274.999 323.855 264.843 331.98 261.253 338.434 cv
258.058 344.199 257.792 355.398 257.925 361.559 cv
257.519 361.52 257.089 361.492 256.636 361.492 cv
255.472 361.492 254.245 361.648 253.007 361.961 cv
252.292 362.137 251.679 362.223 251.116 362.223 cv
250.487 362.223 249.987 362.117 249.354 361.98 cv
248.644 361.824 247.831 361.648 246.835 361.648 cv
245.714 361.648 244.565 361.883 243.319 362.363 cv
240.679 363.367 238.062 365.008 235.745 366.453 cv
234.472 367.254 232.722 368.348 231.538 368.895 cv
cp
1 1 1 rgb
f
253.108 360.84 mo
253.108 360.84 248.292 349.188 250.702 341.16 cv
253.108 333.133 254.722 328.707 256.729 324.293 cv
258.729 319.871 257.128 312.645 257.128 312.645 cv
257.128 312.645 255.921 325.098 251.909 331.121 cv
247.89 337.145 244.675 351.199 253.108 360.84 cv
cp
.27451 .207843 .145098 rgb
f
453.667 394.434 mo
453.667 394.434 444.022 381.18 444.831 367.926 cv
445.636 354.676 456.073 337.809 464.104 333.797 cv
472.136 329.785 481.776 328.574 489.401 338.211 cv
497.03 347.848 499.437 347.449 507.069 353.875 cv
514.702 360.301 519.519 364.715 519.519 371.941 cv
519.519 371.941 504.261 383.184 491.409 386.395 cv
478.565 389.605 453.667 394.434 453.667 394.434 cv
cp
f
452.249 391.668 mo
449.8 387.637 445.245 375.184 446.417 366.668 cv
449.335 345.418 459.358 340.918 466.003 337.598 cv
469.374 335.918 472.503 335.066 475.312 335.066 cv
479.472 335.066 482.987 336.949 486.069 340.848 cv
491.558 347.781 494.722 350.02 498.382 352.605 cv
500.062 353.785 501.925 355.098 504.331 357.129 cv
510.858 362.625 514.237 365.855 515.065 369.871 cv
510.69 372.871 499.69 379.941 490.378 382.262 cv
480.315 384.785 459.116 390.309 452.249 391.668 cv
cp
1 1 1 rgb
f
444.831 389.207 mo
444.831 389.207 444.831 387.207 456.874 386.395 cv
468.921 385.594 477.354 385.996 477.354 379.969 cv
477.354 373.953 479.362 369.93 482.979 367.117 cv
486.589 364.316 489.401 362.301 492.616 361.504 cv
495.831 360.699 505.87 364.715 505.87 364.715 cv
505.87 364.715 497.437 363.914 496.229 368.73 cv
495.026 373.551 501.054 381.18 503.862 379.168 cv
506.675 377.168 506.675 375.957 510.284 374.754 cv
513.894 373.551 520.327 369.527 520.327 369.527 cv
520.327 369.527 515.104 381.98 514.702 385.594 cv
514.3 389.207 511.487 395.23 516.706 401.258 cv
521.929 407.285 518.315 419.324 518.315 419.324 cv
518.315 419.324 515.214 419.566 511.222 420.418 cv
508.026 421.082 504.261 422.137 501.054 423.746 cv
493.815 427.352 486.589 430.965 486.589 430.965 cv
486.589 430.965 491.812 420.934 481.378 413.699 cv
470.933 406.473 463.3 400.855 456.479 396.832 cv
449.647 392.82 444.831 389.207 444.831 389.207 cv
cp
.27451 .207843 .145098 rgb
f
491.542 424.422 mo
491.354 419.941 489.37 414.813 483.448 410.711 cv
480.745 408.836 478.229 407.078 475.874 405.418 cv
468.964 400.574 463.503 396.746 458.319 393.699 cv
456.354 392.547 454.554 391.414 452.995 390.41 cv
454.14 390.27 455.503 390.145 457.12 390.035 cv
458.636 389.93 460.089 389.852 461.483 389.773 cv
471.519 389.207 480.995 388.68 480.995 379.969 cv
480.995 375.34 482.3 372.262 485.214 369.996 cv
488.847 367.168 491.132 365.621 493.499 365.035 cv
493.655 365.035 493.831 365.047 494.011 365.059 cv
493.401 365.879 492.952 366.805 492.698 367.848 cv
491.702 371.816 493.647 376.16 495.796 378.914 cv
497.026 380.496 499.581 383.145 502.808 383.145 cv
503.956 383.145 505.054 382.793 505.976 382.137 cv
507.167 381.285 507.944 380.543 508.573 379.957 cv
509.479 379.09 509.862 378.73 511.433 378.199 cv
512.015 378.016 512.644 377.762 513.3 377.48 cv
512.214 380.516 511.269 383.504 511.081 385.191 cv
511.015 385.777 510.87 386.441 510.722 387.168 cv
509.901 390.984 508.55 397.402 513.96 403.641 cv
516.483 406.559 516.042 412.391 515.366 416.004 cv
514.058 416.18 512.358 416.453 510.468 416.855 cv
506.144 417.762 502.425 418.98 499.425 420.488 cv
491.542 424.422 li
cp
1 1 1 rgb
f
489.804 418.926 mo
489.804 418.926 495.429 408.484 490.206 397.637 cv
484.983 386.793 486.19 373.551 489.804 367.926 cv
489.804 367.926 484.589 377.566 489.003 388.809 cv
493.417 400.059 497.03 408.484 489.804 418.926 cv
cp
.27451 .207843 .145098 rgb
f
514.3 416.91 mo
514.3 416.91 515.331 416.043 517.37 414.996 cv
519.901 413.699 523.983 412.145 529.558 411.699 cv
539.597 410.895 542.812 404.871 542.812 404.871 cv
542.812 404.871 542.812 411.699 531.573 413.699 cv
520.327 415.711 514.3 416.91 514.3 416.91 cv
cp
.486275 .796078 .945098 rgb
@
570.522 390.008 mo
570.522 390.008 565.296 386.395 563.284 379.969 cv
561.276 373.551 552.444 365.516 546.026 363.914 cv
539.597 362.301 535.179 360.699 530.761 361.902 cv
526.347 363.113 520.327 365.926 516.308 378.367 cv
512.292 390.816 509.749 392.293 516.706 401.258 cv
519.862 405.32 517.37 414.996 517.37 414.996 cv
517.37 414.996 536.784 416.113 548.831 411.285 cv
560.878 406.473 568.511 395.633 568.511 395.633 cv
568.511 395.633 567.304 391.621 570.522 390.008 cv
cp
.27451 .207843 .145098 rgb
f
520.815 412.262 mo
521.386 408.535 521.644 402.879 518.921 399.48 cv
516.948 397.02 514.815 392.246 519.007 379.238 cv
522.495 368.434 527.284 365.789 531.511 364.637 cv
532.292 364.422 533.12 364.316 534.019 364.316 cv
536.366 364.316 539.026 365.02 542.397 365.906 cv
545.335 366.66 li
550.933 368.066 558.909 375.465 560.581 380.816 cv
561.913 385.074 564.452 388.23 566.382 390.164 cv
565.511 391.715 565.362 393.484 565.495 394.902 cv
563.433 397.508 556.901 405.008 547.784 408.66 cv
539.909 411.805 528.452 412.273 522.319 412.273 cv
522.319 412.273 521.276 412.273 520.815 412.262 cv
cp
1 1 1 rgb
f
558.87 388.406 mo
558.87 388.406 551.644 386.793 550.038 379.969 cv
548.437 373.145 545.624 367.117 534.78 366.316 cv
534.78 366.316 544.011 368.328 544.413 375.555 cv
544.819 382.781 548.437 389.605 558.87 388.406 cv
cp
.27451 .207843 .145098 rgb
f
464.104 480.359 mo
464.104 480.359 473.343 474.746 482.577 476.348 cv
491.812 477.949 500.245 477.547 504.261 475.137 cv
508.276 472.73 511.487 473.535 510.284 470.723 cv
509.081 467.918 509.081 463.895 511.089 461.09 cv
513.097 458.277 513.495 457.066 513.495 453.855 cv
513.495 450.645 515.104 447.43 516.706 445.828 cv
518.315 444.227 520.327 438.199 520.327 438.199 cv
520.327 438.199 519.921 442.215 519.116 446.629 cv
518.315 451.051 525.546 457.48 524.737 463.094 cv
523.933 468.719 532.37 465.906 532.769 464.695 cv
533.175 463.496 543.612 454.668 546.823 453.457 cv
550.038 452.254 540.804 463.094 540.804 474.746 cv
540.804 486.387 544.819 496.023 544.819 496.023 cv
544.819 496.023 533.979 502.051 526.745 507.664 cv
519.519 513.289 507.069 519.715 507.069 519.715 cv
507.069 519.715 505.464 507.262 495.831 498.434 cv
486.19 489.598 474.944 487.184 470.933 484.371 cv
466.913 481.57 464.104 480.359 464.104 480.359 cv
cp
f
509.542 514.246 mo
508.085 509.363 504.909 501.824 498.296 495.75 cv
491.331 489.363 483.788 486.199 478.276 483.887 cv
475.991 482.918 474.011 482.09 473.022 481.395 cv
472.745 481.199 472.464 481.004 472.198 480.816 cv
474.257 480.191 476.663 479.695 479.128 479.695 cv
480.104 479.695 481.065 479.773 481.956 479.941 cv
485.839 480.605 489.565 480.945 493.046 480.945 cv
496.972 480.945 502.433 480.488 506.136 478.27 cv
507.265 477.598 508.358 477.223 509.323 476.902 cv
510.894 476.395 512.847 475.738 513.772 473.691 cv
514.362 472.371 514.315 470.887 513.628 469.293 cv
512.917 467.625 512.823 464.918 514.05 463.199 cv
516.503 459.762 517.136 457.848 517.136 453.855 cv
517.136 453.668 517.147 453.473 517.167 453.289 cv
517.597 454.129 518.065 454.969 518.53 455.801 cv
519.862 458.172 521.382 460.855 521.136 462.574 cv
520.753 465.27 521.667 466.988 522.511 467.957 cv
523.362 468.941 524.972 470.113 527.796 470.113 cv
529.843 470.113 534.472 469.188 535.956 466.473 cv
536.472 465.855 537.784 464.656 539.362 463.301 cv
538.136 466.715 537.159 470.633 537.159 474.746 cv
537.159 483.105 539.089 490.438 540.362 494.371 cv
536.62 496.559 529.726 500.738 524.511 504.793 cv
520.167 508.172 513.722 511.922 509.542 514.246 cv
cp
1 1 1 rgb
f
414.179 537.625 mo
414.179 537.625 407.886 525.332 414.315 515.301 cv
420.741 505.262 426.761 497.625 431.979 491.609 cv
437.206 485.582 445.636 479.957 456.874 479.559 cv
468.12 479.16 476.155 485.184 486.19 490.398 cv
496.229 495.621 510.683 498.027 508.683 520.516 cv
508.683 520.516 490.206 532.566 466.511 536.98 cv
442.827 541.395 414.179 537.625 414.179 537.625 cv
cp
.27451 .207843 .145098 rgb
f
439.917 535.488 mo
429.487 535.488 420.569 534.668 416.702 534.254 cv
415.472 530.934 413.448 523.406 417.382 517.254 cv
422.729 508.902 428.401 501.297 434.737 493.992 cv
438.069 490.137 445.405 483.613 457.007 483.191 cv
457.319 483.184 457.632 483.184 457.94 483.184 cv
465.597 483.184 471.757 486.609 478.894 490.582 cv
480.718 491.59 482.577 492.625 484.507 493.629 cv
486.065 494.441 487.714 495.184 489.394 495.945 cv
498.253 499.91 505.937 503.367 505.175 518.395 cv
500.378 521.238 484.722 529.879 465.847 533.395 cv
458.425 534.785 449.702 535.488 439.917 535.488 cv
cp
1 1 1 rgb
f
409.495 534.98 mo
409.495 534.98 418.729 530.957 430.37 532.566 cv
442.019 534.168 448.448 536.582 450.05 532.168 cv
451.659 527.742 450.858 524.941 456.073 522.129 cv
461.292 519.316 461.698 519.316 463.698 515.699 cv
465.714 512.09 467.722 507.262 469.323 510.477 cv
470.933 513.691 475.351 520.113 475.351 520.113 cv
475.351 520.113 468.12 520.516 467.722 519.316 cv
467.319 518.113 468.12 526.141 474.144 526.941 cv
480.167 527.742 487.401 530.152 491.011 528.145 cv
494.624 526.141 503.456 524.137 503.456 524.137 cv
503.456 524.137 492.616 535.371 490.608 543.004 cv
488.597 550.633 492.616 571.91 492.616 571.91 cv
492.616 571.91 480.972 565.086 470.53 566.297 cv
460.089 567.496 444.831 579.551 444.831 579.551 cv
444.831 579.551 446.44 567.098 439.206 556.66 cv
431.979 546.219 422.343 538.98 409.495 534.98 cv
cp
.27451 .207843 .145098 rgb
f
448.437 572.469 mo
447.972 567.48 445.487 561.746 441.214 555.574 cv
435.628 547.508 429.765 540.359 421.44 535.965 cv
422.499 535.879 423.62 535.828 424.784 535.828 cv
426.503 535.828 428.218 535.945 429.878 536.168 cv
432.394 536.52 434.659 536.902 436.679 537.246 cv
440.218 537.848 443.019 538.316 445.378 538.316 cv
449.569 538.316 452.288 536.668 453.476 533.406 cv
453.925 532.176 454.214 531.051 454.468 530.008 cv
455.093 527.52 455.308 526.676 457.8 525.332 cv
458.929 524.723 li
461.601 523.301 463.081 522.469 464.296 521.23 cv
465.116 524.52 467.749 529.762 473.667 530.555 cv
475.214 530.762 476.854 531.082 478.491 531.395 cv
481.44 531.98 484.491 532.566 487.21 532.566 cv
489.433 532.566 491.233 532.176 492.722 531.355 cv
490.261 534.801 487.979 538.66 487.085 542.078 cv
485.64 547.574 486.823 558.445 487.89 565.672 cv
483.886 564.09 478.511 562.508 473.085 562.508 cv
472.089 562.508 471.097 562.559 470.112 562.676 cv
462.968 563.496 454.151 568.641 448.437 572.469 cv
cp
1 1 1 rgb
f
363.319 540.848 mo
363.319 540.848 363.319 516.504 352.073 505.262 cv
340.831 494.012 332.796 493.211 325.569 492 cv
318.339 490.809 315.933 489.199 308.706 491.199 cv
301.472 493.211 280.995 508.066 275.78 526.141 cv
270.558 544.207 272.968 555.848 272.968 555.848 cv
272.968 555.848 297.058 561.074 320.753 557.457 cv
344.44 553.848 363.319 540.848 363.319 540.848 cv
cp
.27451 .207843 .145098 rgb
f
302.812 555.086 mo
291.729 555.086 293.179 564.41 276.245 552.77 cv
275.886 548.68 275.718 539.473 279.276 527.145 cv
284.218 510.035 303.8 496.348 309.675 494.715 cv
311.69 494.148 313.331 493.895 314.839 493.895 cv
316.577 493.895 318.175 494.238 320.378 494.707 cv
321.718 494.988 323.206 495.309 324.972 495.605 cv
326.097 495.777 li
332.761 496.871 339.659 497.996 349.503 507.832 cv
357.823 516.16 359.335 533.152 359.612 538.895 cv
354.628 541.988 338.854 551.012 320.206 553.855 cv
314.843 554.676 308.995 555.086 302.812 555.086 cv
302.812 555.086 li
cp
1 1 1 rgb
f
256.909 463.496 mo
256.909 463.496 255.296 453.855 257.71 448.641 cv
260.116 443.418 260.917 439.402 264.128 434.59 cv
267.343 429.773 276.183 417.723 285.413 412.098 cv
294.647 406.473 300.272 404.473 306.3 407.684 cv
309.749 409.52 323.241 415.262 331.19 423.746 cv
337.214 430.164 348.46 441.805 345.249 456.27 cv
345.249 456.27 332.397 465.105 303.886 468.316 cv
275.374 471.52 256.909 463.496 256.909 463.496 cv
cp
.27451 .207843 .145098 rgb
f
290.519 466.238 mo
274.468 466.238 263.308 462.82 259.491 461.453 cv
259.136 458.301 258.89 452.84 260.284 449.832 cv
261.159 447.926 261.831 446.18 262.476 444.5 cv
263.608 441.559 264.585 439.012 266.487 436.16 cv
268.218 433.563 277.331 420.34 286.89 414.52 cv
292.347 411.199 296.737 408.98 300.433 408.98 cv
301.987 408.98 303.425 409.363 304.964 410.184 cv
305.522 410.477 306.331 410.879 307.331 411.363 cv
312.343 413.809 322.761 418.895 329.12 425.684 cv
335.198 432.156 344.71 442.285 342.706 454.5 cv
339.312 456.465 326.698 462.887 303.569 465.496 cv
299.206 465.996 294.819 466.238 290.519 466.238 cv
cp
1 1 1 rgb
f
243.253 464.695 mo
243.253 464.695 253.69 461.09 264.534 463.496 cv
275.374 465.906 283.409 465.504 285.413 459.082 cv
287.425 452.652 287.425 452.652 289.433 447.832 cv
291.433 443.016 295.054 440.613 295.054 440.613 cv
295.054 440.613 296.659 444.617 298.265 450.242 cv
299.866 455.867 307.097 454.266 308.3 459.082 cv
309.511 463.895 318.339 461.895 323.163 461.09 cv
327.979 460.293 345.249 456.27 345.249 456.27 cv
345.249 456.27 347.655 467.918 342.437 474.746 cv
337.214 481.57 347.655 500.84 347.655 500.84 cv
347.655 500.84 331.991 492.41 319.14 492 cv
306.3 491.609 285.413 510.074 285.413 510.074 cv
285.413 510.074 286.214 500.84 275.374 490.398 cv
264.534 479.957 261.315 479.559 258.104 475.137 cv
254.897 470.723 250.882 467.105 243.253 464.695 cv
cp
.27451 .207843 .145098 rgb
f
287.968 503.238 mo
286.679 499.082 283.886 493.535 277.901 487.781 cv
272.206 482.293 268.573 479.512 265.917 477.488 cv
263.593 475.711 262.315 474.723 261.054 472.996 cv
259.12 470.34 257.046 468.16 254.667 466.363 cv
255.312 466.324 255.964 466.316 256.636 466.316 cv
259.136 466.316 261.526 466.559 263.737 467.051 cv
268.124 468.027 271.776 468.496 274.901 468.496 cv
284.315 468.496 287.706 463.965 288.894 460.164 cv
290.847 453.895 290.847 453.895 292.792 449.238 cv
293.046 448.629 293.335 448.066 293.636 447.547 cv
293.995 448.668 294.378 449.91 294.765 451.246 cv
296.073 455.84 299.792 457.391 302.253 458.418 cv
304.034 459.16 304.647 459.488 304.769 459.969 cv
305.315 462.156 307.3 465.828 314.374 465.828 cv
317.159 465.828 320.12 465.309 322.503 464.902 cv
323.761 464.676 li
327.226 464.098 336.679 461.973 342.112 460.73 cv
342.304 464.395 341.94 469.383 339.546 472.527 cv
335.624 477.652 337.694 486.57 340.3 493.473 cv
334.401 491.121 326.495 488.59 319.257 488.367 cv
318.729 488.355 li
308.534 488.355 295.183 497.586 287.968 503.238 cv
cp
1 1 1 rgb
f
293.448 455.465 mo
293.448 455.465 293.847 466.707 289.831 473.133 cv
285.815 479.559 281.8 489.598 283.808 498.434 cv
283.808 498.434 283.808 488.395 289.433 480.359 cv
295.054 472.332 296.659 463.496 293.448 455.465 cv
cp
.27451 .207843 .145098 rgb
f
301.077 599.629 mo
301.077 599.629 297.862 592.391 297.058 581.152 cv
296.261 569.91 291.433 563.484 285.413 559.871 cv
279.39 556.258 271.362 555.457 271.362 555.457 cv
271.362 555.457 277.382 551.434 285.815 554.656 cv
294.245 557.859 296.659 556.258 302.679 551.844 cv
308.706 547.418 307.097 546.219 309.104 538.59 cv
311.112 530.957 310.714 529.754 316.331 525.738 cv
321.952 521.715 325.976 515.301 325.976 515.301 cv
325.976 515.301 323.964 524.137 321.952 528.145 cv
319.948 532.168 327.979 542.195 328.378 545.008 cv
328.784 547.82 332.796 547.82 336.409 546.219 cv
340.026 544.605 334.804 543.406 342.839 545.008 cv
350.87 546.621 352.472 543.004 355.683 541.793 cv
358.901 540.594 369.741 538.184 369.741 538.184 cv
369.741 538.184 354.62 553.574 352.604 566.012 cv
350.601 578.465 348.46 581.949 348.46 581.949 cv
348.46 581.949 339.624 575.934 330.386 576.738 cv
321.151 577.535 304.284 589.59 301.077 599.629 cv
cp
f
302.112 590.594 mo
301.511 587.926 300.96 584.645 300.69 580.887 cv
300.05 571.871 296.979 564.84 291.562 559.91 cv
292.058 559.957 292.554 559.98 293.034 559.98 cv
297.737 559.98 300.87 557.684 304.839 554.773 cv
310.222 550.828 310.878 548.367 311.663 544.02 cv
311.886 542.82 312.144 541.363 312.632 539.512 cv
312.901 538.484 313.124 537.574 313.331 536.766 cv
314.534 531.91 314.659 531.441 318.019 529.012 cv
317.698 532.965 320.378 537.637 322.792 541.855 cv
323.569 543.211 324.632 545.066 324.8 545.66 cv
325.245 548.816 328.019 550.945 331.839 550.945 cv
333.714 550.945 335.858 550.449 337.89 549.551 cv
338.749 549.168 339.452 548.699 340.019 548.172 cv
340.741 548.309 341.55 548.465 342.124 548.582 cv
343.722 548.902 345.167 549.059 346.538 549.059 cv
350.976 549.059 353.452 545.816 355.284 544.598 cv
355.354 544.551 361.64 542.508 361.706 542.457 cv
358.409 546.426 351.315 556.98 350.468 562.262 cv
349.378 569.004 346.417 572.535 345.753 576.324 cv
342.323 574.746 337.397 573.016 332.112 573.016 cv
331.433 573.016 330.753 573.043 330.073 573.105 cv
321.979 573.809 309.206 581.715 302.112 590.594 cv
cp
1 1 1 rgb
f
346.448 582.762 mo
346.448 582.762 346.448 573.121 352.073 560.672 cv
357.694 548.223 363.983 536.832 389.687 533.223 cv
389.687 533.223 407.487 529.871 423.815 541.246 cv
437.226 550.594 450.452 560.27 444.831 582.363 cv
444.831 582.363 422.343 594.004 389.819 591.988 cv
357.292 589.988 346.448 582.762 346.448 582.762 cv
cp
.27451 .207843 .145098 rgb
f
397.366 588.582 mo
394.937 588.582 392.472 588.512 390.042 588.355 cv
366.222 586.895 354.401 582.547 350.237 580.633 cv
350.573 577.293 351.694 570.359 355.39 562.176 cv
360.917 549.93 366.147 538.367 389.745 534.988 cv
389.933 534.988 390.284 534.98 390.78 534.98 cv
394.362 534.98 406.933 535.438 418.229 541.402 cv
428.901 547.027 445.839 559.41 441.679 579.813 cv
436.776 582 420.077 588.582 397.366 588.582 cv
cp
1 1 1 rgb
f
342.03 579.148 mo
342.03 579.148 354.479 577.938 358.901 581.949 cv
363.319 585.973 368.933 584.762 374.554 586.777 cv
380.179 588.777 386.604 587.977 387.812 584.363 cv
389.011 580.75 389.417 581.152 393.433 575.934 cv
397.444 570.711 393.026 563.887 398.651 561.074 cv
404.272 558.262 405.878 549.832 405.878 549.832 cv
405.878 549.832 407.886 556.258 405.878 561.871 cv
403.878 567.496 406.69 572.715 407.886 575.527 cv
409.089 578.34 415.917 580.75 417.526 584.363 cv
419.128 587.977 422.343 584.363 425.155 582.762 cv
427.968 581.152 427.968 583.965 431.979 581.551 cv
435.995 579.148 447.64 578.738 447.64 578.738 cv
447.64 578.738 441.62 586.363 437.601 593.602 cv
433.589 600.828 424.354 615.281 432.382 631.348 cv
432.382 631.348 406.284 616.492 376.565 638.172 cv
376.565 638.172 379.78 621.707 373.358 611.668 cv
366.929 601.629 365.323 600.426 362.511 595.605 cv
359.706 590.789 353.683 585.176 342.03 579.148 cv
cp
.27451 .207843 .145098 rgb
f
380.972 630.957 mo
381.198 624.773 380.573 616.199 376.425 609.707 cv
372.987 604.344 370.937 601.512 369.292 599.215 cv
367.909 597.293 366.901 595.906 365.659 593.777 cv
364.362 591.551 362.581 589.355 360.323 587.184 cv
362.835 588.316 365.425 588.691 367.808 589.043 cv
369.749 589.316 371.581 589.578 373.331 590.203 cv
375.69 591.043 378.206 591.492 380.612 591.492 cv
386.038 591.492 390.019 589.254 391.265 585.516 cv
391.901 583.602 392.026 583.457 393.538 581.629 cv
394.222 580.789 395.112 579.715 396.315 578.152 cv
398.866 574.84 398.979 571.152 399.058 568.445 cv
399.159 565.191 399.362 564.793 400.284 564.332 cv
400.784 564.082 401.269 563.797 401.729 563.484 cv
400.894 568.797 402.979 573.457 404.179 576.141 cv
404.542 576.961 li
405.526 579.266 407.769 580.789 410.14 582.41 cv
411.667 583.457 413.769 584.879 414.198 585.848 cv
415.687 589.199 418.358 589.559 419.437 589.559 cv
421.729 589.559 423.655 588.191 425.362 586.988 cv
425.897 586.609 426.44 586.219 426.964 585.926 cv
427.444 586.043 428.151 586.219 429.046 586.219 cv
430.569 586.219 432.097 585.73 433.854 584.676 cv
434.94 584.031 437.292 583.496 439.921 583.105 cv
438.124 585.699 436.112 588.785 434.417 591.832 cv
433.671 593.16 li
429.866 599.902 423.315 611.504 426.284 625.02 cv
422.265 623.816 416.886 622.742 410.558 622.742 cv
400.331 622.742 390.409 625.496 380.972 630.957 cv
cp
1 1 1 rgb
f
400.663 582.363 mo
400.663 582.363 395.444 593.199 395.038 598.824 cv
394.636 604.441 391.026 612.879 387.409 620.105 cv
383.8 627.332 380.987 631.348 380.987 631.348 cv
380.987 631.348 389.011 615.691 390.222 608.855 cv
391.425 602.027 390.62 602.027 393.026 596.816 cv
395.444 591.59 400.663 582.363 400.663 582.363 cv
cp
.27451 .207843 .145098 rgb
f
406.284 587.574 mo
405.901 586.434 409.089 608.855 426.354 623.316 cv
426.354 623.316 411.901 604.441 406.284 587.574 cv
cp
f
432.382 631.348 mo
432.382 631.348 422.745 624.52 430.37 605.242 cv
438.007 585.973 440.015 581.152 446.835 575.125 cv
453.667 569.109 467.722 558.66 481.378 564.285 cv
495.026 569.91 506.675 581.949 511.487 597.613 cv
516.308 613.277 516.706 621.309 516.706 621.309 cv
516.706 621.309 519.921 634.559 489.401 634.957 cv
458.886 635.359 432.382 631.348 432.382 631.348 cv
cp
f
485.073 631.348 mo
460.394 631.348 438.925 628.582 433.987 627.898 cv
432.472 626.246 428.378 620.184 433.769 606.582 cv
441.323 587.488 443.14 583.25 449.245 577.859 cv
457.808 570.309 466.073 566.316 473.163 566.316 cv
475.542 566.316 477.831 566.766 479.983 567.652 cv
493.229 573.105 504.636 584.168 508.944 598.145 cv
513.534 613.055 513.065 621.414 513.073 621.504 cv
513.089 621.832 li
513.175 622.168 li
513.175 622.207 513.362 623.668 511.948 625.371 cv
510.167 627.508 504.854 631.113 489.358 631.316 cv
487.917 631.336 486.487 631.348 485.073 631.348 cv
cp
1 1 1 rgb
f
454.468 678.328 mo
454.468 678.328 462.097 659.863 452.46 651.426 cv
442.827 642.996 440.413 639.371 438.808 636.973 cv
437.206 634.559 432.382 631.348 432.382 631.348 cv
432.382 631.348 435.597 626.531 444.022 628.535 cv
452.46 630.535 456.073 632.957 458.886 629.734 cv
461.698 626.531 462.499 626.934 465.312 625.723 cv
468.12 624.52 464.511 619.695 466.913 614.879 cv
469.323 610.066 465.714 606.855 470.132 603.641 cv
474.546 600.426 475.339 599.891 483.378 599.629 cv
487.526 599.48 493.417 595.605 493.417 595.605 cv
493.417 595.605 489.804 600.828 483.378 603.641 cv
476.956 606.453 489.804 610.465 486.589 616.492 cv
483.378 622.508 486.19 627.73 492.616 628.934 cv
499.042 630.145 503.456 628.133 505.464 626.934 cv
507.476 625.723 516.308 622.91 516.308 622.91 cv
516.308 622.91 508.683 637.371 509.882 642.586 cv
511.089 647.809 509.081 657.051 508.683 661.863 cv
508.276 666.676 511.089 669.891 511.089 669.891 cv
511.089 669.891 499.843 661.063 488.202 668.289 cv
476.55 675.516 472.538 677.926 454.468 678.328 cv
cp
.27451 .207843 .145098 rgb
f
459.526 674.488 mo
461.312 667.645 462.87 655.691 454.858 648.68 cv
445.585 640.566 443.331 637.184 441.839 634.949 cv
441.12 633.875 440.038 632.77 438.905 631.766 cv
439.28 631.715 439.683 631.688 440.12 631.688 cv
441.065 631.688 442.097 631.824 443.183 632.078 cv
445.233 632.566 446.991 633.082 448.519 633.523 cv
451.233 634.316 453.386 634.949 455.44 634.949 cv
457.913 634.949 459.995 634.004 461.624 632.145 cv
463.147 630.398 463.534 630.262 464.819 629.813 cv
465.37 629.617 465.995 629.395 466.745 629.07 cv
470.675 627.391 470.155 623.379 469.882 621.23 cv
469.667 619.539 469.456 617.938 470.175 616.512 cv
471.64 613.582 471.522 611.074 471.433 609.246 cv
471.347 607.313 471.378 607.234 472.269 606.582 cv
473.378 605.762 li
475.526 604.176 476.425 603.512 478.44 603.289 cv
478.241 603.68 478.097 604.098 478.007 604.551 cv
477.421 607.457 479.503 609.645 481.171 611.395 cv
482.878 613.191 483.683 614.199 483.378 614.773 cv
481.308 618.66 481.054 622.645 482.659 626.004 cv
484.284 629.383 487.589 631.699 491.948 632.52 cv
493.476 632.801 495.019 632.949 496.511 632.949 cv
501.472 632.949 505.136 631.375 507.339 630.059 cv
507.655 629.863 508.37 629.559 509.335 629.188 cv
507.315 634.082 505.511 639.84 506.331 643.406 cv
507.058 646.551 506.249 652.371 505.659 656.621 cv
505.401 658.484 505.159 660.191 505.05 661.559 cv
505.011 662.012 504.995 662.449 504.995 662.879 cv
502.913 662.246 500.542 661.805 497.972 661.805 cv
493.839 661.805 489.901 662.938 486.276 665.191 cv
476.226 671.434 472.433 673.785 459.526 674.488 cv
cp
1 1 1 rgb
f
460.089 527.34 mo
460.089 527.34 462.499 531.766 460.089 538.184 cv
457.683 544.605 453.667 563.887 453.667 563.887 cv
453.667 563.887 452.862 548.629 456.073 542.605 cv
459.284 536.582 460.089 527.34 460.089 527.34 cv
cp
.27451 .207843 .145098 rgb
f
480.565 559.473 mo
480.565 559.473 478.358 559.332 474.144 550.633 cv
468.12 538.184 465.839 522.379 465.839 522.379 cv
465.839 522.379 471.464 528.543 477.085 529.344 cv
482.71 530.145 489.003 532.168 489.003 532.168 cv
489.003 532.168 481.776 536.98 477.354 536.582 cv
472.94 536.168 483.784 538.59 483.784 538.59 cv
483.784 538.59 481.776 540.996 476.155 538.98 cv
470.53 536.98 481.776 543.004 478.565 542.195 cv
475.351 541.395 482.175 548.629 479.362 546.621 cv
476.55 544.605 473.343 542.605 473.343 542.605 cv
473.343 542.605 475.351 553.848 480.565 559.473 cv
cp
f
368.933 689.168 mo
368.933 689.168 361.976 683.406 366.796 669.754 cv
371.612 656.09 366.39 640.035 383.261 630.801 cv
400.128 621.559 423.147 622.91 434.394 632.547 cv
445.636 642.184 449.245 649.02 452.46 651.426 cv
455.675 653.836 462.097 663.863 454.87 681.141 cv
454.87 681.141 434.792 689.168 416.722 693.992 cv
398.651 698.809 379.78 693.582 368.933 689.168 cv
cp
f
401.366 692.273 mo
388.804 692.273 377.394 688.59 371.21 686.152 cv
370.374 684.801 368.354 680.223 371.573 671.113 cv
373.144 666.66 373.737 662.402 374.323 658.289 cv
375.573 649.48 377.886 638.785 388.073 633.211 cv
396.511 628.59 405.858 626.777 414.581 626.777 cv
422.226 626.777 427.718 631.629 432.019 635.32 cv
438.769 641.102 442.62 645.777 445.429 649.188 cv
447.331 651.492 448.71 653.16 450.272 654.344 cv
452.55 656.035 457.542 664.012 452.073 678.316 cv
447.175 680.223 430.679 686.492 415.78 690.465 cv
411.3 691.668 406.456 692.273 401.366 692.273 cv
cp
1 1 1 rgb
f
294.245 642.184 mo
294.245 642.184 292.241 634.16 294.245 625.723 cv
296.261 617.293 295.452 597.613 309.104 587.176 cv
322.757 576.738 333.065 569.363 345.511 577.391 cv
357.956 585.418 362.511 592.801 368.136 600.828 cv
373.753 608.855 382.593 626.129 376.565 641.785 cv
376.565 641.785 362.511 649.824 342.839 652.625 cv
323.163 655.438 294.245 642.184 294.245 642.184 cv
cp
.27451 .207843 .145098 rgb
f
336.956 649.371 mo
321.737 649.371 303.108 642.012 297.464 639.617 cv
297.05 637.027 296.538 631.832 297.792 626.559 cv
298.265 624.578 298.573 622.184 298.933 619.422 cv
300.144 610.113 301.796 597.352 311.315 590.066 cv
320.222 583.262 326.116 579.566 331.776 579.566 cv
334.882 579.566 338.026 580.66 341.663 583.004 cv
353.944 590.926 359.921 595.449 365.151 602.918 cv
367.511 606.285 378.737 623.523 373.608 639.238 cv
369.944 641.113 357.894 646.793 342.319 649.02 cv
340.675 649.254 338.866 649.371 336.956 649.371 cv
cp
1 1 1 rgb
f
318.745 688.367 mo
318.745 688.367 324.765 678.328 317.944 665.477 cv
311.112 652.625 300.272 646.207 294.245 642.184 cv
288.226 638.172 302.28 641.785 306.698 644.199 cv
311.112 646.598 317.538 647.012 319.948 645.398 cv
322.358 643.797 327.577 645.398 330.792 640.582 cv
334.003 635.762 334.003 628.934 332.397 624.52 cv
330.792 620.105 330.386 615.281 325.167 613.277 cv
325.167 613.277 333.198 608.457 336.409 612.48 cv
339.624 616.492 333.198 614.082 339.624 616.492 cv
346.05 618.895 347.253 620.105 350.062 626.531 cv
352.874 632.957 350.062 641.785 354.081 644.199 cv
358.097 646.598 363.714 640.582 368.136 639.371 cv
372.55 638.172 378.175 636.973 378.175 636.973 cv
378.175 636.973 372.952 650.215 372.147 654.637 cv
371.347 659.051 367.394 682.938 371.003 694.176 cv
371.003 694.176 359.347 690.125 348.503 693.34 cv
337.659 696.551 331.835 696.676 318.745 688.367 cv
cp
.27451 .207843 .145098 rgb
f
322.671 689.176 mo
323.944 684.371 325.8 672.52 321.155 663.77 cv
317.952 657.723 313.894 653.004 309.858 649.277 cv
311.718 649.754 313.659 650.008 315.519 650.008 cv
317.378 650.008 320.011 649.734 321.972 648.426 cv
322.206 648.316 323.136 648.184 323.815 648.082 cv
326.44 647.715 330.823 647.09 333.815 642.605 cv
337.851 636.551 337.733 628.535 335.819 623.277 cv
335.534 622.496 335.292 621.707 335.05 620.918 cv
334.745 619.918 334.425 618.863 334.011 617.801 cv
334.87 618.602 336.288 619.129 338.343 619.891 cv
343.815 621.949 344.284 622.402 346.722 627.988 cv
347.71 630.223 347.827 633.133 347.94 635.934 cv
348.104 640.176 348.3 644.969 352.206 647.324 cv
353.401 648.043 354.737 648.406 356.171 648.406 cv
359.335 648.406 362.206 646.668 364.987 644.996 cv
366.479 644.109 368.011 643.184 369.097 642.887 cv
370.136 642.605 371.253 642.324 372.343 642.051 cv
370.808 646.23 369.042 651.355 368.569 653.98 cv
368.417 654.824 368.03 656.113 367.565 657.73 cv
365.948 663.355 366.093 679.793 366.421 687.926 cv
364.073 687.145 344.753 688.34 344.753 688.34 cv
336.757 690.73 329.628 689.02 322.671 689.176 cv
cp
1 1 1 rgb
f
266.94 647.41 mo
266.94 647.41 263.729 633.348 260.917 626.531 cv
258.104 619.695 251.284 614.082 246.464 611.27 cv
241.644 608.457 234.804 597.066 225.171 596.668 cv
215.53 596.27 211.933 606.855 206.714 609.668 cv
201.495 612.48 191.851 624.121 189.44 635.762 cv
187.034 647.41 191.05 653.836 191.05 653.836 cv
191.05 653.836 206.714 659.449 210.722 661.063 cv
214.741 662.676 241.237 667.488 266.94 647.41 cv
cp
.27451 .207843 .145098 rgb
f
222.983 659.91 mo
216.394 659.91 212.245 658.824 211.308 658.434 cv
207.944 657.066 196.558 652.898 193.026 651.598 cv
192.222 649.746 190.562 644.598 192.206 636.512 cv
194.409 625.66 203.472 614.801 207.675 612.508 cv
209.55 611.48 211.136 610.035 212.823 608.512 cv
216.038 605.605 219.077 602.859 224.085 602.859 cv
224.687 602.871 li
230.472 603.113 234.987 606.949 238.972 610.34 cv
240.659 611.777 242.261 613.133 243.804 614.043 cv
248.276 616.699 254.351 621.902 256.757 627.84 cv
258.823 632.926 261.167 642.449 262.093 646.363 cv
247.339 657.527 232.753 659.91 222.983 659.91 cv
222.983 659.91 li
cp
1 1 1 rgb
f
269.753 646.207 mo
269.753 646.207 255.296 650.215 248.476 653.027 cv
241.644 655.84 233.214 653.836 229.198 646.207 cv
225.468 639.109 220.339 634.098 211.573 633.434 cv
210.909 633.379 208.968 632.918 209.519 633.348 cv
215.144 637.77 217.147 640.984 215.144 645.398 cv
213.136 649.824 213.534 651.824 213.534 655.84 cv
213.534 659.863 191.05 653.836 191.05 653.836 cv
191.05 653.836 201.089 662.262 205.104 670.301 cv
209.12 678.328 209.921 690.379 209.921 690.379 cv
209.921 690.379 210.323 692.379 215.948 687.566 cv
221.565 682.742 229.999 681.941 239.636 689.969 cv
249.276 698.004 256.104 698.406 256.104 698.406 cv
256.104 698.406 250.077 687.566 254.097 680.73 cv
258.104 673.914 257.304 653.027 269.753 646.207 cv
cp
.27451 .207843 .145098 rgb
f
251.206 694.012 mo
248.667 692.898 245.312 691.004 241.456 687.793 cv
236.116 683.348 230.761 681.09 225.53 681.09 cv
221.347 681.09 217.397 682.586 214.101 685.41 cv
213.433 685.984 212.87 686.434 212.401 686.777 cv
211.886 682.586 210.573 674.902 207.64 669.031 cv
205.847 665.438 202.995 661.844 200.272 658.855 cv
203.694 659.512 207.339 660.059 210.015 660.059 cv
215.542 660.059 216.37 657.41 216.37 655.84 cv
216.351 654.109 li
216.308 651.297 216.276 649.746 217.722 646.57 cv
219.253 643.199 218.925 640.348 217.573 637.832 cv
221.233 639.566 224.159 642.715 226.69 647.527 cv
229.831 653.504 235.702 657.066 242.386 657.066 cv
244.843 657.066 247.253 656.59 249.554 655.652 cv
252.315 654.512 256.421 653.152 260.272 651.961 cv
256.995 657.586 255.522 664.441 254.331 669.996 cv
253.499 673.848 252.722 677.48 251.651 679.293 cv
248.929 683.926 249.854 689.754 251.206 694.012 cv
cp
1 1 1 rgb
f
319.14 749.402 mo
319.14 749.402 306.698 736.152 311.917 723.707 cv
317.136 711.246 323.565 705.23 328.784 702.02 cv
334.003 698.809 341.229 691.98 352.874 691.18 cv
364.519 690.379 373.358 693.191 381.386 699.207 cv
389.417 705.23 398.253 715.27 400.663 729.723 cv
403.069 744.188 399.05 749.801 399.05 749.801 cv
399.05 749.801 391.026 755.027 370.144 755.426 cv
349.261 755.828 327.577 754.617 319.14 749.402 cv
cp
.27451 .207843 .145098 rgb
f
362.944 752.664 mo
341.964 752.664 327.097 750.723 320.964 747.184 cv
319.354 745.34 310.468 734.488 314.53 724.801 cv
318.534 715.254 323.831 708.395 330.269 704.434 cv
331.331 703.777 332.479 702.977 333.726 702.105 cv
338.519 698.758 344.491 694.598 353.069 694.004 cv
354.3 693.926 355.503 693.875 356.667 693.875 cv
365.456 693.875 372.772 696.285 379.687 701.473 cv
386.667 706.707 395.491 715.945 397.866 730.191 cv
399.636 740.816 397.698 746.18 396.968 747.723 cv
394.905 748.77 386.78 752.273 370.093 752.598 cv
367.714 752.637 365.323 752.664 362.944 752.664 cv
cp
1 1 1 rgb
f
462.097 675.113 mo
462.097 675.113 480.565 654.238 476.155 626.934 cv
476.155 626.934 480.972 639.371 477.354 651.023 cv
473.737 662.676 466.511 670.699 462.097 675.113 cv
cp
.27451 .207843 .145098 rgb
f
323.964 685.957 mo
323.964 685.957 341.628 666.676 341.628 642.184 cv
341.628 642.184 346.05 669.488 323.964 685.957 cv
cp
f
365.323 684.355 mo
365.323 684.355 361.308 680.34 358.097 671.504 cv
354.882 662.676 349.659 648.613 349.659 648.613 cv
349.659 648.613 357.292 663.863 360.507 671.504 cv
363.714 679.129 365.323 684.355 365.323 684.355 cv
cp
f
507.476 666.277 mo
507.476 666.277 486.995 649.41 482.979 634.16 cv
482.979 634.16 496.897 654.629 507.476 666.277 cv
cp
f
511.089 669.891 mo
511.089 669.891 505.464 667.488 507.069 656.648 cv
508.683 645.801 507.476 628.934 518.315 616.082 cv
529.155 603.238 542.812 598.824 554.05 604.441 cv
565.296 610.066 570.917 617.293 571.718 625.723 cv
572.522 634.16 569.714 647.809 563.69 653.027 cv
557.667 658.25 552.851 664.676 541.198 666.676 cv
529.558 668.691 511.089 669.891 511.089 669.891 cv
cp
f
511.808 667 mo
510.874 666.191 508.909 663.68 509.866 657.262 cv
510.214 654.957 510.433 652.391 510.663 649.645 cv
511.472 640.066 512.479 628.152 520.331 618.895 cv
527.319 610.66 535.522 606.129 543.433 606.129 cv
546.487 606.129 549.433 606.824 552.175 608.184 cv
562.003 613.066 567.347 619.332 568.062 626.816 cv
568.831 634.84 566.019 646.973 561.104 651.207 cv
560.019 652.145 558.972 653.113 557.917 654.09 cv
553.284 658.395 547.128 667.684 538.503 669.168 cv
528.765 670.84 515.64 666.727 511.808 667 cv
cp
1 1 1 rgb
f
532.37 706.035 mo
532.37 706.035 534.378 689.168 523.136 679.129 cv
511.894 669.09 505.464 664.277 495.429 665.477 cv
485.39 666.676 478.28 671.738 472.253 673.746 cv
466.233 675.762 460.065 679.07 457.253 698.746 cv
454.44 718.426 460.894 724.902 464.511 726.512 cv
468.12 728.121 483.784 728.926 503.862 723.301 cv
523.933 717.684 532.37 706.035 532.37 706.035 cv
cp
.27451 .207843 .145098 rgb
f
474.511 724.863 mo
469.179 724.863 466.39 724.246 465.663 723.926 cv
463.284 722.871 459.937 716.297 462.495 698.406 cv
464.964 681.121 471.269 679.043 476.835 677.207 cv
477.448 677 li
480.144 676.102 482.241 674.629 484.261 673.191 cv
487.354 671.012 490.272 668.953 495.765 668.289 cv
496.659 668.184 497.522 668.133 498.358 668.133 cv
505.757 668.133 511.265 672.332 521.245 681.246 cv
529.987 689.043 529.819 701.707 529.62 704.93 cv
527.655 707.246 519.37 716.012 503.097 720.574 cv
489.761 724.305 479.468 724.863 474.515 724.863 cv
474.511 724.863 li
cp
1 1 1 rgb
f
478.882 759.285 mo
477.933 757.938 li
476.979 756.465 477.683 754.918 477.983 754.254 cv
479.452 751.035 477.866 737.652 475.062 733.809 cv
473.007 730.973 462.253 724.684 455.964 721.395 cv
457.425 716.051 li
459.038 716.129 460.597 716.168 462.093 716.168 cv
479.062 716.168 490.245 710.887 490.585 702.703 cv
490.979 693.23 499.69 689.449 504.245 688.777 cv
511.386 687.715 li
506.874 693.348 li
504.179 696.715 504.581 697.926 505.589 699.949 cv
505.858 700.488 li
507.37 703.574 508.71 705.762 512.136 705.762 cv
513.034 705.762 514.058 705.613 515.159 705.309 cv
524.198 702.84 535.019 702.41 535.479 702.402 cv
536.479 707.918 li
523.526 712.234 527.319 728.355 527.487 729.043 cv
528.417 732.84 li
528.417 732.84 524.433 732.547 524.39 732.547 cv
522.554 732.547 519.222 732.781 516.128 734.59 cv
514.491 735.543 512.808 736.324 510.976 737.168 cv
507.421 738.816 503.397 740.672 497.948 744.832 cv
494.312 747.605 490.53 751.207 487.495 754.121 cv
483.112 758.301 482.081 759.285 480.425 759.285 cv
478.882 759.285 li
cp
.27451 .207843 .145098 rgb
f
504.663 691.582 mo
504.663 691.582 493.815 693.191 493.417 702.82 cv
493.019 712.457 480.972 720.086 457.28 718.887 cv
457.28 718.887 474.144 727.715 477.354 732.137 cv
480.565 736.551 482.577 751.012 480.565 755.426 cv
478.565 759.84 487.796 749.004 496.229 742.574 cv
504.663 736.152 509.882 734.949 514.702 732.137 cv
519.519 729.324 524.737 729.723 524.737 729.723 cv
524.737 729.723 519.921 710.449 535.581 705.23 cv
535.581 705.23 524.737 705.633 515.909 708.043 cv
507.069 710.449 504.663 704.434 503.058 701.219 cv
501.448 698.004 501.448 695.594 504.663 691.582 cv
cp
1 1 1 rgb
f
520.722 726.91 mo
520.722 726.91 537.589 740.965 530.761 751.012 cv
523.933 761.043 517.917 760.242 515.104 763.457 cv
512.292 766.668 507.069 771.895 500.245 772.293 cv
493.417 772.691 491.409 779.52 485.792 779.918 cv
480.167 780.32 475.214 776.426 475.214 776.426 cv
475.214 776.426 478.964 764.254 480.167 759.043 cv
481.378 753.816 483.378 747.793 493.815 741.375 cv
504.261 734.949 518.722 726.512 520.722 726.91 cv
cp
.27451 .207843 .145098 rgb
f
484.96 777.117 mo
482.433 777.117 480.042 776.051 478.55 775.203 cv
479.675 771.492 482.007 763.68 482.929 759.676 cv
484.104 754.59 485.94 749.551 495.3 743.785 cv
508.104 735.918 516.886 731.141 519.897 729.988 cv
523.112 732.996 532.823 742.938 528.417 749.422 cv
524.39 755.34 520.769 757.027 517.87 758.379 cv
516.054 759.227 514.335 760.027 512.972 761.59 cv
508.55 766.637 504.331 769.207 500.077 769.461 cv
495.511 769.723 492.659 772.246 490.37 774.266 cv
488.464 775.945 487.214 776.973 485.589 777.09 cv
484.96 777.117 li
cp
1 1 1 rgb
f
558.87 689.969 mo
558.87 689.969 568.104 704.031 564.089 711.66 cv
560.077 719.285 558.472 720.895 560.077 724.098 cv
561.683 727.313 560.878 728.523 558.065 730.125 cv
555.257 731.738 544.413 749.402 527.55 751.012 cv
527.55 751.012 528.354 736.551 525.14 732.535 cv
521.929 728.523 522.733 713.262 530.761 707.645 cv
538.792 702.02 541.198 701.621 544.819 699.207 cv
548.437 696.793 548.437 697.195 552.851 695.594 cv
557.265 693.992 557.265 691.98 558.87 689.969 cv
cp
.27451 .207843 .145098 rgb
f
530.487 747.652 mo
530.53 742.652 530.155 734.254 527.354 730.762 cv
526.577 729.793 525.792 726.297 526.472 721.551 cv
527.226 716.285 529.386 712.066 532.386 709.969 cv
537.245 706.559 539.987 705.125 542.198 703.973 cv
543.671 703.199 544.94 702.527 546.39 701.559 cv
548.788 699.969 549.237 699.824 551.136 699.188 cv
551.835 698.953 552.683 698.668 553.823 698.262 cv
556.226 697.379 557.667 696.336 558.644 695.281 cv
560.972 699.863 563.538 706.621 561.581 710.34 cv
560.874 711.676 560.245 712.84 559.69 713.848 cv
557.026 718.719 555.558 721.402 557.542 725.371 cv
558.011 726.316 558.058 726.699 558.062 726.785 cv
558.05 726.777 li
557.995 726.777 557.683 727.078 556.659 727.664 cv
555.601 728.27 554.515 729.512 552.722 731.551 cv
548.409 736.473 540.722 745.23 530.487 747.652 cv
cp
1 1 1 rgb
f
509.081 669.09 mo
509.081 669.09 515.507 665.879 525.948 667.078 cv
536.386 668.289 539.597 663.863 540.401 659.051 cv
541.198 654.238 541.604 650.621 543.612 649.02 cv
545.624 647.41 543.612 632.547 552.851 630.145 cv
552.851 630.145 545.222 643.797 552.444 649.02 cv
559.675 654.238 568.104 644.996 568.104 644.996 cv
568.104 644.996 568.909 655.035 564.495 661.863 cv
560.077 668.691 564.089 689.566 556.464 695.191 cv
548.831 700.816 528.354 712.059 528.354 712.059 cv
528.354 712.059 532.37 698.004 524.737 687.566 cv
517.108 677.129 509.081 669.09 509.081 669.09 cv
cp
.27451 .207843 .145098 rgb
f
532.108 706.715 mo
532.581 701.191 534.452 692.418 529.335 685.418 cv
524.53 678.848 517.319 673.738 514.237 670.398 cv
516.05 669.996 518.44 669.645 521.312 669.645 cv
522.651 669.645 524.089 669.715 525.62 669.902 cv
526.925 670.047 528.124 670.113 529.229 670.113 cv
537.097 670.113 542.058 666.355 543.198 659.512 cv
543.417 658.172 li
543.929 654.996 544.417 652 545.378 651.238 cv
546.55 650.301 546.979 648.855 547.308 646.816 cv
547.956 648.512 549.062 650.066 550.784 651.316 cv
552.749 652.73 554.937 653.445 557.292 653.445 cv
560.194 653.445 562.905 652.324 565.089 651.012 cv
564.745 653.953 563.94 657.496 562.12 660.32 cv
559.839 663.848 559.464 669.629 559.062 675.762 cv
558.612 682.645 558.104 690.457 554.784 692.91 cv
549.722 696.637 538.647 703.027 532.108 706.715 cv
cp
1 1 1 rgb
f
256.104 698.406 mo
256.104 698.406 248.343 693.59 252.089 681.805 cv
255.835 670.027 256.214 640.262 278.085 638.328 cv
292.253 637.078 305.796 640.801 315.269 657.184 cv
327.253 677.918 328.022 690.605 322.671 695.418 cv
317.319 700.23 275.104 703.223 256.104 698.406 cv
cp
.27451 .207843 .145098 rgb
f
274.894 697.457 mo
267.968 697.457 261.901 696.883 257.308 695.777 cv
256.167 694.863 252.163 690.926 254.788 682.664 cv
255.565 680.23 256.19 677.262 256.854 674.121 cv
259.511 661.531 262.815 645.855 278.335 644.488 cv
281.339 644.227 284.554 643.98 287.745 643.98 cv
296.745 643.98 308.386 648.551 314.335 661.246 cv
321.745 677.059 319.401 686.961 314.976 690.945 cv
312.128 693.504 293.632 697.457 274.894 697.457 cv
cp
1 1 1 rgb
f
225.847 724.109 mo
225.847 724.109 201.226 727.313 197.479 713.395 cv
193.729 699.48 187.304 690.918 187.304 690.918 cv
187.304 690.918 198.011 688.777 204.972 693.055 cv
211.933 697.332 228.53 700.543 230.136 701.082 cv
231.741 701.621 225.847 724.109 225.847 724.109 cv
cp
.27451 .207843 .145098 rgb
f
221.835 725.008 mo
215.37 725.008 202.308 720.426 200.218 712.652 cv
197.854 703.895 194.487 697.195 192.171 693.238 cv
192.604 693.223 193.058 693.211 193.53 693.211 cv
196.394 693.211 200.452 693.602 203.487 695.465 cv
209.456 699.137 221.276 701.895 226.956 703.223 cv
227.151 703.262 227.331 703.309 227.511 703.348 cv
227.124 706.668 225.405 714.41 223.604 721.465 cv
222.644 721.531 223.284 725.008 221.835 725.008 cv
cp
1 1 1 rgb
f
404.144 781.395 mo
404.144 781.395 388.921 766.258 399.854 748.199 cv
408.198 734.422 415.39 731.063 421.812 728.387 cv
428.229 725.711 438.401 717.684 455.003 720.359 cv
471.601 723.035 491.409 730.801 480.167 759.043 cv
480.167 759.043 463.577 773.902 440.015 780.332 cv
416.456 786.746 404.144 781.395 404.144 781.395 cv
cp
.27451 .207843 .145098 rgb
f
418.323 780.652 mo
411.952 780.652 407.847 779.629 406.147 779.09 cv
404.296 775.359 397.878 760.965 402.487 749.238 cv
407.28 737.059 414.663 734.207 420.601 731.91 cv
421.401 731.598 422.171 731.309 422.901 731.004 cv
424.218 730.457 425.687 729.695 427.331 728.836 cv
432.636 726.082 439.233 722.652 448.421 722.652 cv
450.425 722.652 452.483 722.82 454.554 723.152 cv
467.132 725.184 474.96 729.188 478.476 735.387 cv
481.546 740.801 481.312 748.184 477.784 757.352 cv
474.901 759.785 459.671 772.027 439.269 777.598 cv
431.819 779.629 424.776 780.652 418.323 780.652 cv
cp
1 1 1 rgb
f
544.948 602.039 mo
544.948 602.039 542.812 581.152 549.237 566.699 cv
555.663 552.246 563.69 539.395 570.651 537.246 cv
577.616 535.105 589.394 529.227 592.604 545.816 cv
595.819 562.41 594.214 572.586 594.214 572.586 cv
594.214 572.586 591.003 582.762 577.616 592.402 cv
564.229 602.039 544.948 602.039 544.948 602.039 cv
cp
.27451 .207843 .145098 rgb
f
547.589 599.082 mo
547.276 593.133 547.097 578.484 551.823 567.848 cv
558.765 552.246 566.3 541.551 571.487 539.957 cv
572.19 539.746 572.94 539.488 573.726 539.227 cv
576.394 538.328 579.417 537.301 582.069 537.301 cv
583.866 537.301 588.069 537.301 589.823 546.355 cv
592.851 561.988 591.464 571.816 591.417 572.137 cv
591.417 572.137 li
591.37 572.137 588.097 581.355 575.96 590.098 cv
566.315 597.039 553.14 598.691 547.589 599.082 cv
cp
1 1 1 rgb
f
455.999 341.668 mo
455.999 341.668 457.558 318.621 434.124 309.707 cv
407.249 299.48 391.823 309.707 391.823 309.707 cv
391.823 309.707 399.843 299.434 411.624 301.043 cv
423.409 302.645 427.698 301.668 431.987 297.391 cv
436.265 293.105 437.87 294.168 440.546 295.242 cv
443.229 296.316 447.515 295.242 448.046 287.754 cv
448.581 280.262 457.683 269.551 457.683 269.551 cv
457.683 269.551 465.718 291.504 472.136 290.965 cv
478.565 290.426 477.487 289.891 482.847 288.289 cv
488.202 286.676 488.202 286.676 488.202 286.676 cv
488.202 286.676 481.093 308.184 489.124 317.293 cv
497.159 326.395 499.749 342.293 481.624 332.293 cv
474.347 328.277 455.999 341.668 455.999 341.668 cv
cp
.27451 .207843 .145098 rgb
f
461.265 333.473 mo
459.542 326.355 452.073 313.055 433.187 307.605 cv
429.296 306.48 427.069 305.027 423.097 304.488 cv
427.632 304.082 430.835 302.547 433.987 299.395 cv
435.964 297.41 436.89 297.117 437.265 297.117 cv
437.651 297.117 438.261 297.371 438.972 297.664 cv
439.491 297.879 li
440.405 298.238 441.401 298.434 442.37 298.434 cv
446.12 298.434 452.956 298.152 453.503 290.418 cv
453.772 286.688 454.229 279.02 456.878 275.254 cv
460.144 283.043 465.769 293.809 471.901 293.809 cv
476.894 293.406 478.097 293.004 480.175 292.207 cv
480.991 291.895 481.995 291.504 483.655 291.004 cv
484.136 290.855 li
482.437 298.238 480.519 311.816 487.003 319.168 cv
491.464 324.227 493.073 330.203 492.222 332.098 cv
492.128 332.301 491.976 332.645 490.886 332.645 cv
489.632 332.645 487.245 332.156 482.991 329.813 cv
481.394 328.926 479.472 328.484 477.284 328.484 cv
471.753 328.484 465.233 331.387 461.265 333.473 cv
cp
1 1 1 rgb
f
213.542 507.801 mo
215.144 507.801 205.503 501.91 215.683 493.887 cv
225.847 485.855 224.245 481.035 231.206 472.996 cv
238.163 464.969 239.101 458.668 249.276 465.621 cv
259.448 472.586 274.569 481.57 279.925 491.738 cv
285.284 501.91 285.413 510.074 285.413 510.074 cv
285.413 510.074 265.472 519.043 244.589 519.578 cv
223.71 520.113 213.542 507.801 213.542 507.801 cv
cp
.27451 .207843 .145098 rgb
f
243.269 515.957 mo
228.112 515.957 219.558 508.73 217.081 506.27 cv
216.796 505.566 216.37 505.008 216.081 504.629 cv
214.569 502.664 213.007 500.633 217.933 496.738 cv
224.597 491.48 226.761 487.324 228.847 483.289 cv
230.167 480.73 231.421 478.316 233.964 475.387 cv
234.765 474.449 235.503 473.574 236.183 472.762 cv
238.628 469.832 240.058 468.172 241.175 468.172 cv
242.354 468.172 244.429 469.188 247.354 471.191 cv
250.136 473.094 253.151 474.891 256.351 476.793 cv
264.659 481.738 273.241 486.855 276.702 493.434 cv
279.901 499.512 281.089 504.824 281.522 507.742 cv
275.722 510.035 260.269 515.535 244.503 515.945 cv
243.269 515.957 li
cp
1 1 1 rgb
f
215.144 501.91 mo
215.144 501.91 225.312 512.09 231.741 506.727 cv
238.163 501.375 232.815 496.559 235.487 491.738 cv
238.163 486.922 237.093 478.887 237.093 478.887 cv
237.093 478.887 242.448 486.922 241.378 491.738 cv
240.312 496.559 246.198 502.988 249.944 508.34 cv
253.69 513.699 260.116 515.84 268.683 510.488 cv
277.249 505.125 287.425 507.801 287.425 507.801 cv
287.425 507.801 278.995 520.777 276.847 528.809 cv
274.706 536.832 272.968 555.848 272.968 555.848 cv
272.968 555.848 259.581 549.031 249.409 547.957 cv
239.237 546.895 236.003 549.59 236.003 549.59 cv
236.003 549.59 232.812 532.965 223.71 522.254 cv
214.608 511.551 210.87 504.051 215.144 501.91 cv
cp
.27451 .207843 .145098 rgb
f
269.269 550.137 mo
264.214 547.949 256.456 545.035 249.788 544.332 cv
244.315 543.758 240.87 543.34 238.886 543.074 cv
237.479 538.535 233.772 528.484 226.487 519.902 cv
222.253 514.918 219.901 511.465 218.604 509.137 cv
221.144 510.645 224.229 511.934 227.362 511.934 cv
229.901 511.934 232.163 511.129 234.073 509.527 cv
239.272 505.203 238.886 500.594 238.519 497.457 cv
239.819 500.809 242.304 504.137 244.741 507.391 cv
245.511 508.426 246.276 509.441 246.964 510.426 cv
250.026 514.813 254.44 517.223 259.394 517.223 cv
262.956 517.223 266.733 515.996 270.612 513.574 cv
273.979 511.465 277.714 510.879 280.487 510.789 cv
277.03 515.496 275.339 522.352 273.894 527.73 cv
272.401 533.348 269.276 543.641 269.269 550.137 cv
cp
1 1 1 rgb
f
198.503 619.168 mo
198.503 619.168 198.55 578.473 192.12 570.984 cv
185.698 563.484 183.026 554.383 183.026 554.383 cv
183.026 554.383 188.917 557.598 192.655 547.957 cv
196.405 538.316 198.019 532.965 194.261 525.477 cv
190.519 517.977 194.8 522.793 200.687 532.965 cv
206.577 543.145 204.437 543.68 211.933 545.281 cv
219.429 546.895 220.495 548.496 222.636 551.168 cv
224.784 553.848 229.604 550.098 232.815 548.496 cv
236.026 546.895 254.765 544.215 263.335 551.168 cv
263.335 551.168 234.417 581.688 233.343 590.789 cv
232.28 599.891 229.593 598.277 225.585 599.629 cv
221.573 600.965 213.007 606.316 213.007 606.316 cv
213.007 606.316 210.171 608.34 198.503 619.168 cv
cp
.27451 .207843 .145098 rgb
f
202.253 609.59 mo
202.948 602.676 200.136 575.965 194.269 569.137 cv
190.854 565.145 188.558 560.645 187.222 557.508 cv
189.71 556.922 192.991 554.918 195.296 548.98 cv
197.226 544.031 198.714 539.941 199.124 535.965 cv
200.144 537.809 200.874 539.285 201.456 540.465 cv
203.987 545.582 205.034 546.707 211.343 548.055 cv
217.597 549.395 218.417 550.426 220.214 552.684 cv
221.472 554.254 222.944 554.941 224.675 554.941 cv
227.206 554.941 229.831 553.426 232.151 552.098 cv
232.835 551.707 233.491 551.324 234.085 551.023 cv
234.979 550.582 239.858 549.461 246.058 549.461 cv
251.284 549.461 255.714 550.262 258.905 551.754 cv
251.054 560.203 231.526 581.988 230.526 590.457 cv
229.909 595.738 229.284 595.867 227.214 596.297 cv
226.429 596.453 225.604 596.699 224.683 596.941 cv
216.003 599.168 206.835 609.168 202.253 609.59 cv
cp
1 1 1 rgb
f
276.937 411.035 mo
276.937 411.035 281.222 398.719 270.519 386.941 cv
259.808 375.152 256.858 365.242 246.55 364.578 cv
236.245 363.914 228.218 374.082 218.577 382.652 cv
208.944 391.219 201.448 411.035 211.62 419.059 cv
221.792 427.098 236.249 429.238 245.351 429.238 cv
254.452 429.238 277.476 417.988 277.476 417.988 cv
277.476 417.988 276.405 417.988 276.937 411.035 cv
cp
.27451 .207843 .145098 rgb
f
245.663 427.332 mo
241.003 427.332 224.921 426.648 213.69 417.77 cv
211.3 415.887 210.026 413.016 209.917 409.238 cv
209.698 401.66 214.464 391.316 220.776 385.711 cv
222.671 384.02 224.507 382.273 226.308 380.555 cv
233.202 373.992 239.159 368.316 245.897 368.316 cv
246.155 368.316 246.421 368.328 246.679 368.348 cv
252.241 368.699 255.054 372.176 260.39 379.383 cv
262.698 382.496 262.905 386.355 266.312 390.105 cv
275.776 400.516 274.608 410.926 274.573 411.035 cv
274.452 411.387 li
274.425 411.754 li
274.229 414.285 274.222 416.09 274.358 417.418 cv
266.878 420.926 251.897 427.332 245.663 427.332 cv
cp
1 1 1 rgb
f
365.456 584.48 mo
365.456 584.48 365.194 576.715 367.87 569.762 cv
370.546 562.801 371.351 559.59 377.237 556.113 cv
383.124 552.625 391.964 544.332 406.417 545.934 cv
406.417 545.934 397.851 543.535 390.894 546.199 cv
383.929 548.875 378.034 553.434 373.753 555.574 cv
369.472 557.715 362.245 571.363 362.245 578.59 cv
362.245 585.828 361.175 585.02 361.175 585.02 cv
361.175 585.02 365.194 586.621 365.456 584.48 cv
cp
.27451 .207843 .145098 rgb
f
466.378 470.973 mo
466.378 470.973 458.749 464.957 457.948 455.32 cv
457.147 445.684 452.729 434.441 452.729 434.441 cv
452.729 434.441 458.749 442.469 459.155 449.293 cv
459.55 456.121 466.378 470.973 466.378 470.973 cv
cp
f
399.854 748.199 mo
399.854 748.199 402.667 728.121 393.433 715.672 cv
384.198 703.223 374.554 695.191 367.733 692.379 cv
360.901 689.566 365.323 684.355 365.323 684.355 cv
365.323 684.355 374.554 687.965 389.011 690.379 cv
403.472 692.781 411.901 690.777 408.69 684.355 cv
405.479 677.926 404.272 672.703 406.284 670.699 cv
408.292 668.691 406.69 665.879 409.495 664.277 cv
412.308 662.676 411.503 651.426 418.729 648.613 cv
425.96 645.801 409.089 658.652 421.144 668.289 cv
433.183 677.926 419.53 677.926 431.183 681.941 cv
442.827 685.957 449.112 676.168 457.948 675.371 cv
466.78 674.566 469.323 677.926 469.323 677.926 cv
469.323 677.926 459.284 686.754 459.687 698.004 cv
460.089 709.246 457.28 716.074 462.901 724.902 cv
462.901 724.902 443.628 718.887 435.995 723.301 cv
428.37 727.715 426.761 730.527 417.526 733.34 cv
408.292 736.152 403.472 743.777 399.05 749.801 cv
398.843 750.086 398.655 750.34 398.495 750.566 cv
395.12 755.125 399.854 748.199 399.854 748.199 cv
cp
f
403.839 737.871 mo
403.499 730.543 401.858 720.918 396.354 713.504 cv
388.409 702.781 379.397 694.316 371.733 690.254 cv
375.886 691.434 381.577 692.832 388.417 693.965 cv
392.538 694.656 396.229 695.008 399.378 695.008 cv
405.976 695.008 410.104 693.504 412.007 690.426 cv
412.964 688.875 413.729 686.285 411.952 682.723 cv
408.851 676.531 408.776 673.652 409.011 673.066 cv
410.589 671.543 410.913 669.59 411.116 668.289 cv
411.175 667.957 411.249 667.508 411.308 667.371 cv
412.479 666.738 413.245 665.75 413.839 664.539 cv
414.671 666.785 416.237 669.031 418.866 671.129 cv
423.229 674.629 422.925 675.77 422.745 676.453 cv
421.276 681.883 425.522 683.848 429.987 685.387 cv
432.831 686.363 435.522 686.844 438.206 686.844 cv
442.835 686.844 446.62 685.387 449.96 684.109 cv
452.538 683.121 454.972 682.195 457.604 681.949 cv
459.011 681.824 460.261 681.727 461.378 681.66 cv
458.573 685.77 455.815 691.543 456.05 698.133 cv
456.159 701.199 456.015 703.934 455.878 706.57 cv
455.647 710.926 455.429 715.137 456.585 719.551 cv
452.878 718.77 448.296 718.035 444.058 718.035 cv
439.854 718.035 436.62 718.73 434.167 720.152 cv
431.562 721.66 429.628 722.988 427.925 724.16 cv
424.569 726.465 422.159 728.121 416.464 729.852 cv
411.108 731.48 407.089 734.5 403.839 737.871 cv
cp
1 1 1 rgb
f
405.077 736.551 mo
405.077 736.551 411.503 727.715 411.901 719.285 cv
412.308 710.855 414.315 712.059 416.315 705.23 cv
418.331 698.406 417.526 682.34 413.503 671.504 cv
413.503 671.504 417.929 691.582 413.909 699.605 cv
409.897 707.645 408.69 714.473 409.089 720.496 cv
409.495 726.512 405.077 736.551 405.077 736.551 cv
cp
.27451 .207843 .145098 rgb
f
457.28 718.887 mo
457.28 718.887 425.558 704.031 419.937 680.34 cv
419.937 680.34 424.354 680.73 427.562 687.965 cv
430.776 695.191 445.636 711.66 457.28 718.887 cv
cp
f
290.495 556.91 mo
290.495 556.91 292.909 549.285 293.71 539.645 cv
294.515 530.008 292.511 522.379 298.933 514.746 cv
305.354 507.117 319.815 497.48 340.69 508.73 cv
340.69 508.73 335.472 501.895 325.034 501.492 cv
314.593 501.09 307.366 501.09 301.343 507.918 cv
295.323 514.746 291.3 518.355 291.3 523.582 cv
291.3 528.809 290.897 536.434 288.894 544.059 cv
286.89 551.688 284.878 557.313 284.878 557.313 cv
290.495 556.91 li
cp
f
354.335 270.828 mo
354.335 270.828 373.503 259.996 372.253 226.668 cv
372.253 226.668 380.167 261.66 354.335 270.828 cv
cp
f
499.124 422.293 mo
499.124 422.293 507.069 422.137 509.882 418.523 cv
512.694 414.91 520.722 411.699 529.558 411.699 cv
538.386 411.699 538.792 410.488 540.804 407.684 cv
542.812 404.871 538.386 409.285 542.812 404.871 cv
547.226 400.449 546.026 398.043 549.237 396.035 cv
552.444 394.031 556.862 392.418 556.862 392.418 cv
556.862 392.418 557.667 397.246 560.878 396.035 cv
564.089 394.832 568.511 395.633 568.511 395.633 cv
568.511 395.633 568.104 410.098 565.296 416.512 cv
562.483 422.938 578.187 438.23 578.187 438.23 cv
578.187 438.23 563.284 439.402 554.858 446.629 cv
546.425 453.855 540.401 462.293 540.401 462.293 cv
540.401 462.293 543.214 446.629 533.979 437.801 cv
524.737 428.965 513.979 419.879 499.124 422.293 cv
cp
f
543.542 453.895 mo
543.151 448.23 541.433 441.004 535.937 435.75 cv
528.452 428.59 521.327 422.488 511.604 420.879 cv
511.78 420.684 511.956 420.477 512.12 420.262 cv
514.312 417.441 521.433 414.527 529.558 414.527 cv
538.136 414.527 540.194 413.445 542.835 409.715 cv
543.292 409.082 543.772 408.395 544.026 407.664 cv
544.245 407.441 544.511 407.176 544.815 406.871 cv
547.397 404.285 548.358 402.215 549.062 400.699 cv
549.644 399.461 549.862 398.992 550.741 398.434 cv
552.151 397.559 553.851 396.746 555.233 396.141 cv
556.233 397.832 557.8 399.059 559.897 399.059 cv
560.546 399.059 561.21 398.934 561.874 398.691 cv
562.718 398.379 563.886 398.199 565.237 398.199 cv
565.347 398.199 565.452 398.199 565.558 398.211 cv
565.257 403.152 564.44 411.387 562.698 415.379 cv
560.062 421.395 567.003 429.227 572.147 433.941 cv
567.003 435.906 558.772 439.539 553.011 444.473 cv
549.296 447.664 546.054 451.051 543.542 453.895 cv
cp
1 1 1 rgb
f
554.858 417.723 mo
554.858 417.723 549.237 412.098 551.237 405.672 cv
553.253 399.246 549.237 396.035 549.237 396.035 cv
556.862 392.418 li
556.862 392.418 561.683 394.434 558.472 402.059 cv
555.257 409.684 554.858 417.723 554.858 417.723 cv
cp
.27451 .207843 .145098 rgb
f
309.437 468.543 mo
309.437 468.543 312.249 474.793 319.749 477.918 cv
327.249 481.043 336.624 486.043 340.687 494.48 cv
340.687 494.48 337.249 491.668 331.312 487.918 cv
325.374 484.168 325.062 481.668 318.499 479.48 cv
311.937 477.293 309.437 473.543 309.437 468.543 cv
cp
f
277.788 418.926 mo
277.788 418.926 264.401 434.988 260.12 445.699 cv
255.835 456.402 256.909 463.496 256.909 463.496 cv
256.909 463.496 247.202 464.84 241.312 466.98 cv
235.417 469.121 226.937 478.23 226.937 478.23 cv
226.937 478.23 220.495 456.941 219.964 447.84 cv
219.429 438.738 210.87 435.527 208.722 428.035 cv
206.577 420.535 205.062 420.418 203.362 418.926 cv
196.331 412.762 190.519 411.434 190.519 411.434 cv
190.519 411.434 195.87 410.895 206.038 414.109 cv
216.214 417.324 222.104 415.711 224.245 409.293 cv
226.386 402.871 221.03 401.793 226.925 393.77 cv
232.815 385.73 236.026 372.879 236.026 372.879 cv
236.026 372.879 239.776 381.98 235.487 388.941 cv
231.206 395.906 227.456 402.332 233.343 406.609 cv
239.237 410.895 241.925 410.895 242.448 418.395 cv
242.987 425.887 251.015 423.211 256.37 421.063 cv
261.722 418.926 272.44 416.246 277.788 418.926 cv
cp
f
228.499 470.418 mo
227.835 466.023 223.147 453.738 222.796 447.676 cv
222.437 441.559 219.077 437.73 216.112 434.355 cv
214.101 432.066 212.206 429.902 211.444 427.254 cv
209.515 420.504 207.909 418.863 205.847 417.293 cv
205.667 417.145 205.483 417.012 205.296 416.855 cv
208.948 417.996 212.058 418.551 214.804 418.551 cv
220.913 418.551 225.112 415.66 226.937 410.191 cv
228.042 406.863 227.562 404.578 227.183 402.73 cv
226.796 400.895 226.526 399.605 228.241 396.863 cv
226.823 401.191 227.046 405.535 231.679 408.902 cv
232.878 409.785 233.956 410.488 234.909 411.113 cv
238.456 413.426 239.296 413.973 239.624 418.59 cv
239.972 423.418 242.874 426.18 247.601 426.18 cv
247.601 426.18 li
250.796 426.18 254.358 424.918 257.425 423.699 cv
261.233 422.176 267.167 420.645 271.831 420.645 cv
272.151 420.645 272.46 420.645 272.757 420.66 cv
268.503 426.09 260.683 436.66 257.487 444.645 cv
254.815 451.324 254.101 456.738 253.979 460.113 cv
252.136 459.852 249.769 459.617 247.347 459.617 cv
244.378 459.617 241.87 459.98 239.882 460.699 cv
235.897 462.145 232.554 468.992 228.499 470.418 cv
cp
1 1 1 rgb
f
231.741 410.359 mo
231.741 410.359 234.956 447.301 248.878 455.867 cv
248.878 455.867 237.331 451.035 234.124 439.793 cv
230.913 428.551 231.741 410.359 231.741 410.359 cv
cp
.27451 .207843 .145098 rgb
f
193.558 380.465 mo
193.558 380.465 210.269 393.066 207.249 415.418 cv
207.249 415.418 201.077 392.371 193.245 383.379 cv
185.429 374.371 193.558 380.465 193.558 380.465 cv
cp
f
274.972 736.949 mo
274.972 736.949 280.995 711.66 254.097 697.195 cv
254.097 697.195 260.519 699.207 263.331 696.793 cv
266.144 694.383 278.995 694.383 279.792 695.594 cv
280.597 696.793 279.792 694.383 281.401 688.77 cv
283.003 683.145 283.003 677.527 283.003 677.527 cv
283.003 677.527 284.206 680.34 276.581 681.141 cv
268.956 681.941 279.39 680.73 280.995 675.918 cv
282.604 671.102 286.62 671.102 289.026 676.316 cv
291.433 681.543 295.452 682.34 297.862 682.742 cv
300.272 683.145 299.472 685.957 300.272 689.969 cv
301.077 693.992 312.323 688.77 322.757 690.379 cv
333.198 691.98 334.804 695.594 341.229 694.793 cv
341.229 694.793 315.132 712.859 313.124 734.551 cv
313.124 734.551 302.28 733.34 298.265 736.551 cv
294.245 739.762 280.19 738.16 274.972 736.949 cv
cp
f
288.823 735.605 mo
284.987 735.605 280.987 735.145 278.151 734.684 cv
278.772 728.184 278.503 712.195 263.479 700.008 cv
264.112 699.734 264.675 699.371 265.171 698.953 cv
265.886 698.406 269.413 697.637 274.163 697.637 cv
276.073 697.637 277.284 697.762 277.905 697.871 cv
278.276 698.426 li
280.081 698.73 li
281.323 698.73 282.851 698.113 283.104 695.164 cv
283.198 694.07 283.354 692.246 284.124 689.551 cv
285.386 685.125 285.722 680.777 285.808 678.582 cv
283.136 678.055 li
283.354 677.664 283.538 677.254 283.687 676.816 cv
284.085 675.613 284.565 675.223 284.671 675.184 cv
284.784 675.215 285.608 675.672 286.456 677.508 cv
289.347 683.777 294.312 684.996 296.874 685.449 cv
296.937 685.855 296.987 686.441 297.026 686.91 cv
297.12 687.965 297.226 689.188 297.495 690.527 cv
297.784 691.961 298.925 694.363 303.354 694.363 cv
305.003 694.363 306.952 694.082 309.214 693.746 cv
311.991 693.348 315.14 692.887 318.315 692.887 cv
319.769 692.887 321.077 692.988 322.323 693.184 cv
326.878 693.875 329.565 694.957 331.937 695.918 cv
332.667 696.207 333.378 696.492 334.112 696.746 cv
326.487 703.184 313.401 716.191 310.675 731.531 cv
310.026 731.512 309.296 731.492 308.519 731.492 cv
302.901 731.492 298.854 732.449 296.495 734.332 cv
296.229 734.551 294.62 735.605 288.823 735.605 cv
cp
1 1 1 rgb
f
254.765 698.406 mo
254.765 698.406 238.163 678.066 224.245 682.34 cv
210.331 686.629 206.577 693.59 200.155 690.379 cv
193.729 687.168 184.628 689.84 183.554 677.527 cv
183.554 677.527 179.808 690.379 187.304 690.918 cv
194.792 691.441 200.159 690.918 205.507 695.73 cv
210.858 700.543 215.683 703.23 225.312 700.02 cv
234.956 696.805 246.733 696.27 254.765 698.406 cv
cp
.27451 .207843 .145098 rgb
f
299.335 685.426 mo
299.335 685.426 293.921 684.176 290.171 677.926 cv
286.421 671.676 284.753 671.258 282.671 675.426 cv
280.585 679.59 277.671 680.84 267.671 681.258 cv
267.671 681.258 280.167 684.168 284.335 682.508 cv
288.503 680.84 295.999 682.926 299.335 685.426 cv
cp
f
292.671 692.09 mo
292.671 692.09 298.503 695.008 300.171 707.09 cv
301.835 719.176 310.675 731.531 310.675 731.531 cv
310.675 731.531 308.921 720.008 305.171 713.34 cv
301.421 706.676 301.835 694.59 292.671 692.09 cv
cp
f
227.991 599.629 mo
227.991 599.629 227.562 588.66 232.409 579.949 cv
241.417 563.77 245.483 554.832 253.917 550.02 cv
262.347 545.191 273.401 553.434 281.835 556.246 cv
290.269 559.059 295.858 568.309 297.058 577.938 cv
298.265 587.574 301.077 599.629 301.077 599.629 cv
301.077 599.629 290.233 608.055 269.753 608.457 cv
249.276 608.855 227.991 599.629 227.991 599.629 cv
cp
f
268.437 605.633 mo
252.276 605.633 235.628 599.605 230.624 597.637 cv
230.378 594.41 230.331 586.816 234.581 581.777 cv
236.694 579.254 238.925 576.074 241.284 572.691 cv
246.069 565.848 251.495 558.082 256.702 555.105 cv
258.479 554.09 260.218 553.59 262.015 553.59 cv
265.022 553.59 268.034 554.918 271.522 556.465 cv
273.495 557.332 275.53 558.223 277.69 558.941 cv
284.788 561.309 293.136 569.371 294.245 578.289 cv
295.183 585.77 297.034 594.527 297.878 598.348 cv
294.401 600.449 284.765 605.32 269.702 605.621 cv
268.437 605.633 li
cp
1 1 1 rgb
f
206.835 552.918 mo
206.835 552.918 212.671 553.34 213.921 565.418 cv
215.171 577.496 222.597 590.086 227.214 596.297 cv
227.214 596.297 217.253 591.246 213.921 580.84 cv
210.585 570.418 213.499 559.168 206.835 552.918 cv
cp
.27451 .207843 .145098 rgb
f
265.171 643.746 mo
265.171 643.746 263.085 626.668 251.835 618.34 cv
240.585 609.996 236.835 603.746 233.085 600.84 cv
229.335 597.918 227.214 596.297 227.214 596.297 cv
227.214 596.297 236.421 593.34 241.421 596.668 cv
246.421 599.996 248.925 603.746 252.253 599.59 cv
255.585 595.418 250.171 593.746 255.171 587.09 cv
260.171 580.418 270.585 573.746 270.585 573.746 cv
270.585 573.746 261.839 590.418 267.253 595.84 cv
272.671 601.246 274.753 601.258 280.171 600.418 cv
285.585 599.59 301.003 597.496 301.003 597.496 cv
301.003 597.496 298.499 609.996 298.085 614.996 cv
297.671 619.996 294.245 642.184 294.245 642.184 cv
294.245 642.184 285.585 639.578 265.171 643.746 cv
cp
f
267.46 640.418 mo
266.284 634.852 262.772 622.91 253.526 616.063 cv
246.468 610.828 242.433 606.426 239.479 603.199 cv
237.722 601.285 236.339 599.773 234.823 598.602 cv
233.987 597.949 li
234.319 597.926 234.663 597.918 235.003 597.918 cv
237.085 597.918 238.761 598.309 239.847 599.031 cv
240.862 599.707 241.772 600.398 242.601 601.035 cv
244.858 602.77 246.808 604.254 249.245 604.254 cv
251.171 604.254 252.929 603.277 254.468 601.355 cv
256.776 598.465 256.312 596.051 255.972 594.285 cv
255.659 592.645 255.429 591.465 257.437 588.785 cv
259.175 586.473 261.659 584.121 264.085 582.09 cv
262.386 587.676 261.597 594.188 265.253 597.84 cv
269.546 602.137 272.421 603.66 276.237 603.66 cv
277.519 603.66 278.808 603.496 280.601 603.223 cv
284.272 602.652 292.538 601.512 297.472 600.84 cv
296.69 604.996 295.534 611.414 295.257 614.762 cv
294.944 618.551 292.815 632.73 291.886 638.887 cv
290.386 638.699 288.343 638.543 285.706 638.543 cv
280.335 638.543 274.206 639.176 267.46 640.418 cv
cp
1 1 1 rgb
f
264.335 602.918 mo
264.335 602.918 273.089 609.168 276.003 616.668 cv
278.921 624.168 294.753 639.996 294.753 639.996 cv
294.753 639.996 283.085 637.496 278.085 627.09 cv
273.085 616.668 274.335 613.746 264.335 602.918 cv
cp
.27451 .207843 .145098 rgb
f
227.671 656.246 mo
227.671 656.246 235.589 657.496 237.253 673.34 cv
238.921 689.168 253.085 695.418 253.085 695.418 cv
253.085 695.418 242.667 684.168 241.835 676.246 cv
241.003 668.34 238.085 658.746 227.671 656.246 cv
cp
f
173.987 439.695 mo
173.987 439.695 171.968 452.754 183.62 457.176 cv
190.05 459.617 195.667 456.363 195.667 456.363 cv
195.667 456.363 196.683 461.637 184.022 460.84 cv
177.601 460.438 169.569 458.406 173.987 439.695 cv
cp
f
214.608 728.387 mo
214.608 728.387 215.683 711.785 221.034 704.293 cv
226.386 696.805 243.519 691.98 256.104 698.406 cv
268.683 704.832 277.784 723.574 276.718 738.027 cv
275.644 752.48 291.171 751.414 276.718 757.301 cv
262.261 763.191 253.69 764.793 253.69 764.793 cv
253.69 764.793 257.44 742.313 241.913 742.848 cv
226.386 743.387 214.608 728.387 214.608 728.387 cv
cp
1 1 1 rgb
f
329.729 792.098 mo
329.729 792.098 322.089 782.508 320.815 772.09 cv
319.546 761.676 316.565 755.84 311.897 748.758 cv
307.237 741.676 308.526 733.992 308.526 733.992 cv
308.526 733.992 314.878 740.84 325.062 745.84 cv
335.253 750.84 339.073 749.168 343.737 747.508 cv
348.413 745.84 345.862 740.426 352.655 737.926 cv
359.452 735.426 363.265 725.008 362.847 720.426 cv
362.421 715.84 358.179 711.258 358.179 711.258 cv
358.179 711.258 368.792 715.008 370.062 725.84 cv
371.339 736.676 365.394 742.508 369.644 746.258 cv
373.886 750.008 378.128 750.848 385.769 750.426 cv
393.413 750.008 403.597 744.59 403.597 744.59 cv
403.597 744.59 396.808 756.258 399.78 767.926 cv
402.753 779.59 409.546 792.508 409.546 792.508 cv
409.546 792.508 387.894 799.176 378.979 796.676 cv
370.062 794.176 372.187 791.668 360.726 793.758 cv
349.261 795.84 347.136 798.348 338.226 792.926 cv
334.339 790.566 333.03 795.348 329.729 792.098 cv
cp
.27451 .207843 .145098 rgb
f
384.019 794.402 mo
382.269 794.402 380.843 794.246 379.769 793.953 cv
377.147 793.211 375.601 792.496 374.237 791.863 cv
372.261 790.934 370.546 790.145 367.366 790.145 cv
365.565 790.145 363.284 790.41 360.198 790.965 cv
356.382 791.66 352.854 792.012 349.71 792.012 cv
345.647 792.012 342.241 791.453 339.3 790.293 cv
338.237 789.871 337.222 789.676 336.19 789.676 cv
334.788 789.676 333.714 790.059 332.929 790.34 cv
332.718 790.41 332.425 790.516 332.28 790.543 cv
332.265 790.516 332.073 790.387 331.78 790.098 cv
331.78 790.098 li
331.812 790.098 324.827 781.141 323.683 771.754 cv
322.378 761.082 319.39 754.902 314.323 747.215 cv
312.851 744.98 312.058 742.676 311.655 740.652 cv
314.62 743.027 318.745 745.906 323.772 748.379 cv
328.823 750.855 332.854 752.012 336.468 752.012 cv
339.604 752.012 341.976 751.16 344.261 750.34 cv
348.058 748.98 349.101 746.453 349.866 744.605 cv
350.64 742.742 351.147 741.512 353.671 740.582 cv
361.429 737.723 365.601 727.273 365.757 721.434 cv
366.46 722.793 366.987 724.363 367.19 726.168 cv
367.729 730.711 366.858 734.246 366.097 737.363 cv
365.151 741.23 364.163 745.23 367.71 748.355 cv
371.776 751.961 375.933 753.355 382.515 753.355 cv
383.577 753.355 384.714 753.316 385.933 753.262 cv
389.925 753.035 394.44 751.621 398.069 750.203 cv
396.499 755.027 395.233 761.766 396.976 768.613 cv
399.144 777.129 403.214 786.129 405.433 790.73 cv
400.487 792.066 390.894 794.402 384.019 794.402 cv
cp
1 1 1 rgb
f
164.761 518.992 mo
164.761 518.992 165.956 532.41 182.015 529.566 cv
182.015 529.566 178.003 533.223 172.386 533.629 cv
166.769 534.043 164.761 528.348 164.761 518.992 cv
cp
.27451 .207843 .145098 rgb
f
442.694 756.766 mo
442.694 756.766 446.444 770.684 456.073 765.332 cv
465.718 759.98 482.847 754.09 482.847 754.09 cv
482.847 754.09 485.526 775.504 470.53 782.996 cv
455.542 790.496 449.112 788.355 445.37 791.035 cv
441.62 793.707 427.659 793.223 416.421 793.758 cv
405.179 794.293 401.464 777.645 401.464 774.969 cv
401.464 772.293 415.378 781.934 427.694 775.504 cv
440.015 769.082 442.694 756.766 442.694 756.766 cv
cp
f
415.894 790.934 mo
412.437 790.934 409.487 788.621 407.136 784.059 cv
406.058 781.961 405.335 779.813 404.894 778.113 cv
408.065 779.121 412.812 780.594 418.058 780.594 cv
418.058 780.594 418.058 780.594 418.062 780.594 cv
422.05 780.594 425.729 779.723 429.007 778.016 cv
436.409 774.16 440.624 768.395 442.933 763.934 cv
444.827 766.738 447.714 769.395 451.862 769.395 cv
453.683 769.395 455.562 768.855 457.448 767.809 cv
464.136 764.098 474.698 760.059 480.183 758.043 cv
480.155 764.004 478.804 775.691 469.261 780.465 cv
460.507 784.84 454.937 785.77 450.87 786.441 cv
447.991 786.922 445.718 787.293 443.722 788.73 cv
441.589 790.254 431.901 790.488 424.827 790.652 cv
421.94 790.723 419.034 790.789 416.284 790.926 cv
415.894 790.934 li
cp
1 1 1 rgb
f
362.944 752.664 mo
362.944 752.664 368.917 764.598 378.085 768.348 cv
387.253 772.098 388.921 779.598 403.636 788.23 cv
403.636 788.23 398.085 787.52 390.585 782.926 cv
383.085 778.348 382.249 775.02 375.585 771.676 cv
368.921 768.348 362.8 760.73 362.944 752.664 cv
cp
.27451 .207843 .145098 rgb
f
492.616 571.91 mo
492.616 571.91 489.003 563.484 489.003 553.043 cv
489.003 542.605 495.026 529.754 507.069 518.113 cv
519.116 506.465 531.167 505.652 540.804 507.262 cv
550.44 508.875 565.296 523.328 562.483 545.008 cv
555.659 552.645 li
555.659 552.645 551.644 561.871 532.769 568.309 cv
513.894 574.723 492.616 571.91 492.616 571.91 cv
cp
f
504.124 569.695 mo
499.909 569.695 496.542 569.449 494.651 569.277 cv
493.69 566.504 491.839 560.242 491.839 553.043 cv
491.839 542.859 498.269 530.566 509.042 520.145 cv
516.464 512.965 524.503 509.473 533.608 509.473 cv
535.769 509.473 537.972 509.668 540.335 510.066 cv
548.358 511.402 561.894 524.121 559.776 543.785 cv
553.241 551.09 li
553.062 551.512 li
553.034 551.559 549.042 559.762 531.854 565.621 cv
521.968 568.98 511.315 569.695 504.124 569.695 cv
cp
1 1 1 rgb
f
570.651 632.02 mo
570.651 632.02 572.792 606.316 544.948 602.039 cv
544.948 602.039 554.058 599.363 558.87 594.004 cv
563.694 588.652 567.44 585.973 572.253 582.223 cv
577.081 578.473 579.222 582.223 578.147 576.336 cv
577.081 570.449 576.542 560.809 578.687 556.52 cv
578.687 556.52 577.616 566.699 582.968 568.309 cv
588.319 569.91 585.104 580.613 590.468 577.41 cv
595.819 574.199 597.956 567.77 602.241 564.02 cv
606.522 560.27 611.745 555.301 611.745 555.301 cv
611.745 555.301 608.14 568.309 605.456 577.938 cv
602.772 587.574 599.026 607.391 591.534 615.418 cv
584.038 623.445 570.651 632.02 570.651 632.02 cv
cp
.27451 .207843 .145098 rgb
f
573.245 626.844 mo
572.343 619.59 568.593 606.941 553.733 601.375 cv
556.269 599.988 558.94 598.172 560.979 595.895 cv
565.065 591.363 568.28 588.887 572.343 585.738 cv
573.999 584.461 li
575.409 583.355 576.409 583.172 577.292 583.004 cv
581.714 582.168 581.519 579.004 580.937 575.828 cv
580.62 574.07 580.374 572.105 580.222 570.137 cv
580.796 570.504 581.433 570.809 582.151 571.023 cv
583.026 571.285 583.433 572.859 583.866 574.902 cv
584.339 577.117 585.136 580.84 588.784 580.84 cv
589.776 580.84 590.8 580.516 591.925 579.84 cv
595.534 577.676 597.839 574.332 599.878 571.387 cv
601.253 569.395 602.558 567.508 604.104 566.152 cv
604.839 565.516 605.589 564.84 606.343 564.168 cv
602.729 577.176 li
602.237 578.953 601.702 581.063 601.12 583.387 cv
598.722 592.965 595.093 607.449 589.464 613.484 cv
584.815 618.457 577.71 623.73 573.245 626.844 cv
cp
1 1 1 rgb
f
582.433 668.426 mo
582.433 668.426 567.905 675.582 563.085 669.168 cv
560.491 665.711 565.151 655.34 568.085 644.578 cv
570.612 635.309 570.882 625.457 575.585 622.918 cv
585.765 617.43 585.112 620.242 586.183 613.277 cv
587.249 606.316 585.64 610.066 591.534 598.824 cv
597.425 587.574 596.89 583.301 598.495 580.074 cv
600.097 576.871 607.187 564.941 609.335 563.328 cv
611.479 561.727 616.003 550.828 616.003 550.828 cv
616.003 550.828 616.444 575.066 611.624 584.168 cv
605.663 595.426 605.999 615.418 597.253 628.746 cv
590.952 638.367 592.604 659.324 582.433 668.426 cv
cp
.27451 .207843 .145098 rgb
f
569.628 669.004 mo
566.507 669.004 565.64 667.848 565.351 667.469 cv
564.339 666.082 566.772 658.445 568.226 653.887 cv
569.101 651.152 570.022 648.25 570.819 645.332 cv
571.565 642.598 572.12 639.813 572.644 637.176 cv
573.683 631.973 574.753 626.59 576.933 625.41 cv
579.69 623.926 581.628 623.066 583.011 622.449 cv
587.644 620.398 588.108 619.41 588.909 614.176 cv
589.206 612.223 589.319 611.207 589.409 610.438 cv
589.612 608.523 589.612 608.523 592.163 603.707 cv
594.042 600.145 li
598.104 592.391 599.257 587.715 600.022 584.605 cv
600.374 583.184 600.628 582.145 601.03 581.348 cv
602.972 577.457 609.511 566.863 611.054 565.582 cv
611.597 565.176 612.198 564.473 612.812 563.574 cv
612.323 570.816 611.261 578.797 609.12 582.84 cv
606.327 588.113 604.886 594.891 603.358 602.066 cv
601.468 610.945 599.515 620.137 594.886 627.195 cv
591.948 631.676 590.659 637.918 589.292 644.527 cv
587.589 652.793 585.823 661.316 580.835 666.043 cv
579.433 666.688 574.065 669.004 569.628 669.004 cv
cp
1 1 1 rgb
f
490.171 570.828 mo
490.171 570.828 491.835 569.578 506.421 569.578 cv
521.003 569.578 525.171 569.16 526.421 562.078 cv
527.671 554.996 527.253 549.16 533.921 545.828 cv
540.585 542.496 545.585 533.746 545.585 533.746 cv
545.585 533.746 545.585 543.746 543.085 548.328 cv
540.585 552.918 543.499 558.746 548.085 556.668 cv
552.671 554.578 563.921 545.828 563.921 545.828 cv
563.921 545.828 551.425 565.828 549.753 577.918 cv
548.085 589.996 554.05 604.441 554.05 604.441 cv
554.05 604.441 543.917 598.328 530.585 606.668 cv
517.253 614.996 513.503 626.246 513.503 626.246 cv
513.503 626.246 517.671 593.328 490.171 570.828 cv
cp
.27451 .207843 .145098 rgb
f
516.354 615.691 mo
515.456 604.676 511.456 587.285 496.503 572.691 cv
498.753 572.535 501.94 572.418 506.421 572.418 cv
519.995 572.418 527.476 572.418 529.214 562.574 cv
529.429 561.355 529.593 560.184 529.753 559.043 cv
530.569 553.262 531.147 550.387 535.183 548.367 cv
537.667 547.129 539.909 545.262 541.808 543.328 cv
541.503 544.746 541.108 546.035 540.597 546.973 cv
538.929 550.027 538.917 553.797 540.562 556.559 cv
541.831 558.707 543.894 559.941 546.226 559.941 cv
547.229 559.941 548.253 559.707 549.257 559.246 cv
550.776 558.551 552.874 557.262 555.065 555.789 cv
551.597 562.547 547.847 571.012 546.948 577.527 cv
545.839 585.535 547.812 594.344 549.487 599.902 cv
548.104 599.637 546.519 599.449 544.761 599.449 cv
539.468 599.449 534.194 601.074 529.081 604.266 cv
523.28 607.887 519.183 612.039 516.354 615.691 cv
cp
1 1 1 rgb
f
544.819 496.023 mo
544.819 496.023 535.323 479.422 542.812 462.832 cv
550.308 446.23 558.851 439.199 566.421 435.418 cv
569.749 433.746 576.483 434.715 581.835 441.668 cv
587.19 448.629 597.421 473.004 591.534 478.355 cv
585.644 483.707 572.792 491.207 566.37 494.422 cv
559.948 497.637 544.819 496.023 544.819 496.023 cv
cp
.27451 .207843 .145098 rgb
f
553.206 493.59 mo
550.53 493.59 548.12 493.445 546.64 493.34 cv
544.753 489.316 539.745 476.512 545.394 463.992 cv
553.183 446.746 561.851 440.867 567.69 437.949 cv
568.218 437.684 568.956 437.547 569.769 437.547 cv
571.015 437.547 575.409 437.965 579.589 443.395 cv
585.972 451.688 593.147 473.066 589.628 476.258 cv
584.261 481.129 571.937 488.465 565.101 491.883 cv
562.905 492.988 558.683 493.59 553.206 493.59 cv
cp
1 1 1 rgb
f
543.882 493.887 mo
554.905 489.598 561.55 492.809 564.765 488.523 cv
567.979 484.246 569.335 478.574 576.835 477.496 cv
584.323 476.434 598.503 452.918 598.503 452.918 cv
598.503 452.918 590.714 481.715 592.671 498.746 cv
593.382 504.969 593.671 509.605 592.604 514.762 cv
588.085 536.668 600.171 543.746 583.085 537.496 cv
571.616 533.309 560.487 547.957 560.487 547.957 cv
560.487 547.957 561.288 526.766 553.519 517.441 cv
541.421 502.918 523.538 509.41 523.538 509.41 cv
523.538 509.41 534.245 497.637 543.882 493.887 cv
cp
.27451 .207843 .145098 rgb
f
563.19 541.004 mo
562.753 533.602 561.155 522.176 555.698 515.621 cv
548.472 506.949 539.37 505.125 533.007 505.125 cv
532.671 505.125 532.343 505.137 532.015 505.145 cv
535.706 501.902 540.479 498.25 544.909 496.52 cv
549.808 494.617 553.827 494.305 557.054 494.059 cv
560.933 493.758 564.589 493.484 567.03 490.223 cv
567.835 489.16 568.534 488.016 569.229 486.863 cv
571.304 483.426 572.808 480.945 577.237 480.309 cv
581.815 479.656 587.593 473.434 592.401 467.066 cv
590.526 476.871 588.765 489.598 589.854 499.07 cv
590.585 505.465 590.784 509.566 589.827 514.188 cv
587.894 523.574 588.862 530.488 589.44 534.617 cv
589.534 535.281 589.644 536.043 589.706 536.668 cv
587.952 536.258 585.237 535.27 584.058 534.84 cv
582.378 534.227 580.608 533.914 578.812 533.914 cv
572.581 533.914 566.976 537.645 563.19 541.004 cv
cp
1 1 1 rgb
f
546.835 661.246 mo
546.835 661.246 545.175 670.828 541.003 678.328 cv
536.835 685.828 532.108 706.715 532.108 706.715 cv
532.108 706.715 536.003 700.418 539.753 689.996 cv
543.503 679.578 547.667 670.418 546.835 661.246 cv
cp
.27451 .207843 .145098 rgb
f
531.854 565.621 mo
531.854 565.621 530.167 573.328 525.585 582.918 cv
521.003 592.496 515.999 610.84 515.585 617.496 cv
515.171 624.168 518.925 606.668 523.503 596.246 cv
528.085 585.828 531.854 565.621 531.854 565.621 cv
cp
f
575.171 495.828 mo
575.171 495.828 569.753 504.16 568.921 512.496 cv
568.085 520.828 561.421 542.078 561.421 542.078 cv
561.421 542.078 568.87 540.293 569.753 522.496 cv
570.585 505.828 575.171 495.828 575.171 495.828 cv
cp
f
516.003 479.996 mo
511.003 490.418 li
511.003 490.418 511.421 508.746 507.671 514.578 cv
503.921 520.418 509.753 516.246 512.671 501.668 cv
515.585 487.078 516.003 479.996 516.003 479.996 cv
cp
f
494.624 332.184 mo
494.624 332.184 493.417 322.547 489.804 319.344 cv
486.19 316.121 485.39 310.906 484.183 303.27 cv
482.979 295.645 485.39 277.176 495.831 280.789 cv
506.269 284.402 514.3 292.84 521.128 296.051 cv
527.952 299.266 540.401 308.895 539.198 324.559 cv
539.198 324.559 529.155 330.582 521.128 331.785 cv
513.097 332.988 494.624 332.184 494.624 332.184 cv
cp
f
507.288 329.617 mo
503.214 329.617 499.378 329.52 497.05 329.441 cv
496.394 326.035 494.843 320.02 491.683 317.223 cv
488.862 314.707 488.124 310.047 487.011 303.004 cv
486.214 297.977 487.19 288.473 490.468 284.637 cv
491.604 283.309 492.612 283.16 493.269 283.16 cv
493.765 283.16 494.312 283.262 494.901 283.465 cv
500.784 285.504 506.03 289.305 510.651 292.652 cv
513.894 294.996 516.956 297.223 519.921 298.613 cv
526.284 301.609 536.636 309.996 536.44 322.871 cv
533.565 324.449 526.46 328.121 520.706 328.98 cv
517.944 329.395 513.3 329.617 507.288 329.617 cv
cp
1 1 1 rgb
f
477.354 332.598 mo
477.354 332.598 485.39 332.598 493.019 329.785 cv
500.647 326.973 504.261 326.973 508.276 327.371 cv
512.292 327.77 516.308 330.582 516.706 325.762 cv
517.108 320.945 517.917 317.73 521.128 314.918 cv
524.339 312.105 526.347 305.281 526.347 305.281 cv
526.347 305.281 531.968 310.504 528.354 316.531 cv
524.737 322.547 526.347 325.762 530.362 323.758 cv
534.378 321.746 539.597 315.73 539.597 315.73 cv
539.597 315.73 543.612 326.16 542.409 332.184 cv
541.198 338.211 551.937 359.617 549.124 363.23 cv
546.315 366.844 541.815 361.035 535.979 362.301 cv
525.999 364.48 518.187 374.793 518.187 374.793 cv
518.187 374.793 513.319 358.98 505.687 354.168 cv
498.062 349.344 494.394 348.445 490.374 343.23 cv
486.366 338.004 477.354 332.598 477.354 332.598 cv
cp
.27451 .207843 .145098 rgb
f
520.062 368.23 mo
517.495 364.363 512.104 355.215 505.999 351.355 cv
498.812 346.816 496.159 345.801 492.249 340.73 cv
490.894 338.965 490.433 335.254 488.46 334.059 cv
490.253 333.66 492.132 333.133 493.999 332.441 cv
499.8 330.301 502.8 330.02 504.976 330.02 cv
506.011 330.02 506.987 330.086 507.991 330.191 cv
508.917 330.281 509.827 330.527 510.69 330.75 cv
511.94 331.074 513.124 331.387 514.323 331.387 cv
515.44 331.387 519.12 330.996 519.534 325.996 cv
519.94 321.113 520.745 319.02 522.995 317.051 cv
524.507 315.73 525.745 313.809 526.714 311.941 cv
526.776 312.91 526.581 313.973 525.921 315.066 cv
523.464 319.16 522.862 322.559 524.183 324.891 cv
525.011 326.348 526.487 327.184 528.253 327.184 cv
529.3 327.184 530.44 326.883 531.628 326.285 cv
533.925 325.145 536.425 322.996 538.37 321.121 cv
539.323 324.539 540.183 328.863 539.632 331.629 cv
538.886 335.34 540.858 340.309 542.948 345.582 cv
544.116 348.523 547.011 358.504 546.624 359.793 cv
545.144 361.648 542.308 357.262 538.515 358.473 cv
537.44 358.816 536.284 359.188 535.026 359.637 cv
530.913 361.102 523.413 366.543 520.062 368.23 cv
cp
1 1 1 rgb
f
458.499 381.043 mo
458.499 381.043 455.687 365.105 460.999 356.355 cv
466.312 347.605 471.937 344.793 477.562 345.105 cv
483.187 345.418 488.187 347.918 488.187 347.918 cv
488.187 347.918 485.062 344.168 478.187 343.855 cv
471.312 343.543 465.062 347.293 462.874 350.105 cv
460.687 352.918 453.187 366.355 458.499 381.043 cv
cp
.27451 .207843 .145098 rgb
f
485.999 471.355 mo
485.999 471.355 485.687 453.543 490.999 444.48 cv
496.312 435.418 501.624 434.48 506.937 431.355 cv
512.249 428.23 525.687 434.168 525.687 434.168 cv
525.687 434.168 518.187 428.543 510.062 428.543 cv
501.937 428.543 502.874 431.668 497.874 434.793 cv
492.874 437.918 482.874 444.168 485.999 471.355 cv
cp
f
335.374 402.293 mo
335.374 402.293 332.874 392.293 338.499 388.855 cv
344.124 385.418 344.437 384.793 348.187 379.793 cv
351.937 374.793 363.187 369.48 375.062 375.105 cv
386.937 380.73 388.187 380.418 388.187 380.418 cv
388.187 380.418 380.687 376.355 376.624 374.168 cv
372.562 371.98 365.062 369.793 357.874 371.98 cv
350.687 374.168 347.249 378.855 343.812 381.668 cv
340.374 384.48 330.062 390.105 335.374 402.293 cv
cp
f
573.499 536.668 mo
573.499 536.668 584.749 534.793 585.999 521.668 cv
587.249 508.543 584.124 504.793 590.374 502.293 cv
596.624 499.793 606.038 496.258 610.394 488.34 cv
614.749 480.418 618.167 476.063 618.167 476.063 cv
618.167 476.063 618.499 498.543 615.374 505.418 cv
612.249 512.293 612.874 519.793 613.499 527.293 cv
614.124 534.793 609.749 539.168 609.124 546.668 cv
608.499 554.168 610.999 557.293 610.999 557.293 cv
588.499 578.543 li
588.499 578.543 599.124 538.543 573.499 536.668 cv
cp
f
592.874 575.203 mo
593.964 566.883 594.28 549.793 588.538 541.738 cv
586.698 539.148 584.394 537.184 581.64 535.855 cv
585.065 533.121 588.179 528.691 588.823 521.934 cv
589.245 517.488 589.183 514.004 589.14 511.465 cv
589.038 505.879 589.218 505.809 591.429 504.918 cv
592.073 504.668 li
598.491 502.105 608.183 498.238 612.878 489.707 cv
613.694 488.211 614.479 486.855 615.214 485.633 cv
614.964 492.684 614.312 500.906 612.796 504.246 cv
609.362 511.785 610.026 519.793 610.675 527.527 cv
610.972 531.063 609.94 533.809 608.753 536.988 cv
607.749 539.676 606.612 542.715 606.3 546.434 cv
605.894 551.324 606.858 556.102 607.667 558.121 cv
592.874 575.203 li
cp
1 1 1 rgb
f
581.417 585.621 mo
579.96 596.043 li
579.96 596.043 583.085 598.746 578.499 606.453 cv
573.917 614.168 573.292 625.621 573.292 625.621 cv
573.292 625.621 572.046 611.871 574.335 607.918 cv
576.624 603.953 577.253 603.953 578.085 599.578 cv
578.917 595.203 579.745 587.285 581.417 585.621 cv
cp
.27451 .207843 .145098 rgb
f
318.499 752.508 mo
318.499 752.508 309.413 739.918 313.124 734.551 cv
316.835 729.176 314.335 720.848 303.499 724.176 cv
292.667 727.508 292.667 725.84 280.167 722.508 cv
267.667 719.176 260.167 727.508 247.667 726.676 cv
235.167 725.84 225.847 724.109 225.847 724.109 cv
225.847 724.109 233.495 735.008 257.667 735.84 cv
281.835 736.676 282.671 740.008 289.335 744.176 cv
295.999 748.34 314.335 753.34 318.499 752.508 cv
cp
f
349.124 793.23 mo
349.124 793.23 344.335 780.848 344.335 771.676 cv
344.335 762.508 326.444 755.457 319.14 749.402 cv
311.835 743.34 272.667 734.176 263.499 735.84 cv
254.335 737.508 235.999 754.176 258.499 768.34 cv
280.999 782.508 296.831 787.508 302.667 788.34 cv
308.499 789.176 310.487 785.543 319.749 791.043 cv
329.011 796.543 349.124 793.23 349.124 793.23 cv
cp
f
330.253 789.121 mo
325.874 789.121 322.515 788.434 320.269 787.105 cv
316.917 785.113 314.046 784.188 311.229 784.188 cv
309.261 784.188 307.667 784.637 306.261 785.047 cv
305.101 785.371 304.104 785.66 303.03 785.66 cv
302.745 785.66 302.448 785.645 302.136 785.594 cv
296.503 784.785 281.253 779.824 259.843 766.324 cv
252.831 761.902 253.358 756.738 254.335 751.676 cv
255.565 745.32 259.397 740.254 263.772 739.461 cv
264.362 739.355 265.12 739.305 266.011 739.305 cv
278.632 739.305 310.491 747.496 316.151 752.195 cv
318.433 754.09 321.546 755.984 324.843 757.996 cv
331.55 762.09 339.897 767.176 339.897 771.961 cv
339.897 778.172 341.847 784.082 343.276 787.574 cv
340.14 788.25 335.136 789.121 330.253 789.121 cv
330.253 789.121 li
cp
1 1 1 rgb
f
273.499 772.508 mo
273.499 772.508 259.937 756.258 276.718 757.301 cv
293.499 758.34 294.335 760.84 299.335 758.34 cv
304.335 755.84 325.167 764.176 327.667 779.176 cv
327.667 779.176 311.835 761.668 303.499 762.508 cv
295.167 763.34 291.104 761.816 281.835 760.84 cv
265.999 759.176 276.042 778.035 276.042 778.035 cv
273.499 772.508 li
cp
.27451 .207843 .145098 rgb
f
212.823 608.512 mo
212.823 608.512 200.171 613.348 194.335 629.176 cv
188.499 645.008 188.495 650.84 197.667 658.34 cv
197.667 658.34 190.995 644.168 177.667 645.008 cv
164.335 645.84 158.499 642.508 158.499 642.508 cv
158.499 642.508 166.835 633.34 161.835 618.34 cv
156.835 603.34 146.69 592.449 145.167 571.676 cv
145.167 571.676 156.835 585.008 161.835 591.676 cv
166.835 598.34 170.167 605.008 170.999 597.508 cv
171.835 590.008 167.667 584.176 170.999 580.84 cv
174.335 577.508 166.835 561.676 166.835 561.676 cv
166.835 561.676 175.167 565.008 177.667 577.508 cv
180.167 590.008 175.167 593.34 185.999 600.008 cv
196.835 606.676 206.308 604.52 212.823 608.512 cv
cp
f
187.515 644.109 mo
184.753 642.801 181.839 642.137 178.792 642.137 cv
178.362 642.137 177.929 642.145 177.487 642.176 cv
176.069 642.262 174.737 642.301 173.491 642.301 cv
168.597 642.301 165.101 641.688 162.878 641.09 cv
165.284 636.793 168.226 628.551 164.526 617.441 cv
162.815 612.313 161.042 608.535 159.479 605.191 cv
156.948 599.762 154.839 595.254 153.597 586.754 cv
155.526 588.59 157.69 590.879 159.569 593.379 cv
160.464 594.566 161.304 595.762 162.085 596.871 cv
165.062 601.102 166.858 603.652 169.503 603.652 cv
173.167 603.652 173.655 599.266 173.815 597.82 cv
174.229 594.148 173.589 590.879 173.069 588.25 cv
172.448 585.066 172.253 583.59 173.007 582.84 cv
174.354 581.492 174.769 579.344 174.608 576.824 cv
174.706 577.223 174.8 577.637 174.886 578.066 cv
175.628 581.785 175.663 584.617 175.69 587.105 cv
175.761 593.277 176.226 597.313 184.515 602.418 cv
191.093 606.473 197.292 607.508 202.276 608.348 cv
203.636 608.582 204.933 608.797 206.136 609.059 cv
201.581 612.262 195.366 618.184 191.675 628.191 cv
189.319 634.578 187.772 639.707 187.515 644.109 cv
cp
1 1 1 rgb
f
gsave
342.874 457.293 mo
342.874 457.293 350.687 445.418 337.562 432.918 cv
324.437 420.418 316.624 412.293 316.624 412.293 cv
316.624 412.293 327.483 414.559 334.397 412.957 cv
341.312 411.355 357.249 409.48 357.249 409.48 cv
357.249 409.48 361.624 429.168 361.624 436.98 cv
361.624 444.793 359.124 449.793 353.812 453.543 cv
348.499 457.293 342.874 457.293 342.874 457.293 cv
cp
clp
319.753 412.703 mo
319.753 412.703 335.374 418.328 353.085 412.496 cv
353.085 412.496 331.628 424.996 319.753 412.703 cv
cp
.27451 .207843 .145098 rgb
f
319.753 417.754 mo
319.753 417.754 335.374 423.379 353.085 417.547 cv
353.085 417.547 331.628 430.047 319.753 417.754 cv
cp
f
321.003 422.793 mo
321.003 422.793 336.624 428.418 354.335 422.586 cv
354.335 422.586 332.878 435.086 321.003 422.793 cv
cp
f
321.214 427.84 mo
321.214 427.84 336.835 433.465 354.546 427.637 cv
354.546 427.637 333.089 440.137 321.214 427.84 cv
cp
f
321.839 432.887 mo
321.839 432.887 337.46 438.512 355.171 432.684 cv
355.171 432.684 333.714 445.184 321.839 432.887 cv
cp
f
324.026 437.926 mo
324.026 437.926 339.647 443.551 357.358 437.723 cv
357.358 437.723 335.901 450.223 324.026 437.926 cv
cp
f
325.901 442.977 mo
325.901 442.977 341.522 448.602 359.233 442.77 cv
359.233 442.77 337.776 455.27 325.901 442.977 cv
cp
f
325.901 448.016 mo
325.901 448.016 341.522 453.641 359.233 447.809 cv
359.233 447.809 337.776 460.309 325.901 448.016 cv
cp
f
grestore
247.667 639.996 mo
247.667 639.996 246.835 628.328 239.335 624.168 cv
231.835 619.996 230.167 614.996 217.667 614.996 cv
205.167 614.996 199.335 629.996 199.335 629.996 cv
199.335 629.996 207.562 617.918 215.374 617.293 cv
223.187 616.668 229.124 616.668 231.937 620.73 cv
234.749 624.793 234.124 625.73 238.187 626.98 cv
242.249 628.23 247.667 639.996 247.667 639.996 cv
cp
.27451 .207843 .145098 rgb
f
552.671 363.758 mo
553.921 357.918 li
554.011 357.793 564.823 332.09 535.761 296.727 cv
504.745 258.992 460.171 252.535 460.917 244.879 cv
459.081 244.305 li
445.019 197.84 li
449.073 197.129 li
449.319 197.09 455.288 196.063 464.347 196.063 cv
482.519 196.063 516.159 200.348 537.226 229.082 cv
555.245 253.641 593.683 314.539 561.601 349.355 cv
552.671 363.758 li
cp
f
449.698 200.723 mo
449.698 200.723 504.843 191.074 534.292 231.238 cv
563.737 271.387 584.089 319.578 558.925 346.883 cv
558.925 346.883 568.124 321.621 535.999 282.535 cv
503.878 243.457 460.585 231.285 460.585 231.285 cv
449.698 200.723 li
cp
1 1 1 rgb
f
467.901 218.387 mo
467.901 218.387 532.147 229.09 559.987 306.191 cv
559.987 306.191 544.999 232.84 467.901 218.387 cv
cp
.27451 .207843 .145098 rgb
f
170.862 295.215 mo
170.96 293.992 173.44 265.301 198.347 250.582 cv
204.823 246.754 210.378 242.625 215.761 238.629 cv
229.96 228.066 243.37 218.094 270.495 215.301 cv
275.206 214.824 279.644 214.305 283.886 213.816 cv
295.53 212.48 305.589 211.316 315.519 211.316 cv
332.3 211.316 346.327 214.695 362.425 222.613 cv
363.175 222.988 li
363.687 223.641 li
364.003 224.043 366.741 227.762 365.097 233.25 cv
362.761 241.074 352.71 248.043 335.218 253.965 cv
334.011 254.371 li
332.812 253.941 li
332.769 253.926 331.925 253.621 330.394 253.145 cv
323.003 250.828 303.034 242.73 278.862 245.457 cv
220.011 252.117 197.69 264.801 169.683 307.793 cv
170.862 295.215 li
cp
f
334.05 250.504 mo
334.05 250.504 333.147 250.184 331.479 249.668 cv
315.019 244.52 223.581 220.152 174.503 295.488 cv
174.503 295.488 176.64 267.645 200.198 253.73 cv
223.753 239.801 234.464 222.676 270.874 218.926 cv
307.276 215.176 328.159 209.824 360.819 225.887 cv
360.819 225.887 370.464 238.199 334.05 250.504 cv
cp
1 1 1 rgb
f
384.604 218.133 mo
384.198 217.77 343.854 181.512 302.944 181.512 cv
282.62 181.512 256.159 201.141 242.499 218.914 cv
245.312 205.145 li
245.823 203.199 258.374 157.313 301.409 146.832 cv
308.671 145.066 315.597 144.168 321.995 144.168 cv
349.847 144.168 359.792 160.73 360.206 161.434 cv
390.21 213.621 li
384.604 218.133 li
cp
.27451 .207843 .145098 rgb
f
387.05 215.438 mo
387.05 215.438 301.522 137.535 248.831 206.074 cv
248.831 206.074 260.847 160.457 302.276 150.379 cv
343.694 140.293 357.054 163.262 357.054 163.262 cv
387.05 215.438 li
cp
1 1 1 rgb
f
321.065 170.066 mo
321.065 170.066 319.456 126.699 266.987 104.215 cv
266.987 104.215 326.952 114.918 339.804 150.262 cv
321.065 170.066 li
cp
.27451 .207843 .145098 rgb
f
336.343 148.191 mo
335.897 147.801 291.151 109.434 243.554 109.434 cv
223.644 109.434 205.854 116.16 190.683 129.441 cv
180.937 137.977 li
186.144 125.223 li
187.476 123.629 188.851 117.723 198.187 108.355 cv
206.714 99.8125 221.479 87.7148 247.694 87.7148 cv
248.823 87.7227 li
298.101 88.2617 317.331 105.348 341.796 143.473 cv
336.343 148.191 li
cp
f
338.729 145.438 mo
338.729 145.438 252.534 70.4883 188.284 126.699 cv
188.284 126.699 199.526 90.8281 248.784 91.3633 cv
298.046 91.9023 315.714 109.566 338.729 145.438 cv
cp
1 1 1 rgb
f
389.808 107.48 mo
370.394 107.48 368.495 79.5195 368.425 78.3281 cv
368.401 77.957 li
368.452 77.6055 li
368.608 76.5195 372.292 50.9531 381.948 37.4414 cv
388.8 27.8477 401.069 18.1289 411.261 18.1289 cv
413.05 18.1289 414.729 18.4414 416.249 19.0469 cv
417.515 19.5547 418.776 19.7891 419.995 19.8086 cv
429.479 20.0156 434.683 13.207 434.702 13.1875 cv
431.679 21.5938 li
431.562 21.8984 429.042 28.293 423.378 31.293 cv
423.421 34.1133 423.55 39.2813 423.886 46.3516 cv
424.433 57.8828 420.257 80.4961 420.077 81.4531 cv
420.019 81.793 li
419.897 82.1172 li
419.511 83.1055 410.261 106.238 391.03 107.449 cv
390.62 107.469 390.21 107.48 389.808 107.48 cv
cp
.27451 .207843 .145098 rgb
f
372.058 78.1133 mo
372.058 78.1133 375.667 52.4961 384.909 39.5625 cv
392.94 28.3164 406.862 19.2148 414.897 22.4336 cv
422.929 25.6406 428.276 20.2891 428.276 20.2891 cv
428.276 20.2891 425.604 27.2461 419.71 28.8516 cv
419.71 28.8516 419.706 35.2773 420.245 46.5195 cv
420.78 57.7656 416.503 80.7891 416.503 80.7891 cv
416.503 80.7891 407.94 102.73 390.8 103.809 cv
373.667 104.879 372.058 78.1133 372.058 78.1133 cv
cp
1 1 1 rgb
f
372.995 112.898 mo
353.503 112.898 339.464 102.898 338.878 102.48 cv
336.929 101.063 li
337.456 98.7305 li
337.511 98.4648 341.538 72.418 317.198 36.3711 cv
289.335 -4.88281 253.495 5.42188 252.397 5.5625 cv
252.397 5.5625 260.542 1.35156 282.112 .335938 cv
313.382 -1.13672 340.401 19.1211 366.839 53.3398 cv
386.577 78.8867 398.022 101.902 398.456 102.957 cv
399.776 106.191 li
396.616 107.652 li
389.089 111.129 381.144 112.898 372.995 112.898 cv
372.995 112.898 li
cp
.27451 .207843 .145098 rgb
f
395.089 104.344 mo
395.089 104.344 349.569 -6.48047 269.8 3.15625 cv
269.8 3.15625 297.655 .382813 324.96 37.3203 cv
352.265 74.2656 361.835 107.324 361.835 107.324 cv
361.835 107.324 366.171 117.73 395.089 104.344 cv
cp
1 1 1 rgb
f
341.558 144.461 mo
340.831 142.625 li
325.312 103.223 305.757 80.0586 277.425 67.5195 cv
266.55 62.6992 254.745 60.2578 242.327 60.2578 cv
227.487 60.2578 203.917 65.7617 203.808 65.7891 cv
216.261 57.3594 li
231.034 48.9414 244.144 44.5898 259.823 44.5898 cv
285.378 44.5898 313.089 56.625 338.499 78.543 cv
357.538 94.9492 368.147 110.684 368.62 111.363 cv
370.729 114.383 li
367.683 116.453 li
359.784 121.844 361.823 137.879 363.269 143.602 cv
364.706 149.246 li
341.558 144.461 li
cp
.27451 .207843 .145098 rgb
f
365.636 113.445 mo
365.636 113.445 296.573 14.3945 215.722 60.4414 cv
215.722 60.4414 246.237 49.7305 278.901 64.1875 cv
311.562 78.6406 336.663 106.98 350.585 142.324 cv
359.745 144.5 li
359.745 144.5 353.854 121.48 365.636 113.445 cv
cp
1 1 1 rgb
f
413.159 177.324 mo
414.042 175.293 435.233 127.469 483.319 111.074 cv
503.761 104.109 527.249 100.262 549.464 100.262 cv
575.718 100.262 596.987 105.418 607.823 114.395 cv
618.632 123.355 li
604.823 120.777 li
604.741 120.762 595.706 119.098 581.897 119.098 cv
561.741 119.098 531.675 122.574 502.909 139.098 cv
479.737 152.41 473.323 158.113 471.55 160.223 cv
472.694 165.66 li
410.038 184.52 li
413.159 177.324 li
cp
.27451 .207843 .145098 rgb
f
416.503 178.77 mo
416.503 178.77 437.382 130.582 484.495 114.52 cv
531.612 98.457 586.761 101.668 605.495 117.195 cv
605.495 117.195 551.421 107.027 501.093 135.934 cv
450.761 164.852 471.651 162.168 471.651 162.168 cv
416.503 178.77 li
cp
1 1 1 rgb
f
403.917 190.555 mo
385.987 170.191 li
430.362 108.027 li
430.651 107.781 431.093 107.418 431.659 106.949 cv
469.339 75.6836 512.362 59.7656 552.358 59.7656 cv
559.487 59.7656 581.108 63.1211 588.101 64.1875 cv
573.612 67.2148 li
572.761 67.4023 488.222 86.4414 443.554 148.77 cv
410.327 193.777 li
403.917 190.555 li
cp
.27451 .207843 .145098 rgb
f
407.401 191.621 mo
432.026 111.309 li
433.632 110.77 495.206 51.8789 572.835 63.6602 cv
572.835 63.6602 486.644 82.4023 440.597 146.648 cv
407.401 191.621 li
cp
1 1 1 rgb
f
419.71 272.215 mo
419.71 272.215 402.046 264.188 392.405 267.938 cv
392.405 267.938 381.159 249.199 368.315 249.199 cv
368.315 249.199 384.374 239.02 398.296 247.598 cv
412.214 256.152 419.71 272.215 419.71 272.215 cv
cp
.27451 .207843 .145098 rgb
f
347.968 262.82 mo
347.968 262.82 372.058 283.707 352.788 317.43 cv
352.788 317.43 382.237 315.828 389.194 292.273 cv
396.155 268.719 395.62 266.035 395.62 266.035 cv
395.62 266.035 378.437 245.293 365.585 245.828 cv
352.737 246.363 347.968 262.82 347.968 262.82 cv
cp
f
357.847 313.848 mo
370.815 286.191 356.042 267.223 351.233 262.078 cv
352.694 258.34 357.171 249.02 365.702 248.66 cv
365.702 248.66 365.706 248.66 365.714 248.66 cv
375.034 248.66 387.769 261.246 392.761 267.051 cv
392.526 268.59 391.503 274.461 386.472 291.465 cv
381.886 307.012 366.147 312.176 357.847 313.848 cv
cp
f
400.565 237.527 mo
400.565 237.527 396.288 206.473 360.956 200.582 cv
325.612 194.695 306.874 210.223 306.874 210.223 cv
306.874 210.223 333.651 218.262 335.792 243.953 cv
335.792 243.953 354.526 251.988 372.198 250.918 cv
389.862 249.84 400.565 237.527 400.565 237.527 cv
cp
f
265.3 338.699 mo
247.05 321.582 227.327 278.016 242.991 238.848 cv
256.823 204.266 282.198 191.707 295.874 191.707 cv
297.526 191.707 299.038 191.895 300.354 192.254 cv
305.062 193.563 308.694 193.941 316.573 193.941 cv
319.042 193.941 321.89 193.902 325.253 193.863 cv
330.167 193.809 336.198 193.73 343.815 193.73 cv
373.261 193.73 380.101 202.293 381.171 204.012 cv
386.448 212.457 li
376.968 209.402 li
367.729 206.434 358.815 204.918 350.464 204.918 cv
297.476 204.918 278.538 264.16 274.003 282.324 cv
264.046 322.129 272.089 342.012 272.874 348.484 cv
265.3 338.699 li
cp
f
267.792 336.043 mo
267.792 336.043 259.761 324.266 270.468 281.434 cv
281.175 238.59 300.585 182.535 378.085 205.934 cv
378.085 205.934 372.733 197.371 343.815 197.371 cv
314.909 197.371 309.011 198.445 299.386 195.77 cv
289.741 193.094 261.362 202.723 246.378 240.203 cv
231.386 277.684 250.659 319.98 267.792 336.043 cv
cp
1 1 1 rgb
f
467.901 158.426 mo
467.901 158.426 480.214 135.398 519.827 122.559 cv
559.452 109.707 605.495 117.195 605.495 117.195 cv
605.495 117.195 536.425 103.809 486.104 154.137 cv
467.901 158.426 li
cp
.27451 .207843 .145098 rgb
f
412.214 183.055 mo
412.214 183.055 413.71 147.637 455.054 119.332 cv
493.05 93.3281 523.046 82.4023 523.046 82.4023 cv
523.046 82.4023 473.257 101.129 440.597 161.102 cv
412.214 183.055 li
cp
f
394.261 176.129 mo
379.022 162.508 362.878 148.043 358.413 147.441 cv
358.413 147.977 li
354.933 145.566 li
352.46 135.066 349.101 111.973 367.515 104.707 cv
375.065 101.727 382.917 100.215 390.839 100.215 cv
401.069 100.215 409.491 102.703 415.062 104.344 cv
415.921 104.598 li
425.62 107.457 431.929 112.559 432.187 112.77 cv
432.026 115.582 li
432.3 118.316 li
432.124 118.473 414.034 134.957 400.132 174.617 cv
398.323 179.762 li
394.261 176.129 li
cp
f
356.808 144.227 mo
356.808 144.227 348.503 116.129 368.851 108.094 cv
389.194 100.066 405.796 105.418 414.897 108.094 cv
423.995 110.77 429.886 115.594 429.886 115.594 cv
429.886 115.594 412.483 133.25 398.03 174.48 cv
398.03 174.48 363.226 142.625 356.808 144.227 cv
cp
1 1 1 rgb
f
382.839 104.645 mo
384.214 102.313 416.858 47.4258 463.554 23.4688 cv
501.37 4.06641 528.698 0 544.976 0 cv
555.065 0 572.612 6.29297 572.835 6.36328 cv
572.835 6.36328 547.94 5.5625 513.089 22.2227 cv
481.792 37.1875 453.265 66.7148 426.472 106.387 cv
425.464 107.879 li
379.394 110.516 li
382.839 104.645 li
cp
.27451 .207843 .145098 rgb
f
385.987 106.492 mo
385.987 106.492 418.929 50.4609 465.222 26.7109 cv
526.796 -4.87891 559.585 5.15625 559.585 5.15625 cv
559.585 5.15625 493.593 .480469 423.456 104.344 cv
385.987 106.492 li
cp
1 1 1 rgb
f
414.897 108.094 mo
414.897 108.094 457.722 14.3984 555.167 5.29688 cv
555.167 5.29688 503.237 11.1875 464.687 55.625 cv
420.573 106.473 421.854 123.621 421.854 123.621 cv
414.897 108.094 li
cp
.27451 .207843 .145098 rgb
f
394.011 204.473 mo
394.011 204.473 411.147 155.215 446.483 161.102 cv
481.815 166.988 487.71 172.879 487.71 172.879 cv
487.71 172.879 462.55 162.703 442.202 203.395 cv
442.202 203.395 417.573 209.285 394.011 204.473 cv
cp
f
414.167 202.723 mo
408.851 202.723 403.788 202.363 399.073 201.66 cv
403.604 191.27 417.604 164.254 440.675 164.254 cv
442.382 164.254 444.14 164.402 445.882 164.695 cv
456.581 166.473 464.476 168.238 470.261 169.813 cv
461.222 172.84 449.831 180.777 439.745 200.203 cv
435.96 200.965 425.956 202.723 414.167 202.723 cv
cp
1 1 1 rgb
f
554.089 234.238 mo
553.46 233.551 490.663 165.809 444.999 165.809 cv
434.073 165.809 417.437 172.207 406.19 186.258 cv
411.913 174.082 li
412.112 173.316 417.202 155.371 443.729 154.785 cv
464.905 154.316 471.171 152.156 477.808 149.863 cv
480.132 149.07 li
481.288 148.691 482.44 148.223 483.628 147.742 cv
487.354 146.238 491.585 144.527 497.034 144.527 cv
503.046 144.527 509.386 146.66 516.409 151.051 cv
535.011 162.676 562.069 193.809 560.413 231.934 cv
560.034 240.699 li
554.089 234.238 li
cp
.27451 .207843 .145098 rgb
f
415.429 175.02 mo
415.429 175.02 420.999 159.207 443.808 158.426 cv
467.89 157.598 473.253 155.215 481.276 152.535 cv
489.312 149.863 497.354 143.426 514.479 154.137 cv
531.612 164.852 558.382 194.832 556.776 231.777 cv
556.776 231.777 528.437 199.93 493.921 178.367 cv
463.706 159.488 422.671 150.035 415.429 175.02 cv
cp
1 1 1 rgb
f
411.417 173.406 mo
411.483 173.082 421.05 134.598 393.917 119.344 cv
387.128 115.535 380.69 113.848 375.062 113.848 cv
365.507 113.848 360.464 117.496 360.284 117.723 cv
355.729 123.082 li
356.198 122.363 360.819 97.3789 383.128 97.4805 cv
383.972 97.4961 li
384.815 97.5195 385.608 97.5352 386.366 97.5352 cv
392.104 97.5352 395.405 96.7383 398.894 95.8945 cv
402.276 95.0742 405.761 94.2383 411.12 94.2383 cv
411.854 94.2383 412.628 94.2461 413.44 94.2852 cv
427.319 94.8633 433.526 105.398 433.526 115.594 cv
433.526 116.504 433.632 117.586 433.753 118.855 cv
434.565 127.652 436.405 142.051 418.104 165.645 cv
411.417 173.406 li
cp
.27451 .207843 .145098 rgb
f
414.897 165.387 mo
414.897 165.387 423.202 126.465 390.999 110.035 cv
370.585 99.6172 362.249 110.035 362.249 110.035 cv
362.249 110.035 368.085 100.035 383.843 100.059 cv
398.843 100.086 399.901 95.5039 412.753 96.043 cv
425.604 96.582 429.886 108.629 429.886 115.594 cv
429.886 122.559 435.237 139.148 414.897 165.387 cv
cp
1 1 1 rgb
f
392.944 98.9922 mo
392.944 98.9922 420.249 99.5195 420.511 128.434 cv
420.511 128.434 416.233 105.41 386.784 100.059 cv
392.944 98.9922 li
cp
.27451 .207843 .145098 rgb
f
470.44 154.941 mo
470.44 154.941 503.769 150.926 531.472 191.883 cv
531.472 191.883 510.995 158.152 460.405 156.543 cv
470.44 154.941 li
cp
f
423.058 244.488 mo
423.058 244.488 406.327 161.102 388.659 151.465 cv
370.991 141.824 358.007 143.289 339.937 168.184 cv
339.937 168.184 375.136 193.887 385.312 243.68 cv
423.058 244.488 li
cp
f
388.526 242.066 mo
378.987 203.223 353.554 173.98 345.065 167.41 cv
354.511 155.113 362.558 149.59 370.874 149.59 cv
375.479 149.59 380.569 151.199 386.913 154.656 cv
399.534 161.543 416.253 225.555 419.843 242.066 cv
388.526 242.066 li
cp
1 1 1 rgb
f
315.69 218.707 mo
304.698 192.207 302.772 171.48 309.827 155.359 cv
316.862 139.277 327.714 137.41 335.261 137.41 cv
337.05 137.41 338.765 137.527 340.335 137.625 cv
340.714 137.664 li
341.808 137.73 342.792 137.762 343.729 137.762 cv
345.612 137.762 347.347 137.645 349.425 137.496 cv
351.94 137.34 li
354.534 137.176 358.206 137 363.644 137 cv
365.964 137 368.604 137.027 371.62 137.117 cv
382.964 137.41 391.112 147.332 392.94 151.316 cv
394.073 153.785 406.862 175.309 405.792 176.621 cv
388.069 151.688 li
385.495 150.465 li
385.479 150.457 381.624 148.73 375.62 148.73 cv
369.128 148.73 359.128 150.789 348.269 160.594 cv
327.565 179.277 322.714 217.371 322.675 217.754 cv
320.995 231.504 li
315.69 218.707 li
cp
.27451 .207843 .145098 rgb
f
387.05 147.176 mo
387.05 147.176 382.097 140.887 371.526 140.75 cv
361.968 140.633 356.308 140.723 352.163 140.973 cv
347.479 141.258 344.737 141.582 340.472 141.285 cv
332.44 140.75 320.663 139.684 313.167 156.816 cv
305.675 173.953 309.956 195.371 319.05 217.313 cv
319.05 217.313 323.878 177.703 345.823 157.887 cv
367.776 138.082 387.05 147.176 387.05 147.176 cv
cp
1 1 1 rgb
f
317.444 198.582 mo
317.444 198.582 324.948 142.887 355.468 140.75 cv
355.468 140.75 342.073 139.148 338.335 143.434 cv
334.581 147.715 323.339 159.488 317.444 198.582 cv
cp
.27451 .207843 .145098 rgb
f
411.147 199.645 mo
411.147 199.645 405.792 149.324 380.624 141.824 cv
355.468 134.324 326.55 170.738 319.589 211.961 cv
319.589 211.961 336.19 156.277 365.636 148.25 cv
395.089 140.223 411.147 199.645 411.147 199.645 cv
cp
f
310.222 197.496 mo
310.222 197.496 272.073 206.336 260.831 253.316 cv
260.831 253.316 265.647 209.551 302.593 195.098 cv
302.593 195.098 311.425 195.895 310.222 197.496 cv
cp
f
367.421 245.504 mo
367.421 245.504 349.222 264.773 332.628 279.773 cv
316.026 294.762 307.46 317.781 303.71 333.309 cv
303.71 333.309 294.608 295.828 307.991 267.996 cv
321.382 240.152 332.616 236.402 343.335 238.543 cv
354.042 240.691 366.347 242.293 367.421 245.504 cv
cp
f
304.468 320.496 mo
302.956 307.449 302.339 286.285 310.546 269.227 cv
322.761 243.816 332.37 240.879 338.538 240.879 cv
339.878 240.879 341.265 241.023 342.776 241.324 cv
344.769 241.727 346.815 242.105 348.839 242.48 cv
353.503 243.348 360.077 244.566 363.237 245.789 cv
357.964 251.277 343.765 265.887 330.726 277.664 cv
317.042 290.027 309.011 307.066 304.468 320.496 cv
cp
1 1 1 rgb
f
353.503 241.668 mo
353.503 241.668 331.835 245.828 316.421 280.418 cv
316.421 280.418 323.503 251.66 348.503 240.828 cv
373.503 229.996 353.503 241.668 353.503 241.668 cv
cp
.27451 .207843 .145098 rgb
f
367.874 241.668 mo
367.874 241.668 373.499 204.793 396.624 204.168 cv
419.749 203.543 429.749 215.418 429.749 215.418 cv
429.749 215.418 423.237 226.688 423.058 244.488 cv
423.058 244.488 392.874 246.668 367.874 241.668 cv
cp
f
407.003 242.129 mo
397.495 242.129 383.847 241.637 371.198 239.402 cv
372.983 231.277 379.644 207.457 396.702 207 cv
398.378 206.98 li
414.39 206.98 423.179 213.199 426.288 215.973 cv
424.487 219.801 420.862 228.98 420.292 241.805 cv
417.562 241.941 412.831 242.129 407.003 242.129 cv
cp
1 1 1 rgb
f
365.604 247.742 mo
365.604 247.742 376.312 233.816 393.983 237.566 cv
411.651 241.316 425.565 239.707 435.745 238.105 cv
445.913 236.504 449.663 264.332 449.663 273.98 cv
449.663 283.613 446.448 307.168 413.257 347.859 cv
413.257 347.859 424.503 298.602 403.616 265.41 cv
382.737 232.215 365.604 247.742 365.604 247.742 cv
cp
.27451 .207843 .145098 rgb
f
419.858 332.34 mo
421.542 314.5 419.511 285.582 405.378 263.121 cv
398.19 251.699 392.425 244.449 384.53 241.441 cv
385.636 241.277 386.792 241.18 387.991 241.18 cv
389.667 241.18 391.386 241.363 393.101 241.727 cv
400.667 243.34 408.046 244.121 415.647 244.121 cv
423.804 244.121 430.718 243.199 436.405 242.301 cv
436.409 242.301 436.409 242.301 436.409 242.301 cv
440.378 242.301 445.409 260.359 445.409 273.98 cv
445.409 283.113 441.831 302.078 419.858 332.34 cv
cp
1 1 1 rgb
f
412.046 239.793 mo
412.046 239.793 438.3 251.043 429.128 299.793 cv
429.128 299.793 436.624 258.543 406.21 240.621 cv
412.046 239.793 li
cp
.27451 .207843 .145098 rgb
f
460.604 330.191 mo
460.604 329.617 460.351 271.582 439.866 242.898 cv
424.651 221.609 409.479 209.871 397.136 209.871 cv
392.249 209.871 387.831 211.609 383.616 215.184 cv
373.683 223.613 li
377.808 211.258 li
379.511 206.129 386.269 196.434 399.628 196.434 cv
399.972 196.434 400.312 196.441 400.667 196.453 cv
404.315 196.59 li
409.269 196.777 413.542 196.934 417.44 196.934 cv
423.866 196.934 428.862 196.504 434.683 195.449 cv
436.573 195.086 li
440.507 194.344 444.976 193.504 449.808 193.504 cv
463.229 193.504 473.542 200.34 481.351 214.395 cv
496.019 240.789 494.784 293.387 467.214 332.301 cv
460.604 341.637 li
460.604 330.191 li
cp
f
381.261 212.41 mo
381.261 212.41 385.542 199.559 400.534 200.098 cv
415.526 200.633 423.554 201.168 435.331 199.02 cv
447.112 196.883 466.366 192.559 479.753 216.648 cv
493.136 240.75 491.55 291.648 464.245 330.191 cv
464.245 330.191 468.112 272.84 445.999 243.367 cv
411.667 197.613 388.921 195.027 381.261 212.41 cv
cp
1 1 1 rgb
f
431.585 199.559 mo
431.585 199.559 482.987 227.938 472.28 299.137 cv
472.28 299.137 489.948 225.789 431.585 199.559 cv
cp
.27451 .207843 .145098 rgb
f
414.124 766.043 mo
414.124 766.043 408.499 746.043 420.374 744.168 cv
432.249 742.293 434.749 741.043 440.374 738.543 cv
445.999 736.043 455.999 731.043 464.749 737.293 cv
464.749 737.293 460.999 729.793 452.874 730.418 cv
444.749 731.043 443.499 737.293 432.874 738.543 cv
422.249 739.793 401.624 742.918 414.124 766.043 cv
cp
f
192.12 570.984 mo
192.12 570.984 185.374 561.668 181.624 550.418 cv
177.874 539.168 174.71 533.965 168.479 532.809 cv
162.249 531.668 163.792 528.406 169.897 530.348 cv
175.999 532.293 179.124 532.918 181.624 541.668 cv
184.124 550.418 186.624 554.793 186.624 554.793 cv
186.624 554.793 186.362 565.926 192.12 570.984 cv
cp
f
181.624 546.043 mo
181.624 546.043 176.624 529.793 178.499 521.043 cv
180.374 512.293 183.499 497.293 189.749 494.793 cv
195.999 492.293 205.464 497.066 213.542 507.801 cv
221.624 518.543 232.249 529.793 232.249 529.793 cv
232.249 529.793 223.042 511.348 216.081 504.629 cv
209.124 497.918 211.624 494.168 197.249 491.043 cv
182.874 487.918 172.874 512.918 175.999 532.918 cv
181.624 546.043 li
cp
f
194.124 458.543 mo
194.124 458.543 215.374 450.418 226.937 478.23 cv
230.374 476.043 li
230.374 476.043 220.374 442.918 194.124 458.543 cv
cp
f
177.249 466.043 mo
177.249 466.043 203.499 462.293 210.999 487.918 cv
210.999 487.918 210.999 477.918 202.249 470.418 cv
193.499 462.918 184.749 465.418 177.249 466.043 cv
cp
f
269.124 452.918 mo
269.124 452.918 280.999 426.043 295.999 424.793 cv
310.999 423.543 328.499 441.668 328.499 441.668 cv
328.499 441.668 315.999 425.418 299.749 422.918 cv
283.499 420.418 272.874 440.418 269.124 452.918 cv
cp
f
gsave
445.062 580.105 mo
445.062 580.105 452.874 568.23 439.749 555.73 cv
426.624 543.23 416.937 536.043 416.937 536.043 cv
416.937 536.043 429.671 537.371 436.585 535.77 cv
443.499 534.168 459.437 532.293 459.437 532.293 cv
459.437 532.293 463.812 551.98 463.812 559.793 cv
463.812 567.605 461.312 572.605 455.999 576.355 cv
450.687 580.105 445.062 580.105 445.062 580.105 cv
cp
clp
420.378 535.828 mo
420.378 535.828 435.999 541.453 453.71 535.621 cv
453.71 535.621 432.253 548.121 420.378 535.828 cv
cp
f
421.94 540.566 mo
421.94 540.566 437.562 546.191 455.272 540.359 cv
455.272 540.359 433.815 552.859 421.94 540.566 cv
cp
f
423.19 545.605 mo
423.19 545.605 438.812 551.23 456.522 545.398 cv
456.522 545.398 435.065 557.898 423.19 545.605 cv
cp
f
423.401 550.652 mo
423.401 550.652 439.022 556.277 456.733 550.449 cv
456.733 550.449 435.276 562.949 423.401 550.652 cv
cp
f
424.026 555.699 mo
424.026 555.699 439.647 561.324 457.358 555.496 cv
457.358 555.496 435.901 567.996 424.026 555.699 cv
cp
f
426.214 560.738 mo
426.214 560.738 441.835 566.363 459.546 560.535 cv
459.546 560.535 438.089 573.035 426.214 560.738 cv
cp
f
428.089 565.789 mo
428.089 565.789 443.71 571.414 461.421 565.582 cv
461.421 565.582 439.964 578.082 428.089 565.789 cv
cp
f
428.089 570.828 mo
428.089 570.828 443.71 576.453 461.421 570.621 cv
461.421 570.621 439.964 583.121 428.089 570.828 cv
cp
f
grestore
592.249 518.855 mo
592.249 518.855 591.937 535.105 595.999 540.418 cv
600.062 545.73 607.249 555.73 607.249 559.793 cv
607.249 559.793 609.749 554.168 603.812 546.98 cv
597.874 539.793 592.249 526.668 592.249 518.855 cv
cp
f
552.874 467.918 mo
552.874 467.918 560.374 449.168 567.874 445.418 cv
575.374 441.668 579.437 451.043 579.437 451.043 cv
579.437 451.043 575.062 444.793 568.187 448.23 cv
561.312 451.668 552.874 467.918 552.874 467.918 cv
cp
f
541.312 565.418 mo
541.312 565.418 540.374 585.418 551.624 598.855 cv
551.624 598.855 551.987 604.941 547.589 599.082 cv
543.187 593.23 539.437 581.043 541.312 565.418 cv
cp
f
gsave
361.937 541.668 mo
361.937 541.668 364.448 533.641 356.624 517.293 cv
349.749 502.918 345.999 497.918 345.999 497.918 cv
345.999 497.918 347.104 494.176 353.46 497.332 cv
365.999 503.543 385.374 500.73 385.374 500.73 cv
385.374 500.73 380.687 513.543 380.687 521.355 cv
380.687 529.168 378.187 534.168 372.874 537.918 cv
367.562 541.668 361.937 541.668 361.937 541.668 cv
cp
clp
337.331 496.941 mo
337.331 496.941 352.792 502.988 370.651 497.645 cv
370.651 497.645 348.866 509.559 337.331 496.941 cv
cp
f
338.815 502.129 mo
338.815 502.129 354.437 507.754 372.147 501.922 cv
372.147 501.922 350.69 514.422 338.815 502.129 cv
cp
f
340.065 507.168 mo
340.065 507.168 355.687 512.793 373.397 506.961 cv
373.397 506.961 351.94 519.461 340.065 507.168 cv
cp
f
340.276 512.215 mo
340.276 512.215 355.897 517.84 373.608 512.012 cv
373.608 512.012 352.151 524.512 340.276 512.215 cv
cp
f
340.901 517.262 mo
340.901 517.262 356.522 522.887 374.233 517.059 cv
374.233 517.059 352.776 529.559 340.901 517.262 cv
cp
f
343.089 522.301 mo
343.089 522.301 358.71 527.926 376.421 522.098 cv
376.421 522.098 354.964 534.598 343.089 522.301 cv
cp
f
344.964 527.352 mo
344.964 527.352 360.585 532.977 378.296 527.145 cv
378.296 527.145 356.839 539.645 344.964 527.352 cv
cp
f
344.964 532.391 mo
344.964 532.391 360.585 538.016 378.296 532.184 cv
378.296 532.184 356.839 544.684 344.964 532.391 cv
cp
f
grestore
360.585 589.891 mo
360.585 589.891 378.085 598.223 397.253 592.391 cv
397.253 592.391 372.667 605.723 360.585 589.891 cv
cp
f
367.562 597.918 mo
367.562 597.918 373.499 602.605 390.374 598.543 cv
390.374 598.543 384.124 604.168 371.937 602.918 cv
371.937 602.918 367.874 601.668 367.562 597.918 cv
cp
f
368.187 603.543 mo
368.187 603.543 374.124 608.23 390.999 604.168 cv
390.999 604.168 384.749 609.793 372.562 608.543 cv
372.562 608.543 368.499 607.293 368.187 603.543 cv
cp
f
370.374 608.543 mo
370.374 608.543 376.312 613.23 393.187 609.168 cv
393.187 609.168 386.937 614.793 374.749 613.543 cv
374.749 613.543 370.687 612.293 370.374 608.543 cv
cp
f
372.249 613.543 mo
372.249 613.543 378.187 618.23 395.062 614.168 cv
395.062 614.168 388.812 619.793 376.624 618.543 cv
376.624 618.543 372.562 617.293 372.249 613.543 cv
cp
f
373.812 618.543 mo
373.812 618.543 379.749 623.23 396.624 619.168 cv
396.624 619.168 390.374 624.793 378.187 623.543 cv
378.187 623.543 374.124 622.293 373.812 618.543 cv
cp
f
375.687 624.48 mo
375.687 624.48 381.624 629.168 398.499 625.105 cv
398.499 625.105 392.249 630.73 380.062 629.48 cv
380.062 629.48 375.999 628.23 375.687 624.48 cv
cp
f
230.062 746.668 mo
230.062 746.668 243.812 739.793 253.187 742.293 cv
256.624 739.793 li
256.624 739.793 236.937 735.105 230.062 746.668 cv
cp
f
361.624 771.668 mo
361.624 771.668 366.937 791.043 380.999 794.793 cv
380.999 794.793 377.874 795.105 373.187 793.543 cv
368.499 791.98 363.499 792.293 363.499 792.293 cv
363.499 792.293 357.249 785.105 361.624 771.668 cv
cp
f
500.999 770.73 mo
500.999 770.73 503.187 772.293 504.437 763.543 cv
505.687 754.793 510.374 745.105 510.374 745.105 cv
510.374 745.105 507.874 752.918 508.499 756.98 cv
509.124 761.043 513.499 770.73 500.999 770.73 cv
cp
f
175.687 609.168 mo
175.687 609.168 180.269 612.77 182.249 622.918 cv
185.062 637.293 189.124 647.293 189.124 647.293 cv
189.124 647.293 183.812 644.168 182.562 638.855 cv
181.312 633.543 181.937 616.043 175.687 609.168 cv
cp
f
583.503 388.746 mo
583.503 388.746 578.085 392.918 575.585 399.168 cv
573.085 405.418 569.749 412.508 563.085 416.668 cv
563.085 416.668 568.085 416.668 571.835 410.84 cv
575.585 404.996 578.085 400.418 578.085 400.418 cv
571.421 414.168 li
571.421 414.168 575.167 410.418 578.085 404.59 cv
581.003 398.746 580.585 396.668 580.585 402.918 cv
580.585 409.168 582.253 416.668 582.253 416.668 cv
585.081 422.105 li
585.081 422.105 580.585 395.418 587.671 385.84 cv
583.503 388.746 li
cp
f
373.085 240.398 mo
373.085 240.398 376.624 227.293 382.253 217.488 cv
382.253 217.488 379.905 223.23 377.874 231.824 cv
375.843 240.418 376.003 240.398 376.003 240.398 cv
373.085 240.398 li
cp
f
346.835 321.238 mo
346.835 321.238 343.503 327.066 343.503 338.738 cv
343.503 350.398 342.671 359.566 342.671 359.566 cv
342.671 359.566 347.675 347.898 347.253 337.898 cv
346.835 327.898 346.835 321.238 346.835 321.238 cv
cp
f
358.085 319.566 mo
358.085 319.566 366.839 344.148 367.253 346.648 cv
367.671 349.148 367.253 334.988 367.253 334.988 cv
367.253 334.988 360.585 322.91 358.085 319.566 cv
cp
f
377.929 239.305 mo
377.929 239.305 381.468 226.199 387.097 216.395 cv
387.097 216.395 384.749 222.137 382.718 230.73 cv
380.687 239.324 380.847 239.305 380.847 239.305 cv
377.929 239.305 li
cp
f
382.929 238.211 mo
382.929 238.211 386.468 225.105 392.097 215.301 cv
392.097 215.301 389.749 221.043 387.718 229.637 cv
385.687 238.23 385.847 238.211 385.847 238.211 cv
382.929 238.211 li
cp
f
387.46 238.055 mo
387.46 238.055 390.999 224.949 396.628 215.145 cv
396.628 215.145 394.28 220.887 392.249 229.48 cv
390.218 238.074 390.378 238.055 390.378 238.055 cv
387.46 238.055 li
cp
f
392.304 238.68 mo
392.304 238.68 395.843 225.574 401.472 215.77 cv
401.472 215.77 399.124 221.512 397.093 230.105 cv
395.062 238.699 395.222 238.68 395.222 238.68 cv
392.304 238.68 li
cp
f
396.991 239.461 mo
396.991 239.461 400.687 225.105 406.315 215.301 cv
406.315 215.301 403.995 221.043 401.937 229.637 cv
400.218 236.824 399.909 239.461 399.909 239.461 cv
396.991 239.461 li
cp
f
401.366 239.773 mo
401.366 239.773 405.062 225.418 410.69 215.613 cv
410.69 215.613 408.37 221.355 406.312 229.949 cv
404.593 237.137 404.284 239.773 404.284 239.773 cv
401.366 239.773 li
cp
f
405.429 240.867 mo
405.429 240.867 409.124 226.512 414.753 216.707 cv
414.753 216.707 412.433 222.449 410.374 231.043 cv
408.655 238.23 408.347 240.867 408.347 240.867 cv
405.429 240.867 li
cp
f
409.96 241.336 mo
409.96 241.336 413.655 226.98 419.284 217.176 cv
419.284 217.176 416.964 222.918 414.905 231.512 cv
413.187 238.699 412.878 241.336 412.878 241.336 cv
409.96 241.336 li
cp
f
414.96 240.398 mo
414.96 240.398 418.187 229.012 422.718 219.48 cv
422.718 219.48 421.964 221.98 419.905 230.574 cv
418.187 237.762 417.878 240.398 417.878 240.398 cv
414.96 240.398 li
cp
f
523.085 336.668 mo
523.085 336.668 522.667 337.918 521.835 349.59 cv
521.003 361.246 520.062 368.23 520.062 368.23 cv
520.062 368.23 517.253 362.09 517.671 355.418 cv
518.085 348.746 523.085 336.668 523.085 336.668 cv
cp
f
219.753 334.59 mo
219.753 334.59 230.589 337.918 231.003 362.496 cv
230.687 371.668 li
230.687 371.668 229.339 344.168 217.253 336.668 cv
219.753 334.59 li
cp
f
201.003 456.258 mo
201.003 456.258 187.667 463.758 184.335 454.176 cv
181.003 444.59 190.585 427.508 190.585 427.508 cv
190.585 427.508 183.085 450.426 191.421 451.676 cv
199.753 452.926 208.085 455.84 208.085 455.84 cv
201.003 456.258 li
cp
f
254.753 530.426 mo
260.644 536.316 262.253 538.758 264.753 544.176 cv
267.253 549.598 269.753 553.348 269.753 553.348 cv
269.753 553.348 263.503 549.59 258.921 541.676 cv
254.335 533.758 254.753 533.348 251.003 530.008 cv
247.253 526.676 242.671 518.34 242.671 511.676 cv
242.671 511.676 247.675 523.34 254.753 530.426 cv
cp
f
356.835 477.926 mo
356.835 477.926 359.335 467.926 365.585 465.008 cv
371.835 462.098 374.335 455.426 384.335 453.348 cv
394.335 451.258 404.339 450.848 414.753 465.008 cv
414.753 465.008 403.925 452.508 391.003 455.008 cv
378.085 457.508 376.835 462.508 370.585 465.008 cv
364.335 467.508 359.335 471.258 356.835 477.926 cv
cp
f
427.253 516.258 mo
427.253 516.258 436.003 509.598 441.003 502.508 cv
446.003 495.426 455.175 490.426 467.253 495.008 cv
479.335 499.598 492.671 503.758 492.671 503.758 cv
492.671 503.758 476.421 500.008 467.671 497.508 cv
458.921 495.008 450.167 495.426 445.585 501.676 cv
441.003 507.926 436.425 513.348 427.253 516.258 cv
cp
f
503.085 552.508 mo
503.085 552.508 507.249 532.926 519.335 525.848 cv
531.421 518.758 543.085 515.02 550.171 528.348 cv
550.171 528.348 546.003 519.59 533.921 522.926 cv
521.835 526.258 512.249 529.598 503.085 552.508 cv
cp
f
445.585 607.949 mo
445.585 607.949 448.085 585.867 461.835 582.117 cv
475.585 578.367 486.417 577.949 493.085 583.367 cv
499.753 588.777 504.335 600.867 504.335 600.867 cv
504.335 600.867 495.175 582.527 484.753 582.527 cv
474.335 582.527 454.335 581.699 445.585 607.949 cv
cp
f
381.421 671.277 mo
381.421 671.277 384.753 662.117 386.003 652.527 cv
387.253 642.949 401.839 633.367 414.753 634.617 cv
427.671 635.867 437.671 646.699 437.671 646.699 cv
437.671 646.699 422.671 633.785 408.921 637.117 cv
402.522 638.668 395.761 640.965 391.835 647.949 cv
387.323 655.965 385.874 668.824 381.421 671.277 cv
cp
f
274.749 340.418 mo
274.749 340.418 288.917 327.508 297.667 330.418 cv
306.417 333.34 307.671 335.84 314.335 337.918 cv
320.999 339.996 324.749 352.09 324.749 352.09 cv
324.749 352.09 318.503 340.84 309.335 339.59 cv
300.167 338.34 303.081 333.328 293.917 333.746 cv
284.749 334.168 274.749 340.418 274.749 340.418 cv
cp
f
236.835 378.34 mo
236.835 378.34 246.417 375.418 251.417 385.418 cv
256.417 395.418 260.995 394.168 263.917 400.418 cv
266.835 406.668 266.835 410.84 266.835 410.84 cv
266.835 410.84 263.921 402.496 258.085 398.34 cv
252.249 394.168 250.585 389.59 248.499 385.84 cv
246.417 382.09 246.003 378.34 236.835 378.34 cv
cp
f
gsave
429.124 488.121 mo
429.124 488.121 436.937 476.246 423.812 463.746 cv
410.687 451.246 402.874 443.121 402.874 443.121 cv
402.874 443.121 413.733 445.387 420.647 443.785 cv
427.562 442.184 443.499 440.309 443.499 440.309 cv
443.499 440.309 447.874 459.996 447.874 467.809 cv
447.874 475.621 445.374 480.621 440.062 484.371 cv
434.749 488.121 429.124 488.121 429.124 488.121 cv
cp
clp
406.003 443.543 mo
406.003 443.543 421.624 449.168 439.335 443.34 cv
439.335 443.34 417.878 455.84 406.003 443.543 cv
cp
f
406.003 448.582 mo
406.003 448.582 421.624 454.207 439.335 448.379 cv
439.335 448.379 417.878 460.879 406.003 448.582 cv
cp
f
407.253 453.629 mo
407.253 453.629 422.874 459.254 440.585 453.426 cv
440.585 453.426 419.128 465.926 407.253 453.629 cv
cp
f
407.464 458.668 mo
407.464 458.668 423.085 464.293 440.796 458.465 cv
440.796 458.465 419.339 470.965 407.464 458.668 cv
cp
f
408.089 463.719 mo
408.089 463.719 423.71 469.344 441.421 463.512 cv
441.421 463.512 419.964 476.012 408.089 463.719 cv
cp
f
410.276 468.77 mo
410.276 468.77 425.897 474.395 443.608 468.563 cv
443.608 468.563 422.151 481.063 410.276 468.77 cv
cp
f
412.151 473.809 mo
412.151 473.809 427.772 479.434 445.483 473.602 cv
445.483 473.602 424.026 486.102 412.151 473.809 cv
cp
f
412.151 478.855 mo
412.151 478.855 427.772 484.48 445.483 478.652 cv
445.483 478.652 424.026 491.152 412.151 478.855 cv
cp
f
grestore
gsave
504.335 522.09 mo
504.335 522.09 512.784 510.418 498.917 498.746 cv
485.042 487.078 471.62 481.637 471.62 481.637 cv
471.62 481.637 482.604 483.23 489.401 481.207 cv
496.206 479.176 512.003 476.324 512.003 476.324 cv
512.003 476.324 517.577 495.711 518.058 503.504 cv
518.538 511.309 516.351 516.453 511.276 520.516 cv
506.21 524.59 504.335 522.09 504.335 522.09 cv
cp
clp
474.776 481.863 mo
474.776 481.863 490.706 486.512 508.03 479.598 cv
508.03 479.598 487.382 493.395 474.776 481.863 cv
cp
f
475.089 486.895 mo
475.089 486.895 491.026 491.543 508.339 484.637 cv
508.339 484.637 487.694 498.434 475.089 486.895 cv
cp
f
476.64 491.844 mo
476.64 491.844 492.581 496.504 509.897 489.598 cv
509.897 489.598 489.253 503.387 476.64 491.844 cv
cp
f
477.163 496.871 mo
477.163 496.871 493.097 501.52 510.417 494.617 cv
510.417 494.617 489.776 508.418 477.163 496.871 cv
cp
f
478.101 501.871 mo
478.101 501.871 494.034 506.52 511.347 499.617 cv
511.347 499.617 490.702 513.406 478.101 501.871 cv
cp
f
480.589 506.777 mo
480.589 506.777 496.526 511.426 513.847 504.52 cv
513.847 504.52 493.198 518.309 480.589 506.777 cv
cp
f
482.772 511.688 mo
482.772 511.688 498.71 516.348 516.03 509.434 cv
516.03 509.434 495.386 523.23 482.772 511.688 cv
cp
f
483.085 516.727 mo
483.085 516.727 499.019 521.387 516.339 514.473 cv
516.339 514.473 495.69 528.262 483.085 516.727 cv
cp
f
grestore
gsave
299.022 594.16 mo
299.022 594.16 301.534 586.141 293.71 569.785 cv
286.835 555.41 282.249 555.84 282.249 555.84 cv
282.249 555.84 275.479 553.523 281.835 556.676 cv
294.374 562.887 322.46 553.223 322.46 553.223 cv
322.46 553.223 317.772 566.035 317.772 573.848 cv
317.772 581.66 315.272 586.66 309.96 590.41 cv
304.647 594.16 299.022 594.16 299.022 594.16 cv
cp
clp
274.417 549.434 mo
274.417 549.434 289.878 555.488 307.737 550.145 cv
307.737 550.145 285.952 562.051 274.417 549.434 cv
cp
f
275.901 554.617 mo
275.901 554.617 291.522 560.242 309.233 554.41 cv
309.233 554.41 287.776 566.91 275.901 554.617 cv
cp
f
277.151 559.668 mo
277.151 559.668 292.772 565.293 310.483 559.461 cv
310.483 559.461 289.026 571.961 277.151 559.668 cv
cp
f
277.362 564.707 mo
277.362 564.707 292.983 570.332 310.69 564.5 cv
310.69 564.5 289.237 577 277.362 564.707 cv
cp
f
277.987 569.754 mo
277.987 569.754 293.608 575.379 311.315 569.551 cv
311.315 569.551 289.862 582.051 277.987 569.754 cv
cp
f
280.175 574.801 mo
280.175 574.801 295.796 580.426 313.503 574.598 cv
313.503 574.598 292.05 587.098 280.175 574.801 cv
cp
f
282.05 579.84 mo
282.05 579.84 297.671 585.465 315.378 579.637 cv
315.378 579.637 293.925 592.137 282.05 579.84 cv
cp
f
282.05 584.891 mo
282.05 584.891 297.671 590.516 315.378 584.684 cv
315.378 584.684 293.925 597.184 282.05 584.891 cv
cp
f
grestore
256.417 467.801 mo
256.417 467.801 273.917 476.141 293.085 470.301 cv
293.085 470.301 268.495 483.629 256.417 467.801 cv
cp
f
264.229 476.246 mo
264.229 476.246 270.167 480.934 287.042 476.871 cv
287.042 476.871 280.792 482.496 268.604 481.246 cv
268.604 481.246 264.542 479.996 264.229 476.246 cv
cp
f
270.269 481.453 mo
270.269 481.453 276.206 486.141 293.081 482.078 cv
293.081 482.078 286.831 487.703 274.644 486.453 cv
274.644 486.453 270.581 485.203 270.269 481.453 cv
cp
f
274.956 486.453 mo
274.956 486.453 280.894 491.141 297.769 487.078 cv
297.769 487.078 291.519 492.703 279.331 491.453 cv
279.331 491.453 275.269 490.203 274.956 486.453 cv
cp
f
278.292 491.676 mo
278.292 491.676 284.229 496.363 301.104 492.301 cv
301.104 492.301 294.854 497.926 282.667 496.676 cv
282.667 496.676 278.604 495.426 278.292 491.676 cv
cp
f
279.644 496.871 mo
279.644 496.871 285.581 501.559 302.456 497.496 cv
302.456 497.496 296.206 503.121 284.019 501.871 cv
284.019 501.871 279.956 500.621 279.644 496.871 cv
cp
f
gsave
275.362 414.395 mo
275.362 414.395 282.515 400.699 269.843 387.742 cv
257.171 374.785 255.979 367.234 255.979 367.234 cv
255.979 367.234 261.499 371.141 268.464 369.785 cv
275.429 368.434 291.425 367.129 291.425 367.129 cv
291.425 367.129 295.097 386.949 294.819 394.762 cv
294.546 402.566 291.862 407.48 286.425 411.035 cv
280.979 414.598 275.362 414.395 275.362 414.395 cv
cp
clp
253.843 369.02 mo
253.843 369.02 269.253 375.191 287.151 369.996 cv
287.151 369.996 265.269 381.727 253.843 369.02 cv
cp
f
253.659 374.059 mo
253.659 374.059 269.073 380.23 286.976 375.035 cv
286.976 375.035 265.093 386.766 253.659 374.059 cv
cp
f
254.729 379.137 mo
254.729 379.137 270.14 385.32 288.046 380.125 cv
288.046 380.125 266.159 391.855 254.729 379.137 cv
cp
f
254.761 384.199 mo
254.761 384.199 270.171 390.371 288.073 385.176 cv
288.073 385.176 266.19 396.902 254.761 384.199 cv
cp
f
255.206 389.254 mo
255.206 389.254 270.612 395.438 288.519 390.242 cv
288.519 390.242 266.636 401.973 255.206 389.254 cv
cp
f
257.21 394.371 mo
257.21 394.371 272.62 400.555 290.526 395.359 cv
290.526 395.359 268.644 407.09 257.21 394.371 cv
cp
f
258.905 399.488 mo
258.905 399.488 274.315 405.66 292.222 400.465 cv
292.222 400.465 270.335 412.195 258.905 399.488 cv
cp
f
258.726 404.527 mo
258.726 404.527 274.136 410.699 292.046 405.504 cv
292.046 405.504 270.159 417.234 258.726 404.527 cv
cp
f
grestore
gsave
321.835 691.676 mo
321.835 691.676 326.417 675.008 319.843 666.492 cv
308.772 652.137 305.979 645.984 305.979 645.984 cv
305.979 645.984 311.499 649.891 318.464 648.535 cv
325.429 647.184 341.425 645.879 341.425 645.879 cv
341.425 645.879 345.097 665.699 344.819 673.512 cv
344.546 681.316 341.862 686.23 336.425 689.785 cv
330.979 693.348 321.835 691.676 321.835 691.676 cv
cp
clp
303.843 647.77 mo
303.843 647.77 319.253 653.941 337.151 648.746 cv
337.151 648.746 315.269 660.477 303.843 647.77 cv
cp
f
303.659 652.809 mo
303.659 652.809 319.073 658.98 336.976 653.785 cv
336.976 653.785 315.093 665.516 303.659 652.809 cv
cp
f
304.729 657.887 mo
304.729 657.887 320.14 664.07 338.046 658.875 cv
338.046 658.875 316.159 670.605 304.729 657.887 cv
cp
f
304.761 662.949 mo
304.761 662.949 320.171 669.121 338.073 663.926 cv
338.073 663.926 316.19 675.652 304.761 662.949 cv
cp
f
305.206 668.004 mo
305.206 668.004 320.612 674.188 338.519 668.992 cv
338.519 668.992 316.636 680.723 305.206 668.004 cv
cp
f
307.21 673.121 mo
307.21 673.121 322.62 679.305 340.526 674.109 cv
340.526 674.109 318.644 685.84 307.21 673.121 cv
cp
f
308.905 678.238 mo
308.905 678.238 324.315 684.41 342.222 679.215 cv
342.222 679.215 320.335 690.945 308.905 678.238 cv
cp
f
308.726 683.277 mo
308.726 683.277 324.136 689.449 342.046 684.254 cv
342.046 684.254 320.159 695.984 308.726 683.277 cv
cp
f
grestore
gsave
456.417 677.926 mo
456.417 677.926 460.995 661.258 454.425 652.742 cv
443.354 638.387 440.562 632.234 440.562 632.234 cv
440.562 632.234 446.077 636.141 453.046 634.785 cv
460.011 633.434 476.003 632.129 476.003 632.129 cv
476.003 632.129 479.675 651.949 479.397 659.762 cv
479.124 667.566 476.444 672.48 471.003 676.035 cv
465.562 679.598 456.417 677.926 456.417 677.926 cv
cp
clp
438.421 634.02 mo
438.421 634.02 453.831 640.191 471.733 634.996 cv
471.733 634.996 449.847 646.727 438.421 634.02 cv
cp
f
438.241 639.059 mo
438.241 639.059 453.651 645.23 471.558 640.035 cv
471.558 640.035 449.671 651.766 438.241 639.059 cv
cp
f
439.312 644.137 mo
439.312 644.137 454.722 650.32 472.628 645.125 cv
472.628 645.125 450.741 656.855 439.312 644.137 cv
cp
f
439.339 649.199 mo
439.339 649.199 454.749 655.371 472.655 650.176 cv
472.655 650.176 450.769 661.902 439.339 649.199 cv
cp
f
439.784 654.254 mo
439.784 654.254 455.194 660.438 473.101 655.242 cv
473.101 655.242 451.214 666.973 439.784 654.254 cv
cp
f
441.792 659.371 mo
441.792 659.371 457.202 665.555 475.104 660.359 cv
475.104 660.359 453.222 672.09 441.792 659.371 cv
cp
f
443.487 664.488 mo
443.487 664.488 458.894 670.66 476.8 665.465 cv
476.8 665.465 454.917 677.195 443.487 664.488 cv
cp
f
443.304 669.527 mo
443.304 669.527 458.714 675.699 476.624 670.504 cv
476.624 670.504 454.741 682.234 443.304 669.527 cv
cp
f
grestore
gsave
510.995 617.098 mo
510.995 617.098 515.573 600.426 509.003 591.91 cv
497.933 577.559 495.14 571.402 495.14 571.402 cv
495.14 571.402 500.659 575.309 507.628 573.953 cv
514.589 572.605 530.585 571.297 530.585 571.297 cv
530.585 571.297 534.257 591.121 533.979 598.934 cv
533.706 606.738 531.026 611.648 525.585 615.203 cv
520.14 618.77 510.995 617.098 510.995 617.098 cv
cp
clp
493.003 573.191 mo
493.003 573.191 508.413 579.363 526.312 574.168 cv
526.312 574.168 504.429 585.895 493.003 573.191 cv
cp
f
492.823 578.23 mo
492.823 578.23 508.229 584.402 526.136 579.207 cv
526.136 579.207 504.253 590.934 492.823 578.23 cv
cp
f
493.89 583.309 mo
493.89 583.309 509.3 589.488 527.206 584.293 cv
527.206 584.293 505.323 596.023 493.89 583.309 cv
cp
f
493.921 588.367 mo
493.921 588.367 509.331 594.539 527.237 589.344 cv
527.237 589.344 505.351 601.074 493.921 588.367 cv
cp
f
494.362 593.426 mo
494.362 593.426 509.776 599.605 527.679 594.41 cv
527.679 594.41 505.796 606.141 494.362 593.426 cv
cp
f
496.37 598.543 mo
496.37 598.543 511.78 604.723 529.687 599.527 cv
529.687 599.527 507.8 611.258 496.37 598.543 cv
cp
f
498.065 603.66 mo
498.065 603.66 513.476 609.832 531.382 604.637 cv
531.382 604.637 509.495 616.363 498.065 603.66 cv
cp
f
497.886 608.699 mo
497.886 608.699 513.296 614.871 531.206 609.676 cv
531.206 609.676 509.319 621.402 497.886 608.699 cv
cp
f
grestore
gsave
397.667 739.598 mo
397.667 739.598 402.245 722.926 395.675 714.41 cv
384.604 700.059 375.999 694.598 375.999 694.598 cv
375.999 694.598 387.327 697.809 394.296 696.453 cv
401.261 695.105 417.253 693.797 417.253 693.797 cv
417.253 693.797 420.925 713.621 420.647 721.434 cv
420.374 729.238 417.694 734.148 412.253 737.703 cv
406.812 741.27 397.667 739.598 397.667 739.598 cv
cp
clp
379.671 695.691 mo
379.671 695.691 395.081 701.863 412.983 696.668 cv
412.983 696.668 391.097 708.395 379.671 695.691 cv
cp
f
379.491 700.73 mo
379.491 700.73 394.901 706.902 412.808 701.707 cv
412.808 701.707 390.921 713.434 379.491 700.73 cv
cp
f
380.562 705.809 mo
380.562 705.809 395.972 711.988 413.878 706.793 cv
413.878 706.793 391.991 718.523 380.562 705.809 cv
cp
f
380.589 710.867 mo
380.589 710.867 395.999 717.039 413.905 711.844 cv
413.905 711.844 392.019 723.574 380.589 710.867 cv
cp
f
381.034 715.926 mo
381.034 715.926 396.444 722.105 414.351 716.91 cv
414.351 716.91 392.464 728.641 381.034 715.926 cv
cp
f
383.042 721.043 mo
383.042 721.043 398.452 727.223 416.354 722.027 cv
416.354 722.027 394.472 733.758 383.042 721.043 cv
cp
f
384.737 726.16 mo
384.737 726.16 400.144 732.332 418.05 727.137 cv
418.05 727.137 396.167 738.863 384.737 726.16 cv
cp
f
384.554 731.199 mo
384.554 731.199 399.964 737.371 417.874 732.176 cv
417.874 732.176 395.991 743.902 384.554 731.199 cv
cp
f
grestore
263.085 674.598 mo
263.085 674.598 267.253 653.348 280.585 651.27 cv
293.917 649.188 307.249 652.52 312.249 671.27 cv
312.249 671.27 308.917 655.438 292.667 653.348 cv
276.417 651.27 269.335 655.02 263.085 674.598 cv
cp
f
213.499 695.02 mo
213.499 695.02 224.749 702.52 236.835 701.688 cv
248.921 700.848 256.831 702.52 262.667 709.188 cv
262.667 709.188 253.917 702.938 242.249 704.598 cv
230.585 706.27 209.749 702.098 213.499 695.02 cv
cp
f
gsave
264.335 646.27 mo
264.335 646.27 265.167 631.676 258.593 623.152 cv
247.522 608.809 236.835 604.188 236.835 604.188 cv
236.835 604.188 250.249 606.551 257.214 605.203 cv
264.179 603.848 280.175 602.535 280.175 602.535 cv
280.175 602.535 283.847 622.371 283.569 630.176 cv
283.296 637.988 280.612 642.887 275.175 646.453 cv
269.729 650.008 264.335 646.27 264.335 646.27 cv
cp
clp
238.421 604.434 mo
238.421 604.434 253.831 610.605 271.733 605.41 cv
271.733 605.41 249.847 617.137 238.421 604.434 cv
cp
f
242.409 609.473 mo
242.409 609.473 257.823 615.652 275.726 610.449 cv
275.726 610.449 253.843 622.184 242.409 609.473 cv
cp
f
243.479 614.559 mo
243.479 614.559 258.89 620.73 276.796 615.535 cv
276.796 615.535 254.909 627.262 243.479 614.559 cv
cp
f
243.511 619.605 mo
243.511 619.605 258.921 625.777 276.823 620.582 cv
276.823 620.582 254.94 632.313 243.511 619.605 cv
cp
f
243.956 624.676 mo
243.956 624.676 259.362 630.848 277.269 625.652 cv
277.269 625.652 255.386 637.379 243.956 624.676 cv
cp
f
245.96 629.793 mo
245.96 629.793 261.37 635.965 279.276 630.77 cv
279.276 630.77 257.394 642.496 245.96 629.793 cv
cp
f
247.655 634.902 mo
247.655 634.902 263.065 641.074 280.972 635.879 cv
280.972 635.879 259.085 647.605 247.655 634.902 cv
cp
f
247.476 639.941 mo
247.476 639.941 262.886 646.121 280.796 640.918 cv
280.796 640.918 258.909 652.652 247.476 639.941 cv
cp
f
grestore
gsave
199.749 602.52 mo
199.749 602.52 199.597 589.746 195.999 579.598 cv
193.409 572.293 189.749 565.848 189.749 565.848 cv
189.749 565.848 185.663 562.801 192.632 561.453 cv
199.593 560.098 215.589 558.785 215.589 558.785 cv
215.589 558.785 219.261 578.621 218.983 586.426 cv
218.71 594.238 216.03 599.137 210.589 602.703 cv
205.144 606.258 199.749 602.52 199.749 602.52 cv
cp
clp
173.839 560.684 mo
173.839 560.684 189.245 566.855 207.147 561.66 cv
207.147 561.66 185.261 573.387 173.839 560.684 cv
cp
f
177.827 565.723 mo
177.827 565.723 193.237 571.902 211.144 566.699 cv
211.144 566.699 189.257 578.434 177.827 565.723 cv
cp
f
178.894 570.809 mo
178.894 570.809 194.308 576.98 212.21 571.785 cv
212.21 571.785 190.327 583.512 178.894 570.809 cv
cp
f
178.925 575.855 mo
178.925 575.855 194.335 582.027 212.241 576.832 cv
212.241 576.832 190.354 588.563 178.925 575.855 cv
cp
f
179.37 580.926 mo
179.37 580.926 194.78 587.098 212.683 581.902 cv
212.683 581.902 190.8 593.629 179.37 580.926 cv
cp
f
181.378 586.043 mo
181.378 586.043 196.784 592.215 214.69 587.02 cv
214.69 587.02 192.808 598.746 181.378 586.043 cv
cp
f
183.069 591.152 mo
183.069 591.152 198.479 597.324 216.386 592.129 cv
216.386 592.129 194.503 603.855 183.069 591.152 cv
cp
f
182.89 596.191 mo
182.89 596.191 198.3 602.371 216.21 597.168 cv
216.21 597.168 194.323 608.902 182.89 596.191 cv
cp
f
grestore
gsave
210.585 697.098 mo
210.585 697.098 210.347 682.598 208.499 676.688 cv
206.417 670.02 198.499 657.098 198.499 655.438 cv
198.499 655.438 206.534 658.863 213.499 657.52 cv
220.464 656.16 226.425 653.379 226.425 653.379 cv
226.425 653.379 230.097 673.199 229.819 681.012 cv
229.546 688.816 226.862 693.73 221.425 697.285 cv
215.979 700.848 210.585 697.098 210.585 697.098 cv
cp
clp
184.671 655.27 mo
184.671 655.27 200.081 661.441 217.983 656.246 cv
217.983 656.246 196.097 667.977 184.671 655.27 cv
cp
f
188.659 660.309 mo
188.659 660.309 204.073 666.48 221.976 661.285 cv
221.976 661.285 200.093 673.016 188.659 660.309 cv
cp
f
189.729 665.387 mo
189.729 665.387 205.14 671.57 223.046 666.375 cv
223.046 666.375 201.159 678.105 189.729 665.387 cv
cp
f
189.761 670.449 mo
189.761 670.449 205.171 676.621 223.073 671.426 cv
223.073 671.426 201.19 683.152 189.761 670.449 cv
cp
f
190.206 675.504 mo
190.206 675.504 205.612 681.688 223.519 676.492 cv
223.519 676.492 201.636 688.223 190.206 675.504 cv
cp
f
192.21 680.621 mo
192.21 680.621 207.62 686.805 225.526 681.609 cv
225.526 681.609 203.644 693.34 192.21 680.621 cv
cp
f
193.905 685.738 mo
193.905 685.738 209.315 691.91 227.222 686.715 cv
227.222 686.715 205.335 698.445 193.905 685.738 cv
cp
f
193.726 690.777 mo
193.726 690.777 209.136 696.949 227.046 691.754 cv
227.046 691.754 205.159 703.484 193.726 690.777 cv
cp
f
grestore
gsave
278.917 729.188 mo
278.917 729.188 276.597 722.598 274.749 716.688 cv
272.667 710.02 261.835 700.848 261.835 699.188 cv
261.835 699.188 273.198 699.707 280.167 698.348 cv
287.128 697 289.761 697.129 289.761 697.129 cv
289.761 697.129 293.433 716.949 293.151 724.762 cv
292.878 732.566 295.19 728.953 289.749 732.52 cv
284.308 736.074 278.917 729.188 278.917 729.188 cv
cp
clp
248.007 699.02 mo
248.007 699.02 263.417 705.191 281.315 699.996 cv
281.315 699.996 259.433 711.727 248.007 699.02 cv
cp
f
251.995 704.059 mo
251.995 704.059 267.405 710.23 285.312 705.035 cv
285.312 705.035 263.425 716.766 251.995 704.059 cv
cp
f
253.065 709.137 mo
253.065 709.137 268.476 715.32 286.382 710.125 cv
286.382 710.125 264.495 721.855 253.065 709.137 cv
cp
f
253.097 714.199 mo
253.097 714.199 268.503 720.371 286.409 715.176 cv
286.409 715.176 264.526 726.902 253.097 714.199 cv
cp
f
253.538 719.254 mo
253.538 719.254 268.948 725.438 286.854 720.242 cv
286.854 720.242 264.972 731.973 253.538 719.254 cv
cp
f
255.546 724.371 mo
255.546 724.371 270.956 730.555 288.862 725.359 cv
288.862 725.359 266.976 737.09 255.546 724.371 cv
cp
f
257.241 729.488 mo
257.241 729.488 272.651 735.66 290.558 730.465 cv
290.558 730.465 268.671 742.195 257.241 729.488 cv
cp
f
257.058 734.527 mo
257.058 734.527 272.472 740.699 290.378 735.504 cv
290.378 735.504 268.495 747.234 257.058 734.527 cv
cp
f
grestore
235.585 728.348 mo
235.585 728.348 247.671 732.105 260.585 727.938 cv
273.499 723.77 273.917 722.52 282.667 727.52 cv
291.417 732.52 298.499 729.598 302.249 728.77 cv
305.999 727.938 308.081 730.426 305.167 732.52 cv
302.249 734.598 303.917 738.348 306.417 741.27 cv
308.917 744.188 294.058 738.105 278.151 734.684 cv
262.249 731.27 240.171 732.098 235.585 728.348 cv
cp
1 1 1 rgb
f
gsave
226.003 472.496 mo
226.003 472.496 222.253 444.996 218.179 439.41 cv
207.499 424.762 204.315 418.902 204.315 418.902 cv
204.315 418.902 209.831 422.809 216.8 421.453 cv
223.765 420.105 239.761 418.797 239.761 418.797 cv
239.761 418.797 243.433 438.621 243.151 446.434 cv
242.878 454.238 240.198 459.148 234.761 462.703 cv
229.315 466.27 226.003 472.496 226.003 472.496 cv
cp
clp
202.175 420.691 mo
202.175 420.691 217.589 426.863 235.487 421.668 cv
235.487 421.668 213.604 433.395 202.175 420.691 cv
cp
.27451 .207843 .145098 rgb
f
201.995 425.73 mo
201.995 425.73 217.405 431.902 235.312 426.707 cv
235.312 426.707 213.425 438.434 201.995 425.73 cv
cp
f
203.065 430.809 mo
203.065 430.809 218.476 436.988 236.382 431.793 cv
236.382 431.793 214.495 443.523 203.065 430.809 cv
cp
f
203.097 435.867 mo
203.097 435.867 218.503 442.039 236.409 436.844 cv
236.409 436.844 214.526 448.574 203.097 435.867 cv
cp
f
203.538 440.926 mo
203.538 440.926 218.948 447.105 236.854 441.91 cv
236.854 441.91 214.972 453.641 203.538 440.926 cv
cp
f
205.546 446.043 mo
205.546 446.043 220.956 452.223 238.862 447.027 cv
238.862 447.027 216.976 458.758 205.546 446.043 cv
cp
f
207.241 451.16 mo
207.241 451.16 222.651 457.332 240.558 452.137 cv
240.558 452.137 218.671 463.863 207.241 451.16 cv
cp
f
207.058 456.199 mo
207.058 456.199 222.472 462.371 240.378 457.176 cv
240.378 457.176 218.495 468.902 207.058 456.199 cv
cp
f
grestore
gsave
409.335 403.34 mo
409.335 403.34 402.28 383.836 398.085 378.34 cv
391.421 369.59 376.421 358.34 376.421 358.34 cv
376.421 358.34 389.741 361.738 396.706 360.379 cv
403.671 359.031 419.667 357.723 419.667 357.723 cv
419.667 357.723 423.339 377.547 423.062 385.359 cv
422.788 393.16 421.444 391.441 416.003 394.996 cv
410.562 398.563 409.335 403.34 409.335 403.34 cv
cp
clp
377.085 358.777 mo
377.085 358.777 392.495 364.949 410.394 359.754 cv
410.394 359.754 388.511 371.48 377.085 358.777 cv
cp
.27451 .207843 .145098 rgb
f
381.901 364.656 mo
381.901 364.656 397.315 370.828 415.218 365.633 cv
415.218 365.633 393.335 377.363 381.901 364.656 cv
cp
f
382.972 369.734 mo
382.972 369.734 398.382 375.918 416.288 370.723 cv
416.288 370.723 394.401 382.449 382.972 369.734 cv
cp
f
383.003 374.793 mo
383.003 374.793 398.413 380.965 416.315 375.77 cv
416.315 375.77 394.433 387.496 383.003 374.793 cv
cp
f
383.448 379.852 mo
383.448 379.852 398.854 386.035 416.761 380.84 cv
416.761 380.84 394.878 392.566 383.448 379.852 cv
cp
f
385.452 384.969 mo
385.452 384.969 400.862 391.152 418.769 385.957 cv
418.769 385.957 396.886 397.684 385.452 384.969 cv
cp
f
387.147 390.086 mo
387.147 390.086 402.558 396.258 420.464 391.063 cv
420.464 391.063 398.577 402.793 387.147 390.086 cv
cp
f
386.968 395.125 mo
386.968 395.125 402.378 401.297 420.288 396.102 cv
420.288 396.102 398.401 407.832 386.968 395.125 cv
cp
f
grestore
gsave
489.335 431.246 mo
489.335 431.246 487.874 414.207 481.835 410.84 cv
463.921 400.84 448.921 391.246 448.921 391.246 cv
448.921 391.246 469.741 389.645 476.706 388.301 cv
483.671 386.941 499.667 385.633 499.667 385.633 cv
499.667 385.633 503.339 405.465 503.062 413.27 cv
502.788 421.082 501.444 419.355 496.003 422.918 cv
490.562 426.473 489.335 431.246 489.335 431.246 cv
cp
clp
449.284 391.934 mo
449.284 391.934 465.495 395.516 482.308 387.48 cv
482.308 387.48 462.628 402.605 449.284 391.934 cv
cp
.27451 .207843 .145098 rgb
f
455.78 396.793 mo
455.78 396.793 471.952 400.543 488.854 392.684 cv
488.854 392.684 469.011 407.613 455.78 396.793 cv
cp
f
462.671 400.723 mo
462.671 400.723 478.944 403.992 495.604 395.613 cv
495.604 395.613 476.226 411.141 462.671 400.723 cv
cp
f
463.003 402.703 mo
463.003 402.703 478.413 408.875 496.315 403.68 cv
496.315 403.68 474.433 415.41 463.003 402.703 cv
cp
f
463.448 407.77 mo
463.448 407.77 478.854 413.941 496.761 408.746 cv
496.761 408.746 474.878 420.477 463.448 407.77 cv
cp
f
465.452 412.887 mo
465.452 412.887 480.862 419.059 498.769 413.863 cv
498.769 413.863 476.886 425.594 465.452 412.887 cv
cp
f
467.147 417.996 mo
467.147 417.996 482.558 424.168 500.464 418.973 cv
500.464 418.973 478.577 430.699 467.147 417.996 cv
cp
f
466.968 423.035 mo
466.968 423.035 482.378 429.215 500.288 424.012 cv
500.288 424.012 478.401 435.75 466.968 423.035 cv
cp
f
grestore
gsave
541.835 459.168 mo
541.835 459.168 546.104 449.578 532.979 437.078 cv
519.854 424.578 509.335 420.84 509.335 420.84 cv
509.335 420.84 522.901 418.719 529.815 417.117 cv
536.729 415.516 552.667 413.641 552.667 413.641 cv
552.667 413.641 557.042 433.328 557.042 441.141 cv
557.042 448.953 553.815 449.59 548.503 453.34 cv
543.19 457.09 541.835 459.168 541.835 459.168 cv
cp
clp
506.839 417.703 mo
506.839 417.703 522.46 423.328 540.171 417.496 cv
540.171 417.496 518.714 429.996 506.839 417.703 cv
cp
.27451 .207843 .145098 rgb
f
515.171 421.91 mo
515.171 421.91 530.792 427.535 548.499 421.707 cv
548.499 421.707 527.046 434.207 515.171 421.91 cv
cp
f
516.421 426.961 mo
516.421 426.961 532.042 432.586 549.749 426.754 cv
549.749 426.754 528.296 439.254 516.421 426.961 cv
cp
f
516.628 432 mo
516.628 432 532.249 437.625 549.96 431.793 cv
549.96 431.793 528.503 444.293 516.628 432 cv
cp
f
517.253 437.051 mo
517.253 437.051 532.874 442.676 550.585 436.844 cv
550.585 436.844 529.128 449.344 517.253 437.051 cv
cp
f
519.44 442.098 mo
519.44 442.098 535.062 447.723 552.772 441.895 cv
552.772 441.895 531.315 454.395 519.44 442.098 cv
cp
f
521.315 447.137 mo
521.315 447.137 536.937 452.762 554.647 446.934 cv
554.647 446.934 533.19 459.434 521.315 447.137 cv
cp
f
521.315 452.184 mo
521.315 452.184 536.937 457.809 554.647 451.98 cv
554.647 451.98 533.19 464.48 521.315 452.184 cv
cp
f
grestore
gsave
235.687 554.996 mo
235.687 554.996 238.198 546.973 230.374 530.621 cv
223.499 516.246 219.749 511.246 219.749 511.246 cv
219.749 511.246 219.335 512.078 227.21 510.66 cv
240.979 508.172 259.124 514.059 259.124 514.059 cv
259.124 514.059 254.437 526.871 254.437 534.684 cv
254.437 542.496 251.937 547.496 246.624 551.246 cv
241.312 554.996 235.687 554.996 235.687 554.996 cv
cp
clp
211.081 510.27 mo
211.081 510.27 226.542 516.316 244.401 510.973 cv
244.401 510.973 222.616 522.887 211.081 510.27 cv
cp
.27451 .207843 .145098 rgb
f
212.565 515.457 mo
212.565 515.457 228.187 521.082 245.897 515.254 cv
245.897 515.254 224.44 527.754 212.565 515.457 cv
cp
f
213.815 520.496 mo
213.815 520.496 229.437 526.121 247.147 520.293 cv
247.147 520.293 225.69 532.793 213.815 520.496 cv
cp
f
214.026 525.543 mo
214.026 525.543 229.647 531.168 247.358 525.34 cv
247.358 525.34 225.901 537.84 214.026 525.543 cv
cp
f
214.651 530.594 mo
214.651 530.594 230.272 536.219 247.983 530.387 cv
247.983 530.387 226.526 542.887 214.651 530.594 cv
cp
f
216.839 535.633 mo
216.839 535.633 232.46 541.258 250.171 535.426 cv
250.171 535.426 228.714 547.926 216.839 535.633 cv
cp
f
218.714 540.684 mo
218.714 540.684 234.335 546.309 252.046 540.477 cv
252.046 540.477 230.589 552.977 218.714 540.684 cv
cp
f
218.714 545.723 mo
218.714 545.723 234.335 551.348 252.046 545.516 cv
252.046 545.516 230.589 558.016 218.714 545.723 cv
cp
f
grestore
gsave
342.249 795.848 mo
342.249 795.848 346.831 779.176 340.257 770.66 cv
329.19 756.309 316.417 751.27 316.417 751.27 cv
316.417 751.27 331.913 754.059 338.882 752.703 cv
345.843 751.355 361.839 750.047 361.839 750.047 cv
361.839 750.047 365.511 769.871 365.233 777.684 cv
364.96 785.488 362.28 790.398 356.839 793.953 cv
351.394 797.52 342.249 795.848 342.249 795.848 cv
cp
clp
321.757 751.113 mo
321.757 751.113 337.167 757.285 355.065 752.09 cv
355.065 752.09 333.183 763.816 321.757 751.113 cv
cp
.27451 .207843 .145098 rgb
f
324.077 756.98 mo
324.077 756.98 339.487 763.152 357.394 757.957 cv
357.394 757.957 335.507 769.684 324.077 756.98 cv
cp
f
325.144 762.059 mo
325.144 762.059 340.558 768.238 358.46 763.043 cv
358.46 763.043 336.577 774.773 325.144 762.059 cv
cp
f
325.175 767.117 mo
325.175 767.117 340.585 773.289 358.491 768.094 cv
358.491 768.094 336.604 779.824 325.175 767.117 cv
cp
f
325.62 772.176 mo
325.62 772.176 341.03 778.355 358.933 773.16 cv
358.933 773.16 337.05 784.891 325.62 772.176 cv
cp
f
327.628 777.293 mo
327.628 777.293 343.034 783.473 360.94 778.277 cv
360.94 778.277 339.058 790.008 327.628 777.293 cv
cp
f
329.319 782.41 mo
329.319 782.41 344.729 788.582 362.636 783.387 cv
362.636 783.387 340.753 795.113 329.319 782.41 cv
cp
f
329.14 787.449 mo
329.14 787.449 344.55 793.621 362.46 788.426 cv
362.46 788.426 340.573 800.152 329.14 787.449 cv
cp
f
grestore
495.999 712.098 mo
495.999 712.098 496.835 723.348 493.085 730.848 cv
489.335 738.348 480.565 755.426 480.565 755.426 cv
480.565 755.426 481.421 740.438 485.585 735.848 cv
489.749 731.27 494.335 721.688 495.999 712.098 cv
cp
.27451 .207843 .145098 rgb
f
507.667 712.52 mo
507.667 712.52 518.866 727.965 525.14 732.535 cv
525.14 732.535 525.585 726.688 522.249 724.188 cv
518.917 721.688 507.667 712.52 507.667 712.52 cv
cp
f
555.167 663.348 mo
555.167 663.348 553.085 668.77 555.585 676.27 cv
558.085 683.77 557.667 691.688 557.667 691.688 cv
557.667 691.688 562.667 675.848 555.167 663.348 cv
cp
f
329.749 555.02 mo
329.749 555.02 335.167 563.355 338.499 569.188 cv
341.835 575.02 345.511 577.391 345.511 577.391 cv
345.511 577.391 340.167 565.02 329.749 555.02 cv
cp
f
315.167 558.348 mo
315.167 558.348 311.831 564.598 310.167 572.52 cv
308.499 580.438 299.022 594.16 299.022 594.16 cv
299.022 594.16 301.003 584.188 304.335 577.938 cv
307.667 571.688 315.167 558.348 315.167 558.348 cv
cp
f
183.499 521.688 mo
183.499 521.688 183.917 501.676 193.917 501.27 cv
203.917 500.848 213.081 516.27 218.917 522.098 cv
218.917 522.098 213.917 517.105 204.749 510.438 cv
195.585 503.77 188.499 495.855 183.499 521.688 cv
cp
f
297.249 524.168 mo
297.249 524.168 303.265 500.699 329.124 507.418 cv
329.124 507.418 309.429 506.582 307.874 524.168 cv
307.382 529.754 304.124 526.043 299.749 541.668 cv
299.194 543.641 294.124 537.918 297.249 524.168 cv
cp
1 1 1 rgb
f
312.249 429.793 mo
312.249 429.793 292.874 412.918 274.124 446.668 cv
274.124 446.668 271.187 462.441 274.124 457.293 cv
279.124 448.543 287.249 446.043 290.374 439.168 cv
293.499 432.293 293.499 424.793 312.249 429.793 cv
cp
f
367.249 578.543 mo
367.249 578.543 370.999 549.793 404.124 546.668 cv
404.124 546.668 391.624 549.793 390.374 555.418 cv
389.124 561.043 387.249 562.918 382.249 565.418 cv
377.249 567.918 370.999 569.793 367.249 578.543 cv
cp
f
356.624 482.918 mo
356.624 482.918 359.546 468.355 370.585 465.008 cv
381.624 461.668 389.124 444.793 411.624 464.793 cv
411.624 464.793 387.874 459.168 382.249 466.043 cv
376.624 472.918 375.374 471.043 369.749 472.918 cv
364.124 474.793 359.124 476.043 356.624 482.918 cv
cp
f
411.624 197.293 mo
411.624 197.293 420.374 178.543 435.999 171.043 cv
435.999 171.043 420.999 182.078 414.749 198.543 cv
411.147 199.645 li
411.624 197.293 li
cp
.27451 .207843 .145098 rgb
f
405.999 426.043 mo
405.999 426.043 415.687 418.543 421.312 409.793 cv
426.937 401.043 433.499 394.168 445.999 397.293 cv
458.499 400.418 464.749 405.418 464.749 405.418 cv
464.749 405.418 452.175 389.215 434.749 394.793 cv
426.937 397.293 424.124 403.543 416.624 411.668 cv
409.124 419.793 405.999 426.043 405.999 426.043 cv
cp
f
410.062 425.73 mo
410.062 425.73 417.249 415.418 421.312 409.793 cv
425.374 404.168 434.437 392.605 449.749 399.168 cv
449.749 399.168 435.374 401.355 431.937 406.043 cv
428.499 410.73 430.062 414.793 424.437 416.668 cv
418.812 418.543 410.062 425.73 410.062 425.73 cv
cp
1 1 1 rgb
f
427.249 522.605 mo
427.249 522.605 428.812 519.48 435.062 514.168 cv
441.312 508.855 444.437 504.793 446.937 501.668 cv
449.437 498.543 455.374 493.543 469.749 499.168 cv
469.749 499.168 455.374 497.605 451.312 503.23 cv
447.249 508.855 447.249 511.043 440.999 513.23 cv
434.749 515.418 427.249 522.605 427.249 522.605 cv
cp
f
418.296 196.871 mo
418.296 196.871 427.046 178.121 442.671 170.621 cv
442.671 170.621 427.671 181.66 421.421 198.121 cv
417.815 199.227 li
418.296 196.871 li
cp
.27451 .207843 .145098 rgb
f
425.378 195.203 mo
425.378 195.203 434.128 176.453 449.753 168.953 cv
449.753 168.953 434.753 179.996 428.503 196.453 cv
424.901 197.566 li
425.378 195.203 li
cp
f
406.628 196.043 mo
406.628 196.043 415.378 177.293 431.003 169.793 cv
431.003 169.793 416.003 180.828 409.753 197.293 cv
406.151 198.395 li
406.628 196.043 li
cp
f
432.05 194.371 mo
432.05 194.371 440.8 175.621 456.425 168.121 cv
456.425 168.121 441.425 179.168 435.175 195.621 cv
431.573 196.738 li
432.05 194.371 li
cp
f
439.128 193.953 mo
439.128 193.953 447.878 175.203 463.503 167.703 cv
463.503 167.703 448.503 178.746 442.253 195.203 cv
438.651 196.316 li
439.128 193.953 li
cp
f
378.499 337.91 mo
378.499 337.91 380.585 330.418 386.835 328.328 cv
393.085 326.246 399.745 320.828 403.917 317.496 cv
408.085 314.16 417.249 312.91 417.249 312.91 cv
417.249 312.91 408.917 308.328 402.667 314.996 cv
396.417 321.66 393.917 322.078 388.499 324.578 cv
383.085 327.078 378.499 330.828 378.499 337.91 cv
cp
f
497.667 313.328 mo
497.667 313.328 497.245 310.41 496.417 305.41 cv
495.585 300.41 493.917 289.16 505.999 296.66 cv
505.999 296.66 500.995 294.578 498.917 297.496 cv
496.835 300.41 497.667 313.328 497.667 313.328 cv
cp
f
gsave
519.749 377.496 mo
519.749 377.496 514.565 359.988 508.499 356.66 cv
491.835 347.488 488.085 334.988 488.085 334.988 cv
488.085 334.988 500.155 335.895 507.124 334.551 cv
514.085 333.191 530.081 331.883 530.081 331.883 cv
530.081 331.883 533.753 351.715 533.476 359.52 cv
533.202 367.332 531.858 365.605 526.421 369.168 cv
520.976 372.723 519.749 377.496 519.749 377.496 cv
cp
clp
484.163 333.777 mo
484.163 333.777 499.573 339.949 517.476 334.754 cv
517.476 334.754 495.589 346.48 484.163 333.777 cv
cp
f
488.983 339.238 mo
488.983 339.238 504.394 345.41 522.3 340.215 cv
522.3 340.215 500.413 351.941 488.983 339.238 cv
cp
f
493.386 343.902 mo
493.386 343.902 508.8 350.074 526.702 344.879 cv
526.702 344.879 504.819 356.609 493.386 343.902 cv
cp
f
493.417 348.953 mo
493.417 348.953 508.827 355.125 526.733 349.93 cv
526.733 349.93 504.847 361.66 493.417 348.953 cv
cp
f
493.862 354.02 mo
493.862 354.02 509.272 360.191 527.175 354.996 cv
527.175 354.996 505.292 366.727 493.862 354.02 cv
cp
f
495.87 359.137 mo
495.87 359.137 511.276 365.309 529.183 360.113 cv
529.183 360.113 507.3 371.844 495.87 359.137 cv
cp
f
497.562 364.246 mo
497.562 364.246 512.972 370.418 530.878 365.223 cv
530.878 365.223 508.995 376.949 497.562 364.246 cv
cp
f
497.382 369.285 mo
497.382 369.285 512.792 375.465 530.702 370.262 cv
530.702 370.262 508.815 382 497.382 369.285 cv
cp
f
grestore
gsave
559.335 542.09 mo
559.335 542.09 565.702 526.668 551.835 515.008 cv
537.964 503.34 526.417 507.09 526.417 507.09 cv
526.417 507.09 537.604 503.23 544.401 501.207 cv
551.206 499.176 567.003 496.324 567.003 496.324 cv
567.003 496.324 572.577 515.711 573.058 523.504 cv
573.538 531.309 571.351 536.453 566.276 540.516 cv
561.21 544.59 559.335 542.09 559.335 542.09 cv
cp
clp
529.776 501.863 mo
529.776 501.863 545.706 506.512 563.03 499.598 cv
563.03 499.598 542.382 513.395 529.776 501.863 cv
cp
f
530.089 506.895 mo
530.089 506.895 546.026 511.543 563.339 504.637 cv
563.339 504.637 542.694 518.434 530.089 506.895 cv
cp
f
531.64 511.844 mo
531.64 511.844 547.581 516.504 564.897 509.598 cv
564.897 509.598 544.253 523.387 531.64 511.844 cv
cp
f
532.163 516.871 mo
532.163 516.871 548.097 521.52 565.417 514.617 cv
565.417 514.617 544.776 528.418 532.163 516.871 cv
cp
f
533.101 521.871 mo
533.101 521.871 549.034 526.52 566.347 519.617 cv
566.347 519.617 545.702 533.406 533.101 521.871 cv
cp
f
535.589 526.777 mo
535.589 526.777 551.526 531.426 568.847 524.52 cv
568.847 524.52 548.198 538.309 535.589 526.777 cv
cp
f
537.772 531.688 mo
537.772 531.688 553.71 536.348 571.03 529.434 cv
571.03 529.434 550.386 543.23 537.772 531.688 cv
cp
f
538.085 536.727 mo
538.085 536.727 554.019 541.387 571.339 534.473 cv
571.339 534.473 550.69 548.262 538.085 536.727 cv
cp
f
grestore
378.917 378.34 mo
378.917 378.34 362.245 369.168 351.417 379.996 cv
340.585 390.84 335.585 392.09 336.835 400.418 cv
336.835 400.418 340.167 396.258 344.749 394.168 cv
349.335 392.09 350.585 390.008 353.085 385.418 cv
355.585 380.84 364.745 374.59 378.917 378.34 cv
cp
1 1 1 rgb
f
309.335 621.676 mo
309.335 621.676 310.792 614.773 311.937 608.23 cv
313.085 601.676 322.671 591.676 335.585 594.176 cv
348.499 596.676 352.667 606.27 352.667 606.27 cv
352.667 606.27 341.417 596.688 333.499 600.02 cv
325.585 603.348 326.417 605.426 320.167 606.676 cv
313.917 607.926 309.335 621.676 309.335 621.676 cv
cp
f
304.124 629.793 mo
304.124 629.793 311.937 616.98 311.937 608.23 cv
311.937 599.48 320.374 596.043 328.187 593.543 cv
335.999 591.043 342.249 593.543 346.937 597.605 cv
351.624 601.668 358.187 610.73 358.187 610.73 cv
358.187 610.73 353.187 597.605 343.499 594.168 cv
333.812 590.73 330.062 590.418 325.374 592.605 cv
320.687 594.793 313.499 595.105 311.624 601.668 cv
309.749 608.23 308.499 622.918 304.124 629.793 cv
cp
.27451 .207843 .145098 rgb
f
385.585 667.926 mo
385.585 667.926 389.745 658.77 391.417 651.676 cv
393.085 644.598 406.417 632.098 422.667 638.77 cv
422.667 638.77 409.749 637.52 405.585 645.02 cv
403.593 648.602 401.835 654.598 398.499 655.426 cv
395.167 656.27 386.835 664.176 385.585 667.926 cv
cp
1 1 1 rgb
f
446.835 609.598 mo
446.835 609.598 452.253 587.938 468.085 585.02 cv
483.917 582.098 488.921 582.52 494.335 590.02 cv
494.335 590.02 478.921 586.258 474.335 589.598 cv
469.749 592.926 458.503 589.598 446.835 609.598 cv
cp
f
358.085 137.488 mo
358.085 137.488 357.667 126.66 361.417 119.578 cv
361.417 119.578 359.062 130.332 361.835 137.91 cv
358.085 137.488 li
cp
.27451 .207843 .145098 rgb
f
363.526 137.91 mo
363.526 137.91 363.104 127.078 366.854 119.988 cv
366.854 119.988 364.503 130.738 367.276 138.316 cv
363.526 137.91 li
cp
f
368.964 137.488 mo
368.964 137.488 368.542 126.66 372.292 119.566 cv
372.292 119.566 369.94 130.32 372.714 137.898 cv
368.964 137.488 li
cp
f
374.397 137.898 mo
374.397 137.898 373.979 127.066 377.729 119.988 cv
377.729 119.988 375.374 130.738 378.147 138.316 cv
374.397 137.898 li
cp
f
380.081 140.41 mo
380.081 140.41 379.253 127.066 383.003 119.988 cv
383.003 119.988 380.64 135.332 383.413 142.91 cv
380.081 140.41 li
cp
f
385.312 142.078 mo
385.312 142.078 384.479 128.738 388.229 121.66 cv
388.229 121.66 386.288 140.34 389.062 147.918 cv
385.312 142.078 li
cp
f
390.394 151.668 mo
390.394 151.668 389.151 129.988 392.901 122.91 cv
392.901 122.91 390.808 147.918 394.979 157.918 cv
390.394 151.668 li
cp
f
395.835 154.996 mo
395.835 154.996 394.585 133.328 398.335 126.238 cv
398.335 126.238 396.245 151.246 400.413 161.246 cv
395.835 154.996 li
cp
f
400.999 166.668 mo
400.999 166.668 400.175 136.66 403.925 129.578 cv
403.925 129.578 401.835 154.59 406.003 164.59 cv
400.999 166.668 li
cp
f
gsave
528.827 710.184 mo
528.827 710.184 533.409 693.523 526.835 684.996 cv
515.765 670.652 510.171 667.496 510.171 667.496 cv
510.171 667.496 518.491 668.395 525.456 667.051 cv
532.421 665.691 548.417 664.383 548.417 664.383 cv
548.417 664.383 552.089 684.215 551.812 692.02 cv
551.538 699.832 547.694 699.355 542.253 702.918 cv
536.812 706.473 528.827 710.184 528.827 710.184 cv
cp
clp
506.249 666.277 mo
506.249 666.277 521.659 672.449 539.558 667.254 cv
539.558 667.254 517.675 678.98 506.249 666.277 cv
cp
f
510.651 671.316 mo
510.651 671.316 526.065 677.496 543.968 672.293 cv
543.968 672.293 522.085 684.031 510.651 671.316 cv
cp
f
511.722 676.402 mo
511.722 676.402 527.132 682.574 545.038 677.379 cv
545.038 677.379 523.151 689.109 511.722 676.402 cv
cp
f
511.753 681.453 mo
511.753 681.453 527.163 687.625 545.065 682.43 cv
545.065 682.43 523.183 694.16 511.753 681.453 cv
cp
f
512.198 686.52 mo
512.198 686.52 527.604 692.691 545.511 687.496 cv
545.511 687.496 523.628 699.227 512.198 686.52 cv
cp
f
514.202 691.637 mo
514.202 691.637 529.612 697.809 547.519 692.613 cv
547.519 692.613 525.636 704.344 514.202 691.637 cv
cp
f
515.897 696.746 mo
515.897 696.746 531.308 702.918 549.214 697.723 cv
549.214 697.723 527.327 709.449 515.897 696.746 cv
cp
f
515.718 701.785 mo
515.718 701.785 531.128 707.965 549.038 702.762 cv
549.038 702.762 527.151 714.5 515.718 701.785 cv
cp
f
grestore
328.503 728.746 mo
327.956 730.426 330.171 714.16 342.671 708.328 cv
355.171 702.496 371.425 699.59 382.253 714.996 cv
382.253 714.996 373.499 704.578 360.585 705.418 cv
347.671 706.246 334.339 710.84 328.503 728.746 cv
cp
f
470.171 708.328 mo
470.171 708.328 470.175 688.328 478.503 685.828 cv
486.835 683.328 490.175 680.84 492.253 678.746 cv
494.335 676.668 508.503 677.918 513.921 682.918 cv
513.921 682.918 507.671 677.09 500.171 676.246 cv
492.671 675.418 491.003 677.918 484.753 681.246 cv
478.503 684.578 468.921 683.746 470.171 708.328 cv
cp
f
443.554 148.77 mo
443.554 148.77 471.835 114.199 533.71 110.449 cv
533.71 110.449 477.46 120.449 446.835 156.699 cv
434.96 156.699 li
443.554 148.77 li
cp
f
172.46 299.199 mo
172.46 299.199 189.335 262.949 218.71 247.324 cv
218.71 247.324 178.085 261.699 172.46 299.199 cv
cp
f
432.147 114.199 mo
432.147 114.199 454.022 94.8242 471.522 86.6992 cv
471.522 86.6992 446.511 105.254 432.3 118.316 cv
432.147 114.199 li
cp
f
429.96 18.8828 mo
429.96 18.8828 428.526 29.4492 419.71 28.8516 cv
410.897 28.2578 408.085 17.6328 386.835 33.8828 cv
386.835 33.8828 401.835 19.1953 410.272 20.1328 cv
418.71 21.0703 425.897 22.3203 429.96 18.8828 cv
cp
f
431.835 120.762 mo
431.835 120.762 453.71 101.387 471.21 93.2617 cv
471.21 93.2617 446.198 111.816 431.987 124.879 cv
431.835 120.762 li
cp
f
432.46 127.012 mo
432.46 127.012 454.335 107.637 471.835 99.5117 cv
471.835 99.5117 446.823 118.066 432.612 131.129 cv
432.46 127.012 li
cp
f
432.089 135.566 mo
432.089 135.566 452.534 114.684 469.413 105.332 cv
469.413 105.332 445.784 125.621 432.538 139.668 cv
432.089 135.566 li
cp
f
376.21 98.5742 mo
376.21 98.5742 368.085 64.1992 340.585 40.4453 cv
340.585 40.4453 364.96 69.8242 372.46 100.449 cv
376.21 98.5742 li
cp
f
173.806 808.325 mo
173.673 808.228 171.111 806.267 167.814 804.79 cv
166.435 804.185 165.119 803.735 163.916 803.481 cv
162.736 803.228 161.365 802.751 159.724 802.024 cv
157.025 800.825 153.896 799.056 150.587 797.204 cv
147.044 795.22 143.396 793.169 140.08 791.696 cv
138.564 791.009 137.212 790.501 136.072 790.173 cv
132.708 789.224 129.087 787.884 125.583 786.321 cv
121.845 784.653 115.126 781.313 112.166 777.712 cv
111.876 777.36 111.697 777.282 111.626 777.251 cv
111.279 777.095 110.638 777.017 109.884 776.931 cv
108.462 776.774 106.513 776.548 104.228 775.532 cv
102.994 774.978 101.806 774.274 100.603 773.353 cv
98.2124 771.528 95.4937 769.04 92.6147 766.399 cv
88.439 762.595 83.7085 758.259 80.4312 756.54 cv
80.1069 756.384 79.7944 756.228 79.4819 756.079 cv
76.978 754.966 75.9702 755.329 75.9546 755.337 cv
75.9663 755.329 76.1265 755.267 76.4233 754.993 cv
71.0874 755.993 li
71.521 755.415 71.6382 746.782 68.5835 743.47 cv
66.5991 741.321 63.6069 738.403 60.1421 735.032 cv
52.3804 727.478 42.7319 718.063 37.8882 710.864 cv
32.978 703.571 30.7554 696.931 31.1616 690.681 cv
29.853 690.669 28.3491 690.446 26.7515 689.743 cv
24.9116 688.923 23.271 687.544 21.8647 685.681 cv
18.8687 681.685 17.5952 676.634 16.2593 671.274 cv
14.9937 666.216 13.6851 660.981 10.8452 656.978 cv
6.63037 651.032 6.01318 644.692 8.99756 639.392 cv
6.86084 637.505 3.98193 634.134 2.21631 628.024 cv
-.82666 617.438 -.740723 610.571 2.50146 606.399 cv
3.9624 604.524 6.79443 602.321 11.9819 602.485 cv
14.1304 602.556 17.3179 602.415 21.0132 602.251 cv
31.3687 601.774 43.103 601.255 49.4429 604.079 cv
54.6187 606.384 54.8726 610.376 54.7358 611.978 cv
54.1343 619.224 69.0405 659.067 76.7554 674.368 cv
83.1733 687.075 102.658 708.423 114.31 721.177 cv
119.896 727.298 123.357 732.962 126.708 738.454 cv
130.853 745.22 134.763 751.618 142.224 757.688 cv
148.259 762.595 163.88 770.813 185.056 780.267 cv
185.068 780.278 li
200.861 787.329 213.083 792.056 215.494 792.634 cv
217.376 793.079 219.072 793.638 220.537 794.29 cv
224.298 795.97 225.615 797.896 225.99 798.638 cv
228.318 803.142 li
223.357 804.173 li
218.568 805.181 194.33 810.044 187.189 807.876 cv
182.384 806.423 179.486 807.532 179.021 807.876 cv
176.638 810.915 li
173.806 808.325 li
cp
f
222.568 800.396 mo
222.568 800.396 194.861 806.188 188.314 804.196 cv
181.755 802.192 177.275 803.911 176.181 805.298 cv
176.181 805.298 170.666 800.97 164.716 799.712 cv
158.763 798.454 145.791 788.938 137.123 786.47 cv
128.466 784.001 118.158 778.938 115.146 775.267 cv
112.134 771.587 111.111 777.349 101.931 771.853 cv
95.5562 768.04 88.2515 756.282 82.2202 753.118 cv
76.1812 749.978 73.8062 752.165 73.8062 752.165 cv
73.8062 752.165 77.9976 747.985 71.4077 740.853 cv
64.8179 733.728 48.1929 721.813 41.478 711.841 cv
34.7632 701.86 34.4663 692.271 35.4233 688.04 cv
36.3765 683.813 28.5874 691.188 23.3335 684.196 cv
18.0835 677.204 20.271 663.599 13.9858 654.751 cv
7.70459 645.903 13.1421 639.946 14.0522 638.962 cv
14.9624 637.962 8.8374 637.095 5.92334 626.958 cv
2.99756 616.813 1.75928 606.021 11.8647 606.345 cv
21.9624 606.657 51.6382 602.688 50.896 611.665 cv
50.1499 620.642 66.6499 662.896 73.3101 676.11 cv
79.9858 689.321 99.3687 710.532 111.552 723.884 cv
123.744 737.22 125.791 749.302 139.802 760.681 cv
153.798 772.048 207.869 794.782 214.587 796.384 cv
221.318 797.993 222.568 800.396 222.568 800.396 cv
cp
f
149.212 793.767 mo
145.783 792.243 138.22 787.739 135.498 777.126 cv
133.181 777.634 130.205 778.013 127.134 777.661 cv
124.236 777.329 li
123.767 774.458 li
123.037 770.017 120.732 762.7 118.115 761.071 cv
116.982 760.376 115.666 759.692 113.994 758.95 cv
113.236 758.61 110.501 757.454 109.919 757.192 cv
109.919 757.192 109.916 757.192 109.896 757.181 cv
108.021 756.345 104.912 754.946 104.388 751.868 cv
104.228 750.903 104.326 750.005 104.412 749.212 cv
104.626 747.337 104.74 746.294 101.365 744.642 cv
96.2202 742.126 95.064 739.134 94.5796 736.282 cv
94.5483 736.126 94.5327 735.97 94.5093 735.837 cv
94.4468 735.97 li
93.9038 735.759 93.4077 735.563 92.9546 735.356 cv
87.9976 733.149 86.5718 730.345 85.7788 726.274 cv
84.689 720.618 83.3921 719.79 83.1421 719.673 cv
77.4077 720.329 74.4233 719.509 73.8804 719.329 cv
71.521 718.579 li
71.2241 716.11 li
71.1733 715.688 70.8765 712.856 71.5327 709.313 cv
70.189 709.134 68.8608 708.962 68.0835 708.853 cv
66.4585 708.618 65.0562 708.228 63.7905 707.673 cv
59.0249 705.54 57.1343 701.313 54.5015 695.474 cv
54.1304 694.634 53.7241 693.755 53.2905 692.806 cv
51.1187 691.392 49.2866 688.384 47.7437 683.657 cv
46.6187 680.212 46.4233 677.505 46.2632 675.329 cv
46.0483 672.329 45.9546 670.962 43.8218 668.704 cv
40.9155 665.618 40.4546 662.868 40.0757 660.669 cv
39.6655 658.267 39.2944 656.001 34.6226 651.665 cv
26.8452 644.446 24.4468 630.513 26.1343 621.06 cv
26.4038 619.556 26.7866 618.188 27.2515 616.978 cv
26.7085 616.88 26.1226 616.704 25.4858 616.423 cv
24.4702 615.962 23.478 615.329 22.4312 614.653 cv
21.4624 614.028 20.4663 613.376 19.5796 612.993 cv
18.8374 612.661 18.5444 612.661 18.5444 612.661 cv
16.4351 613.938 13.9819 614.134 11.7905 613.157 cv
8.53271 611.704 7.06006 608.22 6.79443 607.532 cv
5.15771 603.97 li
82.6069 593.806 li
82.6108 593.794 89.5483 592.466 95.4312 592.485 cv
97.0288 592.485 98.4507 591.938 100.251 591.267 cv
103.279 590.103 107.056 588.677 112.83 589.497 cv
116.318 589.985 119.9 589.165 123.705 588.274 cv
127.708 587.36 131.833 586.399 136.22 586.931 cv
139.728 587.36 143.572 586.11 146.978 584.985 cv
150.38 583.884 153.076 583.001 155.595 583.665 cv
158.587 584.446 160.248 584.712 162.173 584.282 cv
162.548 584.185 162.744 584.087 163.134 583.884 cv
165.212 582.759 167.017 582.337 171.103 583.181 cv
172.158 583.392 172.513 583.337 172.513 583.337 cv
174.478 582.329 176.201 581.899 179.443 582.556 cv
180.58 582.79 182.33 582.231 184.533 581.517 cv
188.486 580.239 193.9 578.501 201.603 579.497 cv
208.24 580.356 212.353 579.251 216.72 578.103 cv
219.494 577.36 222.341 576.595 225.791 576.353 cv
228.955 576.118 233.064 575.423 237.044 574.759 cv
243.697 573.649 249.99 572.61 254.064 573.142 cv
259.322 573.813 272.736 573.286 284.271 570.552 cv
290.56 569.056 295.126 568.61 299.158 568.196 cv
302.892 567.829 306.416 567.478 310.916 566.345 cv
318.337 564.478 321.462 564.587 324.783 564.692 cv
326.033 564.743 327.373 564.782 329.119 564.704 cv
331.384 564.603 332.455 564.196 333.802 563.665 cv
335.744 562.915 337.947 562.056 342.392 562.368 cv
347.411 562.728 364.298 559.782 370.388 558.626 cv
373.321 558.063 li
374.599 560.759 li
374.88 561.36 377.353 566.813 376.079 573.013 cv
375.458 576.087 376.071 579.274 376.849 583.313 cv
377.142 584.837 377.454 586.45 377.724 588.188 cv
377.841 588.86 379.778 601.579 376.173 608.755 cv
377.067 609.642 377.864 610.759 378.321 612.126 cv
378.798 613.618 379.056 615.962 377.478 618.704 cv
377.04 619.548 377.224 622.923 377.36 625.657 cv
377.771 633.442 378.392 645.212 372.212 659.048 cv
371.384 660.915 li
369.384 661.282 li
369.388 661.274 li
369.399 661.274 368.618 661.489 368.29 662.153 cv
368.06 662.61 367.673 664.017 369.056 667.271 cv
371.849 673.813 li
364.853 672.571 li
363.739 672.388 362.353 672.368 361.47 672.485 cv
362.255 676.751 361.235 679.282 360.204 680.825 cv
360.993 681.985 361.806 683.649 361.38 685.681 cv
361.009 687.446 359.829 688.899 357.86 689.946 cv
355.517 691.228 355.22 692.009 353.97 697.556 cv
353.591 699.196 353.435 700.513 353.259 701.88 cv
352.72 706.243 352.095 711.196 347.653 718.931 cv
344.063 725.161 340.521 729.938 336.775 734.985 cv
334.623 737.896 332.392 740.903 330.087 744.29 cv
323.818 753.501 320.4 757.556 316.009 760.97 cv
314.619 762.056 313.005 763.509 311.15 765.188 cv
308.236 767.837 304.603 771.118 299.951 774.634 cv
297.38 776.579 296.287 777.837 295.56 778.688 cv
293.005 781.595 291.212 781.673 287.119 781.157 cv
285.587 780.954 284.228 780.681 283.001 780.423 cv
282.029 780.22 280.74 779.954 280.119 779.946 cv
280.091 780.005 280.064 780.063 280.029 780.142 cv
278.064 784.556 276.033 789.106 269.611 789.954 cv
268.4 790.11 267.431 790.142 266.556 790.173 cv
264.685 790.228 263.982 790.251 260.935 792.751 cv
259.681 793.774 258.666 794.927 257.681 796.048 cv
254.806 799.329 251.224 803.403 242.892 801.235 cv
239.607 800.396 237.541 801.86 234.443 804.329 cv
232.458 805.915 230.408 807.544 227.798 807.896 cv
225.666 808.169 224.267 808.157 223.033 808.13 cv
221.552 808.103 220.146 808.079 217.06 808.599 cv
210.314 809.751 204.83 809.888 197.498 809.067 cv
196.97 808.978 195.111 808.599 192.681 807.517 cv
190.158 806.384 186.716 804.36 183.943 800.942 cv
180.521 800.212 177.056 799.731 176.091 799.899 cv
173.056 801.071 169.076 800.54 162.572 798.013 cv
161.58 797.622 160.759 797.271 160.052 796.958 cv
159.271 796.606 158.642 796.306 158.099 796.04 cv
157.177 795.603 li
156.626 795.356 156.341 795.239 155.119 795.239 cv
153.462 795.251 151.369 794.731 149.212 793.767 cv
cp
f
10.3882 606.157 mo
83.0562 597.642 li
83.0562 597.642 89.8452 596.321 95.4272 596.333 cv
101.005 596.345 104.111 592.142 112.283 593.306 cv
120.455 594.478 128.103 589.821 135.751 590.759 cv
143.4 591.696 151.291 586.528 154.626 587.388 cv
157.966 588.259 160.263 588.665 163.021 588.032 cv
165.779 587.407 165.212 585.903 170.33 586.958 cv
175.447 588.001 173.552 585.29 178.666 586.333 cv
183.791 587.376 189.376 581.802 201.107 583.313 cv
212.841 584.829 217.736 580.813 226.08 580.188 cv
234.423 579.575 247.708 576.196 253.58 576.958 cv
259.443 577.712 273.373 577.103 285.158 574.302 cv
296.955 571.501 302.08 572.532 311.861 570.083 cv
321.638 567.622 322.966 568.833 329.287 568.56 cv
335.615 568.274 335.501 565.747 342.118 566.228 cv
348.735 566.696 371.122 562.407 371.122 562.407 cv
371.122 562.407 373.349 567.134 372.302 572.243 cv
371.267 577.368 372.86 582.114 373.919 588.782 cv
374.97 595.454 375.017 607.884 370.263 609.485 cv
370.263 609.485 376.962 611.86 374.134 616.79 cv
371.306 621.735 383.7 635.173 368.696 657.485 cv
368.696 657.485 361.278 658.821 365.517 668.782 cv
365.517 668.782 356.313 667.165 357.575 672.681 cv
358.825 678.196 356.208 679.204 355.634 680.501 cv
355.056 681.79 360.11 684.36 356.024 686.567 cv
351.942 688.782 351.415 691.333 350.149 696.978 cv
348.876 702.603 351.509 708.509 345.974 718.142 cv
340.438 727.767 333.212 732.845 326.892 742.134 cv
320.58 751.411 317.439 754.978 313.642 757.923 cv
309.833 760.884 305.115 765.915 297.63 771.567 cv
290.146 777.22 293.474 778.079 287.611 777.329 cv
281.751 776.579 278.361 774.438 276.509 778.579 cv
274.662 782.72 273.392 785.571 269.103 786.138 cv
264.822 786.704 263.869 785.345 258.478 789.771 cv
253.095 794.185 252.201 799.681 243.865 797.517 cv
235.537 795.345 231.576 803.501 227.291 804.079 cv
223.001 804.653 222.458 803.782 216.419 804.798 cv
210.376 805.825 205.314 806.06 197.923 805.239 cv
197.923 805.239 188.943 805.017 184.619 798.743 cv
184.619 798.743 177.205 795.356 174.955 796.216 cv
172.72 797.075 169.521 796.587 163.974 794.419 cv
158.435 792.251 158.525 791.36 155.095 791.392 cv
151.673 791.399 134.587 785.728 138.533 772.212 cv
138.533 772.212 133.173 774.478 127.572 773.833 cv
127.572 773.833 125.494 761.118 120.142 757.798 cv
114.802 754.478 108.541 753.235 108.193 751.216 cv
107.849 749.204 110.447 744.79 103.056 741.177 cv
95.6772 737.571 100.599 734.196 95.8179 732.368 cv
91.0522 730.54 90.2241 728.938 89.564 725.54 cv
88.9038 722.142 87.3374 715.239 82.4155 715.837 cv
77.4976 716.438 76.1304 714.978 76.1304 714.978 cv
76.1304 714.978 73.8257 712.31 76.5327 706.079 cv
76.5327 706.079 70.6733 705.317 68.6304 705.032 cv
61.5952 704.04 60.7905 699.673 56.1694 689.86 cv
56.1694 689.86 53.896 690.083 51.4038 682.454 cv
48.9155 674.837 51.689 671.423 46.6304 666.06 cv
41.5718 660.696 46.8882 657.798 37.2515 648.845 cv
27.5952 639.888 27.4897 617.192 33.9624 614.497 cv
33.9624 614.497 31.1499 611.071 29.0796 612.935 cv
27.0054 614.798 20.939 606.821 16.7437 609.29 cv
12.5366 611.774 10.3882 606.157 10.3882 606.157 cv
cp
1 1 1 rgb
f
243.697 797.907 mo
243.697 797.907 249.505 800.188 253.974 795.044 cv
258.423 789.907 260.103 787.544 266.052 787.407 cv
272.005 787.282 273.853 785.923 276.591 781.88 cv
279.33 777.837 281.521 775.708 290.716 777.329 cv
290.716 777.329 288.251 775.915 284.025 774.954 cv
279.802 774.001 277.775 774.341 276.994 776.79 cv
276.22 779.224 275.248 777.243 273.775 781.243 cv
272.302 785.239 270.783 785.173 267.123 785.728 cv
263.466 786.267 261.923 782.778 258.947 787.337 cv
255.99 791.907 251.798 797.79 243.865 797.517 cv
243.697 797.907 li
cp
f
73.8062 752.165 mo
73.8062 752.165 78.4741 745.876 65.6382 735.024 cv
65.6382 735.024 74.3491 738.454 75.0288 741.087 cv
75.7124 743.716 77.9624 742.845 77.4897 744.954 cv
77.0015 747.075 79.4272 745.825 78.728 747.388 cv
78.0405 748.931 77.0952 748.978 80.9233 749.759 cv
84.7671 750.54 91.3179 756.724 91.3179 756.724 cv
91.3179 756.724 83.7749 749.634 73.8062 752.165 cv
cp
f
74.1772 675.563 mo
74.1772 675.563 33.4624 666.704 54.3921 636.489 cv
54.3921 636.489 67.5366 645.61 71.1187 644.888 cv
74.6968 644.157 73.8804 642.856 77.7671 640.407 cv
81.6538 637.954 81.0562 633.04 81.0562 633.04 cv
81.0562 633.04 83.2046 638.649 80.1812 643.345 cv
77.1499 648.04 76.9429 647.478 77.4507 654.681 cv
77.9429 661.892 70.0913 664.899 74.1772 675.563 cv
cp
.27451 .207843 .145098 rgb
f
163.072 775.251 mo
163.072 775.251 169.173 792.868 184.267 794.478 cv
199.365 796.099 203.611 784.497 203.611 784.497 cv
203.611 784.497 191.755 778.743 192.412 772.056 cv
193.076 765.376 193.244 760.798 196.498 756.665 cv
196.498 756.665 193.724 758.688 190.908 763.95 cv
188.103 769.204 185.814 769.118 184.486 768.978 cv
183.142 768.853 179.861 767.856 174.509 771.509 cv
169.158 775.173 163.072 775.251 163.072 775.251 cv
cp
f
209.494 771.306 mo
209.494 771.306 209.115 766.946 212.826 769.079 cv
216.525 771.188 217.431 770.2 215.759 766.657 cv
214.08 763.118 216.626 764.72 217.419 756.696 cv
218.201 748.665 216.966 743.462 217.876 738.286 cv
218.791 733.11 217.498 728.345 217.595 721.868 cv
217.693 715.407 213.58 695.435 213.626 692.192 cv
213.666 688.962 212.49 648.884 212.49 648.884 cv
212.49 648.884 209.572 690.853 211.462 699.134 cv
213.349 707.415 214.705 721.06 214.74 726.196 cv
214.779 731.321 214.267 745.669 214.091 750.239 cv
213.908 754.821 215.08 759.837 211.794 763.032 cv
208.513 766.216 207.65 768.157 209.494 771.306 cv
cp
f
85.4624 684.321 mo
85.4624 684.321 77.8101 676.11 81.5991 674.212 cv
83.2163 673.415 85.9546 673.845 89.021 674.282 cv
92.0835 674.712 91.1421 670.571 98.439 667.767 cv
105.732 664.978 102.373 662.087 110.013 658.521 cv
117.658 654.938 120.638 653.481 134.021 642.243 cv
147.416 631.009 182.693 607.204 182.693 607.204 cv
182.693 607.204 139.455 640.485 133.802 645.876 cv
128.138 651.255 115.361 659.048 109.873 664.04 cv
104.384 669.028 101.58 670.11 97.9155 673.118 cv
94.2358 676.138 87.6812 678.325 86.6772 681.606 cv
85.6812 684.888 85.4624 684.321 85.4624 684.321 cv
cp
f
120.388 730.149 mo
120.388 730.149 123.759 728.853 123.923 732.649 cv
124.091 736.45 129.736 739.438 129.736 739.438 cv
129.736 739.438 126.982 733.091 130.224 728.95 cv
133.466 724.821 142.802 709.126 142.802 709.126 cv
142.802 709.126 132.474 723.911 127.986 725.618 cv
123.494 727.349 121.732 726.087 120.388 730.149 cv
cp
f
305.658 743.493 mo
305.658 743.493 304.408 739.438 305.947 735.423 cv
309.408 726.399 307.931 713.696 308.333 716.306 cv
309.583 724.626 321.044 721.517 323.501 721.228 cv
325.966 720.923 328.041 720.446 328.041 720.446 cv
328.041 720.446 325.517 728.169 323.099 733.599 cv
320.666 739.028 313.806 742.954 305.658 743.493 cv
cp
f
368.681 597.759 mo
368.681 597.759 362.728 596.274 345.868 593.938 cv
331.263 591.931 320.365 593.423 311.103 591.931 cv
304.337 590.837 250.912 589.876 250.912 589.876 cv
250.912 589.876 301.314 588.493 308.736 588.54 cv
316.162 588.599 323.017 588.86 328.103 587.876 cv
333.201 586.892 338.978 588.54 342.083 589.927 cv
345.185 591.313 350.72 591.763 354.306 591.04 cv
356.091 590.681 357.946 596.079 364.138 592.642 cv
367.196 590.942 368.681 597.759 368.681 597.759 cv
cp
f
185.623 670.853 mo
185.623 670.853 172.224 715.122 168.466 716.243 cv
164.716 717.36 165.783 720.161 163.056 727.321 cv
160.326 734.478 159.935 738.493 159.193 743.274 cv
158.451 748.063 162.119 749.243 159.83 753.325 cv
157.533 757.415 156.708 760.317 160.376 761.478 cv
164.041 762.661 168.986 767.192 168.986 767.192 cv
168.986 767.192 165.466 760.493 163.494 758.677 cv
161.501 756.868 162.927 754.712 163.154 751.087 cv
163.373 747.466 165.447 746.997 164.412 740.954 cv
163.388 734.915 165.298 730.642 166.943 724.868 cv
168.591 719.095 168.205 718.911 170.017 716.938 cv
171.833 714.954 183.533 683.884 185.623 670.853 cv
cp
f
68.7983 669.899 mo
68.7983 669.899 60.3804 666.665 57.5483 660.696 cv
55.8765 657.153 50.6499 655.298 50.6499 655.298 cv
50.6499 655.298 52.939 655.376 53.2905 650.423 cv
53.6421 645.462 57.5757 639.771 57.5757 639.771 cv
57.5757 639.771 55.2437 647.103 57.771 652.884 cv
60.3101 658.665 56.0444 656.774 60.2241 660.954 cv
64.4038 665.149 64.6968 667.61 68.7983 669.899 cv
cp
1 1 1 rgb
f
35.4663 684.81 mo
35.4663 684.81 39.7593 677.114 29.2163 660.071 cv
23.1968 650.345 16.1616 643.618 16.4741 637.712 cv
16.7749 631.802 12.9194 617.524 10.5171 614.575 cv
8.10303 611.646 18.6655 614.028 20.4155 623.649 cv
22.1655 633.274 22.8452 644.274 25.3452 649.118 cv
27.8374 653.95 42.814 674.595 35.4663 684.81 cv
cp
f
35.0718 690.915 mo
35.0718 690.915 32.646 686.255 41.396 690.63 cv
50.1499 695.005 50.2515 698.61 53.3491 699.993 cv
56.4546 701.384 71.5327 707.571 72.3765 718.181 cv
72.3765 718.181 62.8296 707.946 56.0952 706.345 cv
49.3765 704.743 47.6069 703.493 43.1616 701.97 cv
41.2358 701.313 37.9429 696.306 35.2358 701.841 cv
33.3608 705.669 30.4663 691.216 35.0718 690.915 cv
cp
f
118.138 761.243 mo
125.537 770.981 101.111 774.731 113.611 777.993 cv
113.611 777.993 123.83 785.337 133.369 785.876 cv
133.369 785.876 125.65 779.173 125.349 776.724 cv
125.056 774.263 126.548 766.392 118.138 761.243 cv
cp
f
259.533 592.79 mo
259.533 592.79 286.072 596.567 290.861 597.31 cv
295.654 598.052 292.501 595.728 298.455 596.985 cv
304.408 598.235 301.314 592.681 307.732 596.001 cv
314.166 599.341 346.704 605.317 346.704 605.317 cv
346.704 605.317 314.97 600.618 308.63 599.196 cv
302.294 597.759 299.998 601.86 297.884 601.372 cv
295.775 600.903 301.638 604.446 290.076 601.157 cv
278.517 597.868 259.533 592.79 259.533 592.79 cv
cp
.27451 .207843 .145098 rgb
f
33.9624 614.497 mo
33.9624 614.497 26.6577 616.821 28.7437 629.849 cv
30.8374 642.876 30.6187 644.407 35.2983 649.056 cv
39.9702 653.704 42.4312 655.493 42.1851 658.638 cv
41.9429 661.79 42.2163 665.864 45.3608 668.208 cv
48.5015 670.532 48.9351 675.845 49.5288 680.767 cv
50.1187 685.681 52.5132 690.239 55.6577 690.485 cv
58.814 690.728 56.1694 689.86 56.1694 689.86 cv
56.1694 689.86 57.0483 700.407 64.2437 704.079 cv
71.4468 707.767 76.5327 706.079 76.5327 706.079 cv
76.5327 706.079 70.2202 705.813 64.7241 701.97 cv
59.228 698.118 57.4233 691.735 59.4663 686.126 cv
59.4663 686.126 56.8257 688.911 54.1538 686.556 cv
51.4819 684.196 50.5796 681.001 50.3296 675.306 cv
50.0874 669.614 48.5171 667.212 46.6304 666.06 cv
44.7397 664.907 43.9038 658.95 43.728 657.243 cv
43.5679 655.532 40.9468 652.048 37.7124 647.806 cv
34.4819 643.579 31.0327 634.118 30.1304 626.743 cv
29.2358 619.368 33.9624 614.497 33.9624 614.497 cv
cp
1 1 1 rgb
f
83.7983 716.071 mo
83.7983 716.071 87.2163 718.298 88.1147 723.579 cv
89.0132 728.86 91.4429 730.181 94.7632 732.126 cv
98.0835 734.079 93.3101 734.212 94.2085 737.399 cv
95.1069 740.603 99.1499 742.829 101.708 744.899 cv
104.275 746.97 108.123 745.993 107.689 749.056 cv
107.255 752.126 106.017 752.259 112.009 754.478 cv
118.005 756.685 126.048 760.044 126.744 773.61 cv
126.744 773.61 132.748 776.294 138.212 772.915 cv
138.212 772.915 132.509 782.778 140.873 789.056 cv
149.236 795.345 157.666 791.372 157.666 791.372 cv
157.666 791.372 161.087 795.688 166.931 796.673 cv
172.775 797.642 177.591 794.681 184.619 798.743 cv
184.619 798.743 182.185 795.329 177.048 795.368 cv
171.912 795.407 176.169 793.521 171.259 794.118 cv
166.33 794.712 160.482 794.954 157.744 789.079 cv
157.744 789.079 154.251 791.704 148.435 789.106 cv
142.611 786.509 137.083 777.532 139.931 768.56 cv
139.931 768.56 135.833 775.11 127.556 772.817 cv
127.556 772.817 128.955 763.431 120.095 756.696 cv
111.244 749.946 109.037 753.845 109.236 749.743 cv
109.431 745.657 107.158 741.384 102.888 739.478 cv
98.6226 737.571 99.1421 736.399 99.021 733.56 cv
98.896 730.708 96.3218 730.728 92.4897 727.856 cv
88.6499 724.978 93.7983 718.665 83.7983 716.071 cv
cp
.27451 .207843 .145098 rgb
f
167.541 778.794 mo
167.541 778.794 175.173 790.892 183.568 791.54 cv
191.962 792.181 200.486 784.196 200.486 784.196 cv
200.486 784.196 196.462 784.876 193.705 785.513 cv
190.947 786.138 187.255 783.259 185.072 785.376 cv
183.787 786.626 183.748 789.751 179.837 787.388 cv
175.927 785.017 177.423 784.438 175.537 781.743 cv
173.634 779.04 171.048 777.876 167.541 778.794 cv
cp
1 1 1 rgb
f
370.263 609.485 mo
370.263 609.485 377.868 609.888 377.536 613.228 cv
377.212 616.567 373.454 618.509 375.212 623.938 cv
376.981 629.38 382.157 644.673 372.122 658.649 cv
372.122 658.649 363.22 665.103 368.997 673.024 cv
368.997 673.024 359.376 666.196 358.79 672.212 cv
358.79 672.212 357.313 670.845 358.368 668.989 cv
359.423 667.142 362.829 666.813 362.829 666.813 cv
362.829 666.813 359.481 661.821 363.993 658.481 cv
368.505 655.149 367.665 655.462 370.626 651.438 cv
373.587 647.407 377.278 631.841 374.872 626.813 cv
372.454 621.782 372.313 618.462 373.138 615.571 cv
373.962 612.681 370.263 609.485 370.263 609.485 cv
cp
.27451 .207843 .145098 rgb
f
307.158 741.528 mo
307.158 741.528 309.408 738.579 312.185 739.118 cv
314.97 739.665 314.017 739.704 317.177 737.856 cv
320.326 736.001 320.611 731.712 320.611 731.712 cv
320.611 731.712 319.935 733.735 321.345 731.11 cv
322.751 728.481 325.537 722.751 325.537 722.751 cv
325.537 722.751 321.677 725.681 320.642 728.013 cv
319.599 730.337 318.123 733.638 316.486 733.13 cv
314.853 732.622 313.193 729.563 313.193 729.563 cv
313.193 729.563 313.142 730.708 313.333 732.884 cv
313.529 735.063 315.986 736.86 312.771 737.29 cv
309.56 737.72 309.478 735.806 307.158 741.528 cv
cp
1 1 1 rgb
f
36.521 653.091 mo
36.521 653.091 26.6499 644.966 25.478 637.7 cv
24.2944 630.415 23.7983 616.946 15.1851 613.325 cv
15.1851 613.325 18.7007 609.087 22.9233 612.134 cv
27.1577 615.181 31.1226 614.634 31.1226 614.634 cv
31.1226 614.634 27.646 617.72 27.3335 623.626 cv
27.021 629.548 27.0288 638.392 31.103 644.392 cv
35.1655 650.384 36.521 653.091 36.521 653.091 cv
cp
.27451 .207843 .145098 rgb
f
54.0796 691.399 mo
54.0796 691.399 51.0288 699.81 56.3765 704.524 cv
61.7124 709.235 63.0093 708.423 64.3647 713.208 cv
65.7124 717.993 76.2593 721.997 82.2358 719.556 cv
88.2124 717.103 81.4351 718.735 81.4351 718.735 cv
81.4351 718.735 70.7749 720.72 74.0366 708.22 cv
74.0366 708.22 69.1538 709.759 62.3413 704.165 cv
55.5405 698.571 54.2554 693.235 54.0796 691.399 cv
cp
1 1 1 rgb
f
39.4468 696.04 mo
39.4468 696.04 36.3374 700.931 43.5054 710.407 cv
50.6812 719.899 56.8374 725.892 56.8374 725.892 cv
56.8374 725.892 42.2554 707.993 41.7983 699.642 cv
41.7983 699.642 40.7515 695.228 39.4468 696.04 cv
cp
f
45.4429 700.345 mo
45.4429 700.345 45.8999 708.696 57.2671 722.837 cv
57.2671 722.837 50.7983 709.712 49.1929 703.415 cv
47.5796 697.114 45.4429 700.345 45.4429 700.345 cv
cp
f
101.205 599.368 mo
101.205 599.368 106.302 594.204 118.583 596.579 cv
118.583 596.579 107.392 595.923 101.205 599.368 cv
cp
.27451 .207843 .145098 rgb
f
gsave
83.7749 673.181 mo
83.7749 673.181 85.4272 678.618 90.5601 675.767 cv
95.6812 672.907 121.572 653.118 123.439 652.407 cv
125.314 651.696 184.544 605.853 184.544 605.853 cv
184.544 605.853 170.623 606.47 146.794 612.583 cv
122.978 618.696 75.9546 630.915 72.2749 636.399 cv
68.5835 641.88 80.3296 669.771 83.7749 673.181 cv
cp
clp
75.2593 644.587 mo
75.2593 644.587 77.2983 663.571 90.5601 675.767 cv
93.5835 674.731 li
93.5835 674.731 81.7476 665.446 75.2593 644.587 cv
cp
f
80.2358 640.329 mo
80.2358 640.329 82.3179 659.313 95.5991 671.47 cv
98.6421 670.435 li
98.6421 670.435 86.7671 661.165 80.2358 640.329 cv
cp
f
86.4585 638.884 mo
86.4585 638.884 89.0366 657.79 102.654 669.603 cv
105.654 668.481 li
105.654 668.481 93.5444 659.536 86.4585 638.884 cv
cp
f
92.6069 637.407 mo
92.6069 637.407 95.3374 656.306 109.037 668.001 cv
112.029 666.86 li
112.029 666.86 99.8569 658.013 92.6069 637.407 cv
cp
f
98.2788 633.735 mo
98.2788 633.735 101.017 652.642 114.72 664.329 cv
117.697 663.188 li
117.697 663.188 105.521 654.341 98.2788 633.735 cv
cp
f
103.662 629.313 mo
103.662 629.313 106.4 648.22 120.095 659.907 cv
123.087 658.767 li
123.087 658.767 110.916 649.915 103.662 629.313 cv
cp
f
109.416 628.079 mo
109.416 628.079 112.771 646.88 126.853 658.118 cv
129.802 656.88 li
129.802 656.88 117.337 648.431 109.416 628.079 cv
cp
f
115.517 624.985 mo
115.517 624.985 118.255 643.892 131.951 655.579 cv
134.939 654.438 li
134.939 654.438 122.759 645.591 115.517 624.985 cv
cp
f
121.279 623.755 mo
121.279 623.755 124.634 642.556 138.708 653.806 cv
141.658 652.556 li
141.658 652.556 129.197 644.106 121.279 623.755 cv
cp
f
126.369 620.837 mo
126.369 620.837 129.099 639.731 142.802 651.431 cv
145.791 650.278 li
145.791 650.278 133.611 641.438 126.369 620.837 cv
cp
f
132.126 619.595 mo
132.126 619.595 135.486 638.403 149.548 649.642 cv
152.509 648.403 li
152.509 648.403 140.041 639.954 132.126 619.595 cv
cp
f
137.732 616.907 mo
137.732 616.907 140.462 635.806 154.169 647.505 cv
157.158 646.372 li
157.158 646.372 144.978 637.517 137.732 616.907 cv
cp
f
143.494 615.669 mo
143.494 615.669 146.845 634.478 160.923 645.728 cv
163.876 644.47 li
163.876 644.47 151.416 636.032 143.494 615.669 cv
cp
f
149.001 613.884 mo
149.001 613.884 151.748 632.778 165.447 644.47 cv
168.439 643.325 li
168.439 643.325 156.259 634.478 149.001 613.884 cv
cp
f
154.767 612.642 mo
154.767 612.642 158.123 631.438 172.197 642.688 cv
175.15 641.438 li
175.15 641.438 162.685 633.001 154.767 612.642 cv
cp
f
159.962 609.985 mo
159.962 609.985 163.509 628.743 177.697 639.849 cv
180.634 638.571 li
180.634 638.571 168.087 630.259 159.962 609.985 cv
cp
f
165.662 608.501 mo
165.662 608.501 169.818 627.142 184.369 637.778 cv
187.263 636.399 li
187.263 636.399 174.451 628.501 165.662 608.501 cv
cp
f
170.58 605.384 mo
170.58 605.384 174.384 624.095 188.728 634.985 cv
191.65 633.677 li
191.65 633.677 178.994 625.54 170.58 605.384 cv
cp
f
176.263 603.813 mo
176.263 603.813 180.673 622.399 195.376 632.817 cv
198.251 631.411 li
198.251 631.411 185.322 623.696 176.263 603.813 cv
cp
f
grestore
59.0249 626.462 mo
59.0249 626.462 63.7476 624.224 68.4937 622.61 cv
73.2515 621.009 71.228 621.36 77.3804 620.071 cv
83.5444 618.794 84.353 616.978 88.1421 616.813 cv
91.9468 616.646 98.3296 614.837 105.408 614.274 cv
112.49 613.716 135.533 607.251 135.533 607.251 cv
135.533 607.251 117.291 613.376 103.587 616.255 cv
89.8999 619.146 79.6577 622.642 75.8608 622.798 cv
72.0679 622.974 59.0249 626.462 59.0249 626.462 cv
cp
f
gsave
206.611 764.173 mo
206.611 764.173 213.857 764.048 214.572 758.22 cv
215.283 752.376 215.017 721.813 215.548 719.876 cv
215.794 718.962 213.63 703.521 212.642 685.384 cv
211.56 665.642 213.478 641.099 213.478 641.099 cv
213.478 641.099 203.908 654.704 194.806 677.556 cv
185.716 700.407 167.861 745.579 170.13 751.79 cv
172.38 758.001 201.83 764.954 206.611 764.173 cv
cp
clp
178.494 754.196 mo
178.494 754.196 196.982 763.626 214.646 760.11 cv
214.998 756.548 li
214.998 756.548 199.169 761.267 178.494 754.196 cv
cp
f
177.994 747.681 mo
177.994 747.681 196.951 756.829 214.603 753.267 cv
215.095 750.071 li
215.095 750.071 198.681 754.681 177.994 747.681 cv
cp
f
180.486 741.802 mo
180.486 741.802 197.298 750.864 214.857 746.829 cv
215.712 743.743 li
215.712 743.743 201.353 748.259 180.486 741.802 cv
cp
f
182.927 735.97 mo
182.927 735.97 199.802 744.899 217.322 740.728 cv
218.162 737.634 li
218.162 737.634 203.841 742.259 182.927 735.97 cv
cp
f
183.298 729.224 mo
183.298 729.224 200.181 738.149 217.705 733.97 cv
218.533 730.884 li
218.533 730.884 204.212 735.513 183.298 729.224 cv
cp
f
182.9 722.259 mo
182.9 722.259 199.783 731.196 217.306 727.024 cv
218.142 723.931 li
218.142 723.931 203.822 728.56 182.9 722.259 cv
cp
f
185.302 716.88 mo
185.302 716.88 202.462 725.259 219.841 720.513 cv
220.58 717.388 li
220.58 717.388 206.416 722.485 185.302 716.88 cv
cp
f
186.396 710.134 mo
186.396 710.134 203.271 719.067 220.798 714.899 cv
221.642 711.802 li
221.642 711.802 207.314 716.431 186.396 710.134 cv
cp
f
188.791 704.751 mo
188.791 704.751 205.955 713.13 223.337 708.384 cv
224.072 705.267 li
224.072 705.267 209.908 710.368 188.791 704.751 cv
cp
f
189.431 698.931 mo
189.431 698.931 206.318 707.856 223.841 703.688 cv
224.677 700.591 li
224.677 700.591 210.349 705.212 189.431 698.931 cv
cp
f
191.83 693.54 mo
191.83 693.54 209.001 701.907 226.369 697.173 cv
227.107 694.056 li
227.107 694.056 212.943 699.157 191.83 693.54 cv
cp
f
192.962 687.427 mo
192.962 687.427 209.841 696.36 227.369 692.181 cv
228.201 689.095 li
228.201 689.095 213.88 693.728 192.962 687.427 cv
cp
f
195.361 682.056 mo
195.361 682.056 212.529 690.423 229.908 685.681 cv
230.638 682.556 li
230.638 682.556 216.474 687.649 195.361 682.056 cv
cp
f
197.15 676.528 mo
197.15 676.528 214.048 685.454 231.564 681.294 cv
232.4 678.196 li
232.4 678.196 218.072 682.817 197.15 676.528 cv
cp
f
199.56 671.149 mo
199.56 671.149 216.72 679.524 234.103 674.782 cv
234.837 671.665 li
234.837 671.665 220.673 676.751 199.56 671.149 cv
cp
f
200.47 665.384 mo
200.47 665.384 217.724 673.579 235.048 668.665 cv
235.755 665.54 li
235.755 665.54 221.642 670.774 200.47 665.384 cv
cp
f
202.646 659.899 mo
202.646 659.899 220.142 667.532 237.302 662.056 cv
237.904 658.899 li
237.904 658.899 223.974 664.603 202.646 659.899 cv
cp
f
203.005 654.095 mo
203.005 654.095 220.365 662.056 237.626 656.892 cv
238.291 653.755 li
238.291 653.755 224.248 659.196 203.005 654.095 cv
cp
f
205.095 648.587 mo
205.095 648.587 222.708 655.97 239.794 650.251 cv
240.349 647.095 li
240.349 647.095 226.498 652.974 205.095 648.587 cv
cp
f
grestore
293.974 658.103 mo
293.974 658.103 303.857 666.548 308.228 673.454 cv
312.576 680.368 314.595 682.817 319.064 686.673 cv
323.552 690.532 326.369 691.165 328.087 695.657 cv
329.802 700.149 330.556 699.86 333.486 703.024 cv
336.408 706.196 339.243 706.829 340.388 704.251 cv
340.388 704.251 342.685 710.228 338.822 709.126 cv
334.974 708.04 334.275 715.161 334.275 715.161 cv
334.275 715.161 334.517 709.067 330.205 703.423 cv
325.896 697.79 269.333 634.079 269.333 634.079 cv
293.974 658.103 li
cp
f
gsave
330.712 716.868 mo
330.712 716.868 337.318 711.36 334.142 706.423 cv
330.966 701.489 310.115 678.899 309.294 677.087 cv
308.896 676.204 298.044 664.938 285.701 651.618 cv
272.263 637.114 256.873 621.696 256.873 621.696 cv
256.873 621.696 258.72 634.353 266.306 657.751 cv
273.904 681.149 289.017 727.298 294.72 730.649 cv
300.427 733.989 327.529 720.524 330.712 716.868 cv
cp
clp
302.697 727.165 mo
302.697 727.165 322.955 722.603 334.298 708.61 cv
332.291 705.642 li
332.291 705.642 323.123 719.38 302.697 727.165 cv
cp
f
298.142 722.454 mo
298.142 722.454 318.58 717.388 329.892 703.376 cv
328.232 700.61 li
328.232 700.61 318.544 714.634 298.142 722.454 cv
cp
f
296.306 716.321 mo
296.306 716.321 315.033 712.571 325.97 698.259 cv
324.658 695.345 li
324.658 695.345 316.494 707.974 296.306 716.321 cv
cp
f
294.462 710.29 mo
294.462 710.29 313.158 706.384 323.982 691.978 cv
322.65 689.079 li
322.65 689.079 314.58 701.782 294.462 710.29 cv
cp
f
290.439 704.86 mo
290.439 704.86 309.13 700.954 319.958 686.548 cv
318.63 683.638 li
318.63 683.638 310.556 696.353 290.439 704.86 cv
cp
f
285.697 699.759 mo
285.697 699.759 304.388 695.853 315.212 681.438 cv
313.876 678.54 li
313.876 678.54 305.81 691.243 285.697 699.759 cv
cp
f
284.099 694.087 mo
284.099 694.087 302.654 689.575 313.001 674.81 cv
311.587 671.946 li
311.587 671.946 303.931 684.915 284.099 694.087 cv
cp
f
280.638 688.196 mo
280.638 688.196 299.333 684.29 310.15 669.888 cv
308.826 666.978 li
308.826 666.978 300.751 679.681 280.638 688.196 cv
cp
f
279.052 682.524 mo
279.052 682.524 297.607 678.001 307.947 663.259 cv
306.525 660.384 li
306.525 660.384 298.876 673.364 279.052 682.524 cv
cp
f
275.814 677.622 mo
275.814 677.622 294.509 673.716 305.33 659.313 cv
304.001 656.399 li
304.001 656.399 295.931 669.118 275.814 677.622 cv
cp
f
274.228 671.946 mo
274.228 671.946 292.783 667.438 303.126 652.681 cv
301.705 649.821 li
301.705 649.821 294.056 662.79 274.228 671.946 cv
cp
f
271.189 666.528 mo
271.189 666.528 289.892 662.622 300.705 648.22 cv
299.373 645.306 li
299.373 645.306 291.306 658.013 271.189 666.528 cv
cp
f
269.603 660.853 mo
269.603 660.853 288.158 656.345 298.501 641.587 cv
297.083 638.728 li
297.083 638.728 289.431 651.685 269.603 660.853 cv
cp
f
267.458 655.462 mo
267.458 655.462 286.158 651.548 296.982 637.142 cv
295.65 634.235 li
295.65 634.235 287.576 646.946 267.458 655.462 cv
cp
f
265.869 649.782 mo
265.869 649.782 284.427 645.267 294.775 630.532 cv
293.349 627.649 li
293.349 627.649 285.701 640.618 265.869 649.782 cv
cp
f
262.9 644.771 mo
262.9 644.771 281.408 640.063 291.595 625.212 cv
290.146 622.36 li
290.146 622.36 282.615 635.396 262.9 644.771 cv
cp
f
261.064 639.165 mo
261.064 639.165 279.408 633.86 289.115 618.688 cv
287.564 615.876 li
287.564 615.876 280.478 629.157 261.064 639.165 cv
cp
f
257.642 634.47 mo
257.642 634.47 276.08 629.497 286.056 614.509 cv
284.572 611.673 li
284.572 611.673 277.236 624.821 257.642 634.47 cv
cp
f
255.736 628.892 mo
255.736 628.892 273.994 623.325 283.486 608.001 cv
281.904 605.228 li
281.904 605.228 274.998 618.61 255.736 628.892 cv
cp
f
grestore
196.939 582.231 mo
196.939 582.231 201.572 583.677 203.533 584.86 cv
205.478 586.04 207.205 584.946 208.181 584.146 cv
209.166 583.345 209.478 587.517 212.646 584.575 cv
215.81 581.665 216.873 582.751 219.494 581.743 cv
222.111 580.747 225.048 578.337 226.916 577.622 cv
228.787 576.907 196.939 582.231 196.939 582.231 cv
cp
f
199.634 588.704 mo
199.634 588.704 204.087 594.72 212.49 589.79 cv
212.49 589.79 205.955 591.216 199.634 588.704 cv
cp
f
gsave
368.657 604.341 mo
368.657 604.341 369.368 595.767 363.61 594.563 cv
357.864 593.353 327.158 592.368 325.271 591.685 cv
324.376 591.345 308.736 591.177 290.583 590.618 cv
270.814 590.024 249.033 590.173 249.033 590.173 cv
249.033 590.173 259.349 597.739 281.341 608.735 cv
303.33 619.751 346.833 641.372 353.216 639.653 cv
359.599 637.923 369.021 609.173 368.657 604.341 cv
cp
clp
356.329 631.517 mo
356.329 631.517 367.298 613.892 365.282 595.993 cv
361.755 595.337 li
361.755 595.337 365.118 611.517 356.329 631.517 cv
cp
f
349.782 631.462 mo
349.782 631.462 360.509 613.345 358.462 595.454 cv
355.321 594.692 li
355.321 594.692 358.528 611.438 349.782 631.462 cv
cp
f
344.13 628.47 mo
344.13 628.47 354.595 612.493 352.067 594.665 cv
349.071 593.54 li
349.071 593.54 352.333 608.228 344.13 628.47 cv
cp
f
338.533 625.552 mo
338.533 625.552 348.864 609.485 346.196 591.673 cv
343.192 590.579 li
343.192 590.579 346.575 605.239 338.533 625.552 cv
cp
f
331.837 624.603 mo
331.837 624.603 342.173 608.54 339.509 590.728 cv
336.494 589.626 li
336.494 589.626 339.892 604.302 331.837 624.603 cv
cp
f
324.876 624.407 mo
324.876 624.407 335.208 608.345 332.541 590.532 cv
329.529 589.438 li
329.529 589.438 332.919 604.106 324.876 624.407 cv
cp
f
319.712 621.556 mo
319.712 621.556 329.521 605.161 326.259 587.454 cv
323.232 586.45 li
323.232 586.45 327.087 601.001 319.712 621.556 cv
cp
f
313.087 619.899 mo
313.087 619.899 323.416 603.845 320.755 586.021 cv
317.748 584.915 li
317.748 584.915 321.13 599.595 313.087 619.899 cv
cp
f
307.927 617.048 mo
307.927 617.048 317.728 600.657 314.482 582.946 cv
311.443 581.946 li
311.443 581.946 315.306 596.489 307.927 617.048 cv
cp
f
302.173 615.915 mo
302.173 615.915 312.509 599.849 309.841 582.036 cv
306.83 580.942 li
306.83 580.942 310.228 595.61 302.173 615.915 cv
cp
f
297.017 613.071 mo
297.017 613.071 306.814 596.673 303.572 578.962 cv
300.537 577.962 li
300.537 577.962 304.392 592.505 297.017 613.071 cv
cp
f
291.025 611.423 mo
291.025 611.423 301.357 595.356 298.681 577.544 cv
295.677 576.45 li
295.677 576.45 299.064 591.118 291.025 611.423 cv
cp
f
285.861 608.579 mo
285.861 608.579 295.666 592.192 292.416 574.47 cv
289.373 573.462 li
289.373 573.462 293.24 588.024 285.861 608.579 cv
cp
f
280.521 606.321 mo
280.521 606.321 290.853 590.259 288.189 572.438 cv
285.185 571.333 li
285.185 571.333 288.564 586.001 280.521 606.321 cv
cp
f
275.361 603.47 mo
275.361 603.47 285.158 587.075 281.912 569.353 cv
278.876 568.353 li
278.876 568.353 282.736 582.907 275.361 603.47 cv
cp
f
269.701 602.063 mo
269.701 602.063 279.333 585.571 275.908 567.896 cv
272.849 566.931 li
272.849 566.931 276.865 581.431 269.701 602.063 cv
cp
f
264.423 599.438 mo
264.423 599.438 273.509 582.642 269.505 565.071 cv
266.423 564.212 li
266.423 564.212 270.908 578.579 264.423 599.438 cv
cp
f
258.662 598.579 mo
258.662 598.579 268.064 581.958 264.384 564.329 cv
261.318 563.403 li
261.318 563.403 265.541 577.845 258.662 598.579 cv
cp
f
253.349 596.032 mo
253.349 596.032 262.205 579.106 257.955 561.595 cv
254.853 560.774 li
254.853 560.774 259.548 575.083 253.349 596.032 cv
cp
f
grestore
268.017 632.876 mo
268.017 632.876 264.08 629.876 261.962 627.688 cv
259.837 625.493 261.267 626.45 256.56 623.103 cv
251.845 619.759 247.908 616.763 246.826 615.032 cv
245.728 613.306 238.853 606.821 238.853 606.821 cv
238.853 606.821 246.943 611.997 249.349 614.927 cv
251.759 617.868 252.244 616.54 254.986 618.989 cv
260.525 623.938 266.439 631.548 268.017 632.876 cv
cp
f
190.103 631.282 mo
190.103 631.282 179.974 647.7 179.283 649.263 cv
178.591 650.806 176.599 653.181 170.72 662.181 cv
164.841 671.196 158.31 682.7 156.876 684.86 cv
155.458 687.009 135.794 719.966 135.794 719.966 cv
135.794 719.966 167.513 671.462 171.794 664.993 cv
176.072 658.521 186.845 639.603 189.009 636.853 cv
191.169 634.087 191.005 630.298 190.103 631.282 cv
cp
f
236.58 639.485 mo
236.58 639.485 248.005 661.579 252.501 668.618 cv
252.783 669.056 253.064 669.497 253.333 669.927 cv
257.373 676.345 258.556 676.353 260.439 681.321 cv
263.353 689.017 296.146 747.778 296.146 747.778 cv
296.146 747.778 257.591 680.024 252.849 674.497 cv
248.115 668.97 246.587 663.735 243.466 660.853 cv
240.341 657.985 244.232 657.524 241.341 653.13 cv
238.455 648.735 236.58 639.485 236.58 639.485 cv
cp
f
269.716 613.774 mo
269.716 613.774 305.212 635.356 310.857 638.337 cv
316.509 641.321 324.267 644.79 325.9 647.388 cv
327.537 649.978 337.201 652.181 339.048 653.704 cv
346.286 659.743 359.142 660.813 359.142 660.813 cv
359.142 660.813 345.739 655.759 339.056 650.923 cv
332.376 646.079 327.333 645.22 321.251 641.118 cv
315.173 637.009 295.232 626.087 269.716 613.774 cv
cp
f
100.818 703.11 mo
100.818 703.11 101.517 698.774 97.3062 698.454 cv
95.6226 698.325 99.3335 692.532 103.65 692.595 cv
107.966 692.661 111.759 692.485 115.388 688.532 cv
119.025 684.556 130.771 674.907 130.771 674.907 cv
130.771 674.907 115.505 691.06 112.619 694.743 cv
109.736 698.415 107.38 702.321 100.818 703.11 cv
cp
f
146.064 659.407 mo
146.064 659.407 153.619 652.231 155.974 648.325 cv
158.349 644.407 159.345 644.235 161.443 643.001 cv
163.552 641.774 163.314 642.29 165.97 639.134 cv
168.623 635.97 170.611 634.985 173.291 632.466 cv
175.966 629.946 201.287 603.228 201.287 603.228 cv
201.287 603.228 159.208 653.649 146.064 659.407 cv
cp
f
237.263 703.196 mo
237.263 703.196 236.048 701.735 233.529 696.255 cv
231.005 690.806 234.076 691.548 231.244 687.485 cv
228.396 683.431 230.677 680.415 228.724 676.438 cv
226.775 672.466 226.494 668.931 225.033 664.556 cv
223.572 660.181 221.837 646.685 221.837 646.685 cv
237.263 703.196 li
cp
f
255.935 770.474 mo
255.935 770.474 257.837 764.81 261.267 764.782 cv
264.685 764.759 265.068 764.614 266.931 763.899 cv
268.798 763.181 272.162 764.681 268.884 762.298 cv
265.615 759.907 266.416 760.876 258.376 753.884 cv
250.33 746.88 248.736 736.548 247.048 732.688 cv
245.361 728.845 237.97 710.649 237.97 710.649 cv
237.97 710.649 246.525 735.259 248.126 739.993 cv
249.736 744.743 251.966 752.259 253.025 756.149 cv
254.08 760.024 255.033 758.587 254.134 761.294 cv
253.236 764.001 255.935 770.474 255.935 770.474 cv
cp
f
53.396 703.892 mo
53.396 703.892 54.2437 712.415 58.7437 719.536 cv
58.7437 719.536 55.478 710.173 57.064 705.063 cv
58.6421 699.946 53.396 703.892 53.396 703.892 cv
cp
1 1 1 rgb
f
60.3101 705.591 mo
60.3101 705.591 58.5327 714.798 64.0874 722.165 cv
64.0874 722.165 62.4468 712.817 64.189 709.419 cv
65.9468 706.001 60.3101 705.591 60.3101 705.591 cv
cp
f
122.119 770.384 mo
122.119 770.384 116.794 772.427 110.134 768.063 cv
103.474 763.696 94.3218 756.579 94.3218 756.579 cv
94.3218 756.579 107.228 764.673 111.966 766.556 cv
116.712 768.442 119.783 766.782 119.783 766.782 cv
119.783 766.782 124.228 768.298 122.119 770.384 cv
cp
f
119.841 772.399 mo
119.841 772.399 113.087 772.173 105.779 768.454 cv
98.3882 764.681 90.7788 758.259 90.7788 758.259 cv
90.7788 758.259 99.2476 766.931 106.962 771.54 cv
114.677 776.138 117.478 775.063 117.478 775.063 cv
119.841 772.399 li
cp
f
119.271 761.673 mo
119.271 761.673 115.236 762.896 99.8218 754.165 cv
99.8218 754.165 107.888 762.173 120.458 764.759 cv
120.458 764.759 120.845 762.837 119.271 761.673 cv
cp
f
20.8687 664.712 mo
20.8687 664.712 21.4155 685.892 28.3765 688.54 cv
30.939 688.532 li
30.939 688.532 21.9819 677.31 20.8687 664.712 cv
cp
f
23.5835 665.931 mo
23.5835 665.931 24.9976 680.993 34.7827 689.302 cv
44.5601 697.622 43.8569 694.517 43.8569 694.517 cv
43.8569 694.517 28.9429 686.235 22.978 661.009 cv
23.5835 665.931 li
cp
f
67.2046 713.079 mo
67.2046 713.079 64.7905 718.509 67.8218 726.841 cv
67.8218 726.841 67.8882 719.899 69.5718 715.071 cv
71.2671 710.239 67.2046 713.079 67.2046 713.079 cv
cp
.27451 .207843 .145098 rgb
f
73.3687 716.997 mo
73.3687 716.997 70.9312 721.958 70.4194 729.868 cv
70.4194 729.868 73.3491 720.708 76.0015 718.403 cv
78.6616 716.099 73.3687 716.997 73.3687 716.997 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 13.0.0
%%For: (\700\753\745\752\761\745\751 \717\756\757\756\742) ()
%%Title: (vintage_pineapple_bw.eps)
%%CreationDate: 3/12/2016 12:51 AM
%AI9_DataStream
%Gb",Kl!"hEf'iQbT'-"^ECPN3o)P_BKI@1ZJE!dJ6de4FP8W#BoATZ&n!^8f"!MC(d@Gr]]C5':U:Rpj2?)1,eIN_&21(<T[;iM'
%r+d`kHCbHCfOi./!r0fUm!o'$_1Ph>h5GCkA(LB*T6b-uhf8,t,AW'pMpGO/0*kj2\Blf$l;==gdr(JH:++r#2;=[u9`Cd9aD@,:
%i%LqNVl3X3rg?oiQ-*b/9Q%a2/66O`Z.Z:H\f!/::nrG0&&7SK;_S4N/F=C9EiiE"G2W1pZ;HClGN^^Z+oS\_Fh9>KGcQZWg3pMt
%SBOmNT`=/glp`AQ::FNo<h#)PO0NJ<_rI*O7BI4&!="0ri4h;IA#9eXQ[6%lcR'>"JfhUc1H<=#B"NaK*I>k\(Raof+oh(NAtU*m
%Iu>ZQs1$h6TC?JD@qQd1cd#8dhdLL0ccG$A^jkL3a5V[4BTfl\qbb%,.s3't?ct-^XICr^0SKJjqb;3go3kPd%4c5K@?<3L5Kk$:
%#bdm`49OI-=@P4@jH5fBU@W-lk>LGB<2r?'3Ug:c]3"qA*39HbUOV>8]=hCtIc%)Ijns-<+eQkWZP(ef)\#WFQ11$%qaCHVO8VuR
%,jGF_2etQ=P,1jFht"3Wh^i&$8=GjWA@iR6p7!.;WkK9[%F]nT\\=>_agi8kf'!,:KU.`,4XWE[hb+rj)BT4%U!u__*tN2nW,oRV
%4fL?*e27-AQgJN6-<]6K"T/c^,o\-/03%s!1PYRH]2:r_M.n!m\)NP.&@_B&Xm:s=^0/LO5W3nl#%ZTkNi4g2jKJ),oJ[V]f918Q
%_r9>s4A]nQ_#ODc>Q.iG\5V_0+()IG^",[5\G>TCc/gG"UF<HIlCJ&u7u^.(ECS[Wf*jkFXddj^eX.pg>E;8_\T^n8C=]DU\fNQY
%U45ooe:,#/L37%8O+'K.@+mVTLk".E<P)+sTltDPgPtS)YINESS7_Jac'k6"FHA`O`<5Aq1DB?mh0I?Ti/a'`GeR.X<DV>FenMNS
%B`%m\f.X_tfefl9en[eG8G"G1mkOf[.Y9;%W=>;9s.Ap6Y!+QXn%jW;Xu8PNB8CQeST!(`BLHD):.m0T`h(.;cSY4uKaUpIJi9QM
%]l>+DR]XL/k`ujon=\9KV.-Q1WDRDCkRVuUP"[q`OEQtd't)#u\q_CgPEKp*EMUf8%K>DELR2E<FAWo>eN[]4i4"bORr:U=dEdM]
%):_ceI50_WbF,oUlEpioE=pL!>s7Iq,7qNrcnX-iQS/"]T2o`mG1<0+<p&WN/62]^s63kJH,1TcN!GD":\S6f&=@lOc:bR:oXVK/
%9;>JL*q8G&T$=&`iNEqgphP7M!:)&P,6"ZE\u-tm,5ij80rInAjKtCc26,]HQI@*8,2k,5?J@3>4.3T-(>.5c>cZ(c*9M"<e'apM
%H?n%5MH+)_Klf,B1n!"`[?&*nBp>C?HbiL;g^QFA=;KD"mWGSdno_5_Z()<s6XMMVjnA?gfA`mZX(q:lgZ<>;4Op0hS]@VUZA(Ge
%=\#;`<,>&hHU+TFFS)F/j'!G.fBC2]UJA"Y7R*i3.>?#hF#JfuH*kMNp.#FK`12VOr)aF4Xl*'7"RE[*l8IBG%OLO(/h5Ukp=eWl
%-2W-?FP:m'n'c!18`uOWj#V24^CG&Gr'J\=LYTucm.-WX6'g-d#s8A=27#DdjX+FC1KSJB(,L$n-I\6$B!0p/]*,Qim;92`R5o=e
%i68#?fdV%*;ICt1?Z,#Lc$['i0/rLaB"f7dB$n0nhH[W\9Y*IOga7M'eRGDqT*%l%/NSr-H`*]4o?US'.[BtfkuJ/=H'PZR;n3(R
%mc1\TaK<,ZqZ!MF]1u:!Z.8cXeE_4VV8h6^X.*q;3Sgr64EWNBO#p3_a=7%J1cD=bXcg[DWf5=H9!a7/ekkJ3Z1IfMdF_E=Gn"U+
%biUG)AV!'AYP28t[,se/%5oX5-<mfM]Emi1U@NKr3r5:7q3<.pUXO!#Qcd]^\Wi-&qRVa4UI_XB36Y^2eBTulSSkEhk-V9T1:Hin
%kngl/=0(#1DR@4SOXYE4(@bj0MERDMW5;9:M@%<Q(9M\6nXgN=ps7T0N1FRgdG7J$74eANC$Z/,DMm7(Pt'*%$ONW;&8&ArhnGg(
%Ji1"nat[TCT[^,f:[:k:9`T%1,XDbFoILH.SQV/i#!:'Jm.%2$L#$`lh)bGa?r$D6Y![4*f&2KkqVIfOH*,esMj_%F6/KD%q8Xr)
%BlnrFK"0]kho9r7>>b8C_O[2hCF?gB\=MgQ>A#\6o(c:19r`;oM20ASXC8ts1Xhj?q-:CtE@:S[@kMWZS'BYj4,X$$+rkm_o9_"-
%/7!GROG[k3]B\c]V:nR0[]8A4rQO#ZP*KJc;r_2]3KIMu5CT*8fke,mZ$'C[,A7/7OI6rTGVO@\K\(.RJi0NCR0g'R3JiUUN"hD>
%WF:e*gQ2Q-k!Z)#_5B7#G'5Th\h;"#a<-tiMt&5)aXOn?T1[=%]_5$/kYI-19XC+#;*7c`T]!C\QDB=3Rfu%5o_7+VjseScHIt@!
%@W''FP:N\OPT)BDAaH9"%-C>YNCHn%MeZ*L*<LEWO`@KVQQg[$oCZC;AB`c);!kXZ90E!#Of_Ms.TK6W"N.&A*DV<d'7]R#F6,ou
%n&Nf`VB=93%'&>U$hfEY[4*5gku"iu-ntG.A/p)LC7(*MD#'CZ*p,9pr^]If'@6>#d$s:Yq@njumHH(?.FWC!X0l-B%&DSoXblAN
%IhIHn:/Z)"oGcC[9!plV(FbXP4Obsj;fWiO*7pA/'[*JO.Cd:/`jUg?VKXhUiS>L2)H,eOj*%c#L>f,d\CT&faIO9`RSot[m8hQ^
%3(.c<ENQ7gCnt33\_O7[L1KE</Lo.n>g'-I)c8'']omE8<lPZKVH?mSF^0hs@>ZDX9YL?U/Rn@Wp%KQ/B2NDCl`#\WiHNQ)2ABc8
%"[53I<b8!.[ic>1c&#+%Hnif4R3[1R<bJ/&WJEEcW@57NK6sR#h8JX*gQ[VZAhhc/HDWe@-&!X$-+PG5K?\=5/kVSO9RJHb.TnXP
%7@E83r%6W7QA[M,^<VN;PhVUaP"MrS]W/Y>\L;/-1G'C8//RE*AN^X9.&glrijo%HjeAPRbd;?fYDgn'@noauZb-<_NUn^!]6IY^
%%'S>U9ODdskrFRW3fA"'i)\A]b\\=8W5?g<0*]"b;1IEE>!H`JfP.>Wo,A'IO&`F@XNJa\Y2)LKGr*!S/*0rlF.LF\R9[@PEc&K!
%/MhJ8?ZQfs`%@0f1M^hSec*B_D.]m*8uX_TeRh_H+">a'&Y[)s`4%+292]TBru+t1WW:t9NGd$2reuh7Cr)'iAo,se1]Ni'nEa-S
%MJ>5\d`(/u^)]2)WXD;99p'YAS%kFBoeOp=9''DAW].,`BeV'o1:F%7_W!.ZRcBffl7HVf>dfTMl,(2)#6&NYIYRl.L-K3d;-nIS
%;2L=6NU&f=gII"#W73Dp3kRl<E@l$.oOWo;^3!O\p1<m5VQ/k'-nF="=RftN9V]A=2&mk-H<\*`Ga.J\j&;/[T5H[h`&.HJfg*"t
%I[$#0-CsJGc$HGD!Rl/&Qf>@F;oAPmNelNPVYN1T6!g,6<(_^>]@oEM8)6"710)aF"fup6L;_BW=N_i3)Qq6el<Am(^,;^:--r_u
%BAXWOa^2l-6-Hu"37FU&VFjM<VM^9joO.Z<8obgP&N?N9WC[;_h=R2UJ#>O1qhn,>c/QL%6Hc_1mklV``IDOjh]["C,J]VMS5Q6.
%@_T19n*aE0/WKS_aq&pE@_U)Y7s\f&heBm6Ahi0Trm`R^3t%0OWlN/n1g^i_)Epa+U5=XL/tuOOq<-sqe>amo?0JLp`[[o9(3TG(
%Z2&][a_icnk61X-:[kB;7e=k/Gh\37>]o.bZ2(dVCnG&2(jr9hLXt?GV-]TIFYH2(AdI)I-!tQ3pMF'H/YBDFW3Hcn<4#nI<2q=j
%jn!5n(3Ptu;.[;k/iBek8^3p7)0@chc=YF+@SnQ_i>I)&G%8W&;FElEs/FRrh<R61flo!IkIBa$9<k"c#/@!&!u$+'%+>ojjDJcX
%@uW?)V83)VVJu<0P5Qt`N&n)>%,.b1]9;Hqg:Y[$bMV6dO""?W`PR:9DZI7OI:T'J:1h-;<su+[)_EamA-T]jJ<q/CnkT6l"D2*#
%78Oi<?Y7*s%!\0@0/MNt#/&01Q`0skC-ursBo;Q/!$ofE^M>$?ip]W!Jop;c:#$"IRNZ1iO;7VQ]14q52Xtu-#ak6n'5?#Ol,>!t
%'[2pZS+sUkmr/%"`L'?mmS9a-/Ohm_$8R%LnOtsgPiJhXe+>02=XBre:lae*ajfOngJiagL>Mkn:,u'Z]_r%V3iftOX1gDC1B#6m
%?eRRn<LSF:l;-kBULZtoI;3pUJ*_@(n%4iL:),Orc9<,qeN?%`6sVp/G#V&T1/h[XVtcWl-,nJHWRE,riAt9#[t_Z;cL]dYC]?dE
%i4n6VgZ],?g<&.$O(HX"Zs2^e/Xl*[d1i$=T8c^=V-?>+L%a-n(1B6nMFIGGXe\PrP^[+HN1FQ8Vbt$Y1u3.f#44V`a8!V"Uo2VO
%nn'l$'R6'&*+L0%i#.P0q)Ci_$ZM%]CRF&t'<Z%^36%bOnJR?A__J"ka8"hBB\cRdN69oCT,kC6j_h'k[TQ=go?5I>g^cRGR-n/H
%FfX?hFmr.ukDB02X0konrqh#&CN4&\`&)f5D)g&:<3&W7*nR-FCl5eX8#8s[Ce$^:;59Z$TYAp*>\bkiinUj0/0Y7\2)QFZR`4'*
%Z%&e]%Gend4L_+GO-*0,Fd[,'NChNfE:n>.DV!9U$?[<>8nN3uAp&`<Fb>.lU='mWs1kp+^C0hin$S4&2;%6Z"9i^Looi?eoqXZ1
%Zgo6RO(3)C:mr^aB>W-2dO\hTPJ)q0PjFZM0sbDo"R%NOTnM&03P=d[s$$cllAdXCB&SDsaU'>jaS_FBBS(5N_[4Cj[kCZuk0$Jb
%0:.^AB&;<f\7OgIc+LTT2`L?jB&;>3p#].SOgj/9S#(m7QTph2,/FuiF"(-IF6@0'gru=Y\T9QNDW]6h/Xj/aThDkN8U'FSgZ6eZ
%>0P3eRl$K"T\6E:ZqG,_qJGui;HV@G>`Re:Hs#D&'kE]ijnrlUqcsE\XKKKP0ZgH".l")cH)7[^(l@VQ#d7T6+CdNAF:AX=r[RBb
%;6<e]>L%1dZW/JV],+,>OMXceU6Z"[Q@@kg]9FBZSf2m?E]qmg7R\T8WT9dXLMiucXI2()cEHD-7E#,-(BRNV<4<U(Si$7d9:VL$
%hdN#n&Wm"8P*=2jJ"EOK6!]\XZS)g;:rtS#IUHFH9E!PP]lGQe/`#$*Jla6DRVt)Fh9r]<ip1Y[00_1oeYPf;lL`fNV/hgod/(AP
%e4Gk$%88k&`g$I$XnP^^TQJM"*A`P.?X1BY4GBJ-'XEU2n6=$p7&'.;c)3mn7)<KH0]9h:S-[66:!kFHCMo+!cV6SE3].]/D7>/s
%#+[fSQB3<C)jirn*uWi0;WnlRg\&<bbslfM"icVIN2"EKMIncobU+5kOZh[^WA]WO*JAp[Dl_3C]ik(%%.#;eh6(oslVXZ[k#3Q<
%;J<qR1aI6V:%fL.Wu0<p#(*(MKsU+AoW>s"luTZhEMRL^cFB_>m7D9!<P(>hlEtN]1b-T=nZA4"S12M9/X.Vg3MorsUasJBMIiY)
%-V9`Mo\tP9_uE!X3/n47lsk[3C@qEF=ZAS-nQTW\PnYsRiA4asHuA$nhJRC/f%]jLplWOBAqc)]-->I!(bS7FL8g9nB#]r4#5t?%
%7^&,,9HsdBa(aJ5M&-gYiT\XLXJ[M5&p-c\CDa6L[[=S\76YUIT)JU(rPlrH;dUd0pL,"N=jH_X^0J7:_RGp-@Mt*=\6?m3\UTKp
%9\d57\f2K$'/.<9F%7+Vs4b]Y:5s5l#6mf?j//^Lq"%IRdl1d6WKI]>/kF7rlBr^iT4mWPERZUAgLJ/d-LHJuV5#lF3u-tTPt;RA
%T`op:$U=@X*j[[Pp)<&KW>$SdM9)uO`lQqY14)#+ZZ21sH2E<Kg/sP+aMktG_>EUtUN;sf9*u>'o=#5+\=&aC'il^&5^o?]3?=Gj
%B$eTUE@d@FQE/PJ*mT8YJ[6'6hihOFRq?WWO!$U,D4&?%HD@3!L.#l22BBMK2KiIB.V#e5m;(*@[?:C1^]3u8oj9oso&"KTmN.[o
%mJrrnBf,j+cu2H,F'i=L-/c89Ybnl`Ij1c'C;!W*F=/<>NW5sT)uT/7$!VT3T<&h5L)jma#N'Mqr*MOm9FlUA*RjZN#LiAuf>Sg_
%e+H'(_0*W=`uL,613u,ji,>gXV]X:ZB?&&0A\NOL16m@,hfePNi4Tkm*[NK"mO#D'`9g,IFS(U\P\O())tD@"Nc6Sa',hW<-#d[(
%Mf6*k!'c-k)1$%pF'j*!J53RJn18Ar0&ko@E'*ssnF(koPi;Ynip#ZnhX';]@F2a;]"2MAnm<":&1RQtn"P9\XPm"U01igC>-E:*
%9Y/S%pZc/N(.qjTP6Zk=<<EjIrn8`WTckSW#Q4CDW<]!%h#"^<q*f54:-:[!*3*<d*6p]`F:QVimEY8nh#a/;%jQK[4e#4HY>`29
%%</i*lr'rg5)Vm2rh5aYXpYoJ^nYWH5KkuG!ttG3c0RmT\$VS<$VbgEPsk/WDotlcrnoKd<`B[$8AuH\:3u8[E-%_WFIlei@,K'K
%G[+mlfBG3Z'-R:'.u>m$8n`mO%L#$i:T8gKhs?=th"eSFF1YPbF8Y2(d.\5FnkQ;j^-,r\oP?>Lqi6kc\f6oL6e4CU;it[30d1#\
%oK66BB6b`R2)9H>B/(Rqo#q*H?#/N$;LQ3Djq3*WG5SBK9Q5>QGNA&;IEe')P5(X9pt#c!B<Bi,[^)Z?(G(Qjkd\7\Y+CSAl=_qS
%+.=%AJts]FPOqT,afm6[fhKCIl;>#i!H[QC9IB\0-ZcI8Qq8cr9D%Ae^MH?(C9O5^NB5<f:J`N(:i=0-1E)JYl`&LY'Pft";'Tgg
%G1oe@l=L[3h\G"T[3T[U.`r\g'L1,@S[6L%enI"RQi!%_<Q,!I@E=a7>1K]23mpuFf%TXtEuUNPYM7:fQ9*j#?2[Q@H.^nAQt_gh
%Y`_bhhQ+UEPVJ;.QVtGBe1A!XRCIinh]T-lC0*3(%<236]l)u.h<_P(pT;;mQb$#ulr%lLeZ2tCm2<Wd/*`Yi-.!>>B9h8:plXrM
%[fo\InW;qF[X7Bs1FC==;jip7f>Xt9X45.9d]gr1"a3]1mDqRhg6!_2f5dtNqT`,^"sa$%B]-<gAk#NTmV;G9,8#G&4Nd"\Is!R5
%Q"mdM<3904(\+3BTN>90Zd^u!Ptn't::$dr7-i0c[H:>c[MuW#[8%f4lF._#A'K\g>."Nt72PGHR-Y,ATm4P;(Y8=ORg<No4=YP`
%M=@Y\>pCBdR[.,po/pcs&C'SNTPcFQ7&eS9Aq4qqWhUMH.c#s8=NRIF4c`nN"Wa<M>lUjoO@uI;26t=tPI'%6Yue!*SbrI4^f'-p
%UIX31>G?%\j-isLkLQYm.+<l+]d-gD3(3DtI,=NgGhAG/kWGl)fK1s*VqZ*\`Obu);phf(pS-BB;A[orfdrJ)-tGEh@B_2RHc'Bh
%p-taZDt<AokQg.K@ojkYobuBSk"C^*;J.Xplt+u-EjK&..KcQ?H2=u&mJhNR1TV#+ibdA&]tRc+Y3WM<+$hH:V9:P*1c+GZHQu"B
%5*q$B[3W`>:Lh$'l&Xt((.8<5ngccuEk`Bo4:'8skgGDBpZn>L>=ZJnB9.h_[gf^rmR0%Pp4sl+SY]LAAN(n=4!W@QH7%7OX@4Ch
%hd/7&2B'W\9TnP$)S"1RAP/iR+B^%:%Ok*d,)Tf@aVA"'UX75Cd+l<8BMr2<UJF+YZs;p`Q:YB,h-[T`Pq%[f;PPGYH`4O<V`'Z>
%F)?A`1s2)]d[4c?enI'pHOnedX.9L%E,s"/?huA7r\r[iIOrI8,pe0_X5TW7?Vq9^`,VSeo"Sc89%9i31eR`8jG>4qQ<UJ7p/HG?
%Hpk_60DE*LB'dM+p(38(:)/ck.jZ(EfbfIRgc('="HJlZYO1$+T$J.G@lT<;k3+!fBS4`-VEJ151?"6%=asm)6Zt7GM*[V!]uXG!
%.E;4^F`jK`4'QW(L<mM<aYqm$g#3U2:+B"J)V9/-q^m-$OWDc'9qQa>C?:?seA@d!NR#m&Khbo-F1&J4O>p&$BA*'Dk<h:].2#WM
%FXjkiXWd:"DKN4M>6!gqm*t8?l*]2s?Im6LqQ7:o?&kp5,)4@QPAN]8-+#jkpF8*@?&C]SlVoZ;+-sK>`SdSQpeg+N*@6C5^i!hN
%2PSJ3fq%L'="AX:.2^P@?&p/8LE=]@\N-Z[B@m\jO%M'r$G?#h#bD6i"h(2X-k@%&e>q)4BM`//[uga&>YdtS\bFdjCuuj$!rWMh
%@jU`egtom@c6&*'kLMMkJcT'Bk&IePfeL7k#u%=sWkFrhS[>eK,l$4m,tC+^miC,ee2aOPl_S$sJUP(-H[s6[."?eR5db\G*u[%C
%m&KGEYbK=YXCrBiBR5n4blE&2"21<bg]**Np4;&@H6$Q,i/;$0[8JN/_N9eq6p+&`W.E6"ALOC\80pl&SEH!JE)bY.2a7&=jURM,
%fGCUu1_;>)n%k2VDl=#'_5MhM7&&I-<Ipgf;5r@h[\^7k!Ab*Orp`g;XM8tgfh1/4h/ApElH\o"KhG_+^KtZIFY:p$7IPK`.68hh
%St^Shbcas[Q!15:gh[C1?IF^RPR3lmV[Wtdl<[A#0fFDN'==qK)=g)uFZi;BO&5YW39jfR(^>1pn7RtLlK@)V8t>R?3-h(?OI)0>
%@+_Ve^DJF*j.=N`ktj41T4WG@#b7nPr,pZ&_DWMV88)CI48.bM%odbt=tLr%XP\fH14H-*;k=K@ID(6Kj'm5sQS9&,oPIT)Dq>ol
%B@.VMKs<-9iOJ&Y&HOLX[18pO[%Pi1@oa]>mr@eAY7LC(\:5U,pHq)(eNXB6r&6l#4g8)SFE7L:D%s.GGi@c#>,?s3h@kA<?KjT+
%Jg78'C/OC3Y,*;%bE27#6^oa(J,sQg-/_sN$H5B6;im%Dg7)iP15(,+;cGQWd/:5dR9bZIY#E("ao-Cj^'.F1+R'dTVEdP@n.?-G
%jdV6%F[5lj\j['uh=)3qU/&2?5fqd>QFV=h%^RQ9BKqN6>4/U8VnL!BbBnX<^Hqfg!<9r<,O,(AM5:XO.H>-9'3FRZ&=EXNQ$QmM
%][`rb"GOCEH^8F:GV\O7:>H(&geS(FL-IOP]Q;=RZs2u\&KU"_&ipk%A,$OQMY9hmoqP!U=rX@%##NrIZW8*(G,Q4>lIr<L`S+=!
%3-1n7&IW4!"ei@:)n3_qS`KspVIAJtDo-9])*D_.p:@(i"U&.h.4a(+e9:9;[Q][mm2UYj>-4JP:ET22`TI'%D:?lOAPDH_JcV&9
%1<tCRP7]sJ!?T+)-_8JRVbn\f.@h\RQPu9O>-7OdSg3-eg!66LPUUbEO1@mS#]rt<W.Xcr%$3.Q%0(MG\\<VJR_;Cq#*1Y]R0Y)f
%]EP4LK:\=-ND-arcdAfTV$e/cYo]P=H^a1WEM.?:WDYRKPc9rC\I2(]J=Qh[k(nJa=$FS0D_qfS6-"WJS)o';KOCWfR`FrOWguhe
%EJF5"ZI`2b$'m'MX0#7eC`cgH2hu\X>53Vk5DY=`<22ZVO1^t/C=gge6aIPl<83gt/^O>R2Wm=I85g^`ou2*\%P7NjZ[J.tMaXqI
%s3YqF*Q)!KQmGPR7H^tp])b`O8K#>$3Gap^]ee#<;@dY&)pR"TfK^B1GLS_sAgjQQ@2Q!/#?t7g13kc-^u3c'C@(X&?#RLRF#C)^
%7\l3CBZh<I-s^<sVVUEd4!huVWSZCEg`*q-V9%`?mH.9F]32_$g;?94r?m8t%#sZb".i)1*'oSG;qU#A0P0&+GkQn^*n5";L)Z+-
%8=>^^a6<G_S'<dL752e/kpM1#_@,Ulb(dSi5+7&Z_f2cj7/hi!_`)o7Pp$@O6>i)MFY/GT6dVgW<5hH97CLKR7_[C3`3ZJ@*,s'Z
%)&D7XXj0hUZUWLf89nSef/h_=r/[6LJ_<Wi0j0#$"88PrN3#&!("VIo7a7l2l]u='-XCq#\m%*4h&:</akhmPh*Ek8G;Z\V:-UG!
%B%FE=nN]TU@,fBGLu_$42Y(uH)\mb8\n:PGh<e2-[M1'WEgMr$ri!QQc-L\<!RtZS)j-P.1GZ;>P1bqrgR"7pAn_'RUuP],SbtpU
%0p6F5;3BAh]TS1l#%CS\qq3qH)H'6]i?gBk?/_lY*.&>WZnCb-W(#EgM]C:%]Y#P)kV4BI)E/=V`m&2@\hog@60DeI)bA)?S@j+\
%2R5!\H.;(\2^6m<WmWHm.B:peIu\&#.m;@LQSrLg%[ihgnd_XfeJ\\87nh'#:<FNd\]9,j;]EDY@+Vai?@KHQ!R(]aRDG$@dn:2[
%E[385.%+@&C<=J\,nII"N%8f`WSVO$7E4F(O.rEhNc/5FIlQ&L2r7F'L.#QX?GUSmY\lQHlcOm8&5g!ke"TB%au1/N)(^l5%$C@7
%J(F/Uk##`[5dsK8J`T+%X"(G=\!Q")#i#KKmM.4joY>aWrUA#.b/(DSbGC7-YO.,"MefB\QhAh(PK'0F`B+HKO7Lh![WC>Qs(^B%
%\$Z#2jmt(e`R<ljO1&*D]s;!M\$gknVW6GfN)&>%iFKd7^Uj=pqdah\U"*<5]Wn'FCK?c\n$H)ufA3iu=78%K=.EqW?[_X\>f^M!
%SQpHlB&s]=cn?(T/GYoFFpgOKXuW*j(NT32Agb'mf0,[SmbR1D$dS^'[3)eH#On2!Z17[(i+Vl`nC[d1m`Q]_rI"=Vol!Ru>PbqB
%E`W+L]%"jQk6hY.HH!F]Q",%Jm8rg>\7^NUY6Y&1D70(Wl$2U&Rm6R1RsdBhrF)C9DZ3mHH1C*K#D,Nko&!3V2;tHg578EqNB:p6
%_2nK(]u>=-T#AZIV$F11J'?0(f?<To\brFJ\@duO?pC/gHb8cqIPq/hI5)i:Sim&BqVLIW\Qh25T;qMKa.'")C=@E2o%V^lhj:A#
%?<>]m%phA%CsW./bAHZ1r.tf+]Xn%;e:uS"b9+I$jr3>Op%`6)b>8*5+4$t$s0Qi`kM##,F8g!te3fN0Y<*h6kPRi4Ipa4\V/$!D
%#nGYDH8`7B&?XL\SN<t5e)l;5r5QmmKCsrF`Hk[@NA'/%kC1/@D1:S6ji`g0FRL`>qn2G!QLrsZEY"5mMg+*mCZ&5V?TWW$/II&X
%W,*C7f6^_UVkoZ6`B3[`g\;Zts6u";Te>gQj65oc6bgi00<WAl.gPBY\:8s9rB$'PIBkb]Jj11Fc_%Bo=G7P=cX`]$B.M/j+)epA
%C$HSRGh[#:H4BLMH`a4824fC[pM:Xm71Q`9GLd+V[,$G7o>:#]HU#Z`rPFWk_XZ)65M&Q)8,(WJU\F5oSHg7okI0tt4,)_.lHe"Q
%?^FOG2/CL8rBoGgcX,`)qOoqL@EnV8gFa7j*$"+A5J3o;a7TZb`Vf6>'DCqkGMh;[1ufAVHU$h7End'Zh@p?Y.rTZVe6Xp=+:3-o
%fm!$@5*UNeP+I"dBm"^9HT/G6]%aj.\4`<\fEl[;+5;"h:j]uDgNfk@[f3i.i5GK+ntKM+s&c[c%T^<I'FR/N:DW*ERc1a!kLI>X
%ahq,6_;t4I[*tdu_UTp@lLj;_gu3%4k[nD?[J[]tGPieW1KO36>EA6&>N)"BmtfTM%AVq<_q*lGWOI5_5/3L;`q0Ucn>T!rAoGA7
%KXqNG<IY:4]D":7Ek:,tQcniAF8fh<i:8np]W-DD)uT-Iou2W[E6tkCB@322]I(,&<LF)#o/nS*D14Mb1gfO:kkFY3IgjQ-DAh"u
%BBq&CFE`V'GA>=?K)=5iJ,]"#<`b3G#4!`\(Y9%t^ZI+cIj!F.2.(c6TXP].IW%APqpDOqf4p9Uc.r<_a87R1Rs@.^COMoPeg`jg
%oY9I1O&$k6@p^=\H1RN',!$e^NZYt*@(sla(5_?!5/'o-*T$;Jlb6Y04aH`5jo+qjO`Pi1HiKbol0n@#\%D[:(At*_Y)ma`o`DiS
%ma->uXK7u;[Aq32Qf_O>e:6>';G(g7ka$nc2N=KgqV8EL#I3F%oN*=%\ZUD`'9)XfF9oV,05krm6%50h\SGf\p*I3BrH2HG)Wnc;
%Y.VniU!*0@+:g@PY*ko/LUk+T^(^O33hoB$QMP@.]_%;H/BOhd5HVTNc8Y[Wj-)LpkhH!)rUA,2FX6@eq(f^qMEa6_?GA=h):?j[
%$Zf`/s$F1XO.UsS`*K>[IpGFPR&;=r=)W$+HA?uu`fI/ZjKWQ]8'A"c(4CD3Y\P8.DQRE8($^am(>q&rJns$)D*/BE#%-"I`i>X0
%F8a$4Fi!>/d%'`[F#4PT%BYlHN77?A?>](>gG4a(^P9b<]M!"fQetEMlLFStC\6ZZcn]d;KtN4cPPW`2Gp=7UbO>'Mm*V-af;r4<
%4sY^Ydi*2>s2ADO3XPHtIL,Zu*h4!4>LgJ5cY-VSY;D\soudB"=<5&CkG+)l-VZhi+o/8=^G9Z!,.NXqY,)To]W'Kte'#Q*U-Bbd
%?eqnu]NjG=[3O#W<Fb4Z62PtbAb@*.P>/Zr;VIG5r\7aO:FE>Qc(odPXjfAn4s]@eaSLqjGtbm#+#bE'J7Y&>'R-o$@8`pd-n.FA
%hL)qj'+O=iD'Y+B-uG&&Ur@$h]brQqZ"RGVd7L\"o`FaT2Z:QaJ.&(8j$015D8I[2r=<fb`RRK+5550!<`4F#\HZ`nPKi+]X\VU/
%4&</\eo5>SZ2b[/K0<-m><TLjrZkkLG.>+i55Y/;F^)`&E4\3`]/rSgAH%,7*V@qZ4W^&,iFMKK$ap@c2BMl1/%n,rbdb.YiR(nt
%5OIie0"cK$F"Oqu[DOE%gF-mAmX8jmTlF:@Xdf9mR4$Tql)dfE>Zpu2CgR,,e%:[UJ>;t7[9d1lJ%Fbo=GmL;dTejp.7?t_?c=?.
%),RM`@D"O.Sc'.:-bR'eAHDc\3l#1+fK<cPmE,DN*I)D*q/gEHNuUn'%4JIBh9Z+Zo9-t3+Tq"ZFC%ji0$50`KXuttA&l1,6iM6E
%HS@`;gO:I3nG^7lQq\Z0YE=MXDcJpLX`HVGhc:fMX$6r0f"=NBL;uf"moI1c=aTo$CR7_+PT'OOX\-/S7/bHF2qc'f&&/hI*',.N
%H#a%u`[h'VD0%qNrVd7f4g6BaBKVLEHk,#]kFVE9o>/VXRWn=VHinUfllKE&C:%8kH1i?^5'sbjn4+@F>3N\:h)u+_q.8`+s1"QM
%pb44Z7+f/rmF>8#iUN,(ApO-i[^Gu2:+5Psrf[W]lc^4I%To@Lmc@7E\?c;o5!2din21R]cCu"T4562/7qLl9d>YAaI`&Y&1[E_b
%p^`hUNMT7\B&HP"mdm6f[Go@*+'Caa?i9Wjah?\[UPJ2M4UC?Se(;J8VdBM?]_Qm@h9IK`O&,GX1=b6Z#J#%spHG6CY5WD0_j5.W
%4uE2DhU.@gfuhlPG.+1>V,o2@]_(o)rG$S:VTe%7]7'P4=kYo]6#Tj`?7^Rr#;C'9L\ZqJi7kBA=)1QLbqKsjGOG*o_j>;PE;@bQ
%rklJA1L&,/\$j#Tg:mI\<Un2k"U@HI!B<=PPm41fh.#pDnXWT`X1c)boW>BEn8A6adcp[9'sqEEK?-2!X04c/Y8.MLgJ>NkV-Tpe
%46t5'X6/KWdF,;)jlIPH8gMVm'IVWi:-"i('/Mp4#&gblS?I+9*l/AF?ZqF\lTb!-L.m.&,fY7V#F)c.@iLAq2`9m+A-R8),:GbT
%[+!:5q.*P$/>'V$>:EP:iIW8i\\$eF^G$#j=8,fW/N3&[cSAnDB\U?ZG:ECf0TrPa[I\LBQJFE,d(KY:,4HM"kM,aIfCd%"&&,jO
%:[Y=`>l-FW<S4:J5*3V;r<KPEi<JS?PP(]KT<%pV%E\&ljPl()h`O1,b!4NnmIfddmcq".ld>R<mA!%Q=I)hX*'[a_cPqApS@S,0
%Lr+dpm/qXKI;a8i`VYFENI(9@Reu&R2YZX]c:MntIi]VkQOdDOp".L58ipb&Y_%/o['9(3o*JSC]@7!pouc-akm.(rn*^u%mlgSJ
%3/0"hWs/56$ErV6c]Q<_9*$e$:*,o+AV>8oO72P.%X>#VC3@"l56&P_:?jo'YL_[d\()#`]3YC#9fV:!4'm-;\;LLWmUm@5rq>Q9
%Z16r;MN"6/0&aBG5E:ekWfQ"RJZZDC.i(=^H89/RIJqrHGg5g2k*J;ep%n0rIp679^=6^SqY']CE4;[Q-d1'5L$!"]`2%22p>"ZZ
%QhBd18(d9c(,f6-l!=U:bLS,32_Vh)0Cs,R+'r1r&;bhBmsG/"qWBK$o]jbUfdK3*=kM[8r8n%!:Bm=V()Z_(k<1?pI'lkND7[!'
%/-l"<hOVORhY1WrHM>,]o^-JX)UC@2K*[=Z#&/"f=`/pta%st8p<rf,e`F2>dO^`qXj!oU(W.:dkgc4'[IUbF*.ECKr]07-]X4No
%O7o>sYQ_ahau)u(TAZU>PDlrEkgr&Yl,0l7Ca;R5q(p><6m^epDLFb4LV%(m*YsdnF\kZ9e<'L?\l[,=^7H&1X!bN_mQWKdEoGKR
%gu'fq-U1Wrlu/,G.tqkM3ZsdXh-F;ILe_!'<r7uObQ4mJTC3)W(XUUUC"fu#rRX9Vb0/L>IK$eWneLGZT:_H7l-lq(C9DalidV1i
%o&J]oLZA>>@drR;lWtaH>?P3:HMc_R@Ca9?qqg.<,;5`0c*ooYjPm>m5p,e@_5#`5e*,P1[G?t/glY[m]u$ggSPEVPW49S4q#5p?
%5`q[fY1:"R]2sjOh-EiiB:m:r=uPP/kW'0hL>.2]38SS+5A2%g'<J^kq>1'OKArF\X6k8k\qT0V4$.t16dVSUO"iWdZ'[b)@E32[
%r#<![I"ZFkoIA_tpnMS+mb)=5jmr]hfH$[+aDLajkDgU-\N%&q3C!iA&!RhO$dm*UF<l2(Z&bj$7.uhTa+;uO4of*WjcA3*\RpIQ
%ro.a:ja$/uOsuZ="@#nX-8s<9/:@/_^N\7Mmc'^[-o0!IYG#8ZeSdllJ"Vt9>MO%rQe_kYH85;A^j\Ghq0Q=73/:9k\Rt8Sm[DbC
%m_9(2)e0A:.cY&RCYf9O])V7p.[KIsIQ<n`(dR-T7Mj^&^QC=R(WCS`>2P>4nu&p#=FJ`rWB)[hdEqKPRU1GHX\njjR2khE?@REp
%fH=!X?e9&ll@&4[,TuA\AAWiE6d`0N[!973en[uh'jIj_)f)iblh_tm5=&ui<IV<(A?7mcg@m@ua+)1\8eK'"mU<??aR(lE]7kt+
%T+tp&Sb;W^qt(?2k2CX^Y4iYnSNH5uHEd;3Z3Bgjea=cpe'#f)LC_55s5CpDdK$=U$fq&.Q4=mA1W7XB5$4H7IP_R^phb"Q^ZSh:
%O)OI(X,GXsYD1Zm[i_]Se;B<N#5[H/p9&$njQ3$0\*N!s;D@^g4.jDm:nm0l<BZgup\5DJ0Q3Ramk(YtXfHa_%r4s(&=?d@ec0m"
%SdSkJ\emtF/C(q8r/`kpf/q1'd_e,IHM;FMe^&`rah/l*rLt;)Mp>W]3,5!01^&ZmcgOK0^^+`pbK%;pI9@+?T+mkDT$T3(U)ZQ]
%I[]4:(uot^ip$g]qd+3U17F.bnr.91cqE!m)EP+<86OWgm4GEVfpk0=oY#umFM6JAH^G0VZZjeroI^^nkbgnWk+#F$hM:i456UtD
%r2]b[Qc`TU_="J/]X,?fhRm"%X5hKl+%&,l=F.Kk]);4a=JYr.H,Eh\=U(T"q$bdBE@\M&EtA+8Ep;V!kOHU)Kf?2PT`0:RX[1B8
%,m!@[p@f)E%>=-BmcC&U:0d8Ub!PQXWqZGSPBCi.T):.B'[&h->#o>lV8SS=[#Xo$3tLMHXnm5LP`,Suq3q'P.a8\beQ_d_/]NV1
%;Pd:J?a<:"G1LDdk5NPbT0G6lCq=C:rl8=$IQQg0^OPXA@KsjtEh4$c$i:DS7e4>(qFD?naRR`u"$$8RF1K<<8Opt7^*16oFjc/(
%]T'XF5Cd&:XTs4JklHUMGJ3dT6>6\8rV-;?]RAbllAnYAI/T]Kk/<hiIK2F0ATVt4b1fqu8>Z8gHaL(cGZ&rn?<R'qAh=fMCuBOK
%X10)->&>Wm\,5H@`:R7=)f)RGgOA`$j/sc%E$qa$3PE$4\g%!V>WQQt5Ss1ZqMtm#orqS)s7Z!T4ij56:BUHCpYKh<q'!UeZhVSK
%K,5VRQ^d;Pn$0L5p%WOWDf!(U-\qXUN;X6&JZ[oVT^)EHf,$XT-Yq"Y]pKpnlF2J2gjYsg`;BA-o\pa5cu\,nXdK&?e>#.Bps&BW
%db1tDfBT8\$$+JsOo#YMW.*P>p:L7eC1XZS;9L%d1'7sNh&lBKF)TV24I_nf$dHU*oHEFiQ4[-h;;Lo?rH1%7PC9Y6N5if:$6e44
%9_fY@r'I!^D,gB%RAKT)pE'dR`euo?`U@kT/S'`'$Ern<)t=']i.p3U2n!)\H:o@;+2M]dU=bJkE$@5I)[I"MrV%/cn4+,SpQk5q
%9pN-IL55Bd>Os"Whu!QFdXGiBr;79<p&8CcIe\BjbPgqk!'P%`gFL57Zeog#Vr]PVo)G<%q02eJFTj8ScC(p,SR9)jK6<6Dh!]9k
%dGtl;V$mujOKh&^%e%L%qMUs;pVIj1"$/"E\<rKTHJt^hjupL5mpQN]Ij_te8%7m\>DT/(3RQ&Q)*c@'(DbtZN/W[SRn*MXf:685
%c>5Bea"Z-5%f4o$qi*pS.5Q2CQYd^/BAQAC&:2+C[5i2\L\R-&qHDq"5QC\cT)'dEf!Y&Jd759QgW(C`0CUM7IW4h`OSCP!9>1dJ
%)>I3#r:m&I)IXcGOM(#IO/?pmo8fU,Af]3JQ(#DrUP5*s[[LgZJ<?PU%C<bjg)2\'S8;Rn(:6)12K6k_F,jN8GUtOcCc8Rbkd_QE
%rll@aj$T='B,r5$W+uqIft_e$?+-:5D)bI-Za-04GgL%g=3h8Ibn%.8jl;F^%i88Q`lEK\lSpLT)d_+g4Y'I+AeT??HX"kO_biQ]
%CO2"t>ohQSLYqRtfeBdP"\+S2I*9e\Si/nW2B4W*\pF,g:=TVXW6f^\WuGSd(`D%8-GBk;Kf1T"gG#?&DtLpii0h.dC`5D<c$%[H
%e4a.HAn?5V(n;F%4"qPuF*J68<\D(VXQAFZkhaZDbaJa_U]pd/D9nK,F`9EjCj)>M@u&\OG2BN41SE"63\F5:ZisUUF0WuAXn#k,
%BY$)Q#>P>h9cuLN(>AkI_IG<."&0S&N*^%a=VhV"$t6Vm!uRQ>_F0JP6N#K6@:_'iX2-&lL4K^8m,P@d&VkU_ct:,&LGC@+@"923
%L-AE>D?.&[`YetE*a2_([N$@=EaZXL)V*(.JW1>IE%F,Fd!'cEGuW]3'@,&84W"o,f2EWj'\`'JUQ3T_E\&$]>aQQD")j&#RiVbn
%.NCii]5h$KFW(eA#gGZd0eJTYj!D3i,%I",+,$le+mcgVWR[GGedLE?JG6^XBD@M2$P*V)&'3!=-Aj/NFR97I/Nb[*f[(aq%#A?h
%RXjlYa--sgRt8XtcVD1[-C2&+#9S^-RD+MB!JB+'U'd9EBAl5[g!p*tF=*lSFch-@_)5@CL:+=q'7.b$Hk7Vji6..2\-OWt>6bZ]
%EMd\o=Vo#4]F#K?^uIr)$h:j7]_ar%a=>P1ifg<-[lGR!!lL6sdEOr"SfQ2$OJmu+XcRc,U5sg+&4;aNcbT#uR7uO]hPtWkPr&L-
%FJ(WrZ[`SA'(?ZO%KbX$$=q/^ZR/43B_K;Z(slF=+D+@'/`7[P/-l`W(,?IM!Rpcp9krsl5q9_[?(%&H!o_cQ2S1XXR\=26'=K(M
%3fXJ.&/W&rLY*$A%SbY:fPM!,_$@5S&mN3p4XZmLfKS)j5(Nr2,ZOCD&di@0"G10h&.;^8MZ=f;L!nsm!sG8amg_ZmF:WR6A>H.8
%?g,?7OZb6n+Y^W=Ru'&kC;H54<e"28dU%`H(@sR@6D4/Uq1apSP="\X:o6Q8n3:c2BS*1X;t==8OC?(tYS,!na$FQ&+_q))18#"@
%IR5Or2ps@dKe2C]cbl@`'EJ]$J<8K$hKF5#6_TE+i5$S),[<Vu4-#.\@:Ml+Ogm5E90jMq()M4OSqbA_(*8ft_o"d5\3pu2&'f5I
%QJ>#),dM:-iNB%LdL)ArKdG]VQ<'S:!5'@s),(+Lp8'.#SUNd4$G1,$[%jS'8?@NJg14mfI%--0PRD;kMfsUUKLKX1g5(B$9M_,8
%N@:iYoK`8-+YFFmPq/s&3Cr<Vl9AZ0dX(G6(YBH:Uhk,-'m:A(e#5Hk8lP:hSMp%tSgh%#+pmm&61>dJ-hS[RPA,OV6pr7M-POLd
%BAlZai8BPf+9l@n&&]El&_KLE,\TG=Rk.rG_,d#[&QM%D$iJ^;/;?%l$j5*[>s5$94:nY"Z6$B(a^br'!KXd9BOL#>TnYc(o3&HK
%b^l)XJ@5O_PN+_aG;rqW#jdqe/^S'DK4+j%d?YP!*0t(JA&0t21!g,P@p$\#*jbN"FU_cMaFh4kZOpSJ+MU%e("c"L->ntM>1L*E
%:OLXs@-p3L'?C`=M%=XRLSNfo6$tC7paA_uJ3i2r*=!q6WfRstAN=5%Js[3$VWl"TZ_W;g--iT#.i;#4=@di!:-fhTH4u\`D"9-*
%fppn0k<q)SLOBB8`7G)Y"X.&d@%kK()#/DV:Y5Zac"Dp=O=H&Br6Sk0$#MjEp8C^pehYSTb+9Fb491IO:+/nn,!#f.2q,\]_djc(
%T*Dnnfji,YiLi>;$PF)O#Q6?Y"e%l")mK>C&e0j-[Kr9N^raYK8-Q3uQGkn=p6VWZb0#5LA_=4UlQ+^;-el%2J^CiXHp[NR70d&T
%U2m!K_1j0RQ0`@NZ.-e#)$'2]9O0oG2G%"m(BQ7SPDi#NP<f!Rg'kEY_8$=ZlI.e&;Q^sp]0I,QX[t?0fLNl^ck_MU%H0:*5aD`I
%fHj`K1r@1o9Ui+Kggp&WYa\abBK:seKOtaZ,;MPu_(7o6Fl/ABJ@WJ>B]J*$NZBok]HXQe5Y(FNX6"j^TG;h53'nQsD"Mqj;%5$A
%1hc9.CMCmnJh6UliIP>@>*uc$A2[7<MLR]R*rL+&KN+6Hk#9m'6%ZU;9B">9I9_;k_EpR8P5!W1Jpf!gN#-$2>n"tKMH8a8Uc_24
%?c_SJVU4[f.^@?j$q[CMWJ3m"cobuKPSMOr`rleZ1=%2S#c*LhRR:35AXs"I`a];dM\XSg^r-8E]NQcZD^LB,k#`;ucis]YD4(5P
%#shr6D%hOi!YV__7%<Qc&oo8.iFu+ETVJ>682lV-7'Mma<'"2&p9c?Igd%;Bj,75S=QHNWQ?+%7P0*P1]O11K@W;VNcr:Eb3Upti
%?s">M4RTQAM<'2qL6Bq>rBQlC'!WiKf_oCa^p:eX7=Kk<TF'cg/QuWG6*j@'#YiD954o%"6pq%/9Neq5SE5!]L_Z#*2OZ+k;?QQ]
%JSPZ,g-BOpqT(AMC0PrZL4BSH;1V[QED!GRD7[P?;'^`["!.RoPSo"K^sg>[_&.bRiI?[2^p0U[m>.`,XApW@"ie%!%+EHT47n4/
%Nt!kMY,RER!OX'ejRI6B44CV>Z/(LR2lRZq)L<_h>KDZ4=_p-4#+L9[h=KHQ-U:'(CBdZPo1@Zg!4/*ZP<E@+bg9q-a?hA-2H+]M
%[^dSHOX5DdjUs.1lo^C$Ngcg]&llg%`7??EQ,Rd>h='ZE-JDRP)PfY^BqtX&!t@VP@X."u1,G^lU)MbpdhfW]_%!dLK(s=UbWK\f
%kQ+j\09?s$0L@IY>S;OtXXkeX]??&6jR'/p&(=r;4B1Gl1c_M*njJ>g"[NZdh%GgeJO:3D.rZF0/@+NgQ5;(.5k,XLDdp&6`[0Bu
%5f)Z!Ec[o<_c:SFTKFXnq*NVDPF:VAr'^#E?&%l_WWX/j)?EG:Qp([;JMs?84O5.P8_ZXH)tihsERdAeL%7&M!J<KB-P2'eo6?;f
%1]iVh1jM:NCuA#pGt#FtSpuQ>-^a+6i7ai%[J.\l%Q6,?)1qYRCer8eOquOor`?t$L1Z(S1EZrja9*S*VDf'M-G*dof!*C-B2*6M
%D5cfg\:@IbL&mhK@]JGTKYkUQk-3Eg2IJu?$>l)H'319pa'k1bdt20j,l8/,>UH]ecdHp3N<o`%*"OVSD[0#GfcA+=juJj8V*7RV
%M%p),%5KT`T-rOu(Sm"0[//2LPVti[&/Prs7a2DL/'skqm0.6(KMihrr!`iEW>R*-@"TFr(d(,u!u<]?L@i;fYSDE+,0WQZ/Hu^$
%88Kn&E8`Qs%(,Gc`<9X?TdHr9)aI]`..ueD:l6g+I7N=kBT]h0!A'P0WM&?>O"hI0"F_7g5j4@eU2`trL(fZlK@UFar\55tD$g3Y
%Am7MBZ.Z)#A]T_^6G[;%dtsP.k"A+(kSGXs"h.IXW_eXoD"Bu$ApUeYj>;0[!RfVtC1_sPRL*1c98)gf?O9_cV$*n-&G-53fsHlk
%OVu8*$4(nZ55)oVJk;*"A#!M1r='>@'EWu`')Fqm($4GPi+e3S:hN8;dGecnf3geX#!,1h,MJq:X[)7PJ<1^0MG:qEfRHA<c\<N@
%X2dC.[\A2DRn4^fAcd.p)6tiJN$[2.k05U0+LEucq?TPW#E6tB,a8YGTMri_S)^h2Or",Ho%4\0[q"#a)&8Y[QcU.6QWetc:3b]S
%A'T>(b8sQs]OdeV,7#&%P"[$jW?n2?E^/OU%-!GQ#S;Ckkc^:$1lqE:W72^eQj*Z)JI#mG-(g^Y!*'FPfR\)*5_iPJ`AM`V7\a3/
%f17a1)AWfO.AMejXo`MT6$VV9"^5F\5g3%h)NVtI4=>55O\ZMu1ukQe[NelV+agT.B_i.KTj\e1FQa<_L\QNF&2[JC6+Mmp?/V+`
%R0]qAB:.$PGY^J"aV\\F[EM%QkJ3$.6&\M]!*LoMfI5V+'%k23O\sL8;7dhc1^L,:OJhEKM+pj3R"-J<!@0pO:rLMR60Nqp0kkEc
%alm!W)XocD@/49W!Z/-/Pui@P)sHUL)sV5GmJ*D6EMj3Xm^c,4l_W`<Br5!*r&jBRD\]Y4bWg'r^;gb>$14ApD`"@/o0gF:W-fGT
%::+,DMP#gJ-d$6hP>K1iLqke6#G4SLLmJ]?Tplo]^h/_kkX*]XKpntPWX:0*B1N/!kn5b2aFPYlQXg<Q5j6^l,"5$uj9X_:Q3=4p
%pdCBAc*;<.Am>BoRg`)6ZcE,e6Ps2X@DihpPt5,pp`6k%!hcgH2,kP0iCt*[#kg=?eY=q:U'@0/KNQka<n8-HPBB@?[a1n8_dXCM
%4N9`ZNH5N_5i(lIE[iKlGYT*f75`+tKY^J4\:?iC<oE7TQb?ls^^teNB'&n-^;F7\Zit8<J:">oKbc@&2PHmO(H.>!;rL\%/r/ME
%6ih-*]?Jbo.ZI89&taFa`?t<r1acK51aN^<(.K7:\%)1fCbr:^0lPLuWgS&34m/2:J>C#Q7@t@'$qj*LPTV)dRE.B.)8_b785Xa+
%6dbG_R#0#'$(A9@&$Mfp%QN<+Naa+q(`#3n,Uph*7DP;S'd7IlJIjgTKaPK2;2uR%ac&?59^-O>*"1R6b=&[gL]G+:cU%oY`7Q?,
%2On=!#X>\MD"a%XN33J5;<6'Pj6.^480CJ3WnDup(V2LFfd=ldGV>/\$T3NJ=[H2/$I!FAFu*!(`e)AF"NX^UbnH?#"9Pc/Lk_TJ
%98O(/E%&d2>W/gH'J+-A`W=fVFs&afW!13h58XiSIM8)O'Np2L3*DRZ)\b+5UH"s-JQ&oEH(Z8r:bRB<,4QjgU$VhY8!h+9aqnDI
%:XG3BC6b4kcU<o6Ql:_BaDJC7+@T`H@29I=I9fS;n<65.)Jubsi/HF5Jr5[JRI#ej2%(;[(69i8^qTs<V*hSkhN%"Fg8tKO$(g@=
%%n6G5BbP,F4mmApM5RQi4:I\k1^kBYMJYEp-`#N.nt6[F-]jpS>nOe\@Ap8UH<MR;asjU7kiDgmWh;1:A;Z^f;X+LE:PX*,:RrdI
%64?>V?60BPAt]'6J6.Af:8#s)N.`nULMaOh4uPn[(i2Z;Bi@c*,W)MigaDAZ.M&nE"@O,>F9nMH@^$,(;hjBF2R4/\7)ic\,a89/
%[kTcMD19R!Qj((?B"J8;#g/4\'[/M3i#&1NA0,ct`ISX'AU*\"U`EiX+IU%m":'dkncE>0@ZCX'mMQP8HjNDb_.8d)$/^Qe8,U3]
%=G\3K;f)&>=e7(@%H9<7-1ih9&FVE6@iYiKYU+pi>E$+>.`rYR"r=3U"O`E$:qS%4QJ*Sr"a%CRRHLMs_YbQOUDOXh*"0Y!A/S:7
%=OOWC[hJuOGk:8IS;YX.8+h)nDnD*E#@i"8Y*_"1i!HiS(IW*cWX8Z]"UR).*fOs8#TL5B-A1BDclR'KY7o!>S9^.&=N\2W"..D:
%Ca6:tOWoQog"/`)$KB@3%,$1t(P41l>)gL86"m5X&tfRkfuZLFDuq''inuJ!66`R[AZ5m-po5;Ci]&"+\*YLDEI8V%ejXY*P*?P$
%/B1rYq%CaU4HBYR?I"<hmf6p\Ql/:#%*,)^7on0;&;*C2<&5!-d4e1?j,Lr53KE0o_5H1e6D]5g#\d-E=eiq_fKSZ!$5pF3i%miP
%9Zd8W4,Kg@2Ol'<$=hb(lS,g]WdkLEM<&rE?d.L>_n_KVAn'[*V&`a,BLktte-JIp+`tt%1^$,!'S59W>"6>3):B;Q!cs$2P/$KC
%6f8[AeU6V=Gsc:5/k:DbM,>E-<MIN2]TO)nLPGN>8:ZjLC&4d74aJ*L'[C:[6%74qOmj(o#7X;O;t1htI!-Tk=*.qDpbR`bqhBb]
%;4NhcNVQ0l;O-Nd(f_1nRM6:][dRr[KDWtCQ&C.b4Pid@h(on')&\G\EZ+s?`c/`1UHH+^'d7)Zck3j#Kd^5,%Ks3p.:C:26-`(o
%)FVXP#g0F,VDu@T"\_I3U9Dc`*TB@W^LNpl>]W:R-'3m!"t,1/&mD)EPanR!!^<f.+Gf27&]uq)8sf$H[MU;c@$1gcXZ/6O;^`WM
%,kQ8efbn0%CX5LB"=*aMn.3M;LGm)U$(+4b(YKhdNeT)<':Xi!2PjQN4SY,U6=AE^^`4*r<:1/5fV))CH6=)\ct9M]8dQb(*Ph;i
%#"p(P(UQ1P[Xkk)AM':`Ts/rPYTA,G$WKC7<u*?![7K!`6H,f]!gF+N\M'1__%3T&\qf6(6m&)H&=``!@`[%&alj'NHPj%h7\&^X
%HlS\A8eAenB:lCa9[dFN_aO?bY_3[f,++CmT_(WR;f/DpM>5(KP:2CD!XA*Q+,C#+#enu@aN%`0ffq+DI%-X%`,QRd#>?6`11.#?
%PqtH?]LSuY?=TuNJT7C&:sfdfK8SQbfru`l@i,iNA^H^Z<\F3D9$""ZMUmK[UB@Et@iQrYO;BaA,.]1'VtSM'lq]C83$4,hbnA9W
%UOPgu3g^ci$?ZPAU+>B`&Z\ch).a!iBJ'H.X\7;KQmK`X\.3OWj:j%t'D,*JEU;<m7l_Hu]c-"WF%#eQcLM2B3=q5nQ]B^C?,^nK
%-fFC!aT[M_U>ISK'F&mY#5S,R[^,s%361)<bd=e1ijTIb!t+'f&_^3AV4oi.QiJG!dnWaa,U`Pc;\.=m#aM?VE[CKK?%m*nW!gZB
%6/c7A.qrE=BjVe,8pEiQM,Lok@"sV(5R148%<t.9L;R_KL<cn3*MFKI0JRj**;6a"mk7Yc:a#NJd=fci#S<N,]@qi['@K5dA\__Z
%>T<K?E=R/cD8('Wc/QV+9F?Cl49DPp'I4!<B-\@NDObrb:st"G!!$L93%%!K#]QJ_,$*sW/Ip6fo8sGOJr\1tE$URm2>/XWPCfGP
%E[^#^Ln-5&n=#!b\$2-"1K4i7[BV65R4!B9!bk%M$DBQK8QT8=%]U2RP^rDA3FD!l;e1pB,Z7=VBZlo^$F^WN7Q*>&PH>\?<MZ+\
%F#.47[^m-(Rb4Lm%9((Gpl#iaP-.(*64;,_j!NeZQt+I<BK2I:,[#f,>M.I8fn@MkbS?A_2W:O?$D8Pj\J<]X\j?`F=kF!S-p.ST
%BY'"O=]74e!iW8e=\-gt!t@N%//BodUnJbE1ZSegk-'tMQlX4WgQE%BFRP&1T]@&a&s,q+16b;-$6h(GG_)[Bi6'11)T[-@2f\p(
%2Sid'=mraTSLZ]QlW"tIFeHsZ5YdbU(dV+fnMZg%IEm?gKN<4)KFs>k(pPm49F5j2c8ro^X0)K$iLpsKdmGSrg/1h11dKtW;(c.e
%@PX-XF<2h%"YR170!chHaYXj#B!Sl[>*"dLmYFmi6SrJA@C1UVM@EWaN]nQE#);Ia5rC<kX'AfEb=_l`@nb-"ZQ8Epg4F\c.8FTg
%8fu[.:pLl$5TDsH-7+XQ\oQ\Zpjk/6)P<O5$o&%WjLY^IL:M-7A@OA<J5)ah0U9Q6qc&l;:gA^,G;Y2E&Xs3r6n:,$(5?Z_1!uku
%J[MI/=u,N#^,+Z]MOPGTTH/0>^IB--2@\o%5t/rbe"Hclk0b9>\;B@,R4p1:%@a01VJ<MDDIcJ#<g5$W&bRtn`I"'MbrB>M@8p+"
%+S;$R.?+nd)CB'J,4HsO1/q_GV)^)_li:dDKYE`@1rZLO<1Z_;`_QhC8uf&($9@KMiW>?2aJ_;G?qtM\gHc*Ijn(:^0W>7s6SLMG
%`E,`urGSuG7iI@m;X>kV1_:i>io"Uni[=#uoueos9Tn5J?90NV6%($aQ@hbl==S0!;%W$@@GFj-et0T_5r'"b+I#SOLE$VVYebql
%):F&YL(c7683:sJkC0+>E&jtkiX[<Dl=(R^*.,M<9U;NBTuk<H10`;:%D!EH(G:BcYDQVO4_@_#6S-1W9c$.<"G)\sA;>WL9[@Dh
%&i1XjJt<%G+Y^iR0IU$E8uR9d+/sn>ZLe(iBtt55,V^1c_eg\a0fDS#l)LQ8!Uj+LEu,A/naHf>"rTm<iZ"-/"mcVk($1_Biue6H
%6c[9`lo@*J]Ut/!3mZ%Jq/=F&A9Wh`A';1R^+c6YKRSO2V49D0i$D;&JS'%'!q2?DN?_+<0I04'9Z8\"aI?,.n]m2KklZL'M,m=[
%7\fm#M(hY.j84(FL^Y0_h,%=K+1HAb7ArYM,8k#K&'k,C4-p%'L6:![U#_Jm3a8"3SMCVh";<"05eoB63A],N(ejh3%/fr=7$FR>
%@)6U88Fj"NNYrn@Di&!4`$g>1G=djYn;rR3[^m6*q88`@UYErNlu??Fh"0f.!ki])fe%<>(PCO!G_sbn1bj]\DOt6:-JqHO0U\)o
%nfX.slFEE%,KlIE6WlD8Ble5RN%Ys/jb;[RA5=KQ-oOe[^dXDf.9BH\-&l8cQk-!1(*T.P*71rj,S."?`ih(u-:!--+^JqKGBGu)
%8IH#8TfPsV2@?dD`3]fk1VGjNkPLF^i$<6s`al$Ni[)/cn!fJN)?)uJN:1[o/4^#"%9J<"'OrJ5e.\5?6CBZNKj&'S-em][a*E/9
%=$b\6MfKiXQ2C9sj6WOY%+ki.gSuc9pN'D+'!6s\,Y88oLM2II<!Xd_2J*FtJa9#DE\r:bbL]pbFJIS7,*V>fF_OkmG9l"/A<Oj^
%g265(_aAhc,'1rS=2,cLRm_-WY+0F5)5_"^a,7&i@74(##*Kr\9%PEmQ.ddp<&*^_kHlrmT9,D-Wsl<oYF&IT"U8:Wj+G7f1EeI>
%CLW)XE5P(J=Ze8?1_X0b/hp!Va-P2I5>opn'48$k$=Oo7FHsO.(,@Q"e^>G$DKQ(<OLPhd3=[8F)[?3a=3!A8/.&(^Rj)!PmRsm_
%ls-=oNYQlK!\GhN)neS/.cTsZ9mhuiA?q=cZH(M)7Zl#mJj>i,8utK?-HUY#^V^3q366rD+]CK!noVJSl,Dg'-=h_8YtT*Sp?V&0
%X2lU,l<,5RSkbD@e9Y:MH<OB3iqB_A/I*n0,T*K=Vklsfr!$M^MgM0e`UX:5#?XdN4\4#WNi/(G3Oa['?ke`t$po)B)0^]X*9?7&
%js7q[,oN,HXs/'c)&0#n75J[<97\Cb"')H5[VAr1A)<6lb;;1=RP&uGh5?H&%4UG$(Bf7U"K6D&gsNRmNPiBC!bb\V^L+I87;?.D
%jt"Z=NN-ErX2=(e_T9"`L*XPg*9en`L56ruN$&p8U(=5?nul3iWt]rm\>[ai@9CYs#W'S/+qi)i/4\ko0X-1fFU&P:j?`i=Z0*P2
%4Qr8oS[]$.d9-h:$fI(G(KaS&[eOeDem0%a5+\`$=7Z-$Q7j%u6=L%K;e$R.F,:%.7+=XNZuJMXTRs%613f)4Y["1%U.f*3@g*l&
%8ZgiFido!2U$$F@r42%^5e<ruOoa%HOG1Ze?+G)](]8j%KIC-F\JG?-2DNMSB;X03>G5@OG>TAE_77`ZRn.8h7'j':.aM":;%[BZ
%$3V.h%QScg1aSL[&C_:P_aMIbdRSgHq\Y!u\kod<n`qlW*(,<m$i##j.Ts"li"RIrb7aD<(C8s#>"j^F+Et[QN9_;`!@Qdri(DKC
%7_g/_9$SWQ2M&NO;A=dN)j1J\&=Y>YQ?"Zbb2-(>SNq7_F1Z8$O@6%$A#U_+3t_,iR4A#c8H'<7"ZOn0m_A"kX,fi52W]LaDrjVU
%$H>9Orh);<PVAAMO)gft$+*]].:'`!Wu8)KEkW.J>H&"QLg)9'c&e_%]q<e$=N8mT]A@c?&1AlB(eX=l\gT$0qr;9$lr*ffMmT]_
%L=n,J@ZAHm'8Wa!<U(eqU3tkGPq!qnZa#t:^^$L/Q*aC#dc5u#<-@p&0qj<;/mADt#S&Q$K7OQOccY8;EsA/0m<eIW30R8gfT8"%
%i6[JPehC>EVuO$HO/F+;NXFEIJC"YI6sEf&^]LU;Y#LmK+UH3D,Zm%eFAk\IOO2IBXZ4=_g'&2;A$"3X#AdkL0BZ$_INf,[fk#g^
%j#&4p`h63gfUYhVYS:7'O9)SA:,Be`A%F80OTH"CU62A"N%A9BiA7[,ZKVM6iOoVk5[S@7?s$dD8RWbpIE)2:ARg,%dQmEb&1aV0
%1+%s657$T5S#qpI6YX=efT<HdVk5\H/h.Tn]u5]GROffEX47.7X9/p@BdBM2+3Qt:fB1Rk,B7(_\h\aSqS'ZV"WI,+5*#!Ml*6(<
%4I"ppEZ.1!%Mh^a;/Cm<jWsEE-[.QWfh@(n0PuOh7])')0nSd*J#_8jESpuu+]koXOHEM:6UE"k+q\OdQn'4-8N\#oeg&Q%!i"\>
%:fUs/,;PE</CKf8Nrn2'-5F#+2,^\A`Ck60+$h\8#_RD<r3.@=:PbDU2su#2DuC"0C'j=N"`#<1>CdZZfe1l(i^**D5<F$\"J6'i
%]*'a#85?32^@=k!#Bo,93/o8Lqjpja/<gkleK@ZnUQ_gEMCCHF/P2FV)@F\BfV.8sQ+hTt5*WQ&^,C&.F:D@kTun_1-qTr%^fe=K
%P:j[01!ll#"O\BV7"$eWDedm=.t*Bn4[OH6nJK:?fjXDEM&]o)!=[B4@gIU87oq<<q)YI72o#`dj9ee\<;?_Qh+Uln0u7]o5F,O+
%m)I9ib<iVtk]Q/KaVIooAO5o^8pX'P<Jd?t`j.-L[+H#s=\i:HjT6M<ggp^=e?M$NKfK1hO!Qu]-XHC<oF0j$#LTZr2_d9DR7%Us
%<+QBQLibR$MiCCgdBeQoBdr*h2M*#`?Xg?HKeQJd5JDuX[9ss(a.q6W@)bn$;4tF^n1TRu^+t85.^:R":FQ^b="S9/+Z5ElOsZ6o
%VE>njXpmub0)U@-8g6fl7/ld%_E:lA(+8:.P*[GDYXa,A&:rPmEgiZGNsud;G&k:4FP,`R2A+H9Xcn&nAI"W43:Pt"Wig%c+:6eM
%f'.p`G-j!"1+-su,A!)f-\r4V6^>2:Z,e4um4`YITp>P@-*"+UP3D#n.PWgt&L#+f.A%l2eX\'_J22r!d/^%DUW"fAjGHqB#,0ak
%_i:?p'CUFT]k-F"7Q\t]l#X-M>1n92MTEr)C*+jb%G"^;VZ\2M+K).h:7^f[Ye@t0E'piUAQ^HG[8b7$/=aLF\hD,]c;BHX89r4f
%ZLA_aLM!g-0RqY";r/1KSF_CB/bL\e@E"HT\[rDs[8bNXW]%deMcLIl-B(`sm0K;>3*iJg&NMom"h?CTY)(Y9Af=OJ&2Vgm@`_rY
%MZi!\72/!d\!(:B!];GLk<(a+QVq;L<-Ct%kkCJ]FFf*dcEtt3HV%sOZ$ASQ;.fQq\S=gR(4JR_-#Tk9CmC1a&?k/R/jsJ8T'A@n
%,(?uk),++LM'7-)o<gHe\jB/W/P5K^(9/?[K9GYZZTUt#(ef'@c1Fus2BArp>[O+E6`!s#a`BRc7P$lYabZfcTIoOa91HUbZBQbG
%M.`i/2$DuZR%)`dY7Y5_L3LOYFnIU9;f:Zs8pk.Zh,^oDDB0H[,k*Kq$Fb/O.[0cCh37S2LkhF!?Km^g\iqbOL6[+VQIKg4poL=_
%i@H"AV+NMWC-rk/iE+<Scu$Ei&teRWWcpHEdSm\7,ZFkhSB4`m,WSM<m+<lMS#3Wm?Pq3h8L?@YEp8nqI/h]+IuDTHDG]$fRENr&
%pTj&9k[&119%^@HJd/>'(V:)U8D92n/aWaLau.]q"+!(kFDjK;.%c0o-PDn:90O!uhV.)C\B/El+U&_H7OtU(Nej5-A/@fK6_/a*
%(YXK9ngHS`7,8^N@rL+dX!#>M<3_Ws8A&rB9uW$h<`$*&j_t3iL?*r;KL]uB/d<tN8h$()A1!?.;(sh!"q%eA[O'k3Um,=_71D7b
%SgkNWGL[uCb%F/IL"7j\1a]SNNj.ihQP^;:i0%<A.M#(57^uI@s!3aEnM!oG*u7kHS)gS1IL%I1/VE=f:g$KWQ@r5J<LFX+R,'Km
%:<B$F5abS$G?'=8YgmWk[esMch#(^n3U$cD#a+*S,d12T"h>(?h$?rNku,8kj>rV?;K<&?.Y:C:$V^PSG]n2\OmsU-9q^ig@PgSf
%b]4GB'F%Hk9h@;S0!i!j*1a%PTjVJ<,Xl`X>_e4FdF/d[,,sg@TnShL\I'#8"%b>8l3F[A/0mO$V(I-SCK-K<Bs+ndeJW0p$<D=c
%;I.q@M"+;Q@Ne`j.11Z7]KkhW:o3TRmi_7tl<BpB_=#!.(QLh)*EB-#-Z8]V@7*e9G;T)NAgH3O7ae+]00,7&2Y"LA;Ditj.D&AU
%OV0CV0N+)Yo3IXB[oKH./bOnY2AMJ9XS5+abkl"3CeH&knpElWfNu38FB-Qt=@-ca3j)'Y[j9`"P2W'TY74)]kF=,"`O#5cI7#og
%/?2T?<fh>4'ZP>S)]6d*QM6b7,Ph1;g$&?[V5dHr0g,h#\RIRgEt)."96M4FjJ'ub93jQ=,J+)R;K4Rk4(Z''QFT^^$ub#Zc^9I<
%dor`>I3f1'bog5X$[.`70@r-&^ACFU:'!9HYZ,a\?[7NB?k\L;lBeIVb7:Mq/U#i!:Yua0P?Y#3\XLWr$nD?O;PQ4Qc9uTmXmNb8
%\)pXh95:D`h5&Cpj]'Td+l1(T%TN"+gbDWOJhe$f0ePkf@@NsJEe>[so2\tnS.XEZr:L?=f>aP]C]Q'#V8*9KiJ,IW?=HI:Z:G5_
%k^*u#Xk8jLdnWd``#Bg&O$o"NK8D3C[WeAr<--*%23tg%]R4"hO=OdDlCL>ZiiqHP[=hbg+^o.Z!$MUp93Wl@E;<Hb:fO,D2Hb8h
%d1I[;NS7KJ48SZ$TosFnb%Vibr+_fN$3FMa;)41Q:X@io]7JC,/k^16%>tN_X@i%m`!2tL2&*73.S\t_P7OabA8E#[^_TIqnh'?o
%#CT2HV4>%DVQ,$Z@5c<t(R!4DbS,X#:#iC$kEH^Y;GJ2B[/$Ru1(Vct1d)%#-/6>'cjdF?[>3]VVBr6q-5@!ZEJr(>KHI]0K<Juq
%_*hhRn/WE?$<HZO>lgo92%e<[d^<.M;rMe2`(PC+\:>kC6A!^?Ec$ol$nbV>E'NXnWd//I3\*4<.M#*IVEj>%@N0RurG;W"X#>F=
%WP3-\G9t2bQ<P>[/ZG8,AG33Ir5hThlW+ST>*gG<P.tk7Eb!a%DOm^:,Fg:SlgRmWm6Y2h#`b+AhIhJ['D'XKe_ePJI5GI>hd_e?
%YV-90A]tk'&&JYH^>)+*/&Gro%W>$=:s[SOJn"t@=(p[W6X2T.@2rZ/<ULG&N5Lf.j]$5b;*[rum*D>O_:k#dC3+e;7tk&-92U_L
%>X/BOE<oN6hAr/cMZpp7fPh8((TuU>;)qASNS:O1r:ST(>.u?EO:cKXQW';aVP1oi'$D@b"kUBJ=S%^E5@@>tglK%&AZ:-[R`Y86
%EtjD+.t=AH,rCA)88`"D]'&Bd-lgn%-O'iV)(ntVJZc>2Y-BTI9@o50aaf\\=^Y)j7Pe>(Bjasl+0Y6Db5s,;L;"r_'lRCN0dTV/
%L84&3\C]m]Rn=$4U%Y?gQ!`IM)DqfuL)fLOd=&@?7R_udA+>#H;U-g\<PuXD,b)IqKD<nbWf;^'TRr&@='LQ(E[J"8e]jn'%c.]g
%rE+O6HU;!9M/K1^5ql(`=L?33Bd^V+:W>),S?K89.//S^b6q;sUT+ei3ICVV(M/TiY=/bq,<EW-0:!O>a$'5D$n!%KMMF;a?SX>]
%2q-6b[N#H&dY0W?:T3@DZ:)*R4>8'_&pOIXR)i-++=YKqD_b^`Q;0a=']_Y2U'.maq!@q;!O1q!jMEkS'^Ao?Q:_9F+$mOCNO12?
%)T6F+;"EqQ?V3c=7@ZFjKTpFaF,slLJm!h#%5Ti'g6P\nMVYdqCskKeAJqI\""otHd@%T@.[3O8UqK15]b'g*";r+V*-Trt,'(>i
%1N70lT]gUI\Z+h?\h2F".8gh;.FK#fQ/jMY@T_T?PrE<MTcn]$8I!B24KL&K#m`te%-M^9.emg_MTFU5/E/.Pf^n_O#$f/dGt,Bn
%Q4`#nF-AU"l=1VKW?sPu/mR,#C-tJ"\=bJ')-Q<W*S3NBH:*8/1.<"?F'LF%ed2/DG8cW$=&NV191Ord"M3ZgTc>M@A`tcZn-=Ad
%f.Bd6pB3Nek\>MJW-3uo1,sNoIOAb!eQ&qd:.Yb$c7G'UP):e/nJsO+OYk?).SQDs>$qtrC.JJ0>$7L[-(M0H0Bk;jka))7*n<Ac
%[:2^M$rUD_KKhhY6d"s[,h8jKCuo+DlDb)sR;A?XRtC4@R?L'=1S:aq\OE6RW_I20al,m7ou(c@*"ZC%o@/.51P._T>:1NtU/#Ru
%D$@:-W$EchY1cH];bitGj/?QFrZl;#M]YT-%pKZ3=Obtq)r'm'*D]sr<?HR`rKeB^ntj(5W*"4?YaKF6>*=?Tn14[a342S#UW6^W
%Y\eOGdT/p_AC'bA8IRc)AJA3`]';1SZ(A7p&m]Y9<,CU5.4<W%P=Y`_X]J:9!$&45(!BYjBh%Zu#ZhRG_i?7pnca(-7PMUbs("*7
%0p%p!OLWlj"^;XR,j5!om9(sR_X&`e8\V8Nda6sq&-d&k?Anu+_[Ka@D,n6/g,S2XN&rpA<#b:1O9hRR=4A\CP(rfE$"\<R3PK%'
%(&ZFSX\.'BMB[V31$bJ`efD+L$(L]n\(S4$HP-*(jjt90N)SJU6'eNU7C#I\[aH0=Y4bOugCVUZG6:0s/NZ57rOQf*b=m:=-3iX-
%($nOBr@86S]\be<#_d1"=Ru!4Uu-5^l'JSRqR3\P0r<&nGIup*+S1ktCA_D,rV>Ot0rHJa`,UM(,%8JMk2jUgkpPnSfd[3)4fJ-p
%@hYiF9hJ>7YZDN+CnfRN$>m&Occ%rC$jL;p:3Au3`_NDm.rPN.]!1q)<i^I1A`@u-m)ACo.A'Z]ZmB;:XSB<T"R8;mieh,eN@/t7
%\5p+hl=36W@[0Zf1YPPn[qW@sZk>s]nTA`%CNU8<$Q'Mt7mjYGF!:78b%U<%"K(G0[.VI=P8()SM[$8HbmH6p.ohJ$8hpm+<S6L'
%6LZ:N1:l[b1SNkm)"NY4\dG)_GtZs9\s4^PQ>%eh)JPZJ/0G5dlT2tmI$L%=P"^"4QI-reO&<oi6sV)QV/cVOC9:uK^<-f3d<bA`
%fd]:l?'jp@'O39Ol`&&H3d,#3O(sd;'P3)'KbDq/8=HP?X1k$[[k]6+`tu+=2@6c!kF&@^`h8m;cICn#h$Q]jH2htWpt7,lR$LeP
%,T,hc?[m,$n)<NW6)eC3\caFQ&;B1=4sL9qNVHF'Y*@)EX?_JO=;nH^O9JiHQN#H:-m'b2.\'`\a9^f_;QAcVmaSiu#"Yq@-,2D"
%YK^Hh>m=go'1VEFE%ueo/VKOsSFo1eLb,MS^u$[L-!QXjcr+!pEPr8AILX"J(T@(1P*ej'mW+]4cr_uOl%\`q6r.qMK\GX"*0f"7
%WRP<_Y*B[>\5L^''Z^L%1iiBFPfQ"M2.sEt;P'lPbuXp>]Z&#YUp<Ih\e1iU:^pu#JI\`R"<SKr`/q3TUFN-NmM14!'NIB8#/8k=
%b6rtkQ[/B2Tk)lUb$k\J]1f-;cC[VCBW6kB#fR>_i)_%;WQ)j5il,]mP%'F$14Au:E\*F<U,aU@`*[ER27@:9(t_XHeY!p/aJn)j
%#si.tP1iJD)s([bqIgp7m]10l5hAZ,n([Y94A(Xjoi),EjoO`%(0BUAckRNlbOJOeA14E"rLs!s=&W!_kl-.Tej;^%dNqSeA=r(C
%*sZ4DMOdYqVOTMDY"*]d#n)Rl$!",>U31nAoodi$5i616EH&"#-#1_+oj@RBD&pntLt"*_gcSjXM%!!`3<m.hoMOs?9&]<<AJ1S]
%!m0R[dd1d2;S/CM:/9(mZp1X'U?1UgmY!XLQ4F.,AWILL;^/]&^e>M<Ge6V\*o_c4]#kJ:m=")B;q/[HP[JLE0f$OVLDf@b"+7/8
%H,6r=W4"2#L=Vk>?f!%DOgp,_YC-.N5Y0G$ZoIK9rm2&gs#9&b'1YVFIDs6LeE;iD'm`>;eC>.=1XofS+H[=rSr40."F!9cPcn)]
%BT="QHQse%&.$`Hm.5pHgK0-+Xd+Pk2g6*(eoJUH`#<b[8uXs\=hpCK`YbJIYL.Sqr98N,Y@8>n*ab/o:R[]O:(2P/Sj$)mY,6+n
%Nm2lPQNm&X[LnQK3a;YBRZLnX(umnQW%9,iB[[caMtF6iQPP"[!lTDP.8.(6qt;i6knr]7U>P_877U(neQUa*?WNglKCXRQ8"h?F
%c)'#`a=7VT8OPtnBsL/Q8[9F)"<rkS`TUE8StgKHnl)/"_HZ7S121HnSW$5lp/<g_NTB8384lPM6LR!bUea`;<2>L>1sV`frV2"h
%T(W>8SbdmZkS:Y-^)iOR]2mpTFa,^j;qM#F/$;3*IC=md>Qp,^\saU!)Ti\8=hbWI-(Eu=GB2oqN7RBr*XPunl=j%HKCZ'B%\Uu`
%r9_qN-\DsX:j.Q18H`:UaH=Og`S`abP8tAk^0\jAJ1`r4H!5dEPkT:^(OiWMUD@/U8`>nC?B)!M&fBgU?!eau^9T(j8O1f43:'Jh
%LF)!,\a(_bC]U;3i&3[e4[/_NU53s^;CUoX^6m,OCW(`2Io]%-asmFI7:+cs:-:&[7.g:[;meV8ko%5N+`O.$[q!P4<T'k3N?Auo
%FaV](BE8Ke-<*Wf!>7&BZ^D=j`Sm3I'uBb4X?J`P0aM:sFl?],aqe26E>sWSIEA.@><Stb9-QgAL[l0QQ:CHD,#@)uVT\;rXWO[^
%0G@2RX%@'RKr>U"0jV=ncNSsrUm.-1;bF]/;KV,%KL.h/&W%1b6ifr1`g=W6WFMB[?50jPl>p>8[]V/FIr$=/YA)V-aR%dc9#Hg.
%!sM5d/,:Q:kgd+H*V3Omk5%,?c/H<m\kI\f8H)Xe.,Vk&1hOeT("DGi*+He7Iud;e4U&KV+>I`H$`9g0+=Bp8DBi!Nm?#EEP^I1R
%IVjjJ!k>/Q._Jh4\^B-7`Q/X(eN)msUHoarJ(FU)3H?/((5/=<H\Z*lEJ!*P!,]:$SNl,CjdnA#&cME%l^"2IdTH)67^H&F&kF9'
%f-U4(l`irtWPTIAP+/u_71Y49UIOa_oPt.i_kEjLf>m].`q/u&;q\[<4"UNE)<QpYi'WC%Fq>FdVbqOA5)a-V%^FS#Hjt4`Gm3/E
%b`VX!X8iSTfM>)V;)%ma;8@ob@'#`,o,M>Q7pk'VDYn_HldE^\Nk'm$K2;AT<81)E,GJN@1qQ$jJ@#up`^JT.Xj\i:GN\.h<jnt#
%EKM,fI/:?#2'Xmum`0;R\Y)cl&.m3sIt_u7jKhKMQR/[e[\(C/Jd?.j@_FTl@tFCr@pe*gmmZ8:!d#0;dqQ:-44058Z2P8hO2AdL
%debb2PhX5CQPp"LAD`9s=^uqG'dg]/oWW#FLF6iZ3\tos*#AnI<0S^uE&2@8%W6&FLG:XM^i6a&Kn'+mI_,f=".I.1,%U5(89>Mh
%s1p53.fX<F<btg.,#QibT(`Kl*=\cOH1>nKoYFR<]6W7;%-et_.,W6q-/<A1<q11i&c/%2c;nd)7!_#@/`ekXUHp'4B=6*OY>tnE
%ELGO5U0<fhW_Np;]do2Nb+G(pF`RBFHF2!DM]@;6^=@!F.Af[X5K\N%K*]jD$(0mf43`7'$X$8+h?DA"e+5]%ChH$2L\LL4aAnkI
%:=c4(MKF->03tDerVG-+DHnPpMn^m>*t,i*#nikUG\[9Kn:#O&2XK=HQWrH4Edl]MCgNUE,./rg_&.*'2H3l98ANca5l/!)-!NsW
%d8J?hMO)]6Ua/?CQ9&+*3nJYH%:&LEa%TSjq;u=/Y.GCGoQqQY7L?Xh^M$s^Ad72+gHp_^f;SN83&ZB\I0Aa$Zsg5Pp:-N"lO.%2
%(TrT6Ii8f&h,LMCC0-pOlm&rg*d[RhCF!k)f[e[(_Iu+!a^]f;SV'V<rlK.lX(\h9bWT'n2FB#Te5L[725QYVs"3k(Fp`<cY#MYI
%@ge%hBm;:$ok$+)$28LQ$S:$6r6i&uT:k\n)7fb<FqWMk`Hu@P45HK,b9!iI/2sT40`\:!qkG^i1?[D_iu6._gdro)ai[",p?jc]
%'TgA3j&+g^Tr0Fm&HIc5e="E33@<HXL-2!q)-^!-4A,$PBsFI]UncH\Q(f.JZ0>4Hl6%(IZR-emr_:jbp3VAR>7N`AY`b6BYDA"T
%,tPjXS\0+N,W*sqC3P6G>PSbJ3*Q53nJ!pU'(p(?DRGl7AB$C<;kdTb-L]!B=>'"5j(6WJ)Csampbpt"jP$oa`jC.HXkdU>S82cV
%n:#f"cm@^dj\q2LZnNR>ALg?'=Uh&V=kUCRV-2h%7?`kIDI(mnR#[!9jD_$3Gd1hhEY02?D.Ce2\S@MXc?O%s_(Zboh-!D9r"_;#
%L@DFiPu$/d%I!Q78MnR[Hp:3%qr;>SQ[.m6`ttQ2.s9V@cm.ie:dddBCJ/N)INa;86PcqOOGi7"BI^)V*ultGD3qk_:-6_m5o`q2
%!FZ(Ag<I%E&%A?6a?b%!'o/oq>`ap<de`P#NCr+=lC,>Mb+r'WRD;dUE]1'`f21PG=[Tb%UDDOAg-gjZ4s^]91>YG=_=*Di$JH,:
%jK:%SG=ERe.&K&m.3m\EEME5JOGKb2T,'Ijc,FrCiWjp@Wj^/pb1[e2Oo5r]iH5?AM(L0%HlCb*mN#-$W[_B7bM_1D]K(ZT4sSF:
%h#f^6L%*?>rt0ZNg7HPES7V:<[IP'BY)*'o,B4.2SZS&+Vn]p.F=FW.-Q&R%Bn,i9-jqr?(^s]SbFi0H9;W&A)I7Y?]AaFQP7\"l
%LYaU[@`!@qLgB;oQWS,OFa*D8_E)I*POXYV?<]j=n.1>ga0FA^Wd@V"0KE$BT:'Qs)gdqAK%%nc@"$DJ)q=Ru$r[X&dL5F8(`K*E
%Toq<>`odS48aWtLk.P;A\%:2!8#NP/bK@-<>9l@"ht=]pJ"c7q/;h/8P[=Nt4dLSDQ@JlO^,2o*r.rhk6P+&A^,@jkV<K:?d6"1`
%<EW\_0TY0*WC5-U^E-rZbp,O(+U9`:`m%$iKqYk?8i;N05Y@s,DN1*,j0?o;4k:`pis(2^"XR<S;Y!JYSf\KC7pIH+O/iM_g*8>,
%$DUl3<oE@'?3)O))?'3UR"Repr(A)@DG#!4\ZDE<WFg/o9%TD^iMs%IqV6Q@-IX$DdH;`p50D+i2X)H-j>D*/iAp;Me,]2=:&;6>
%+)_GYOQtF5h#ZZ#T(dd@k(\h6fFOsKiE$q=LtZT_r"+bU,MlqppP@Qs%Vn6$p(/FGoRsq#OKh.cW\op#\F&tC9.qqMEUI=Cc!d\e
%*UEr4mU]@A4m4YY,_1J],,YX4YjI$e5Q]iFc(?qYl\GZa^*"Vugpsf'p'O9k'MIge6+%C//t:.0M,-nE%Q@=s>joOj'3W8u+I&1I
%d2N/)_MW]Th]qK??SBtH6CtL3o0EAN8q9876IsH+WOOHl^M4?)T=58pL#(XV!LZQ'm3Q4&o&WsFG'M/L@rG^p-p/$/T33<CE'$c+
%Q@+Gq68#$<_KmU,EFuHk9GNl%bD!7bfVai+(`p-L62^=J)W!eOVY5TZ%qIS&*:=\G#l0G;PHGnZ4#X-Z2=Skk_fcq>eUk>uXubGD
%,dn%*Q%Q['<I5iOdZ-Tb2(iKoduCWB]:GSC!(S01N!t3H=%86F,m1WlV>YX0ia&lWmiJ0*OQ=pD^1,sPk\Dc]SAu=jMa.!HZmUO&
%n]NN$8p1*K&kA<IcikkKPE>Qaof/S[qpsh[^+TOX)_H''#Ir8Q>?ccfRM!BlN'*HI-AIKtl]LIMj35=PT'i%%UZ,-X:)3Q2k>;a]
%Z*>/$r.mc?6Sp\j!)NjjY;#81L(T<]b%P.X<FoSLVFh3WfCdebW0S`m6aI@OT9//q@oh;3c++cC:&tHFHtN>>B:rOH"?um<c-8!g
%d1b!iol>u2?Zj1oO+B\<kC\:q`Rn%<Mu>+t)!6A]$%"gD+:0U"G^*</ai-Vo.:[`AZ%#J,#VeMH[+:]Cj*\md?_m=?fOthBhd-aq
%`g5T!G%KM4Jlp^/PDf*.3Bk1Sj5*Q.jh2YqnfCeGSfU*/0Q`76pGf>+naFqDrpu&r[/<))X%/ltKdT&BKM9k5>pOiXh2bjKQQ4na
%l($Pe20S(YU(O3*E^)Qp[H[',Tpn-l9NBrYoR)O9q3RGNi@l>l8hEQ'108(n'#<>"g[BUVmi+U\+Mar4JB\hZ,WsD$05<`^'(f:%
%5.`It#MQ7$T9JNkj9fYGD'&ap')9L7,5(Icf22Or:+kg3c4=`sElS/OQ+Nn)?CD4nP3F#&a-"pT,&J2?d.lD_lfPlsPe6)n&()I4
%kJ[A;4i-UL*-5*O0(e?o%XgL8/N`[b]h"3*0+qK0eGUf&1YSWQJT6-i?.>'R.:`/8IK$1?KEpTaqf'FCa6/#p(q:7!1%/)7!@_ZK
%FfIPG$K%W"iocSa_!(S<1q8fKcIC4M3;_p-StTSP1ZHsVIR$4G0nON^!;KMejN$_8Tu.J3@f]Eg!")V[lUi(ApKR1uPRI5&X'$BY
%!A&$84#+KH.!aiH*i\E-XU&4%^"&N\=H@X/mQH7].$h++V;os-Zkg3\,]Q4M2tQWhEB]MX?!NdR'pm,-b;V(`5GQC?73(p5I62?<
%1.-JFQBj^_-'&'fPId_T>C<?F4J\gbUFL'Og:<_<Z*=0OTd-4ho%nEQOibH:2XO3`Dk;Li.I4PuF7oS->?`i>LJoA>,V]M3Re*r%
%^64LI:Oe7QO?ZY-+TO@ELLA_>%UinS94>#<[r3ck2tQ5jejFNH#5.M5E89O'!r%AomIA`+E.7D*;KPY_R)giD4`\L`=/_S/QaApW
%dliL%J>c19rT^aA/[@1j/3*l#JCWhuSFu\*<rtRoOr:u8^:[ZBd(q&_'58N.=r3g=M9IqXpO%qE=BQaOQFJU+^uZRjcA3X190AA1
%H[il%>P3q41fka/7W8#j=*8,3*NYf`1kjAtX)\Ob[aqWggXPA,_V]/ZMQ5DH&a8J:j5LGqr:=!Z/]ntSbSshjVOdJ8P^O5@%$mDM
%_S`<?7jQbM+\nI1S@HQnqe;bRB!"0*'+iL)W`'n7nIaeUfr==B.H/U"BqEfuU?7"(')2%]f6oj'1+fn?C)@"3Uo@s7#ZBg`O\su,
%B3RNk)8D3L(/IL/X`4m12f19e>mRK<<CV^Z2PEr!dto8;8p5TmBdl=iAO:U*R!AYg66oi<\cf!)M0[ZM0Lp24cj6Q!@_Z'\5F7j/
%M[SigP1Lclk(odADk*@f0%T,E3$n2+f/21XTS?l9!S;gkAaAC?B?NgIm/Z6`B.`ak\TtFi2'<)j(he43<t#<1Q=KSrBg?['U(]r-
%Jg4"52rOb2(XgM%#--oNXJd"(BBU)RfWJE[JJ*'F)sX-fdl^)0&fF@*A3Kfp]#V.Y>=Y>Tj,HFLWbI]'f^:p;lj3RCGg2rC1:;H*
%_j6=</U7c-98SG=,3qc0H](Fi`*UV=Let;fX#&#<=5`-ORU`8FY^n(KEp_I'`u_);hK'HG<)C/#C9S;n\75)b1/$.=]#@lU177LZ
%3,X]k>OHLMLNGYS+8@u3$lE'RIEm?@2,kmkfA+]HbD`@egoJ4Go8mR,/g"TLTYEtb(mT`@+X\go1mO0CN/@(Hn5/6+f$Qr*19s.F
%q7p%L-*n,-X%8As:u?<'i*?ttn&5,\Y<f""E'er1:R@nK"nN>:ZoX2sQ%t5D%'o74]=_/-U;4sKGG0odm,\knf/`/W!Ed@K2`+r?
%SsKY;+9OeJkXO.Fn2][V3I%]#A+..l0g"A4K^?!NpCUt/>j8.@iZ3k?(]srb[6DX&)p;ad&p'E8s"'pDH9Yg7d8usHfL#N&+[_L#
%Wa(&TaPc23\"_R!$$.XFCV4L[TqbpQ0H5$a4H/V'/u\eRTCEk=B'LX,i`W]KD8\)BX^EXO`JSRP"2u?pKlYCcgAtmi"7d%FA6X69
%+`)]L$NG"IQP%]tP[[^\P;F.@CMfG_4DEHN]A<2mNoR.:r*re\b4o]c&q03546iO1^Go^WM7DfTI4m54.a\j\U12h_VSUd&E__.R
%OIWI4Df";opn)bQ*ih7t2J`*1S#@cmcCf\&LL!Q>GJ/FH2Od7OrK!K8]]<67BXfAC7lOAR=CH4EfcQM/FHP+;43D9+>#OppD:.%O
%Q%kkg;:QW#SRUR5=uZlZPosD:kQ+I"fi2;P.V_=:H^]`Y<t##nI9ur6&Uh401g*;"o=?dD'dBE;P?^dTp6,@7`_QmFc/:\^+.nq'
%Jg^WMfAi^>'q,.'$bMKr(Z/Xk/kNCUVCMFm<t'CV3m`l='bjgOp250Tjm^C!c<:!mC9B9jol?&o\l3&%m"mSbc`+X2$C:D\m=+,(
%TW-'jHRhVi>,.ZlR=O2=e6`Va/]Y+jMA9A!ZUE1pOX75SmlAmB@;6MuEPL4>qJX^peWe,5>L<[''a=K5:h]-ZF!d\PW1-Bq-7)X@
%fc^cH7#qiVmX"]6N0BdO0FlSN88IFhU&O8dmN^3AW+6c9(2jn0,WR?@6Ue6H8YGCNZ-V&/NHcN5hQQs.Ni%/GSCSMP2EuSc(*^Q_
%>-[D2&FDJ(dsn>36iOknN,.HXNtN-[7?83=Bj,j3R^Vh8&%m3>):o[uDl1aQ9gofU":R!CS8fk_!"\"56ripdrfl4gBbnu3lJlr%
%<K1')R)*j<5e*co^FQ"I_ZHrd9^YVbnYGaopqSC3Yj=4H-km:2ZZ)m`;4HZD?bahH`ON<j.g=SSDSK#b;$OJ>_=_re]`3q9F$YXI
%PQY.*NUHY:.4igU$TGGhBGAb.C[@5ggi.9EcAYAPfWd%L9"+<YRq?;S$'%1BGK<\0"m<,7%Nt19%c#OQHTd5Fp*dYrpm9t1ETo(,
%(4DBW]o]`R0&j:'^amPO=6O^"o!3Mk$38g\HeoH;=3SKQ.^rI9<6#FRX#p6L?LHJ>r8m+A8AjjiRs;(\#^Z+2p6h^^6E)J3QX+=3
%Yd]4NnY$_iB8CY$"C-V4GM(\+d)R:m_HGA>i5:@_Msj[NB0_ODUltZFc.`@u73#nOmlq&lUW[*E:;:F+;oIERj(*FC)esXkl]:`R
%_V33sKd+IipDNG0En4r:(VI?[Y^V!QS^P=('2dD;FLA+_m9+isCO3G)Z*;"?b2duu%^)KNLd%unL"@BTZ1WR?0@+Q#%R8-P:GHuJ
%NL`A`3V;I>]9nPWmD)f+V>:GtfI#t['pR%4dbLA?[DSW$M&TnABasu`oPo*UGWkn>3N"r:>l7dQoZlL+f3"+mNdHg[GLp:aVUH1%
%lA!3uf$^DO9u2.(Gq+fD`3a6NkhdiQIuRXHQYfinO"!.ln=NLOTTMflGmVj[r$.3[]ukt+UuUP?`5L"t'DB=Prn(id4<c?"<&;Z"
%UIp82T]T*$j)o">RA*(?r1]jNGhVLp4rfa&>5RNq2.Rs5$22muSGc<'"SE*p$*2:J94s1V6^8fAMU@aTTt6f(2cO"7AGYkUJ(@3W
%DQ@iBiKc!+],`o_Yh6UIadB[!Ob)8jDT/,H^jIs<ca3O%Q6b=]A+rhU$8$tVG#]_1^:u9`$rXE_Y"Aj\oYFt.;QE6W-L2-,4`H9`
%V`iS=RPhN/)EhZMN4h`o677i7V0A+&ZT-UD1B2DX*1'J>d_28RE0J;*B%(HGI]3?p.`keS%h<(D3_>kH(QmWuT9"'.<N'?SWbmqX
%i)4]6fpr^>8o^0NBp[<+bJMsZ5"[oq@<AJtjgLO,<)%Hl&IhtcL`$g11SpC;3*R\/<VQ)`-<V\6$;%a5RPct7^.uVUn)rkPTn^)E
%\Pf&=pdrT4lBg:4:MiJ.KB.fe[qR/E1!NiP>tf>0g\8e<6*;_YRd?&:W2HWQr=m3N`(J7RF$*Ej0/FE9OqPSh4>eFZ,g,tgOY7:n
%f6\r[##&3:.osM;qhVs)//n_DH=2W`HAgI"WJ3#MM(N"JLjX)4-t[sdlacE/k\GOem#3?bQ5W>^`4Y%tP5FFUrI=#rQJXI5hDV8S
%mE]KMLA@.*O,_R>K-?.NP%d#N2tN\Cg&"&<Q"qo#JSt(Fh0cp1LF*+L?s:/9)-JSZ(#,&.cob;HP`#T;;4H3ErX`:lL*:q[UdtWr
%67k_Bbp]7=+/Y+2PBDbMb@Ts@[NHm>M9T$]/g5SV>LC7uTqc:(YKb54diqEtM].03ir&nfqY@G_Tile7;$qPtCPD4W?XdHs31QMR
%26@8V@su.A5K4a&R:k+(5-sM";KCQRo!U(!lLpJ@UcBJ,IcW)@7s^1hFh8Qbo;j?)rO*P,2`jQN"mg8(K>*<0&X[;WW:nC@b:oht
%5<UAo##auhYOlJZh#0:YIk,#-*OY_cm+)'>b_p\u+9Rq6`EJ]00&dr..c=^ILoi>E+rtmT?C!iRWSnf%lK3;#lWA+uO4ACo21,c_
%/=A90S@;dhdH"Ti;b=0ZHIS78+(ZW/R*Zr2Vg!0MLi?,7C/UUC\;Rue5JIL^"?25gb?2l#N*DT1j<slE1>lOY@N34gTpA$dgMM`3
%!d^*'k%`Rs4Ce5_8\RB:RW?O5KL1MWcWa:5'J=VaWf10.C$,/f4n3pGaR@jEV]X%,ojuIKis*EA;a=nO1;qR@)l8n,CEsKV!G@dc
%GOI^I]53G`jhEn+5kmJ3Ik()04t;[b1gU"&=`o\pLmV`o!BGugNa_6LA_BW2hlZk;e_djGKHA.^lZYD<O-GEVF,t,kKp;d0=rITV
%)W!u5qek8P/4_;blrsgX9<PhM1tBu6<iZr<@Q-Zd_X:Y!-j;dC>6)Wk$6&e0Dm,l/cT>rK#k#g!RV8mAn+tpjA\BA`G2(mE(9Q,,
%R#>alBCu[[SpA<iD,s$;0#_PN;0^+Vnu?<AI&]").Cpf0GS,EeB!3Dh+'s5($abFX;gOP``SNW=l@]HgAj)a?-o!pVlcN?ET9`pq
%1p;$s\P#SHJkLu8m@g@q<K3QIdG(A1pPEDCXiYg"@Ee?%+UOfo<olG!2nH=pN^Y\3#7!+&%>aW'%t8E$R)=rekV6=[o\7]017,NG
%l:om,B^L-NYCkGp1X]A2:&[0qZ%gRR4F'Y::iY,Ep/RWQ>C7Bu6Nn9tJm;`Z:S2W/1]>GZU^3G5T4d)j]r8A;l_af[lg]LoPhNKD
%gTUVG](@d>mqVjV39BeHBJHDF;n3)]97(hm*Mqc'8$m+*Ik^eH0ROk=#O)tMPW*WpZ"ljkn"Se0V'B&a;l9Z2Im!'TL(:Gf/,8)G
%WOp[j5.o3Hs6^S`1L0FTV,k9kBW4aOpc9Ys[o/8paeH]9^q(4e=,rC_l+>jF^6Al%[e;cR+,U;!jhY$TZt3+;RLti:B$5s.)O3DI
%=N`oH&aFlL/jK'j3R.?MO0tQ($WO#4Z#O/NY@=FA,sB:jZmYb6dYZ;6k2H>rUNPW(=YHT^`oF<d^*kVg<:-,eZurB.2sJH)-s*BL
%[;K.cGH7`J\J$*fWoUW%,2L]R`(=3S2.NLoe9]e10%"HP;&5@c-HIbAa'XT9Dg(B94[5OhRuFV@JGuT.qTSJK`jiRDJH\"lX-BEn
%^gT*9Ufhlq5=S)hkLan)>u0_@7hc$rV(+?>]-LW0RX)n(`4YurQa6ZWKJ`_-clR/u:nb7BJNQmLmBLL9XTSF*[p]CpJlQf<1\Lt`
%O6qhR=EgAEeOEcK1s=+L6-+]ILMoeeOU9&PGpoORnJ^-b\,Q7h%pehZE&hl+Jc.HLl/h4gm4"@]o]j;(pDJHe7q1c8<Vpk"fY)@M
%b<Q#&.a@5b>ZDsj8tPd,c"K^l.l)(ocVj/ql*[:<DkRpH+4]0e,J-$WV^en;%qDj0W;:Ssf*M/1AK9I;#AD$$d(<f:ot7<Vr)b`%
%4geA0O?:p9fQ)`j,eL`=4IjDhm9tR4LEasoP"EQ1Wm47^r^`f3CT0(J1WYmLGf[]W>LZ&'',AQU>]Onpk?1H4oCRLMJ@j)PXo-O8
%[5LmM4`*ICG%G`gL/4=/^&gum\,**YDcbH.B;LUB[Yh08[0-?roKTp:,T#bfG;eh,d(A&U"`>S(hab>)F-Ch\((Z$XJlhu(dk^r&
%k^6\t%,X=nJ![+l?2_#).",o7eaq.F@=^p^Yf.H90q0.;7-T_jl$H&^Lk1/aA!WCHk5JXZ+6f3E3%Bu#=1SPMLi80GJpiJ9Ah2/D
%9%.L6-1WMQ5;#D)fJh^,Jn$[[d<RA/)%8IUct@1#JR-YHH:raK@lf"Qs*T+=D3%f5bFu0%%#h#0YX3`%fEs/](3BnrO^Q]f5Y#7<
%5st8V'G]DGl9<-dAugr).L:F>Wp.f8Fd>,*/OStZ+#s:F>ZpGG@O/SAicQ<YfJQ`c`Gqt\3H#V)UXu[H-*[AT'/Qd1YJ5Ldp\j:H
%0^dOS@G7(SM!P5aF,G6*-,b+Rf?VrcgD,2oF<Ai`)JP=@Mq+crAQ#YAP1+;4d<u-$3]0:2\^K8'1N\p^_ui*-,h!gmQ\g$mAdOW8
%<$.6KZ5]%c,9.JjG+(g+T$ks9S<khW\DM:Wb(Ql9M-%US@4A\$fGJ%eDYj2c'!1G/GX'$\=QclRA'sYjg#/iOG,(8XP!4-Q?)b".
%W5_ms$=e]7m-JsI_Z?0\Bd);0e)7q'+M;tAe"b\6ON:+@%(d[R@<)t98MK;JU)q>nH1qDV!O(do4s,96W,"H=k\M%g6\0<AM'9&\
%7!BTX;'2h1&b+tj]LuQ(bu7=_(-G^Ms.n,@4Qu>3^:`];>aKVh!s7gM@o1gS1r3.1n,ZM6=de3g'88-6Bk/="bti6Ze1;;W/;6*d
%mdb#oqG*(TQ?oj*Nd\Rg3-6c`bc-mTc*=S*0)Jg,PIopCMdrS1;U0CF:F:>[;Wm.OV(hlgQF,U;EEYS=/-mE?V$o9'!X4g5%HBig
%YW5OacFhrFMTrE4X;o`]QVOHJI%Kj>IA$3d*L!_aVA25mA8K#+;^6Yj]K#/mO?$QA`(p\p=T-N@%s3PPoQ^'[T]K&qh0@e[.&B_;
%K^j<ZC[?'Zn;/#NdCf#g0J_/;p/E=$cc@9PRl"VB[j-ZsX65f,oVBqDONrr>=#@[f1@Z9#&"K5t#kVq%s$_sCUNj,pZ<m)q*jXN]
%LOEVDVrm-SlGI[GEnS)'>NPUZV!bH:S(>e?1_'1iO(ek@-p'E_UaCH@1"1@P7EUpk4@&qB$>u(qcB8j*lc[0Ekr<6u&]X_gn,IW7
%,duB\9kr"3nU$XHoF+UF!&*(^Y!&`KpDTPW9k5Ks)\X\Hg4Z2qb>[;43/Xf*Q)L7]Qg?L/kR9UR4a10j+(8`)7%[P]/FaFhSWW%o
%X;C"h*\O7O`)AFkg)"63lCWkdV7ju75TK'%:?G&>DLNHobuS\01OXWR.o>YQffr'#*a.^ZcXcAL26D2\Sq2+qj*D+_Qk%SK+'2ck
%"opdM\?+&SmMmQH;+ND-kBhITEQmD214bb-e;8TlMc,(6-P!he-#.]tAbX+p*5e%Z"/^*L+3"5W*No:4/^69t^+5_hHpO[sEL(MD
%LK2F83F1dqh$bm,gbj_1&qW]aSXaBiSk@@F=9qT66;ZE-qg\qt]`;@f!P\BiC22[/OA!oWE:r"4=>nfb#]Y4_2BkU*dO'h\s2X)\
%!0+1IQTR$6h:-bhfX`%Gh,`#h&@1-P`JlAi8(0dYB%dbFhs=!G$X8@+kS\aipBCl/b9^Q>.-J0N630UD-hXuKRUKH$H:)aaQ!WS,
%a\ao6B9?SXTGCr(=s.mUD^b3B^jP_pUcn[6%M,hqg:u7;;&j0ETZ4>BRC)V!njo&<P1b@Z"13P_F$W4qar\8i+@2lKV<%CT+5P/F
%kLa>I+/qdlDI5OSGf\65fF_R:7M%[Tbb1MH9CtX4mWV+t6b^.\]8@-bW$l?`*\G1T=kd1#Ac9WNhiRt'b[J0tk8iqJ?\6S1>*KoJ
%\oNm:Q\*/O^tqQ/S$1Smmq&u,or7;C6^l:k_mAF:1VGOC("Q\Q&NT%s4rgM:LlH48XTI^Z\4;G]$*&Ik81`Goj*gn&AQPgg`4eF`
%N5(tu=d!Xas&ra_Y:i(A[JFj(p.f_`V8t-jb_@0KQ,`t)Qo@o-]1?Gh4J9HtX^8!QjZ;6?#Gu;Np@*?>S\A1N.-F^JfoHl6r8Dsj
%?b[p7j'P`j5G"*#!RAR?0:(/,(2CVkf9D)<lZ==rj72L3ORM0\+..g)Q09VR1U>26HVome>d3st$:@b5-@S',YH*YiFB[9FWWYl^
%VTQ9X"J[ruU)"A]NsX;bW]6Ub4'qaH%%'0b\$*&6-D_nTB_?t0U]^GEa8@ajoB`I#4C8CH'XS$UR!^'^5A$s;/-I[i12_$&GEjM*
%M)aT2>V2H$Qo9EE]@YFP7*+b?,]R8lS_4[mf0&+!hGUWGkOO`_Gsm^=Pa:m3QMr_$K%'ifMWR8c#L#&Dh<Vp>7A8[,2^r>g;IOB7
%aoeYt.LN0)OYH$-Etp8<^gDeq-gqH`.('Y1)b<M-7d#rJUe``-K\aKDm=1j!_ZdZ!(\uCp_JE_Lhu@gYikD;R@sLS5i,D$nZ$kkm
%N%jT0"O4\H0>l22KsQ!2j;41OH,ecqBYS>+^`[i3^HPB#YOh>:[ZEpR)VssTRe+W/7bg-uN`*?&gboH<bdeeh*N<hYpshH<m9SjJ
%>:(Rs>qM>bU8>'drV`H*d7q_TZa\:Zo[cFBXRimgFb6>5iM.TUcKu+pI>*Wgr.Z8OdDn35iQ:%Q>7#QcU']F'/YsY)c3KI]dKE\F
%(-!`T)B@:?$\c"@V)WNg2lVV4Y?t\r#,#5OchSglMHZ6b^H-+nKW:I]p1F\`!h5l3o]Shd7QN?7m+`5PXFn(iT.U$".QoonAo:2W
%d*lG<o-coPol2+!=ZIo;l;`kk/_+4aMrI\k"*j32\lofr[S3]3BW!Q89(TPPXSDE6#&5Rtea(c+m8:4Hn8n=*rOp:P-!l*.*\ism
%&E-%S#$;]KMFU'Mggqa.@U!>K+V3.r*2m01[=(ODB8e#AY!4rEN[:V<]oYP%'6DoAqX_;hPb:Y*P.G2!7okd:8PC'8*A$pZ2.HJc
%HN>WuZfr3jQC\.<g0?N<H\UA`I'&gtN9MT"hk[F6#\ci!iXiEooh9RnrO/^cCaK"d<I5?M_AS7*[V'Gpp<8U1K<jO^Ua>EtSPs(J
%<l_<GfPQqj=u?6tgFJW>K5HOOK@dkmlC526XUFIieOg_eqn)mbP@fV',l*D*.#tJQ+OD]XgZ1sl)H7=MR_OVp)DWRe[&L30!"F39
%dKeAAn'`M6?'1n->tR!LiQ#V;.'QKiaD9O?2[=>VN=N&*4\Ar8i*f8'Wp"=3qeYO@kd)M500>SYL&UAhQkbhY=_[Kn[C>@[*.&=H
%G!u_jQKh)uV8[E'.Q&5)@FtlAjS5q'6._6/GO'd/chYKLOs`!5`Efcqpi7d@cHYWnXdrt)hB0djfSj75f+@G43&;nm!bkG1@#.-u
%c5Sc<NtmJ_9%a/(V/pU*/Tu2E*sKsEF\D:$2%P_FjO,JS@>B&`774:Y1\d=\diW]d3Td>le*',dr*d=6$r_tq`34A15\3uorSnPU
%pe:-a^TB/4<ag6F-&o?VMm3ELZ,c[UYmrYm3FcF<GFp=p2ToXGqdbcq684i6UY`+Vkmq,O8_f1K,GBC",24,m1!`WuW*WG)6u?[4
%HVd81O%UY>Y%/G"P/8%m*Yn5!^-DuA<c+j:.Yi1r/ZYh)L]<,aW(=Vt_lfnRZ^`@3h<+-GAdeKj=l<c2pL"QQh9-1:R[,Yq&hWDu
%FX-a$]khP?%sh`O&2oX9^,.lle>V9<aXtUY[)7-\fKHjD2Hs^%C2C(dl*931LOT*aY_PlRX%T@$A/!a[XlLSkL)S6.fDbBSeEY]a
%V@fhQp@=!94D94\duVm#e9aTI%\%1fEkZ@o^NVL_8I[A#%XX*so&)Skj7C^7o00g,G^UK"po3Q:(?AiclTGLooo'sg/t7f[U@YXT
%$AHC_f,Jjt#><jsXD*R^*sXPC`aES3.5j[]V,U#1^LG!'I[R$ZpjI,'^jPtDODUu8G/ik+.*V_pN\cDF#W#L9W2)9@n-ed^f9+6E
%"UeTfa.W)6Pe`gjP"/qJifS[p7_J`t7pFX[7Eir\-Ll0iCqm]s5.Z97jTDrAWL:]U^*tolI,)?qHIHMq)>A4>=$F2BcVi3aPkb.?
%CDPn-Rhq^.>P7I*AUKp<"qDle``;M/,S^I+,,L;C]38P$;Q,ad""B@aI;J&Db=t5]CZla,H&r*WC-qBk\d'`Qnps-(E*&S=9<$uR
%EIZ_8KIbTFE?>brs*@dK.Q<k/%6Q-U*7e779@@JOSnoBh`#LD/1<+oq4Zqu#Z">s>55*s4Q#Hoe[+iE3,*+N/d5S8hk>!YFq5j=O
%9>]5/>[>oP18F1clIh0$)VC[IE6&%2jff6h7U+?eiJ<!AT!Z4$hh/m/ln#r&>]Pee""S,FaHEn.H$Om::BJ\;4O7LR@lfm(W;krG
%UGd!P(!Ps"^^d?d(?H+;X^%RMDsRY6Cf^Ta.,LphgRd&^Gm"A\/qq"dPmVb$;<RpB.S[/V^S]tUH6q>lfhTN&7?r2cp%C])Cq.==
%Gh#CLY%/]h>T?u_'$%Y[0A+KTkA3<,a=@AOmHqX.Ta/]P2Wca#f,)kq-e7G1DUT3]nTJh4JT>e@\NHtH0s82,)"Isq:,QKLa!/8.
%"`"<kRB"$0/O-cYM#`%L'6A1hdC$3iHteHSs"H_3.jRG<:P8aBU&I?E+G@P$5YIt0]akf`r*%(o&`M_dX#.*Yn0OalSSHLdJ&WiO
%,RH4[#gRBf@+)'c!Xl,J%&<pGC;eG_'^QLQZ=tTk4-;07J2$N/]iY]a8#\'7iLd*Lpm?ZTIJ;rTeettroYSgbQM\^)ea"qZ9$<Gi
%g9u^5O"Eo1W6M6s[tqh58)19:(p<ub2qPWp[oZeBoh'u]]Ob+i>;MU+O;Ip@NZ$d[Jn6s6ZRa?2l*->AUd.?t3Gg$3JA"_ef,eQu
%Z/CSR]V?_QD%fq9]):t%":f&5LqFD3-U+0+$h(Hpd"k][h22ATh<XP7ps;Q=E#<q$9r2q+'L6FN2:<"nB*YNuWVHn]-MG4F*B+4l
%ZjEl@h/,ZegLOa10Ab+]fO?'(RK7Ck&9N5Jm,%Zs/Yrg`)r%Y%8+N$3?g$,2Kc4?$Pur\GW&Yj'BN5&O@b?E10be0nGVZ=7AM$=`
%mLg9uqRWid9qh8%'e#N<VC]Mo=d/*H@f;,IpA=%Amc!V#c<01%J/h1W7S!/lNsO<WnMcdUNK>:g697BB;AaPYZu,&oOoh=VIVpdQ
%4NC?kIYaRpT0OL%^Zp">PC=3B+('Y):MHQ;>=lf,(ML:9Wj?AF0Y;=Fs55o6hZ!HF?>uUAf4fu"KVKr-:`Vehi7pAM"`mJ#KY8)%
%b0r,`WuLZ?1iJ_]f4FKmgZ:bBd[Jc\['#lDGoP(8,b:mpD*D38C'ffqUIcA'Isn:%HIsu`)1cU##s/c`ndO9QBK%($E+Bn\0'XZG
%E_]=4ABYRGGfuucjHc)fb.57Yf$RO8%!Ti?VopOsSZL^VbdpDR([t5R[<t&<G%2lU%eIuCUZ[G]!op_>+(K,`'X[2u3%3`l"KX]2
%DO,TG**ScoFm4;#k>0:gcr>IPDANsa4Sl99YPe%IHA^d#X6<i!q0&#)+.$HI<s$0lTD0W\i1O@oYSDrDRDc<D#Ja*rCr2:Cb9C+t
%D!?3ZWXH]kTO;3o+FnpUR"9HF5.C*((-,!"g24N2PWcX*?KN0CRXY+kp]pnqqWD'"`F*pNW,/.phn<'0X"DYD6O_$)9GO*6a&/+Y
%EEj2pm_0%[F"1sPbAOHA,&46$6p67@ReXBk1j6g)[dEKb.BM#$f`NE!"Y2k"3`U#WG7njl#eM\2>\ku?]n`6u>LYGUpDbu\D0r#>
%[g7X0L)=^]U=b(503\Hr5;G5Od@cY<\6t08+G=(e9)6c^'`^5E9"UFBcpN?NETt3O-A&$a</,=g4ASh*&>oP;;J7,)T$6l+E76G^
%EV!M^+d>[#ZGIr8Z6Q(@20:6H4pimVg%-MFBXRQEVq:\,4E`Y.P,VC>Qs'%qS@.$T7[EFp*;=k'0!HaBg2En\$m^+$kQGVg`m-3h
%o<>AI:3X%KeS74*:hP(*FL'tB]W<t=AM!go##)tis1abC*I2Vh]<uiAMr9T<C"mhTo_3C2I<rU;EnkTr@bC:*Ze=cF+>1*"G$Jo'
%V0u8J"BHhTY\)s0^s^Zq"!+V'jdQ^k*dP_0V!q:m:ZR&9HZOMQimY[l9==T&'TmWpmX,>i5lP(t%`dVIBRm&AkO_3QF9P33l+:=l
%XkK,TL`6KCMj.IBN^o:T$sX&7b:h$4@fmNCFiLnu3p7[`4l&6L&OBDZU&W)l[T-&9^9Jb=?bl&^U)K_2s5CH2,S(cY.]`:8Bdb>N
%V:o/?P=1dIp*A`UDhfU)c("/5p,ueUXAie0LuJR!l=XV%4N0G?9b&9(Xm.t-G?4U)OMh<Vh=Tu0##HCWGHHk6kRR!bA8R0[GCG8f
%+Q)sM)9XQ?crjs<R$6jZ7r\\B+]^uu'(HAN9.EVc&o1(pN:E6e`?][fh&*&S:<6\kh&ePmjS[WC?eVKTM!:rkOeft&VlpB4d^GWE
%Shc7K-'m5tTWfJ3]O45p9d3PQDQ2u2D/0=Ap?\$FKM"&f<+kXTg.?`ef_$dK\EELgD4tLH&q'N!ZuheGoG'*AaMp""RXoM(bcd6*
%mJFHmH]"A)V!p9_Rf'8>=ZJR9Tpi4047Ogb5)$CA&kA-'S&0]N!sM24T/-@>S8)"c@EimMMO#espL1O%"L0LY<SXuK+_IBYZ5JWE
%"ap>A(F$@1(9A_`/k.#9A:PS<=H/(Kapp7mIU)V0jC7d-S)#TX"IXfcqj4QM,(4hJ]<V9T>V0nm39T@ZBKI+8Vp5FrBT0(Q!e,Rl
%#/40VN=X?XokUU`="1t.`K<K(5,AdV_>7%W?lsG$X?>%1;KE$!ZZN-L7#;.&#Wf5`4/ohVSZMe_V$]$SHM/VTEHU@QT/U7:DJ@bH
%0r[Oj%/k'qs*TD#b"'Q_Pd(0IGc9_]1ZVBa0=XI31]BfW@@fY57ZE,E&1Z,ed4)o!YmXTVM!#U-"=A!a+\RUrmka@BE^UZC%po*/
%QqNY@`keCR[7S=M<HkCn>V;[O+Sm(!g)U5I,>[QR4MN<j5JZ%g2Rs,+X#'5OQRE-+Q\#p0>#u;j"!<n>J$4a\<(385%HFp5BMbFN
%Z`c?'Hj6LW!;eX>*@s1&Fm1_r"(Bi-b[\jio.>4ipBE097]$,Ilnm\0EKJ0s\^s#063A?FUEs5C(ef"u`"ML=#/\8k6IUS/\748s
%/09PbJC%Q?`=?]8a)15tS%,1!,&Jgs1FuU9c`oGT%uRnHA"6/1Yc4X!Q6C+[]hjf5@4G8FSEMM!.#f##-nII7q5S,gBj+oLeX9lM
%/R.5K/o>JM]5d_$_33tTl(KsBfWng-*>j#bkQbQq..ok+f,U[Ch<#1BrH,T(0TgRk[4d;"Y'lFP;82SG%jqRh2m96]Hjq+2>"'38
%U#-X$QCq*?D7?)aLukP`+LJ!.DB702$64i//>R6[OA9+2O(8j9)Pd^?3VBCm>BQZKV8?`k\@1UqU`_[r_I+W!:>;p'AaamuT>tXo
%g3+O*GG+dJ:Up2r\P"j#4n86U#;2Uri/9!`O&H6h*Tp366@`\1rn=Vg>?L5Xg?Kq#ZC?3:?\>V8l_DJ"XL$6LMO;P0T;?T*or\2J
%Qj4B>kDYEV5D1[9IWCgn=MkbJk@XLXPplu:o24*kVD9ZElG@c'rhW@IU0TR`R:@"DQLK@W.$t0VhoQ1rZ6hR]F]r3Dl1>#C_aa>"
%B<*<VmMN3<f_IS.1+KQ%5pXil0GB/h6;K#[jXhV16+@:a_HXZHYejYLDLT>F@OeB$ootrkR>)I97?rgc>))s$p2uFm.,oZ&>mf=R
%7Ab,`Z(`L"!5^9N``[fa\AImYSud:rbKkrqK?O_W?FVkc>F[urc()p,6<661jod=c`U1/#_Q:h/eVYf,.45u+7`0sJF3*:"k!KKR
%<J`*jEHpLth<pTq5g@)_k3=T$jpFW]U>7LDF((3NS8j2ifW*!s+91rSmV:-]$LEI0]*FY10IDPSQQIF@.7U(]]q9M,8<sf1o;^5,
%^pg>@<P3o@<kZ&):X'uW9O<Q_s(Xf#oci$WYZ^P*=4O&6On2\'SRG.BLY%2?_!<?mP,/h2Q=T_WG\Fp]+GM#6^s@M<)Fi@9YCE>t
%Ei["h()$f]LUD<=h:g]Rd_e)'+<N.hN6eBChs;6fqtB]dqO)b!kkJXYXK$>ABj+is9P)L]N_+4\mN0aFK?\Fi_c/h_kjJ,<*oaie
%>VFL#h7']H#`3f`>HECnH,YR54m29C0^V@F,m-2RN?&0^HI/R56ta?soCuX%/[)/k1]&60q)U2!j(O,pK!?@)K&hs:>mYMhHtbJ(
%'7FK)IX"MBCfh2-HZ%)(`o'@%iFm=!p#qIoVR$ZCkM%?23r>[uD)hJ"V&d*UM6i=Uk^p_YF`$J*)r4`.%AWKMgMm"5hbsO9+d@t&
%Au%\K-p3F9Sq\j^4mbLjGA6:=4c7;l`!m^O6Y,E(NtF#;RN?T[CN\T9e#6ZJa16RcGMItBjrf7r*g'/__SI;[0#l=K?@;75jsZ"!
%.tXa1@LdShh;`pCm5^'Q;V7u'^:1]'CmN]*<`!_d!'/l*Zd)]$?S2aeele/IG9"q<3keemOrh^$fuNV:_8LO)@kh.@p1)T,'uC_J
%;>X^tg[FNBJ1'Q"Go127WI.3#I"=Q;C5aL&IX'k_f8KNj\_/3Xc#CG$JdDWF_M<)":$oc<!ss[c4=L,Q1QD5jJal1&!WRf8c-^n9
%kPu@L?JNd=P1=Emq-\W``CF_1B8De!e526C8o\;P4%FYgIgS/!YeXdp>\NJTn>eb[8M';)EU;/C])moH1K2#5*C!&fA)5Y]-HK8D
%ij3Ta).r$hLYQKT%TFLtH,M/1IT+MUk/oZUW-")^)p4,,'ERTXkG,kM-ft9![lffu;D`bE"e%B5!C`6`LX^EM4V5N$l6J6X3To<X
%)iAqG$orY$Ztr73B_CjT4tF;b/\'3/cLE$*S$+kf4[(R4X[K0D*+.[:cM!0%)TG(&]mDPZ?ZB@4,%*5O&PdOqpO%:6OMju4]X/1I
%k\b/ji]*[nSbng%i\@5lpu\O#@KOu*^NG]PGide?068H^K+(*-iCMkV_h;6Ha=TA@k]!sW(['a:*b0-G:XB(4CJbIPJ#8)D69SPI
%(802_;14>4pRb"]b1(aMG^-%t-QJXfO?uPYHPe^cQTI-U1@ZqUc5MOeeA5h)+9I%r2CP)"RD$7gZ(\N=g+ZFofIN>sR?_,+).RRq
%X6CDC)nmtIj(/;'\bh(hmC<L-LL4P26WUZDA++kq^=RKV<eTVm@8UaLqm(R'j7"(S03S\JP`4<%D]a%$H.mC'3*6*;d7/NTL>ao1
%A^h-<;NE3=?r5*kV^4A]?k=_ID@bSEYpV8LR&W)a_E*V0(:ZJ]R7dMB6pGZLU>ekDKhajI0;0MSW`#nRbfn5sk/X<"BQ.WU8eGMH
%O6s.d73]LQdc8WmItoO6c7NZ;UgSYsL;`R?h1Yqkm-aJ;s/L?RY:[QFdH#H&TFM,*WQ8Om@Q\pW-K5Zhjr;`Ulq'FZ:XPQ=&s"aT
%Qk9[T?FluH%*CG-$6-CsQrlIUnbAb^I@uQQiuGq4d[n]5`(YVSiB\9fk&V(#FDOj]k.G[=@^?3@=F<hSMQrZa6.8f2"N@>l[aluh
%oq[LD:#Lb]n8K+rkr],8m4j;>s%.1LMG?;-2dbaQ\*jFPIm<AqE)k;?NJ_5qEkt$u2D'X*V<5SheSh&qYF$YHJqTY`EWfjdh7&Lt
%1&XH2#^g<Jk:i78&6IflI(!E.+4ZIT(ngs!X8[@q-=#/&q(g>H_o4cm-l>aLW#M.f#'!ZYGQBV$I;;!D'V-<a%:df?ECa#@+ZHUD
%R5QU^Lo9&C]IS]jc_<kgfG!dW`B:dDT.0U2dg-?<r^T_;LCn&=Nds1MY<TOG91kQ)XqbVHhM^qD)8o.<d_Yi<2PL?QFW.sng:fZW
%7t[7s+YKt=&fNVWL6>AMeR,ERnF7qVmP=p-YGpm;(ZrUaL\m4ZEZ^SP9OLn0W/i_.c=?7Z#&C%0C1kCc3[p,4dihYjV0!R7deaWE
%(Dr\+9DZA)"AD_fgV]ga4oDU4[pJr=cZ#5gLJs2qa62u['ID"XYbTQGoQO88Kn"G;J^%HiX9BuiCYkgLn!DP!#4V<)rR_EAOtB1]
%%X[';q^%l.0%Ve,P7W?@q:7XDl;i66K^dY.$"N;U8+FRD_mr]QeJ%f9[Sr6$<HK>rVti$[YOF[]SCQX`^mLh448LPJ)8ZU;q>cVO
%ap1Qf&=M9!PAEobm4)s[inZ^81J-=n*pF/NWSaD#f.P6iMb,jg*>MFJ,uVAdEUW`T<Gj>ijt,;&8kB:M.X,3:+g)Z(_b@=Eo't1k
%*\6Q]o@E6CLKIL<XC5,*O!ECd&*a1*q`_>s63-=]O*8e`JV?:F<.@?oY'7K'lJn?A"dgFM-L.qg9^4Q]Q&6]S>k]7Koe086[pV_-
%!sO<bTZA2bf1\3!Obk9YCPPk\FtFQ],m-U0j8o%V]D((BB_8g;c1:^B@Ec^HApFrPZ)!G34d`l-Pbq^QB_t^,gOYC5WO&FUZ4jlp
%bt#C,l(DC5_Ji+GhUpEi%b0ZBR:"'T+^1kJPC(/e&;ko&GGJR]T&dC^fb1,9Z]3G[I26\!/rbMmp[1E;U\23bB0?_0MM.VB85t))
%L9hDfMX4htB[+l.FH+&'#sSYb+:'W5P/hPAi-%#84N45;gBof/K=q<0Pt\U+=_#I?*&#slIV&g'XU6g+,Ljq@MCdk#LSLH);)!#*
%fg*eoUqR48ENJ'=SNDTndgTSZ_\J$G8s?H@UWtZ:ahFHPCoHt<O]&h^"(k?@hQ^VV,K9J?p=PdunVhhkQM*A]V5,*D.&KG3a!`d"
%-'R$mAq1]HBp1rNDb\bAcW,eAdd[tQiN]AR?2XsEd?@LiBjk!"Bti.;QYg<`B=(bP+A>Bhig,;[SQp0.8@?BY$q;dF(LsYDq0lD1
%]+3Wn>e7s;C3_iCJlXStcpkSe]:C&=K+'qi8fd?%kQK.^O:!\2_iVHi)Ir^G@l_eQ=:N.ZcMp]>W(Mc_6f1Np"CkEHik;tNL;LOH
%20Jf5NSu1hA\>KPF#*A[YLkkZ@f\8).,!HnREc)595tMB!TW'kqg0X_-2No/q&f([kuW%dn7#[Ym,4f4i<-h2B*si-KuZE8%es1h
%dQ,GhobgQ+3K5>3\08.ZN4o47Yu-FT\o0=!/;X27Z?.T<+gs6&o]]Zno>m$R;Mt8#pLLa<Z5(*s[Fp9?o@I7iT:Z+;\[8X8e>"7`
%pWjnN:>]Qj^4]ADb]CPY>QR%s5QZb3#!+m?7GPcm!S^V_?Y;$aqA)Ja)5VT9W,B4^pN:ZW>k+_s&jLlU(A>f+SoRqS"T[se,3@4Q
%\[cTomSQON8O![L4JJo4;DgeE7K&S3cKK_TMRUA%HZIs\9elP]X)6+X"8H\6,"3'/m;_C`BYh9sJ<X0$m:#t^ltV+to%RGfMZ,TT
%/BNbZ[n6c@HhW+!![3n>76&RY:?+=a%*ue1P^2l7(-[q=V>khnM9tm*Fini2#>>%U4"FR1/@I;7jt:>dMq_?JNk*M_>6nXBVU>06
%og*^nG;7%^MMG3m^!iWm0a]$_1egq+Y9_[&U%un%eK#a]$d[9FgRsI`V2'A(j3s:?H0eHo=qq`&c_t9\!ZuI8jAcc2ZrP!V9=&<O
%5R*^S4)K%G&gd<jb;tU'!b!Xn7uNsZX7i=PO"r>BXV)7d\:%eo;$(9f$kFSM_n-E!lu>N0-RU:;ZZ85Na.7k7f2_]p\BD&eot\D_
%iPQZ@pj2!1FDI.ipb+U0)LDJK/Y;<MgEYdp9!o?nQR&LT8^&=LNb-sf,""8h,*BV**oO[Po`&'Bfm\[18ftpnY<^+'Mfa0GcpdN/
%imbLX*dSOZi37@XGL,KNoNh1KCAsgU0,+LA*^DSV,)pa%E;%p0$<E)VljKT6kNV>QKNJU=7$Z__g?m",qc4"75ONQ,cgP\t`b#$h
%%p[eThnBHIYPW/#_kHhF6PTIV_e8D3jk].2S!c;ZDXo2?=ZBum\j3TDfD=rM]2+Z(/PfBb:C<G9*gP@M)0WDZcW.*_*A1iBaJcTl
%H5Rf#^hAi1#f#NB,O>$pW+>4+1TatkE]L(jTAS\\=8m!Y'8-[u$^rgHInZ-t$,\-;R@G\R6]C*775.,T7/\*kC6glE[BN?g-;ip*
%bWX3/H%l&B@ZC&A:aX]C3Gn%HlBALR1b*1W839ioY1b)5e$;o#pRKODqjfs/k(#)DJCA<_r5WUZVbe6X'>r"-\'DC?A#'o[C^\!R
%240]8%-oCOGPGOG%Nlsjj2eMSQVEVf7%sn*;Itp&.L#\;kE*Eh#b:5'*kTB'0/$0I08D5s9o8LR,k#0RBKVu-Ogb1R=V<CpD#?7f
%pI_3@8FF8?3On3U9h14(#TS'1b=bN).F[6r3T"E.k"WAMD$l&j%l`+H([96Ni'!3VDSLpee8,!Y`ddAp78G*Ni4Ib+&WBY0#$&qC
%eV+ZfZ8p)?'!]'4j8m9OLCNFpjKtX>`7+pKA1P&YoeWb.3&&O-&&N#j;@D.+H3akiN?m%R46gX/#@((WLCmD"n!X=ZlaWnuL7'N;
%AIlX9`+A%$8GHnnFjR&I;XsG=rTr&@#c[+Bj?gDa[>e:Xf<CeD(_+hJZ,U%0'.1`!J4g8:[Ink!H!i)5j,n3k=;!Zc+"Lj@pS^lu
%>qt=ZX7nPY\_cITcZi[Y)d]K#;JQ=!c\`78`E@H*+e!JG&H(bN.h8s4MK"#"gqH5WIp8t9$/"3tj34CYg3PT"+c,0aC"3NPaf3In
%D\)/n[MLK*>me(h5Mk2gjg7Zbra'2J^k9a1!%ZKZVB`M@@;TCd7(_2;eso677eQpo>8-Y-*dWC5^nG?kkgR[_!=%e>U,fJ8DO'.R
%AIo[+k*-IsrC$e'r\O:EP7'lt#0b+5r&S27/a0Ep.1'Z%Xe?ZYf"f-tQSFPc)M\]5+"h3Fa#r1?KlSM-;dBFfRQ!6j?OICQ,CYiW
%$%aPTQZi"@\H.g9`X^@%>?W#Gq;Ei%1,Bc2*RR-_r\/hb-'g(X7:hSVphDd4Z&Yaqb7tt`4H8g$d#X:mB@du**a/o#4D[4Z)*o'j
%CSaGUUD;$gmgMR*'ghYFCS-Z5](lRHYdtagVea5BpNjo9dq]@B=RH^a?*b\\A"a*h@c!)Yh2c(LGKrga9f"=T]M9R;!>IQf`t1I0
%R16jgFliSJQ$hosh01OHA%[#PiMN07?Xj["-LmNn?1'FerFXd"j7q6bs"Z.5T+(%Gr$j8sZ3,G%6PbJ^XZfc'-K:A+I^Cji3`D@A
%3XpPA":K/h#aPfI&Hnu(-uqEnnmpR9WX;WJl6;"TW4f&c7lgse?ClE-8m190NC-e$?HfPYgrQP*O$/.X]b/RiVjXD[nPZCg6(lb#
%cV%a]nf59qjE=m^>8S;Zm%G?K#KeZN21)97XR54:JORa'Wn\d@=toRR7pm*_KB^k#l4kZ:[4ANA80im.I&Z<;i-1Qs8=8pXV=TRI
%+0lrZ/3(Wiro8JL\0&PjChlDJRNRAD[5jLXW6\]sh)Lu3c=J!kQSG0eG(ChDc4$@ibA.W2-$110p]M<jGf1)kgp"b<iKgF'[jRi%
%L(1ds[P#(lI@Z9'NW7W1o7Og#OnXeN<;P`2:dY=THT]KTdD@1`?'\[81N'!6`,CnC01s%s?Rnsa8ooZK+`5KjdV2r?+gcSVQ(qo<
%T*B:>4qQQ+42)=c=I3*XQ9g<RZq0'8XcRE%AobY0,?og@U$^o)Sn%WlX\J>*.Gb+\/f\(b<'9ts//1?5EP`+fgI';@3(N[:4L\#@
%gRK:)beU:(<W4kQV)2/@HsR/jZBj`i$lW:*=82?iqE)9M#Ort%aP:p7(M@)ahc![_Hk_V9T^>4g'AR96e8*/<4Mid[kFofDW\pYY
%Co[8=;^b@j40STflL-VriBjOC44/\,Sl]@$cuVW#k.0DG=f9C^Tfh,_ZVME''hVU.;uQUVgAlD@neW<N5YtAc$5^cMJnD4H"#CkX
%3jUH-]o%(Uqbg\'[9$e(73epE]6IF9SmuY<5kaoAk@71-Dcn"EdaKdiIFE32Qhe0TNGq^0e&tkC&H_Ar7hE:Bd!2VKO0P3$.3nDr
%FLS"V"lp2F]"\F`D7'>ps8>#JYAq+\HlnX_r:<M#VM;(a+^u/.O3tZ[mL8"9/GSJ)_uqAh.>c=-bFr-V[AZ/2#C!qL_?,)n<,G&I
%RTKX63(]1lSq[A1A7/NDr_u7%<POd2"&.@7P/4',nMAhQGq-EZK5OXU*V$J7?\pLGEGgjbJR,+\%#E`@fWi*53ZNf)PSdi1\LG`p
%Mu=sqBJk;2k^OAO-?Fb2qL.md=Xhcpa=&o3KHI^l(L*e*>t[9ap>k*^5,-4"%E!r!PBmOi>S'6jd%?ok9.(6B51)/i!_DR0!5))h
%G#3KQjidP6el0S):db/p+t!Sf2DI]Qr(?/YI5oQJ]@$p"4&o\!Xl.)`ViKWCV<)&O@6^O-ER`dV,F/bS$VSXu27:%6"rrio(WK([
%mUdBB=o6#2hDe[(R?,cb``[unWZ'@,cWGl`0't"?TaZBA[B(?:7SAeH@Rdgpb$k3n%7uVZW/+g&X@l_Fo(hM$;@^Ph&S)!$imrrV
%U;6mcT":?ua#)<B4s.pL>VE/]Yg"<<PqtO-bSQ+7iEsR4_R-2I'AG"P=L/$PQWfpO=Z!0L"B9sLd&Vu0_;"\li7Bg/*l0I%rf;]!
%W['N[WtHUL4WP&nN6dR2&aM9H=+Y6N8_p;l=INn&7\%MSd3_.RP7B+;!^Y3sXur4;%W->;%^YFsf3eK\^n'r.^)f]K<DV!b*7>++
%ejRR5>4Qp?C)jDZU%Rf'c;66*O"_NEN8srC58mCS%q'ePQZU6nOJAE+:61oA&H$qaHSAI]Z>UM7q/F)EL;]Gg?@"Tp9:KeP;?!cn
%!1Rf[(6IN/[0#?9Q5Tf?Y@E9$pW.V[9;1F&+<H!$VjA`+6(`c*VCXAmPS0UD<g^I1Pa-;tSHA\92spT/>+I+G;<eOEqM:-B*e^.2
%c+oY!0n+ur)DKQ:qn8oMbjSS@nmNX8lD$@W=Y0?^U[k^U.4\tk06^mn[)!U0]VR\UAmj==&2qKea)V\=7"3]]l[2*"DcVZSgq$m)
%7("c9B.8:#]?1H&Y2i=:<NL%G>"[0_4!\ea23\Oq?W:+`l1%[2X`I7n;5D0tQh8hQ@])P_;=T][`6D)_\R]@@8%4X'f8Ki1Bkh4N
%mLs&YW3\n@W/<G]-#aHs4+t/J4rY2FSI(uV-L&12h='!SY+t)Ra<;W%*,]9p#Xn&`[Ggk[;J&TaLegX8/tKum,:mqN>6?.M]]:]J
%%tB<61@+TW;Fj7Y@m&iB!U>s/\?u(*Yu@$l_VYtB?.sbLm,Ehgq;"Z0Qqp?AK6rIG*m#HXO6MZ$h(nl@p2Z4s^s!\[O,#<gMCN==
%4#6jTWmP5e0sI>!,:`c@BXG4nLrEhgd0NSYjt5R6o."2$e$anTnAg83hrC$8$-d2/g(inU:fAd,Aj$-[%R%Wg1Nk]t,t:[%7@Mo&
%_l@$9rCMIN#;(p:E+opYDF?HkbJo$;_Siq"]C2'#;r7-PhfFi60d$k5NZMol:p[;mN+\5=AQ-SV;Mj;+'NuH$rQ09L0`&oC[hBG7
%3qeNV.GBZbEW#IrGJIf=a_o6fj/*%>jP)l6nmu<INE<K);[,=]93"Yem)&YhO-\4k[/\F;[onPK6pU7is15f_Rnop`hbDgc+0bm\
%cp`_6c9E@Vh$"*@cX,o!5Wu1tVR8@C@ee'O7c*P)IlcE5cl!(lgVFt"'WKDSqn<Fid%W]g/%N7:f_!JCHEIn%\W=VG?uaigj>ML@
%O2MV<>mNJJFk7iUZU_FYbFf)U97\-76&9OFh"&/P#^t\c0!mpZUh+oa1&pmMA0Z%t$B,M=P6M*_`u-&S44`c-.sfuC4lu)uBZsKp
%`2<6PArQt/6Ec_l0\pg>eG-X!bUdG4LC3/d!U@8#Zm(?Dco4m$N'NGN'm6n;]Nep(J6shDZ.A+"`F=XmA[o%G/G+&=EC>hEC@0h(
%6ZEdiM64e)4-oa>]!RaOqd'!.4^QXJ8!itKfkCE>l-bjrNbsp6imH6,=C@&PPUJa"*pqCPES&.]gniC9aq_q;-cokB1d#X?Y*bl$
%G"/?4C>')nkI"XMW3l<k6>(Q:X#S\_QUUn#pdh4#/1*\]0(Lno#?:YSVW7']8ns=>V'#6dXIgb[+rIChM,Gn]5&hc_PV>&USkG_F
%Z_P!G/Qr"hYU"`R?\obqWLWVUR?AVUc0J/)',[dWU:AG>ou`S_?kpB-?J;<i,aQ4s+=dHYd]t&YO,\GLDK4sW^=cb4NG7Mn6iOaj
%Ydg&Xp6s0*LN`SQqV@A81!JY^fFmA,ngs=Ok=q4dCRA%[^`H&qT'icQ@**=??^_iK5K\?D]W9fmbCicFI2pOfR+K[oUOG@\eVDo)
%(3+]"'X5*+pS#fc6r!["bP7\L7>PTL%&07:E9ecsfJh8?\=7+IplX_H=R'+1L<-_.i"1(+?5(=R2;8Z[[>'jg$d>oZZ];/B,R4[$
%$tM4P(9ql%i8T:&QK8aQB+0*GD0!;I\VgG:\f`au9JZ'lf#s;t?uS<&6R,NP"DXB3WNkGbY9sV^i^e'Ok?dtcl!VB>lh+K_Da)9i
%[N;Sns6!gV#j=Ul\GDiD%I1153(/*?`tT6]*p4Sl>Y?)\p=S!mAUBk#0Q[VGpW2*fg%rt3r]T=HBn.D(5eU*BMd:"DqDQL;C(G5"
%,m.0gARsoB0K8^8U)mmPH^(M0kO()n7INoV@Bk2i1L+S1.L0q`-96>)mp+t$FPf.>F!Bh,KhE4?mgQ#oRpL23mpn!@:4I[07KU7?
%,m__JU`=#1NEBuCJ&9Wr2:g)BNID:CQI2POUdaXQTnWI>dpp/0n,)s1,5MR"/lgMX'nOl]h9<`DMaH\K/V5;CZnnaF[j1oKa/:L0
%a&=d?P=X`kk9#sq/NK%4P?$If4?D;Fgc0!G-fM53GA<hqDm5IrIJjRKZ38RZRp&2aMNK;_kLD0oS/C`2>0SlT8\PNF(]AisRQ[=V
%E4EUsomHa1V!%jnU/u'-[,mlD$mj^;/M4LO7)=7H/%=?:UlK$fDic"W^tkbW7!,1l`k(8q\0qcINJK)L5.4?G2'<*)qKn)B\Bua3
%2YOK$^_juL%9(]ST]li()L#kHiX@2qS>rfP!U_KV;;>"7*6uFNmH'$!1cZo&5c45Ie"NLVIib?X]Iqs%-*jL&hl[TVAYW5_`a7q0
%[1]-R>C9Gp:`9$Pedr:@HHV6jn0l88ns$&!J-ad(;F`W\0.S2^rZgt;9+n/'>"Qe3E1u=.9EROQ["G=?#kVL+ls2LdYMlT+mhMFo
%AH`@=psC$Q1ZJ%EpL4IoVG-70X>rt"$dI;,HK(BtS+Z>,/EIs"-<!8Ilc!jLZ:?nR"G_PY32K%U(AKgCiFau%(`f?9i#HOq>i!,I
%n=++t9JER+'a$NE<Mj3mk'"BVokid^;(EKn4"5?cNq3B71!ao7fb]kS?JX305Qak&$ZJ8'NtUp$D=&gX/79%32&_9DEP*Iobs)09
%'T,XE5P^[?s3"O(LKQ1o;TOG*00rDA!j4s2^/bi3&Kn[/[8W)0O'JLe??g=uUm)3L:q%'.kdD.'[O2sp^i,ZKUI&U[==^!`r&.7(
%CjBl>]t)@&FXf\hep7975=Y@r1!\F)i^;]N%bG#D<][1a_<"I:j;mXno;A'4O-U(EJMFUSK'h:_nK)T$\7.uiI,EBH5hNI!he5[V
%(AK;mh,9mk>.e=2p!(;c23H#$k][-U:%Q.-h0?)ijV`&ld(#>Bj9(%JZ)2M#Cc[Qdf7u!sQOki^dt`l^e28%%QbkT8<82d6;'Xp8
%/e`Sb=fT"B+)3)0XiNtf+p>Xo?tficq`MSS/'0?J!>3ii,Mfn!pi]FT&sAVEK>%*@[Wf:QN.IubU[?2<`0`!rk>RJ+CqO?]P@Q*J
%b*/CsRK?P))(i:;/;FoLLZ02TBoH3L(>(-okWgt'g53H3ODfSiri>on2o!>S$CcoT+BuqoB'e=Z2Y3I(;W-a9ica9:LqPV)&E&Z.
%rW+:P\_H!#W4bk7Rle-5pj!W6X)i'r)P@,VJqPu&R':0iAUL9*oI+(?M3;Ff*c,Tr*C?4<_I,?ul>ZZ4C\YS!'E"dCc6I*<&rT\b
%[1TUd0B,,:T/3UEfp[Acj]S#PHit=N^r1RZ1j=$lmJaXSGI24okDlV8U>'1),OhOTK<k5+Jss,1Piuc$4sa,BZ(5O]$=]@E2(Qed
%J\I(4=-ctr@Ga2YLus2L$iK%Td\7t_PD#aYXR__ZI!Ah?2`LG"(fO/YV!Z<lp2!;\+96h8P])MWbJ+]EUaO#ZXdlrokt#9,RIj5X
%*G>_&i\q5ZYTA$XGQajGq[L;(me5ldO#"LZ$rV[FF`CU^#RKTII[-GSTK4^/$dc&1Pq_3T+2/+&<kL[;eoVg"kEiJgEms:@k$ZiL
%%,d5c.sR#Le:0t\Pi$TE/6-nT,@&;'qrpGm)M1Y"fciY8O*%.:_!f,``R,(OOrX>].U)uJ7l[_FeXQ(U$C[b7%c][c^<Q]<j(U<E
%R)4nH\T:LeKts8,XOn^J:7D4FFqiCp##Iq+3Dt>)X#\V+>Osn0)ZD<1#@jbgl<PQ"PcQLE=FD;4]'O#aV#;3#4r(6-9?">INP5@Q
%1pk?'IU$'f>-.=_XTGulc9gB-<F]XgQC%\Gnb`,09=jKUFo&Te>--IM[Ls2hY-X_)86-Jmlt\84%L`eSXJEkaqP>Ha2n+(30<o7'
%0$g+%>lJ?V8;q5c@8"72/r&\U@g!D7Y=;bdhT!%C,M]V87AiS>&qUmpf$Sbr@X]Fe$!@4"@i=8*qWe=0Kr7P=QF[S\E6[76RnqQb
%JX6YU5G.d8YVtJtqWernmS*S1f+Tn.JR:W_Um1'O$hfn>*-E8Q&>V)RFgh:&&sC\(&>djgl;6:F&\Rf&WLq$gcg-Tp@,k5R\aAh0
%1n7,GaQDnAS.TO)2EY"1g#@94/5jDA.rV".'UlS1MfGnKnQ7TF`X!oQG-ee)qpT2QVtu@80%hDSDB0HFX*2urbF!2G2J.AC$7ViV
%X1&d>P$`9J0r'!fe(hScc#Ma1nGh7J9I-dBTAr4E!3=E$Ur0[%+jY#V5\58i[@qR+Yu'i0p_o`,dqqa+qqQiW=Lp3oJe_i>G=&/-
%%`N6pE_OXkPV)4am=H0pkncpCjrYjd?jU%.Nlk_q4.W&jA$H<DNb(r4:&a]ACA?#Y#,?<h]DgmJ;M789-]Gl.,cKn&GVLbqSFO_S
%ffn^C];#I^Y(dj<k8?RqfA$r=!+XTgdi\2]lBB-`T2/O"np_SLAAd&]X.Z1a]3Y%eTl`6#C@sT/K5/$V&#Dfhm45lk8BR-TQ_%B#
%7?M)ec)"nak4IbX,nL@;a%35[>fCG2.\@2lE)83K0h`%IC#GU1?`ng8<%4?f,mX<AJGHTp^ETjBKADf9N>u/353r'cUGbhR(Zkjf
%#2X8^D-u"^rnXV'Fr/\(mV9A3PsmpJauK@:"O?<r@MSM-QN'!iV(D%OQo@gNb[#32;;7`SA##DgHH]M4PJUH6g>5.Ki7X7N&K%jR
%FL)^hl;Zq5fk5a0C8";U@=9@*IXDa74S2.g6Y)o@$)Y>da2(+1\tNV^&YWA*qJIe>o>`)64oZDC"%erBeH0P:qr'Z3s"RV]S1Zdj
%\P8&@_Qu&ler[6\W^sYg]o9FC8q?>+ZPX]EWOK,!@g']^eT8S+]*6VG635(9B'#7[5IT!r#NUhmCBDM_J1kiqIXaH\CKuukGQ\o.
%he=b4YpGrWX.6EPEnhn!\*^lGL3[P#-48Rj#9#-,ca2F&DQ/\%"f"%^72:,fjIVAI?sU6q482VgQTg?I@Cj>cg<^hLmQ)##Rsi\6
%\9uF/Q(SkiXu<NCo+]^d`YZK&7R<(#FJ/njbYpb+$@H'I0iXn-9MNU1qUJk<Z,,G#)&fcN&<[km(e3&c<46gb-,=#d*a;[7.rBs&
%59:[hQLFZ)Fp8PaT>e1u0J@6.5N'K&+r@Rf$.Y-hU%bicksTst,I8]b>L6bp4<T(99_`b(rKKlG@7Z<)GZof>jHVVa6!%gPWkCE*
%jtphOCHH6uJMUiQD/3QJ5lX]&H94Jq)ZO#;D6&]QntUXs%]SA!1ZFbOp)$<Kqp6IS\ACeG8'_eU7omSWM3H5EVdZq(pe,BXf-CNT
%;^\%4.[]MB+Toi?mA/?ZjBB:HW5@.*(HrbH3M!@F71n`Dn7CtBd=nFmkG8I1,Mn5C]?Gue.JHX._`"?q=+4\[29[TXIM/GMqquHq
%$%n0frLU>YUlBO>(0/4,E)9-e<L,uJoXp.)3Jle8fh%Uf0o@Z("P`JS%#Z0GT/eVIef>@J<\#oFA0MT_)M-UdP>oVM+#30bagZRZ
%(-\&#]MDT:9Yb'kP-Ocr<O"r_DDp7H$;KqkkqOAW^(10UI%[+pq?sDZ.kOlQ4#TEIPYFnK(m!/2I6i4W.j$l[EGCXaiBY-oh,VEC
%-2!<l?XZ9hn>ENaM9`h:*M5`Vh772"DK&S([)$1+'+m1<4',SBh0Q)5"lKO&.#cG%Cp[4OJSCS6Rph`I]hR+W7;3>WN2!/R&=4,?
%NP1hD@V!F;dNaDbCcC?]`-)84=Zpr6BN,D0>?:bE"!-Jf;(hYlAH!K&Z=mkP!ZdE#"&_Y)iS-sL1)TbH2.ABN2-%!OHdQc,Sq//-
%)I1-Rck30U`;+]]c?(59k0m-cGZb/Y;u9n%s)u%-<=Ya?P(*NFm2^_M&VcP99"&]p"o9>B_YFjCTt9lgmnXFB<0%D7oQ/ap:?qh-
%C=&E-P*h7,gkStdZAg2nhJdqO"g7OF=F.Bh\9So%C>3g2Q%],L\*$I+FTXfE4>'n]0-..[=GbC!B.`g"Xq3$'@rtf+S,%5/HAj<=
%'E2]?ibn@H%ki4OfGOdc]!\or_Rt:Zce]aDl*Fpsd"\Bq*_n-2#Hff>He_N`$Q"(/_'/K;,K)G`e!K2)Bu)Q?7"bE]VgJ4CY/eol
%0.Z8/VsBY/5)7rW3=F5kPFDSGIdgmBgFP&*,b;V@LtJR-4K_pP==IDM4<3h9nK@&t4s[NhPWZ5!puPQU6QP_orK)dG9<&_*O&Dci
%NMc607Yj.mRo+lePu]2"rCcJ7l]V&u7Dt+j+TF?e$#"I(otNZPl(J-m$)AE$6/6:T`uokLYs`LGHJt6<CPUZo>_)?IgIn3$_eOc)
%/e1*'nXTh`3:5SIZ%u$+DW'?of5Qm0qo%>*-j$\"ioC,`\pkV+**,2<kG<Af9Wp[+QS,JKQI")5'nbA&1,Jco/q=sUV/Z*m1jW[V
%HB_&SL)Ho."Y^]K$B-a8:4(RI`724,_Ng/<[H4K/?C>fbZ'%rk+W,@.GeG8D1F.dlMsn$8po.TKS%h+`[-"CdkE(poU8q'01MEID
%PNS;V@(fg!FfT95G?al7o[Y5!,<WrOTHi8JH>fCZer.PEU27Z]`mX=Y1o\(G?tbLW!`a<a!R-7II9G(Y.@CcnQ!klRQlQ\pX<q_9
%1,'sV8N2k).[Ps,ffa?-.bj4!Em.^p=-Nij38l#O/ILeY\N^9I0jW-1obs9NWN`D_GEXb8aAU*,>WRL<3^]0_!f)30chZe+U&uMC
%_6`p(UE"'"hU3RWXO(aA+.p[RSsQUQ?/5-V6(=%XV.2Z@l@<OSg%roc2.OpomGUfW$Ne^kB=lKF]nj"Hq^S+<=(dk0I[VmV^\Q'`
%@3'QD*&(:q0?B!?)5JKYZWQO_X,<JTjKe(oT$f42]NK+5MW_6gmh\V:e!K'bQRSTW0JJDIA[Wsjr8HQmUBV/iP9s]Ar%IraYGK'n
%?MR/XI0h;UXGA*$)d[Q=O(>'j`7i0"/e[H4?RKouc$qYFLVEA&Kb$TZQFs\DIn3n2@Ecj+q!k[:.-@^^V[k@WDGTO&FJCgM/_HV!
%Bgj'i+D5'%G#T1!HcP^(V:.d3pLWcfUD3FL?8]-\.@>t;E64*U4=q]Ih7H3D[st]dW.OG[`I\\EAfY6^:ehDuqdE<PF]=-5FVL`X
%?oFpi$I85TdMKt&/0ir!6r4sigR#>_IeW"Bs5^fd?,NpJ62W:aF)Y\%rBHeS3BpYros/*JP>@P*^-7\]\^XEb[dopHZLf4K^f4Jr
%G%e1`R^0^AC^*=0&*n$/@.$6'ZqUKrs4'_tp3WnU@SL[+g%,R%2k;bNp$;SRQ_D]8Q>QE<.3T$L"<+G$=1#eWVT1IZPVU8l\=C[O
%2qQkFJ#ra'en";SCF0/ZU90ibEQ6NRTsj/59W60USGaUEImoi=c6Ir7=8[okTK\="R:28%fiZ#dr@&7Id#apI3`a`4q<JGU6GfC$
%1F\IgKis_>(ntbeP[qUM6rrWs;uToflA4-IN4Z(e-dMRh,I1&57V,\kX3A&bq)";q^:@F?SIZ-F99A$;ZhX37QmlQ3(*H(N@NoLV
%Q^O#^o!W'Pk\YE)\ug4fpA.`oB1QYMV,QpY;(2jpkY)K7U1]-.;[bRkq8<t:U!iV8aONqL?"8Z+VD\)8p69qXSsM(8;q:H!W$0F\
%RHqY-4j[$fT=pi1CUn(u<X.lbBbH0$b>9TEQe?*l-FG28<+ha_ojMU$H5;6(m?g3#.`^&@T12H:D!a0./fAt_ghS;L,2JBYqdJb'
%kHH'*@<K#fmjI)_#rsTS16t@O/Oj1`K9,`iOkg:Ij!mNX6pil[Q@+@aoU!*)5B<tu*)`^sE2qJrhip8JWJKXS7Q'U'(_pQ`s%C5S
%Dp$Y9Nj?-8lTYl+-H698a(=3oZCd1#^XYIeHWh*W,(9?l1-YS2T)K%"]\1i66=L7n0+[3Kf=A>RGqN*jUW+(:D\6A;^O1?B'bfl0
%(q*TblYBq;-%dpM\o4E]ENYASS%c&Z\.f!,!V0EmAtqTDrUIYj]*\?sYI\hZ$#oV2Z;FQp$p7b%j-%c.bR)P*dA8n(oB;A20Gq/R
%^X)5ni9mR2Y?-U8m+8`D4Sn"]TPnRPQWD0--?4)opi-D*<=Q^4IQqnnd=dY7o_)rGP$>#lc;;f4+P^j:#+Fq>rZ]9_-("[%=&+=>
%:.kBK0Z$aT<)ST6qP3N>80;KfGFodQ\)?k%LM9ph#g`P5J"Um2j_f<?c=-7]gYs3NFgq?kmS&N`N`tNg*X@``Eqam&%id5[hp0Qk
%$(IV*ArOR4q@q(f:6T#@]pMq0jfRiJqKc:nQD_sbXDq!!n(AJ`!%egr2QY1QeXA\*@*s7@7L#U_Og0+S[NZ`u/rfT]+1j!ITH`Tb
%SZR4MfUsmUa.Lb5C8RPC+\=?s93]q</E:fp]i1]@=Vo(PXQ"II&EcjGfm-E2XcJ*CCQbnR-e2,hT<p\D$B0uH>FAqKb<2h>iNCsu
%*<XaH'$hL3(sWj_Do0B4lTVfAIR1&-!>$PF(M;jjJ+^q<BDfeMp`"ZlG8U9k$oR1rMhVHT:CV)A0S`KLD4Xa65l'Wb.cGfRDWSgt
%==#T\03la%P>FGqfQ<G#&UKb!-;*cs\"cn88nD_K?.Z`LaNeY"#.urPD`)@aK.A!X0KaEkJ9"fRFDhP-A9kV.U\W=_9bI<FZrXr[
%XPYO=lo@i#V,X0U@77*[Qf&4V63iGI\P&MSb0<tBe>mbWD(bud<F$WXPLDW&inEuTH.8[;jUOf:lX$(DfDC&fqKs@.BhB\?=Ful6
%TN[MePC&l`[lU<koak<pX"<?VLO&lG;W$c$g3j&pF^2-j-#Rkg+i#h\WQs,mcS%AUOKQ=Bkmf6u$Og^aleTu\6MX,"[:tl/C-'TB
%\(-0:cq6M&c!$E1Ktj'ReHDL15#W$YOf[hqVNHY-"tY;m>gS9ULWc<)AUM&_T7K3Q?<PQF1&OZBBF>f43%^GXd6F`+nLX^p7fhjH
%6*a['h\uGV"@^/GMT0;ZWa!tu.8hZd+5eoSX:55t9Tmb_&",k5'26jqQKlpU]:!AO!!C*o[ZB/XK+^N<_d,=K4J3[)HO2jn@HLFr
%@Jd1eki^!;iPWer?QSdq?OJHi.:nXI?O"b1[*0@Zp(X`iZ'\6L4t?o_lq+F'nr>W*bN"#:p?Sr;$B:YF.\H6"D<mBin_r:t<@KCC
%+kdRn%i4H;hp:BZcIRgg-pqhWA>nIAn!<7S#&M"9Tj&,:kpNU"dd+6W4l\-6'jJ"$+stbeRPol<:D^Kg-//AKHa[C4mq3(%p*\%1
%5KaM9^:U(5h+W?/dP'R;/bRu6rp%nR[X1.HWP4a>)=*6@lH'/NCg6\d8#qp%X11_@=SHpml^Md]0BrS%a*cU,JCgp\KPHgFB71c8
%?Y2B]0o09kC&^dpqL#lc&UMmG.echs7/L$RMg\oqnFBB7*sJ$b^U0WiW!UW]BW.PP+s5C"nSC7!/d2H:*Q0"$[.l!7RGk`h*Y^A8
%`I`0USEV4j:ITq-le<Mr(YTWFJ%__.8Vr"H,9CJY:K,M?S:;=?:Q_('3luF%5)F=Z@soF<De5<k/uqD`;3lXcR@Y;97e,2nW71D6
%+VL<C4b_5=bWERs\OVG9W*kI:KVa+jH>E3h-NHq9`Z!=kLem=-deFDtSu;qs`dsX#lQ5p@]cMi,FRJcJ7JT$?BgMPn14!-r+)?fW
%hnfbN>e4'5Mgpo6If`WhNl2s'<QlukBLIYf@,7VAftjObgq.(m>%<s:Wnffk]rWoD5Nu);S^S7e\BYKVR>i^mLh#GAEN2Tg/"3.O
%6B:s*:FgZQY<3FhnO;`>hM7G3XJ,:NIn0O^W4_1H/5`,jVaKL$Qj[V<a(BDEaUsoundfiYFp;I[]b1?mBfdi#3'OIo;+I8i*PcT]
%5*Rr"[ac^H,ebpY3Uq!`MfR]p;[16[)r<9%!,!4jZVnQa-dF*!:52K*C2*t0SlR&h0L`&t9q`u[ehC5-Oqm5GMS0C#H(5D5(Oc5T
%YO'gjj^'<"-#VQ1Q^f]]5/cSC$Gfl!X`jV]_PT;i5_'<s1ie2H\V"aG;2,CE[Xc5,g5D9'I2aj)j`/B2W86Nd2h$)L>W&5d/3p?A
%%&3;MK2-003Q=Tu8e.H;%\C2[rQ_O>*Q5(6VZUM0@MW]ZL)r3,+VAeF4N7g#d%-PDT1^sI7l'lUhF:10Kne]dNlpp$m[,us)1$Mr
%[eJsrY\2KrM!s8Lrja4=DHE?#0PhV`/#(je.MabNloTuj6M]"fn&).2@Pugil8!AJ2$TmDJq_SRd,Z-A\LFn$Cccr7:5'Y\m=<`&
%Cq0%jk]u?&G=d'9b3kn/j.>#UQ_!O<OL%agP]6;5Ub9tLTPb,tgU;4+c?+A//oLd9id`ODMQQ6"O48P2(6UAta+biaeQ(XXI=Fo4
%nBF,0S!q'J>0^Ua?ON:d.!21edRR/J>6&:qQBZ<(q7"bRF):QqZG12O>d@?K:<VVX)Q1&M%B+a3<@6j0M=\b^j$'''?i<$&B=>bk
%)R'17J8upR;P.+3X1+"&r@B\6OeVm=,Rhq3VTTgBHQ+6-,ZmC2;'c^5Yu*d3kO=<')r6+RiUe^9$grh34jW-Dl7M_l*CmZSrqh:r
%<m;O-1HkQ]+)@%<$Md5^.,gktl)!/ce%D"#!Z.9"I]jRkL`-XBn4oO:s6s+aZXEE76n.6_8'/Naf7M;K6Dfds>;Gna7?`4U4ne.#
%+')%?MV5QTI_3aFiM`p2N^ubB$Z;1AYPae:_\3O\Ve#1IZpnU')<&^"IQ70SjpVUu^%''AqGA/0E6iR3*AMDbEL1^XnM%Y/T3Dqn
%Flb;j!Fmo0F0]9>_rBPNoR>o@_-VtgeOJF/?94Y7aeMSf1+g)Q><`QZ_PcGV[M_0^Yo5$cEn&bfR!3uQDE(J-9Q$ZQ;tkB<nk67_
%kf+HS\d(gRj"8/KSTOI\HQil9/(qVZ=7:*ZY=GIL!_2kn^*7?tXjljoQUNYVN;QkiHY@H8'D:e=a!lcsWLbnU4Dhc[^Xdk7WGIj\
%Tl$F[e3?.%$ZgnYAOG`4WqOO+Ie_.PqS``"q-eQo,;7).T[fJqQOH_Kn*gZ&m00sL%ETZId>*d7^9me7FZ^o](pQg'KKS/f5$K%%
%oTO+/?6;Zr:2=B0mH;[aaQA2i5`W`lfdOsY:^-3q<]nFb]e!490T*Z8bQ`Fl9%[Y5MQg!:HA+pi)OQ2`-TWGre\L?II2-,lEUk?U
%_Q&)3=cbtS$d'&U^(M8k^!G9F;&9g!.#"OH25+nHU&L+<'NBc0d8>(R@'//H^caj&b/CgnYWaXiD]\/(qb?C-Cf<@H'l"Y[=tV8A
%1eQ;a:;.uR@.9iN?p/d;g7&/lQ22kcQHg/HC4&DC7c(J4Z2<L*^P6[5)5q4X/$HBc#8GTedM:CV21el_A;&OtQ-Sq*"11NmTO:";
%ETpT*"qWV255)MYFq50pWW6HsBEt@kfcIsKX)5q[7d;\KfBb-M^*&+Kgq?)n@$AO:A-o\h(,54RcS@Q80JUd]<efZ$cq8:&%u"Uc
%o'Jk:/N8Vj*`<Zj/m-#h_++Alp=%T>s#NSt/(&f*TML(q&83KL!&buNS$<n-c>Ga*%L1@4XhdpYZl#m!IEj/8.L1.ff;!KsI3:+K
%FE'n?jEJ6!$B`6IB>X.b)N&.IS_'UmiZ=7U,oX]80n<rXF^4rqI$B<4;%%-mdYWHOC]trrRSeo;?hP>]^Fh)OZY)\YdE\?7#a!E_
%N`r4e*KXA44sZRfCaT/Mjp+$8iuq-un%ilbQ0VlKrR^U4eI*MC?FL5Z7,ujA6%31gn8N5t^(PU.HX1s<*^"ZH)CmsfUE]MdH=8me
%ML:D;s#&hW,nG+"L+idV:Zs1*5M\rDkNfMPft76>c7#-QeBuJSFmjQNq&(Y]2V:$cl+m*D&G1q%hj]<gN"ZBD8_RI3bg^/cD=U4$
%)`s769TX'($8K]Fd3&"^5;jJ[>S/92guDsaO>m1`@>u^?Nq37G$/!dcq:?Y!p\>Zs/HIi([<^Fe=HE96i<b#E$B[/fjKF6R0=QM'
%n>tC1KD6C6I.ra6'9<hPN_*`6T(EG\aE4iL`r7["5L#>QE:Xm"$j\&,<`ciPN3[r\6IKB_/ZMBT,gCl\eJ<fmQ,TuZQ5h_^Qf1.l
%L=KOK[OOoD#n,5-;17E^?Gj/a4>,H\5[hL7jN?^-K^8X8Gi:$]OX+2:hEQ@OqKM5@&=5E2&t.R<81N?D\HNAd7S+oM]42LN#T8&i
%NUAb^DD?P3NV7J]B@Kfr(d&IeHgYfYg,e'[dC$mh)VoADR<H55@m[d1/7(\j][!\Wq.mE*B4^Dd6'809l,ZMB%k$[l07.9C25<`d
%"/n69D$:)H4U$5I7YK[R&C3VhJ2dfDJfBt'JDIY/9IYrg(s?HJ&OW]kPXT2dF'f)Eg3rLNlign/Q^\F/UL6e-h://bHGcW%KSu=l
%8jW@.Jo\MAB`ufk^?'K50*V?o4_Yuj1R<:#Qc/iO7Xf%<qEX(SQZ/,\%.iX*ARV]n(kk.sM5t/608m,WMAS_:mE2Mudp2ag9XI,1
%ELXGd-AD%gi76fAStBU]/6I.]NVDOoF;no7I;cVH8(eIQ+BnYaLZA%Oq^;k\qT'LpjN\O]+79m!NZuY$KSW\7^s]LRd1s83rb`E]
%ras%GfM((]dLdO\kF.nsKVD=PIa<qiT2g*&;JBU1!j\>B)eQ!pdqJ2sEmN*Y!CtP7]r,L(k&Lpo^8D/>9G":u#3?iHA>AfdD/`0Y
%AiAZj78K[4RMq'6Y3JQ;0aF&i[5%$D5*9[l<:A[8m>BH&ar_!e757Xc"uB;5=@/9h!CEer;Oc7*`YN+q7Ct]KcH*36h/'\S(Z3[o
%S0j#e^PnsVXjEW@9(([8I,$c!Ig'.?.X+<[F;bQUMB[hG!?=E5A^=8=32CNim7<aEM8#Rn"V/B9:ss^ed.X)uYP/j;UQj,Vs!/H>
%(!U?LR6bhpf$rP,;n,M_jHq$"[fQfT<421s*0I`=)'R_;"?;;="Go@.@?#;B)e1b6\:,/Ri&.GRQmtImo4+C.Wb@:BdHlY3@J)%:
%V[Q&u<U-dp:;GgqA(tM6>MDAQkuemnQcg<$PQc1lD=5[I>N\m*T5n+(WOosm6d)Q8p5%0iP.(6fJ$E/@6IXl6RB3g=4nb*s2WKoW
%Y67h8+$uHaXb$5CVoKfG4ODce#OK:hNP::A42m9r\2lL#\K$kM56B6aR.Y6aFXnZqHtj4fHsneK0^bL^-c:!]-8F,hj0)*gE=B@^
%9.IG8%\nXBeu`nH3*SuA\BW_<meZ]aCm+[`F;L,CPqt:3+Q/Wl79b!Fcf"MrJ/U44RuVoEqQ%RuT`jH9W8uum-ComN^:U>+hrM^D
%;OjBJs0(a!hXa7mRik>fnG<bdI"'``?"he!A>4E%5:,*bH%DlC'e=m0]K?n(gEQ(Pp%V24*T@%Bo>@E`Ehk,Yc1Lgg$c/R')"m(p
%U7T]!2X8)*9J8YqE+2F^q)$RQc.,/n'96'R`'rkgRpEU/:IuR:atTE.G?Y;fW+J]>j`0OlH/Nc1%\'(kU<0p<^2'tOCi0J1K3Ed6
%e[)pSI=b=!,so8,#jn1cEWq@dd\4l:mUE<Sc@Y\&X%ee?TiNuqI\RH=r$NY4ChWb6\&Qe$`Cp8uAi@^+JDt%)jL"Ze;n\D:B\@66
%H+(>oc7rNVc\-[n>ZF#<JkG9N43A?3E-IP1<b:4"4&pu+TNl.nU^p8Mn^iK!VXP8UoClF*^%3X;Z]or^<h5!'F1k2@K$O(9DQW1;
%#\J8?k'H^l^e?`\,Ob,"kgHEM5-qFTW:9^RTh\_rNZ\"mMI%qNeoC;TZjbsr'EDraH3bP9mr<d84A+5<(O,"d,[6oDR=eDVD`D]@
%k-s"ul8@1!jo\_1GAFM#:7JX/5ijjZEDY$+4C$51As*,M\WYcCP:jI,]I\3[!s"/XRs-.Z:C5MgMu__I9JM&d4!T#dD.f4K>NNAB
%.(<gumV(]Z=1\]IDRWTGZb*HA"ehtKi=)fC=>VU2T(`_8g@">#FYnbb78Pg%6aHW="\l3.bTKeFe_R?k.Ff1r%385J%/RhKrq\I$
%XrbGsKPC-#SVTMp)i8r`kDXot.K[Dr1rcFh;0N;-Dg@aUYopZg4Pj=S"Z=&?)$Sq++Ee;@\g?kLmaC/cMo+qg8cOe5/Xrn\kAp:D
%0l/Xfg60J'r8O([p0m1K)G>Xt$DieV?$XpYWGI3-.?d,,AZO.kT4)fsG)kL[elne2-`/Cc+.bs<R.mrbk^,tT5>$h.16"uh<RE$D
%gG\;_bN>$BA(>D?\QCNUlRW"SAUHp`n=7[YKp'lsZR^H4]MY.]i_ZRGc5sh[IVZ!VF[nXc$5*h%ccn%40r^U^K]@E7j]i>H6)7![
%]7_U#Uk!r#PHY?Sn6oMk,m=<@Kb-Rr9GCBk<$nWO@a(/[Or&@B2!tTI9]oe2Ys&&s'#Jm(YgrWb\*$OR;*[iaBV`mda`CCkm9_1n
%#](fV)';2`m4GE)gZAS[hR"<+_L:FH+QaY*NUG7NB2NsE)0!=&pE*=&9N+I)\2=-RY_*/<B:u%m+J7<@BS3<2c''["LZoNt8['qo
%@?!4c*!a\4%Y8:l$_(()9"=k-o%pN^P9%7F],*1$iS4QtJ68ru=_,poP1mHccpeQO7MGuVi3Wq`_.ac&UiuUlVq/oFXS:4c7Pi-7
%edR-2ApX7'_]i7]f\Ci@[IPhtGVk(f;Gh3VR]`+Tm?8'\js@G"9W*"YT:6*lki:?Bn9;?goP>$J*K8i%%m;]#G]=M6TIccmaQqRi
%5=HS*$2k"NN(_:I;[[sSl1DNcA"I>kYU',9&be$&Q0=l%N*p+_/2M8%,[_[7;-Z=ZWg&PMVjI8/o@dN]!fNpk6tAu`$7A'g$?bIm
%R.jG./_g_)Op<[l"ofD]'SKpU6kR9)rfR*%&SblZ^HEjl8qKc.:gm.IE<$.5I?0BA?_Jn223r.`b\-cm[m.@[:l=)EM_FS=Fs_40
%MD_mD,#KNsA[VWJi4run-<4jpTDW^i:/S)$PX8#ok^S=D>6LKg-Bc*1(8u=Q+3=nL\<]AaS(6I8j0a^YAR?ES'\UUqd1YqPCf#^8
%^0'924C;QYL\iA10tFGR^2]3lp<&B]\(gqS9FrE`Q*I>@$Weo_rS=M8kho'XZa[I4NOYm9o=5[%8`;%J_;m`(Z$u[cJ)H9W(l5B0
%KaR-uS$DGDBDOZL\QfD!?VMlWlm!PA21g$#o?YVI:tZXV8EAXu&eGHdEDGIlnE$sX>Z0F[_gueLf3e0lJo,Hn:S4Y8H)=1h"<j+O
%m7#hYPIpM4gQmo?P+TDJ+h$&3p"^[6ZQa<_GIbJfghX$->=ah"Z`PB4QQ[&ZCn(q)HGkT+6)!i?Dkn6b7r7sfXs5(7ST<TBDE[nh
%1\;2+gD)=.Ta<iIEH8[PX=m7n13r8YD2hk`mB-s#T]t!gQgbP^'u_e:#f@l42L"@oni"\R2J32!`@9RO;U$HIOJUd=P;;W8g!j?I
%k)sSU'`CRlaR/.&H+i&u9E>Xuf*q%I\:6oh9K*Rp?RdU().d_Bjup3g@<>jf-=;RcbPh&_Y.>6!'s+I0<Nl[R5j0u$XCcc?kWL+2
%G'>^`rC+?IMF1g3+Zt<R,qnp2qqhI/Rkj+3n`=a7.%Ja%<\_XM4$CaiYJfAGS&hmEM&hiO%OOlOHu/;LDj%"Vo,)nq,"2_P3/r^L
%V]ISh]"2pteKkE33H("L7u8XApr$]^hPf\+!g:cb]/3rJL:7=%Ls6BX>..#V>l,+FYcrh:MX4RPK8&L/>Y:_Pfa^ONph0qSU!.C9
%N/$Hr%%MtsG8gp[QA,qpr&K`UPf\ZnJ4L^k<?d&/(<J9:cg9mh.b9G#?LVBD,N&iE$PdEl0VR#rlJTKJTWQ4><?b(oJf+Q3#;r]H
%KlDN].be*J3e<.YY[53I8PtBI;eEt,+-TN(bp+CRTlo.#DT*TC9\9"B2F%DNo?6T_MLP5Gntm#<S.JB3i<!;CYns6/&fImok]Pk6
%p%r&Rb[Sf%-2NXp(ff'>=pCWuE-83'[XrM]#kiE@6ST#[._X"j`isXT\'b\qD^8mF'E\Cj$qOac@,)@S0@]dLX)6#J2CaFs:(>tj
%2CsnpZ-N&;[dUZVY:?=3FCBM(\`L0U6Km50X>>#YmrG8q/Mja?Og`9[an3&V8OrSWEX.OGNHa.%Eb':<=q)ae-3P\2g]*WI0/&g&
%D^eF3D/&gg=a'5<e%rnb1a1?YcTDhV2+^;?^sge:m#*Sa'E<04KMVh'64]YHZip(4.iM-SSD78SpHhJV*]7bV]C\)Fl45dAAfE6\
%`-G(<2=Tp%a-e]!6Ql<1?H@egYa[uD;6`qI8#M3=[B4.&B(?li3[56S.69lbKOf/;MRjKF\c/CcY]'D2XGDNiVH=Z;bsX*(0t>=2
%'TZY6G,<GBhG=-]eBr6">&b@__T@]tI-q6#Q,?-ZN`"qld(-#f>R\6\.D!ZLk(+!\Q^_!PT8ttUDN?R';^LAMj7^O3':)e4L>.P$
%3O;^]%_;%qg,C;U339heq=CFd3?8!,Z!I2lUX(]NPp3DVQ%`LGo&hn/r0"!hPn)4<L?_0r2"C<bHa,%0[j_)qBb>YFcDJArD2"IQ
%eHNk4/V+9]IXToVLjc2C.&^?B!MWOk=*p@7:MYLdrn@6,iljG;b=ETRmjs08Q5-]C@Cg9pVW0DcVn7KddI?qhh'jV]#d8M'6m-H,
%3>lB?7Z=*^4^.D<*:i!-X0+?!Hd[F)1-R6809jOA/_eEHh6CDla=3k&De!*GDSn1@c;70hp?Z?"kQnV4/KR=2HH8&))FYf*C0V.6
%\!`'*a_Pu^_C[AtW-Ln)5X6B>8oAT7h/$L+DMZXg/@(fi=*.WN-)(ZDC7emM#u+>=Z.k/t5nlm#qm5,-,\C_D+`3:pdgW8`7>F3?
%4bVA2HF#/h=NkJN%o/-jA]Pa_MrqRR^<a_HVE?-;88k3b]]\f?L<k<VYk9:*Q6O/QS=qYF[5-EhH%&M\@6?u[Rl-C!QH#dt],<Rl
%f_&+mQHpOpWArPYD6S\MVf[XGU0=ll1Bt(b?Y:ip8P(CFX[eRIa`B<[e9a)pFGK(P_\N`J(9S41bLa8)[h1rjB/]$'n`83is33JK
%2h0"*kr!)@(5>.Oag1kg=GB5@89n\5F,)Xa>Q?M6VnGNO7S^9<P7=#=F$86DSl]mI_"Ma#[PV-31.Q=,TpSn5g!'+H*s;8V<3:4p
%XjWNr\EG,9Ht7]sQCm9;3?o)DZgi4WOFe@eEdC5L;U@a`nPrTp[Ug!CI'ft(;6=A9F,ooN`@:TL+%HfK]>#\h^VN"l&(Nhd^b=a:
%hJYk)aCDlM`b,()28Me>2X^B(r0Vf:??7Ih;i44jBBYKh9%1$%>X%(2o=$\S;hWDc22Bc1X"X/m*-)(18n[`s#L=s])H0-L:-DeS
%"ZBQJBMq"9Kq3fGe<85*_noud,fs\LKsh>)Mh*@Oc=r[[]"4"h+lE1E(3<"ag!H>9<\,QY8Tk]Ind_r>?X's[UfqS?]ZGah\k=cA
%;<ATkZCT*VN%j#Od`C:K_&KA3]*60?TT_dBbWF0f,jB1$,hRJ@F3iknc[OrMh0ib(AuMeh5uq9>Ict."e/\jd_6!ps)k7VHWg0,/
%_L)@cdq#dF.TlZGH>oDu]-kB,%cCauGc\@qhfK5FM>92a(2Q-E-O&'KE!JZqV^f,_*s9Ca;oq\4FhkUN;??\$Sl^Y1*Ma"3$TtYE
%e(C2f`?`QEq%O%f'bB[IZKJ",-"iXITd,q8(`OM.\2f/)#gR:Ir+CL),t*jY<5AJND*mHJWW&E3$Jlal6,agRdNBhDFA3f>!fr*>
%4'<hb)lZJM2u;T(@mOH]V_mh89i%+]27H(*T@WUg[Y"?16XIU#a<Duihc<7g2ILYYZkTCC,.;i/bm[r5(h)uCN\//cLV0KN#1)$b
%1:.k>6k!+Hs2T*FdnEhF>"]4:7qV];b)LeuAAQLPBDf:f%e"3mX89@ZhNjPTZnMOJNa!J/E0DI%f&crU=865jD2DJ6M_*VA8`.1u
%)o5Tr4$fa*Eom!0TM^;lpj6f;GF(ac>48uO3!fm>F$<Ptf]e0se^0T,dh5^64Hf'2'/C4DqI3F@#g)HRRJTY^qeAtObFB^c.,*om
%&Y'dXPM;GR81LC!4]E8Em$o2?3g0C,8@mCN#S,!]=V=@[!LC%IUp`lb$('"1a[]Et/"4!BS,+f=Uq_-fZ.<B%gb!:>h;mE9J<]=L
%He,daaXL.O,j?07Z8>e.X;h8Y!>3q#8A[\9eWb>:@mk[d'tj<b2Fk2pl\S=`=D#"CUF2nu.LXscD]^&a(Gf_Y%\:lY@gf.o_l@09
%m(eGVPMXf0P5.h]<;J%(-"?ZEo0$a4(>k/chBo=-5L9=iA]mVL:rS@C'WG.:eWMW(+udoDIb]FEFp"[:Q?5kVKo4!GcS.aXD3R02
%i3!q`&1Nh%q([>(N+J;_"Z]8r,G*KF%5Wp]j!u;t"F?kIF+uddHC:KS5R313";*n5iR.3--Y&7#O-#rlU+b@/K$Z4nb[%nP3/KD/
%n^p[fMSJS1ZpV)%82A^0A`bE0_1EOnqK32"]amo-@HSKDleZFJ,2M?Z',?R;d1]G,dB''2fnJ369T4gDE"B>t`,RVFc7K;,pIMXT
%2gOCf.W`@E3poRN3E,n;HIL_>VcSH^^BBVU!:1]Yg0[MX^5J&\o$YGh9D`Q9NtK:+l'>mfbQD/t(V1Y.OZ5rc>S2ElG.SAWZ%5="
%%p-/AgQi0V1();+$^u62Bq@HlmVM.N,l+4.M&<`ibcQE$L_b5'4SiArhC;gMZFEDr4:oTr.m'gV.!VbjpECjSPCN!PkqI"6R-'bY
%\UL,CmF1A9pbjFeR<JmXGb)70Ipump:>AoUe5GJN)U:G_NjVk7BlZh(j`@[HUH$TM1JU2U;e`j*F+s@74."O,IdTK)hcG_"BV;J2
%o)o%NWYRd$H+Y,XO)<M0?^lI]_70N(E=P/N`1OcY*n-`UbmpdYM0HI+"#<T6^P*=QTe^oU&>!=ILn$V'Je>(J.[(SY][MNGq.RC$
%2DUDrJK2rXaXu`(W:HDa$%:gX1dghU4+k<DHgh>FW??>Ab"F$&!g/Y-hiDZSd;XcGj13.L3cEMDpR`P\rUm$tR1&aY[3X2($,*A7
%o:#FBG10*\YeeQM/\`b'%]Kk]qtZ4\6/X6k]ViHI=qlAGhu.51FYtZ+'L.qeGd`)ZCAg70MpCtXS0:&n`H;&5pgF8VY$jun']M_k
%:"(c1b/4`@.aNLfW&#.FQO4r3Pc4@P'c87GCnW!r23Be7ASc)8FO]*;"O'7_9O#Zo6X(h-auN?eD=&fa5_7ba@hPC]08%d<[M:+N
%h8n89ld8,_T:=d=SC&[lf_2/GJrI?=#mtPA1Gd+uV,;`m(b.gAKJ6Q.R38MtqN26Q`+=<$EZ1Q]M$/eD67SDX<(3LMNFY9bGB<8=
%\[3LlG)2uR/`21kP=.j&(>Vp;NIh^86n25Ri)E@[;#o>24CV.!C/#%%N/?Kd>\.n^1q`R@pDFW=[Er)AP:;ie0bf&0<f95#;5R.?
%E_3H)&$[OT!WQVk8!ehV1Oaa?DAp%:Rt#6,Ok"C2:fU.S2MZ/rH)O"nL?2YVPLGX4XYoV4pG?X18S;B&&@pmbXhe=B73,AqK7Pik
%>rDkE/K3*!UjMLNi=bG4.!$H;2.pEYXA!c[ACP.>36onL5aa"9ZJJFs$#?6%KJH>F:^@TD24W7R<Y?dhY$aa+*@$T1fsc"6lq?cO
%Aa2Ci-MB_X$5.>WJC/+8c<dCja*]kS-I0C/>D%U%`*";HG:l4>*J;d2/hS^1>\?W0YSl3;+Y[!I(4'"72FU%Hs3#?[V#Bq(I`(Z6
%?-_F$rH\tkd&h5_[[H*eD*`eg,<;\8GZ'B*.#&>ZD;$5UOB("=1!EM%s0-0.,!@L48YaiKZ0Da#KJjgSW!^9nJl4?t[\p:I.\g?H
%6+/=UT-C(p?L53h-q?PP,Ad+nD?Du0A#*FjhUSM'lSj=a^]*@krq8:#ndd^Yrhm5ma4p9lI'5`F`bO4?IZM.+aP,K;s+ar(0Z^hS
%&.,T.WC$9Zoiq4+emFk(l!M)Ap[3BX?ZBi80AgEXk,V\WI0MX:ic>;%E]3;:6@!RUj<r^`Mtn.Y6,LU>=[M5l(U`,V-]G!m+&]rV
%j6&g3rW_6".itSnGI2T:7:I)ZZPqN'epO+W%[#.o<"P8k#XmCTQ:19JL3)3gL9B?c&+C14LAn83hff2)+]MXZqA(J.#J=3-bSV7)
%hYAS11dai(KX=i'Q<8RdRdXHV:LS.UH7b$mO"%1&IcIJc:RuMK!',N":ajF(F]g[#=mM"?3L/eEmfOY"@rCGrI3p'8jnhZK"[6_P
%qu5Dirac$#VgnEh?X9`0J%kl.qrod'?[q`UhmV<KfZM#.X7,h5s5WdUs8+;CY<QG?q!!;.5IR3`_f)\Br`aIfS[YS,`^uHK+?29Z
%[2tOJBj[QFEFm@uo0Uq`%K)lC+E^?S=Jg/D59K:Y9fHK<k*a</.]Mg&nPL-s2c6Xl"B6hO#,53)1N-ie_[;ke(#<MUCgg2p!hRNq
%\I0XZ@#eR!*t^);5grtC##r5RAGI\SiAW^H%UpFb>ub@6'.jJ2@V7p;GbL?A`[[:u'Mt'$+`agp0oXTdA5ijYfE9]JRL5[k/8Z.*
%i!Opj:FS+C:-3:?T+(ZYKkm/QrBm>F!%oO<$*co7mhUml[%0e+.[KUu;RI8p*[7m%7V0Mt&7C*;UF>%b`G^V=7mK/(0d[;K"_,bl
%A8\-Un/D$bQ8VZOSN`,p1n=603SdUd_G@@"eE:1m[6b(qM`B,^g0[#@b$S!9hdN1E!8C&QA4SR;<t2AG*0Q*]*Yq!J#.of"TS.FC
%DL'>.?Bu/'fYbm.GV$UMk48j%NH9a]:AFTXdSYq2k3Uf7T7252VJJ;Y!BGHLK1G,K'@cgu2-7jK5U]^34o<KS4EXD824RUk._g\C
%?noC$)+a\UV*fdik+$qWY6B\$,;.C]5,$<c&o$;gk!_7j:aR15C*s^7lcgB7(+(2W4YEAU;,jfP'I+(jS7D[Vq(a:r`.f`"QB3/X
%-Ns%9fY7+B`(d*qg/Hh/7`M`Te-q5:jB<U65t!.7./FU.d+-9[d?dZhi`JZ!0k9:p@Tu6R/8;P4BZ=p=O?a26`Ok`%5-t#<h?_)*
%VGSm;%,&YC7,=7->,R*LW;m&Z&`Ctta$;&:>.m<.JCYbbDaWd<<X%EH67`R2dLlQZagRD,[K-'inm6A;"FB(Vm9HJ[lo@d97q:+p
%=_p:d.<gg$3Ko5f!@[V_%g#/>EJT"6U"A!B`G%AJaI*/^Zl0:fU_+l4#&Supe@q\@2SRlXg\PB!r7WL<+`ZAiF:Lg6m'LG'Cb'Rq
%k)i;_WN(t<3/AQ?f+*!JSh\;-5O8\2$+Y.W%(-XFbU,YtkP31+h#jfCD>Bc&#!EA-p&G):60L0RV-W'!!'$JL93i#F6c=5912`\2
%T0(Tn0&C"I*c21.#Ikd(D13'P7O4Z(*4p--;c%uW4>S:nE?+,Bfk:Y-OU'.T+P^q(#>:3b9+Z:R%]giX^7&_imn`B;kY9m<XVjpV
%&O\60Qd9fJdZ(mB4i(bICY(,2's=oFI=p!$(ka&tMGl3HVP%H^=XS6Xp0:>7o5O54A,o[NU&MAl=*!VQY@=Nh*BK.Grk]_'lZniI
%!X0IN%\0tsUKOe?r`>'^!'N1E0WVu#alV!"s$0na]qpp9>r>,!pF\'?=D@%$`+XiD#^=bJXJ5$'!*YfE;_ugG$dJsn&a;XYrj#Nb
%jo;s-ro\e$GCTXrroVD]s36&mgOK6IhgbJ=./VJC7eY,COoO*1s87BBqnN#t^\pqmrTR\gj^3E2ndf+-m=5-4IufBbm&0k)O8_fM
%f6a6?!95k.&5]K8m)[!*@?tBYO3jklcrm@#.Bo5^kB&bg[RTg+Dmd_0`isG:^:epCc[dc./bAYJr+b3F@"=N=g1CVJA"I7cj%3nc
%A=IT&Zg<To.37+-;3KaUL">8-1qFa9Fk;m4Wu).KBm"LBl=UkC-S&./Pk<GDk*ru?Xf9:LQ+2cfnMQn.LS2\q-8UlGmcgRH9gl1\
%44=sPK6(!.+3qGGia/i."0(9nd3Oi'hbK7G(I!'F3Upl*TofCq-89r$+AY"(5J?t=^V91K;1Z?LqaN2#\;,=GemY9]/)7H^k0u=[
%3Z2V@R[OKRDN]%+0k]lXoSTfDH6h&BlHU<]T_!Cdl-%hAK>SZ]f@pehG@,bHan1BeqYF`-efMBTo`*<RWPMTNh%.I]Y%otscY"%1
%XfS\TN[Uais!mD=Dks@5=M>DDCaMS&D9IGBU&)o]CO>Oo'5S3WB;8cC?&6>p]#se`+R?P,h&l#*lUGk3V]!W=glO'&PZu5a<!Ekj
%00@928]pdBhuJp6;@kmp/B+TMPc,nUGb:l"+%Y>"FrS<&;J8E8B\HSn,S8"@,-cQ/O*4rM5.apWoEGFQ4_`Bf,oe,tmRR]Eh4l.J
%,>sk19Xd?@Mhd^@.'"72d*Xjh1i<ZP:Tn=og`sDr\b!W85_(^iUW@\)IGPO:_gn9(?bFO_mAdYa[eD6Oi+UVQ(Mhd,h'QnOP=bOQ
%3`Gf`UakRY='Yc]5=Q+`ZgMS4e8*c?(.#p8_-1LFRe)TZn`a,!NG>.cc?Tnj(6UQ:YE;HMhI\YlNp'f.r'S=[Dj1)m]IXZKHY@jW
%V\QO:K7WK\^u4Ue5je7)&T5]..H$S#%9&B:3*99rK/@>D`<XdbV]iGXht*=m=BXRA*'G":`:p'oUeWRE4^'7(b:dc?b@)5)^[fVC
%,JfWCXEE6Q$<[S)`8NtX3k!)3g<K8)R,94@c<Ws+Zm&a3/a9nid1)Gj*0A:&0">T$VkgaQAdV<SI?rT?(&o7;H'ojNRVc3-q:pQU
%%u2$$&["K6]>_NqW*caObl.c[/Ib\*]\!6BV_,M(4True4NA-L6eO)c&))n@HNa*E0`d(BiniPM3BJDl1/&g7'h9&%QF%m(W0T2,
%FISDF)S"Hk?`IH/+f>B=[3;"t=i__-l7o:Kh/SA:(A6#]T>(1I#D`,D=JcLfJ+hP<T3/3]98KAlgH53g+.rM\bK98FY:b5Q@H]l:
%9)\#o"NeK_l\obcZUP.CWsB3bAHhSai^e"DkV.:0E7toCa<e)q1\r"Ro:Rl4W/qX<:Dfp[Qc"j<)S?J3)Z%0`-)N..-LON[;grk<
%QgQ1XS6V[,?."?:T@^??DM;Pk'GfQ.1CT4^,k2i`GF_;?\Pb3FpMaG?d!l>G#:CG'9j&f9RY[EeK8@"[UKpAV3N,!VX_',i>nYK\
%OMT$E"WLXhZe,@Y6!b_+ZQnTN13`uc`"c2$D3X;aC`V%&UEecJ'g1@6p07?K2%ld.=e2fn!#3s-j=NmF29hX:6X.aSSup@8[e=8&
%<"/,jCT3PbFce(IaADCJVCWbePS;"U<4>,!Y-#8<IgmrKL?@RJ1T'1^2?i[7fCS1W/Tc4r8K!/g8HK6fkh$(V;.reOQur,=R"fVj
%5IO]>&\u7SQ^amHk3<N-qO9d;ZD92(S(nhO'RGF*brXb@%`\\_&@2RT$a0Wk6d0nn@1r=Bh)<9Z1[eP4&/LH;VL**?lE.H<Ua[RI
%E*@p`G8XOO#S,8=_e_n9(D9s*atiD&jS573XX%%lSrusjn3aU@l2B!S0&ikEJikJVW;)[NS-5g=J)!\tk>"V;3_"8/:<?tVIp)+s
%RIThtX-WcRP)^!q-rZY3k0N'bpa6B8iS56%,#ahBcIM=UF"eU(\nOV!ZK#ba2sUlD$07Cf,:f[%i/FI3#ob\:PPBJW&Yr?HQ".J:
%)1I&5Oahf@UeM&M$@;M-+dgob@8.(O!1S?9T$,J*hZF+VV3DWiAXX1HjsJ21s8&m7Z("CH$V2!!TJRill5IF?Udlk>Qgi)6.p^8.
%:od`u0G-)7r'dgG(44d+A5E>H1CaE^Ca9=A)%nJfn:e)b;;1Bq\NZ8G:G]VAH\Hi@Qs0EH24.c3NNT**d\I4aC%6.-[5nf%@)m-(
%=Cdi^nG_UcGd*T3T1A(e7($sP)rN(khUOT3_q-Q%<./Rn%u[h*RB5+Q/R_=Y@em7NoI&V[NuOP)5N#1mQ24sOIsh[uBk*?@Z&r^U
%i=g6b7iUk-gi,j2^mPX6Zj<jqLkjqak'U9Q91IEuR0gc=T7(T28CcHk+1So5am\ceFgKp`#P36G*hJ0Z.^u"pUYVQ%QUp^t/YP\g
%]UW-[^.9X_90c0L=n^)MC4"RATZ)I2:>K3q/kO^67j5hr^73ToFfu]uZ:;_-`97C$q];*)][#od+V,Od&-6!kSQSbA]GgpG+b<d4
%<7dTB*@LN3p1ZF&1IHdg*fpauq>tpFKIfN9bXZ%qr?S0+Tc9a"W3#j,oB8j>Ejt7aG_)=Zh-aTH_Mc">R/VWWkm0at8u-_d-$0:Y
%+\)(FmhbFn,WX43+/"Sj9MbqgRg@EaSA?[=n&6d*Vi*=d[sJ;ko2,QR's$-->B%Lr5WV/<]KY#"+h&h%6^3%Ae-O<A>BRR[P4G'K
%S=-2`s.25tR.74bm>,.Y%3k0UA,OHD&!gh<j#8?%J+`3Un<&7\1))+]6Af2h_[o<47Y\Gt(n>2iSR[-!-hR-5bO'j&YWEc%)Nj>[
%k7;A-oGAAi.8"iueqc]1_&6Ctn2L"Gq['4jU/TqiA0?pmTAHS#5lo8Olk!<<Je#[\'3/*mm#6-5&Ue)eT7K,%Pd4e:^0umb?ElfE
%"u)3^N#7m0qr4ZX3dZ4\DeZ[s@O3>TKim807biIT/^ik&RC!XuLn04-:cj*/)I_f!;'aK@W6GQu@QGe-G(t2]2c%D=&]ujL3(ZUG
%1fLZpH4Zc)Ur<t3@PQinE7#I`WcTOl&%::aC2$6dK7-i&8a+`6L4?L%KEuoJ/=*dCoIbd'Friel.8qXfL+E<)Li-5;OO]q2jgmDg
%omI\0a^Sg5o)%nr;7^BL3!B:J.lXdSETH&K>m(ctTLT^N&I\-g6>E67s7CW[r]5K.c>Kb]TGETa4`<N2cHhqAX5-'DAV6<LODL'K
%5pgfLQNHAmNO3d)3Mad.!=o_fL'b#WU[>tnG?H%'F9T`pc<DGD!.3b>Np2,,&2qTHfu'?]2m[HQfPZE)5tF;gRH\)u<d"ItMF[ud
%(h0I:EAQ@&W7\3f-^H@+%Qqc&D*as:Rd.PbX5XI3';:#(MHf!VUk(Delb8(DWmFR:Xeb+p6JS6M,+$Sai]b<[=HGLX"SJg-rTp:'
%N>H@+VH$DbQXTb/&eUeE;]m(3^`('Q@%l",>F4grUE5BVKseu;@sa;IX+_YdAjci%gUGf%MA@:"o#b`".f!g@7_[=aBqWC"aVS4a
%[j34\=l@Z5?r=Y)Y+RIE/7t>)gpfki"VFSB,k3ak#K$ss>o[VCFCKl#<34ZU#[bM^Kp;`fYG>D^Y]e.S#$6<V*6@s)I4*1OphXS:
%n+J$&,^FnpO?a9cKL^-5Uk_n#NaPpV0hp<H&IMZ<TW2[0%@;JPIRTJ]b$F/s1:+,'`U&/en-/(dN`W<[#g<TtM,IP$f6"@FE#Wh<
%e&*au:ia@=ITT)7)>]ipAUJqi.t7HVKTgh;LQ+%rE`6lohrs#FY8QW/"rD`p6_-+o5(Y*]I($[,/D&,R;<<kR34<LUHJZRO!d,Kf
%QpBTA4W;K)WI`GqOFT%'^:<P9&L<Mu^!!Ujq*s^MMogg$"IrA!Vi5gr<[1l_@[jH$Dj2'SF[gT7[a1f!$T^Bn3?-0D!nP-oTGS2<
%>=4$3XKG\QO%QLSgS<;0iXKUEed[H4/^)$&>IFgW75W)-n)tu?N6U#o,am9SdE$HA#&4AfL?0dR*\?=m!?0s45C'(o`6A3hiM#su
%)-DsuoBTia/MO/4f3qa0+[=&Y`?GLt.Baa;Dl&X!EDHpdMa.(1$te9grX`Uj2@\56R"kM5ECf/E6S7IQ#[/7G=qR$4UYb/@GV1Vr
%CJMLPjncuZ[l\_aSZ#Ii;m6j1ZMP;5P(>\6ls_N=LuujsY3X5Peo4p`F)`hGBMb:&JVg3Kh;71N/V2V^9[-dTepTLepJBQe?'pl^
%g5I8f:X(/6)f2pfQUVr!ZnZhNL(-QnZHh)?f*Af!aj]mVXhW"2LL&Y9KeUd$YLkY;R!u0TR1!5D&,OFqfQGC:A/CW,J^D`jp.-cW
%Q@Y*&bgMt`a]99<&JF35j5Zni(c`k%DWfQ3i"`r*1]4P_V%'IGn\KDRI<\a/_<(q_G+U]\a=\cf'JD%e'*7Hn%4+h[[niShg(&us
%)mD@n8"eVY(8cLj`!(RKk&]HF]oBaBO8K<!"/<,aB-WlN4/LBYFt,3g*\/2&/&`XR^=`>HDk2sKUWW02ME!tNH3fX`O,tO,:UUHr
%k=^uI1baXdo,)<F7>M9.9Ku8G_lrNeib9/LId&%J4'Kf)0tsWjV/t+'7jd"N7#Ps)T5;m/311PYqWr?>&'Hen+]EB*YRk_#;$bs:
%B%WrdNUX1W+af]/g7](3Y%45B9b3r!V(C*c)+OAfd?4/S1/ft+!YJ8(K_HFtpC*4$(sjVj6P@.E]op[EPd$Br1GaLN]u=girJ`J;
%Y@c7%$-<U\/rJJg7nDbNG2r_$=@n`n&WtB99O;f$juAE`O5QR]DN;-Ji\MJMlanf?!<-_aYN&iNH8iQ0W2&arcaYT1?g[rg'rEDo
%@qbS2&Wk8=$m@P`JD:\-lgVf$9,Iosc4S08:lqTbYe#*Ji##j"q9dKR)"1pRKGOae5.'B)T-)Zk_'JjA@\7"haqRP_^qmT)DSC2]
%R.5kXFGKu4,J=Ll,h._f9_pX%S2Wpq/.38t#jQ>h#$hBccc2M]AVR5iJ62a3&^gW,hKG;M]O/1Jqs91KL.XC[!&Z@^h@_#&Mg3;O
%CjpfjhfYTu=FTQo!rpr6m!S"dA=68@+nBT!'XS)C<7)E@YAY1jW3+8#W%2CdhZ8mZMGG<3\i^'LLm(QB_C59oS$D=PgS<"T)U%1^
%+-@;XZIj@[\mUG&DV,Y@"qFeh4`W&&Mc&k/EB!dm/[C'`9^r=O.?UGBnLj.Zh(E5kp,>ET\5sT7e!6dnAiNYB);[QjT(9X-0+28$
%<FhgF<iM+W$=A%7HbT24R/T6(%_%mGMABAE\E+T5&<D:L-hR&+\b;0&7[Q-X_S*l*Z&1D>i)pl]UP06l^8K#T/K`XT15TIoa)>&2
%)VW:dY-S0$NT0%t(rcq;"7A0eDZk;H@0Zngf+"])?mF(S5fa4^\@6RTE^)E:KQm@Y"_nImLN.dUbBF!>(cDV,fX47p4WI_DOZ[a.
%+;]tu7gY/_M3+"DdK+TEEu8NP/lSY)f]=3YMYd[lF,Di<*oA:c5dh.oVe,uM*HIdH@@XPV3>F<cWc:oQEYH"ZihUAlHuC?t'*Icj
%%V<!*afZ3KYlt[KM0mtm_9Q[tIgc0nMi\=tZK9X#(ps0"_M]:pL[#7[iRTf9jj9q('G2kM6mH*t\6p2H<?o)ao&6<:r>]5oX@IhX
%Ue,\<W'ep&Um4LT=YTbRgN87]i-Uj5P5otVGE,)Fmu]3hDLZsm)"1rH*2X%:I7VE@=,3k\#05F8Bi_%Q+Z6WiAlC::-9>Oe8l@I`
%)gd-,L.DAZYIQk)6W"%.7bJU<Mo3Oo@VK]qP?!>Sm9uYA"V+!>YPB0>Xk_d?Q"*,M%"-h33P&AF>t)o3bmR",nb[0`U#)E3:5Z3R
%[L.,Xh=r-*Xf3+/5q&m%(;Lf%:[)j,"<5@34@OS1QlIZi7[/U\1eMl>Nrf]g9mmBt'#Lqt#h.;3$kI0EolCX"#bJQAE":@8>mPmQ
%E[O0%k49T).Aq2F"L+Nn4'`5@"HVN`h1DpOnb4ijc0"<q2@\hpe%K=+%ZA$g9";33ckZ(c-4jj8]q\,VG-`3u*\=@*O'EGS`b<Q8
%$'LOV^j'W>l"_>!c`U/$-q8PhWSVJhZ]R^I*TFFcN"UTB\DJT<EdEIR)lug/^/eM*\W!H7RbB;j'c]sU\0;<DAFjmiDdEct\08Z=
%0+d>I2F=p/Hp5\l!s_R9Bb&,H:gg=)inC\r[lo^<-:Q[$N#$D,N&:cGQ,7jBKa6[$<e`fZgbl%d\-$V-!H:R2?pr),];a<50.-70
%Zj;PZ$DX]@>DBL/7A\3nhh.Fk4aN.c]+Qldh^=-SAeMJS-3[<l(f"=c;K2O/gYG*YB'Fo:WJ*URP\4F]@`>R6jT(d<T87;3\tS`4
%q4^Gf,,1HB9c1#N)Hb0$pLK[#3"$H.$8^\203ln[;i`[O2;FXIn/e3KdP!0J?D/+@=MSOLA=^XSdgMAWZLS"('%Xn*rIHc@S)rIa
%],X%&NNkq%SG==%,I,\a.G*'.8,]8e$&>SF+`TikQ]Cle(fWuO[Ab;.lLsNAh`U%4)GLPM=&9<EO4"Q[rk_'R)&G0'9kTRL6<dR5
%*8l5Jiorar76+$3i.5[qYdSDG&3RLHF`ZA+@$s6gI,8P9ZV;^&4X++W(9gNW>!ZglmTFQ\CNaS;nGN[GVONDYr/eIBTb@F7a*<"-
%<Hpt$JXIqJp/R6Z.5BGqQXcG+3tFusOk%#]HWV"oqdOFMUGM%HWaSGsM5Xt>,;ij:`(?8/$f,;C\ij4;A0N`52e<gNE[>T"%<B5V
%\4pcW@:gG<Bld*BK)=]g&f'%s`@/%)p,O@_\3uc00aG:I)@78F+L;"nd0IiqbAKt0hI38dEL\a_8X)\)(.Z#WJ-^OH*h8',+VKg'
%>gKVH2V7]g3`Yo*TgVcg719h=ajtciKj)k_+!DpJ8IQT_YVNt)JgkKL/BGG02;n@8i4`USRc[6+)bkUT/Td?s_-,2e+W%qPODbdg
%bK@?ZAP&r1e'*,\",e,$>-s(IdAp=IHLM1f[/7Gj?lV[-RV&gQ):Og,!i+\nAOtNe:fo'FaoAm6,[:aB$f#]k`e[Mm"a4j8$OeS,
%>0CP?F/2E51>.B"BlpJC):uASiK^7_*)a_as1(f41TJg8+J[P_b]6&6E5Y%e"tF0e)(:At19atNPLfLkL[nC5VS-JBP]6Kc&ZsF8
%$TUA[p8QBZi1WU^<uJWNiAWPZF:7Z7F!R&-:em6.<(m_T>,VWL9W,Mm((NPaCsa@n-pq'r>FFsPMWSJ!-tefZZ3AA^Ru7#87KAX&
%=ZLmXeYb3q:3%g.4NYKu@]Uds_i<;^\F^6QH&gU^Wr)>k01F1PpXKtG$oBINQ(2X$XC\[r<Qes!p;iZV,Eq)EQ]d'T+`T^[(,'j-
%)8bA%79dlZ?\#)@#1L!rdMXAOj-MlVgJ%+<bOk5Y)9]KZO+?D5*m!p\n<hRrEE!+_8O)*"^4gh97U1P#7_,oO%&tidKT0)+DNFA@
%iP@6i`J3ij"TPs*YSeO@i`B^k)e\?)\]dCYf8R*Y2SfLMrh8[B4'*jDpH:TR(llkfpK,i(I:qDme-Rlo"Z>gF'Tp]94cj_@DS^Z*
%r-e0Ul+@&^cNaip\ABTN#2.=g42ERVp@Eq/o,erBpYrIOo%.65VFWkO!.kXsl;YV9lm%@(:Lu)t@Lf%lQk_QkRtH!<jA\IS*bRG[
%U[3ob]?TMO5"^p:pkH)s(Ae1oYdWIUWkk;uZ8R)G@@K'c>^]Z`30=*!25+^N%#72C]Q;sTOPFa=BIHp.l2G@QmCG;8Brs-+-2Ri#
%/r'(CGqC9*0&D'pa+/TE)JX^L(b@ER3IdbSetbLPmEoW[2X1N.QkR+SKhe-`q,g13;\"<NqGY0?Nb"'R-Tm@/q)gAobY]\m5SG7;
%rR&3f<4qnj<'75D#V6QX_[^KHcRmp=\/6V8J7uY3]!!296"n%#1UlTgB$KM*F8r_ZH@j@pJ9dYROcgMdW"EWmR4;ii.s]D##&5f2
%939H-mW"nAF[3h2WgV`/9hCm's.O@G)=.tJ96c">bM@c/)OAbd:`Jd"H,S'0+h3/F2@`AL"/fQcd^ouN@U;1;(=6Ydl;!M@hou\X
%o#!?cSDt*\@lh`nq&IWQKq;nN39#i%(>]aofTi5OFBA<-"YpMYp9BCFBCFf.I+J)R:VQj5\]tfg)_6nuBW[A8l`np2U%$e!r<b93
%Z?NC>G&dSD/ImY$Uhm6?gYG$-&%1!dkal@4rk,<^DdofIP'oJ3/Fq/K(,\4s;YCi0J888pDG04GRH8)\r.C3l>l@@1q@JO]TU[f2
%Sg4*Ne>\8M;^q%.,3BIm.ETGsnjR3dV+I2=2bE;,M"ElAAgIL5G_b-L\Ofp+CP@Ag2*<X,8`ADehZTraW\0CM9*uImUoridDQ4(%
%'nUXZBrX4I(@;N6l"p9V$QjkiWkm@9.W2bgVm!*GX!YW5KWj2?TJ$L&(hmnuFj#Fu;o3Rpb`E#tC)ls`K\%f`MsKY1$L5&Eb)THs
%D+el<dLdOe,CeR0kS7qcGsp[pAGXW?H8B2o<q1:D3jLqK\IAq[c)P1_N@;T"RaQRY"kqY+'H[PRAC,bfRp$.`*@^H)f*a^-@/,jK
%Y=g'"5P:HXnbKr4rZn1dFej8&fS06*9<!3]NRLe^;FCpKd[B!mYH"d]ZZp*BT'o8aj6ZHK:RMn+RqI2kP\/4'd.h3mcN3>,e]*$b
%VDoL,j0;!Mf6W+ka,<E4j1qaTNjshI:>jRJ`f(TDnA\^4$>iVNc`nO^+Vd"9]`$toP1MX.0W@q\QOs+@l.CkNEn;C9WGUB>HaNgr
%#:Ymc9DtJ89lm#:;ic-9!XKu#Ie^5S5qRL91#8X9W<<;tSiBcb)f$Y*;mAmY%X@9cjJ/E(E'"uZk>-_c.ANnc?fEPghFY0:S/-pq
%'qMgLdB.YLj,\lSRu90@jnX+(RU0li&;H$-H80;%:]j,jJ@)=8]0&M6YkA(GeM6eA%]+0WlHPP_ROt]#cWVQBERrX!/p&':)2EnS
%VR+7`J5>t]4NP^RhNiI`kEQ#/7@i<Or+/L^#Zbe96+G5<ATpqdrNsKH*\>,i2+,2"S$\!X*]<)\%WNY21F(g/hDJ8P7];]m8aQqX
%R4WXh:n_E^YbfELo;qWY5,iaId5Vf.CIq\TYWEPGgI$mPkA^Wgpcdq_S.W2T<GT<e=I/kI*L5+N;X7cp<ra##j?'o'-d3$^9Bg?q
%0IlGCZdsM24rm<r?bLtI#@T>$O=?+ds.mfs(n'%%To`_E"gSP5IFS,QIJ[1Q\+fP:leqKNS'0jc^16:dGguQpXF3F?FIuUR;DKER
%W4D:*X55MqBY.F-8:*=;),I*s`;pgFqhLo/()NaZE=AZ,H!d'1;P$dXB_U75q6?C&8!)``*=&`?*^W+.`7ZZV]BtU)^+(Gd(!9fu
%6;>_%/bsm"*[K]9P<sW_k=[01[8-%=V&;\>LJEghZdNJb*@NDl3b-r#Fs=,#0O`3W[AW9?1_>$T@M3,<0gL=]Y@_RV8;OVu;EDgd
%d_*T#X!%Dl[Hg8.4rOP(S&@G#8%+M#6a](ES*'7re'>^bfFU;Z$`iF?/FT$A'[nI\^OcNk[#9p8Eb:6Rs%$q^;?:sDGZin\W!.ZQ
%*3H&r>?Ob)1+B8PqtT68;60N?e+hR]rOoVGU)74cH'gtlCA<7V38-4:1^>PhX!4QXnHDVQ@C@OI8JoE*6PASe,]"[Sl$ce"[ss''
%*HCSWrN9,b63>Rt!5l^32=<VnAi0ccHmFmB!cA]GTk_$"&BM@P!mt)W`j(([027*;+XXm@ga7pW$4oJP"WXedElOVEj/(7uMg<mB
%mjg:/@"0h5Uj^2C^9h9F+d^aI8'+U?mun5?BMY^ip8mr\5)XUcAlqOlI"o<kpV\:REjPYjKob(p8:p6nU3tO\mrKg.71\TIeK1uL
%l+("CNDW7f_g$;!3VVrOGci$NB<D!DHl>giV"3_t-*Ij180b^5S5=V*=OZ'$YB8Y=kkV=Q`VZgg2p_*c^)"B6\+a_H0780)$//'m
%>Wus%S^!,fm2Ng$V6N'Tjm!h@TI$;<_C.!^1QKi"G3;7n@XZlM0Z@\,2qX?J)!uM+-`Vc)UeO.K4?qS@0JM-h7orucGA<u)H"/['
%PMp?T%5770pYT0:dksmmBN`!opZ,!i=\T2$1>>M\I@/*1fB__8'/a@8lZ!#'rSme'ZC3"8gV%02SF\$Zk!rS\[GG,2VNtIr<bf(O
%b^7P(*aI1Qr-X"&//@9hLG?uTPT7$B9UGXD*I.f>CWt5c:d0h@%V<a:HbM^KQ3M-8O',-1G0_mIYIfkKRXY,PZR)[H@E`bLPVm'6
%pLh\/8:jrPMB4=HhQg(+cB;K,I\;3X`G`L'5&"^(\d0e6I2I!S0AcZ_Sp2,SD*;8riqA6NV2Lq#J-I::'Aq$oV9Y$(d$ad,VW%%C
%jjgt`3MuP#Hn\HnNdbN'4C!$\%=R$+jQXu\Z1)rpg=tA0[2f'P(DFU^X!jN9WRZ>18"It\\dQ<Q\QqR08r6'kL(U`ql?b:EqREqK
%n+!r73:N>p'S2tj?7CWigt-KHOp9<>37j^<:Z$:Z1Jfm5ZYnub[RZj!9qg3K^=pcF8Q\&fC:M0!\_*3l\)gYp/a%VjC<Rt`bW(1:
%>\YUZ<pp,phP#0knn,Cc&!iQ[),crEiP&uSgdPEi!J-]-/M>jNcpc`LY&Q>?)R4+"b5fj[BG9QgYGQBM#"MQ?92i?5#Y3U)+,^G/
%[Uei,;/#CS)c/+\qOsTo+U\U'Q<Ip;]Kc9K/2TRK^tdMBTpc7W05IOCgcR8#eE^]!el>b;,PjcI?KR__Q)gs%.qV6aYIkFQ5C]c-
%jfm_G/B(7%/3,?/DtrobWQ_[Q7nHU/-?+%P1F:e19SEYaKST\\96kL+KO4(j-p>;#F2MHt[2"J<>7kT4M`+"66fXIb]Hi0_[Y26[
%LH1Gs&I:lnU2q%OK2k7efHYQ3fgiOCl1>F0O0'a;1QT0i,@%IR8UEYrB]Y52<#q`l/ptjAb(-.8&gBr\CV/'KQMe8!rpi@0['r2?
%#%D?6ggL?brT25oi124WJVSoaPB$.#hMb;28e8:*,Fft"h@^SF=U#A0@UU@NqY@jW-K0-p]/'%'0XZB0pXdZIC!^&_"mJ](CHrA.
%]eRg*ULnjChQ%nFj7]XnEb9Z6$@[&17>&K[+REat?iU(IX0TDp#ts!3fIjM4d9c_!@<;fE<Q=D9#>27%e_Ul$8.aG0[XhbFH@]-H
%TDhs65em<qlW,<'&<`s'Hc#\^[5SmU&jDkeT:*OW(<.PjNqSO>`uQ4/2J&6Aj^tnH\S/3CZHUE:nc&!\S!=FHDmZK:kG%-Mb6^K6
%2?M#b9Sa`PBX\;qCEs=<Qk4\*n.GK9n1biEl1][Wh5k9Dkf&3Kg6DH.p?#KDMn#m"]%mp.84]I,Q"K.-F4^'MU?V<pPrblLL8rfO
%@!/U/?N9t8UU%:!hEenPlrt]!1;$]baJ1,ql4BCfc#"5i_?OGMD]!<G+F;b3+Q1r!qg'2cB%?\Lhd<iBM'Q#f([,195p_X=CYf^c
%^W/;JkK0\0Vpe/Y^&U&WdBe0d8&&YRB:cf3h%F>pp@#1(Q-J^lQeN*76H,";fG`R%pXF4fo8##r.Va.NXY!_Uh`b)OdX\O,T)>F1
%!^E+fS,m7Bc%lGam/t<38V`Y"Eof4,,3,2:p6er[P#m9d<"jb&bal3>a@#GjOn=c+i-C6(ORp*'];@*,1tB]hk8>,PIBu*2eKBof
%cJ1fhbgkE!6^'(PcEbFFk%EQ_pN;YB/0F22?8oDrD$[@<pFDY2frQg0cj&;t1UPAO@pimeEtW!^o$624;Rcr1-6%m?+aa*u+ZJt)
%&H\/h-i5J-jiL]<>:_mj*pqnr6X+8BIXg1-&E2Dk<3hi9V.GZ2o3rPsQ[3e2W'/q%lL-:oCL!:\h_/RfNW=Qo7ocQa.Qa1_p>&uq
%1][L<[*,kX^Y>m*%+Ap0[i"U=o/G:DNjuF:SiWud1rEQt71p^Q>Ec`FT_DbnrV$"H%8]*irTJ=l_M$Z\EXEWt>eaLrUC/<[dQsg-
%bRL$llTF1fo<bimY-=:"_h:tCD9C*kl,c1fn]XC:>i+ReL,VKaHR$-6Du\hgQV-#N#FR=@=Hhr96e@PaimE)/)BWPPQi0nA.N:G>
%kI4mB`]lsMP)@T`Y[sq4"&`6+CCkr3fnJR3.1i,4[MW(")GbeMUEhd4^8]r"!!op#g[\(ZRRNgL@QD^F7.]2EXa[Vt[mmK"&2,8/
%I;7)2%Gc((Zo)4Z?*--;Jea_)eG5T[dJFP_U"G7JQig^__/YE]S&%U9jp6KO[5kMoR[OMlGg##:kNPl<4JiLC7KBHK0o*sK/0u]B
%TW[6Ng&6(7@_#ZcpHeoh%e/XoH1i\5S&9J+:GC`^).0%F>R]dLKI*u`fnPqQ"="k^;90-a10l>bD0M8bU5Pa!2b:F]"T7Mh36l]R
%[&D6d\VUNXc*-50*+`kaf!$4Omq"8;??ADt=,W,!L9nS-jqSQu)lEp,N3<(dA)>piMiFUdR#+an0s@8"k!?NE7H\8`k9'rWqDbtZ
%"Fp]U$uS%J6.r4h+&*Z9&aSWh\e:Fi/HB%c]Z?.^R-<ld99.7A55(@Z@+6Qc5@!%5nRrjB)+QHGn'[9E9/pS>dJ%Up8=s`TqqW<:
%JYWffc0b7aipOpbN-cR:4mXnt!`_/V]pBc4-29lS1k<;#RKrNf:7HLc/K5;YRltQCZdr\_&gTNenr-$q]?Ai'AP"8m+7(R_Lhp$p
%UQXX.c]JRPEJA*2T/2WTV#eBCE@3L;F:X,7m23;eh"/pZO-Unlfb,IQ#dp9TM,e!&5MVhg-9ma^b6DGcno$EjY)7qfA*EWe;;k-W
%2'=4;0I(E_m>9X.kMhh8FPe1&5V1[70iG2EmhbbgR>B\:5Y[fN$^0=E*&ekq["_eX>"55iAh)j57'KA&hS.$I:hYAnH8hQb"\sa0
%bk:nY4+_LFM6i<!f9RgqTKeS*nD3uN?ZnmgrN-JbhP$`l/+,m-.Ljj<--IJH6nQAO!mGJI*3<3Dpd:ac4V,b^O)hDYJjcRmXj$Lt
%baGqXTBlLGWn)+3%hX:ogb\^!?+6J7AR4b?@`A9,qi]1_=_k`)D&$/)M:FV-6@f:u)5(g]STD'OimPn1<Gm]&MOq64hWONjZe[rp
%B::Nq0qXT[F9m55[Mp+@\VJ9injIcSH@)8]-WibZ$.Shb7QkKu18\c>5[=.Mc@D-701&EkB<C^<OXQf@(HOYl)q:G,.&f79K;bge
%Y=iP*QZVi"3qI4S@5A+;ojU)fgP51fcse&jMWK,lV=7!,NPR)S(;a^d0Aa1BWOLJ"MCa7%>>*34LUZZEh=df=GD=B?Qf!OABto>5
%/B^gk-)^^ZVI^+6jF$%?l*_ES5o!TWl#r:<KVOjdid4M2nU&Z;b"WM(O._Ph@n+Ni'TO//[dY4[Xd+!Km(YfKi3r0%KkiK?Q$5")
%:EoPEU]f`o!aga@MiWr90[l":RR@o$()>o\nm5cFor'USMNn``3BO"+Vn)7&cgeX9]Y=Li6t6%B*9DB5&&*AmLUD$`)]\POa7H?a
%9O4EBKOYhM0X2\m](?1u'+PAGCX?]Fh.NS!'gqfo%K^"q%0e("e#ZkhoiaSl"8H*eLD68:/69W@NQCc.n>u9<XTn;LH%QSW1oo/$
%*+teMcMJZN$$k;2)emAS3,7Ss5AP[sZUq5gDZRBQU=fsVd0h(s=s>Z51&*pIc1ZOpY'SqlT!c;EfiCnFkN192Mu1lBO(MII(Z\=o
%bq>aPU%<jbWip/cF0h?Ad)=J[\GUqi^M%@h)ceZ-Ru)qBT-XXLUg'1o=Gsl[=mN\hh;XNs@`4Mo-8Dd%g\h5K)Jp_,/iI51a0a;S
%'HII?.c9.En-^7GH\jYE7mUO.XYCe)g-j*3+^q.*_qqLRq5W#T2Z)=n5.>4'Il5CXMK,eVU4I3\6TXPRb%rPQ3E#R&]K>9^B&!Q/
%\q^H$E"LJG^FN)?I9U@!q;./R+N#pdXR3CE)1T=f5=ZPmB5#EDbPIY+_%4M^7&+g*=a]D[Zco+(7SOZ'05dCS?&Pt621@bHk5i2\
%r-QoYkGtutFfjU]&1JsEg(hC1(]h=[",_QZF(Ueh<TS.iZG1V+"$aEhpeIFhC30oG(p;\S6(bD"U5qfsd>Gr_iQT2,E0aS5ILAs'
%BqlPKmL,q<[%&OF(KS\#l[H3#jah'DZODWB4C?X-n!h-40Q%TSL[!^+>aW^Pf4iDfLKV"V3g=`M^V-T7p7gO4E2JHT4`OCep-3K,
%]F&Mu5oh<Hr"dbWfSphWrte\TX,p:kQgYK&J6li%3JR;C/t=.RCAghAKqJ*=2m*o;$HbMIc1g>Kh($$_?i"6j73g%[<if2Ccb=?9
%\of^Z!6c^.%^0Vq^(6W`LA-1BT.U'>q[VdFr8N,)@u:Wg=mPO(?i)3BF'/E4qki@7f-B^.II7'X%8da!_h9#8,]`B4WR!bDNH*"D
%36U-EVtXbq$%,U*#4mc]AR@>>"'JCglKQn/g2Pjh>7eHalu3EuEIKeg='$Me;$h/k?bLg2]F<VOJs2t!)/UCJeIRbLRG4begP>6_
%hu#7!r@fJokbA19QLCCJYcEq[@\BTU49f\l[DCHP4B>sS?.3CBNH%@o@D=a<6o0jd9m\]>(XaYA863%`&^YGVbfskRr!:Sm4LWuI
%\n\$qMt/+#VmOO9_9\HNd.07g4RuJSDL7b+rcWGC:ZKI&8(o&Z1[<kWcC!M/hnIfeXLpfZjE@/]H]1e-kOqmXT%egeh]-gF9l7`4
%V8bD$[fU3c^_7NBE-Ouj#tF+-T-r`k(kDuE/B"Mmf%Y32NXaKW?B:U9=N<fAD'.!6)CR*CJ8/X:5mWHRR;M`T+&ZK>O`0LdgEfV%
%"dsFZEY0$B2PKGP(&o1.Si3d%^BGWAJsIG8(3QUH$24/Uf_l<*(DnpZM:_SgOnXR/GQ*VtVT>-5+G[^AP=Ng)#J\M-YV'7]%(u)<
%nZ(#ee=?EL7Y,K>%LX!b9HY[nPoB:D/Tu*\hk;D@-cBk)5Z#[g.CJYXV/L9q[k\.s_6aaDjImV>icMU"P21`H'4!UL^rbQ,C*S*X
%$E-*;r;k.YGrL##9r"Co)s:Qp8q=2]9&1Bn%E;un5tV0^P;MIK>(8fL,m8hp@7tANkMC1WH9$?gn76!(>4-"a2!HMZF*;<#5O3]D
%X&"q5+qe)Na?YV'eN#ONG0qgnX!-^7a`2"j(Zd$.iL-*ONgi4II<W:(hI2"MX/Vi3;d3XBjB;7q$a9l@eI3ujE$X2U60(bOmOp'g
%!Nd.93`Dle]Nm?X7E1.Che1dXFKOb!Gk,]1m`nJcq=^i>pU9tt:7+E_N=Rqs)-6Cn7V"5iamFKu__T7&Ci$i?!X[o1:\WOlQ$%)u
%a^7quHuM+M=a1=/nGkW'F/(pIp(R+>30W*05ANum?]%n3+,k@\#efKh^RBW_)/_Y8YMu55hK8Huh=!Nf&ihk1OufS\W4GVRiKqm,
%qkH.Kq[jn_SD8H2rb)$$a7]*12jtVELG;lCc&O=,T`YpI3tM@(V=.`rh<4G'esSg(WRt1dPJe]lB(PM):R4.(I/%2<`!uTHl._]p
%F8C38[<#faH2(a+3@14hd(u^WH/^_(L]?l&Im$u&M#XL'+4+g)`'uFuA[@([],%`V-$.'B5k[O*_ghINk8pp#j5aA/%qrH?9`rKK
%B,poK%f`R]VkhUhVpVmd4m?`DoAS"YK%(+1l?mrZI8"_"$MY53c3e$AmQ<>2%+7G_Y+0M,T0E1`P8Uk'XS(E:*]g4&(UQkn,bRUj
%^i>kn6g)@Z>mVDaI[;Xqd*\<T:-M_T"'WrZqKhC"S0pVYV`m7K('8Dl24!<CVVS.]TI&9=^qHc@&,YiDfj:3>2sC5^TYP>a#u!C1
%Zp#5NR2:?^AZ,u2BW5KB^a#9C@*=HmTdNgc+h!XPJ**kJFO+eTcl7",.<n4uC]qi^.YV'di_MhNEYVu1(j4',n5aWn`Qb#I!mYF#
%P3$(&)!YC.a_$&s%4q>=4`C=$Mh_*cH311?U\@8tqNH'L%"6m@oYgjIPlpR3MHM9A%5,Y;jOKmDHprMk8>`Q<Mb;kgpEddtF]&nU
%4h8IMH+/J_*52UILWCG,,aF$3Jmo_mVQ9`t9&JKAMlDUd_,l+=Vl&8]R9uMRA(@#Ylq1O]M1\"E`e")f#/]k>V*CX+MEA`FCWW6[
%-_pHN'gXaIehDE5H&QRI9uKabs&YKbJ7]0F#/`*3r^q,iL<\7VQku1m*GN'T?*+n(-FO3:r*S"Mp/Y7M'k$ac"H;:(:)!uY<JoQE
%.RYr^3,ca=fLLA"N_EN%f)#)`++MS:e%!LI1RElJ!?/"<eA4%ika"*G6B'p1FDmh-0)j0XImBKkaA&]gmepsEdtdC3LYS*b#X);r
%5-+dea6r!T<NUc77t9`8M[pm7RR!3,![CD"%(+=r-SJrX+nYuCSrUHuL6&HUJS^lOh!_l9aM`a1I*"EJh\MkKm<3,uPd4=DjdHlA
%aJ!5ZQOW/k'^(g6SH<8#@]:/M*CQhmH*jSR*\4p]"Y'Y_(E#58X5iP(,W<qA$n;aGna+Sk)T\k%Z[F]YIhZN[J,t[scQstBUa!ar
%(tCN?nX2dWrPf9n;C&b`!*L0@>s9`dpR283JdFuGH1<+>:LUu$&@LIM-jq(Z=\rEIA=[Z$&FYNLhqmYYg'B]U%Z?!TY]iZ21&$Z3
%*!]^BbO[\0UFX-o9"[Kr25Mp4<;Ii./PGMNC0rl'jrn2D#=X*eWErP65M9KhR?>E8$BQ&=^:hYETTqDkYF@+%E!P%<;[pIdHHtBU
%+?jVLOX2l'-BC4FhWRlh)N.3bXTlBI#*?*>)B_^$RblOp\g+ENCgtXng9]5:2gYbr44G2Xg(R[.4`9=`PSW5b`[rVW(B>@$K=B-:
%7=Wnb"5;Q;o*!+dU4e:MJNc5!)#$".]Gco,SJEeX^e*Ok4gphmV17FDrYFa`f:MGXlrRhU;HsPiI$#q$N4<#WgL<H(XDe^Q&.h^i
%-EH*=Nf+.ccZ\<f5FRe^PcW13+)R]3(rG(h(JJ/NOf>]Qj2A2uePJ7MOJ8>($:75mI%*+hQ[[E9WuO^4Q14[U"lIi9Z3R<MbrGA.
%$P$o?A@##hr\8_K%&Z:S?Zks/H:h'bRFpmVFfkkf6GUFb(1@KDUQ2PY7aG$5=m;DW/B.W!g=^<t258WQ?B4<,ZG^,oCWE"tiZAFS
%.j)<T([5)egKP]DYCW`XApscE=*[)a7_>V8JYFO%D_UGn,Xb-;F48\+7\oUU8q078Bm,P`VccV@K7T7nT)*7]]sDimIAk]eVLsVG
%:L3jYQ2Z;G/#Qj@IcDJ0_Q?m+j;S\()CFZ=hI-CnEpsZdaJ.:9f(o#?LT8l1`\22Gf-2P.HGHMVn2F:`\D&b_*]*se_JqU?5Kp03
%hqmc2=SEqg,=E:Z,Z31p!^SsDZ,[3/MN4K]+"#I\h:!=g0<4pN/Z+7I(%BY27:B#@p*GSQ+se-J=aXIV!F1W2!;(a3XS'@(Z2[UN
%f+!U:#+i\T\1o+c1BZZ'&%[hd__Z;UEqgb=HZQ3;70^l/!KPm%CaL?hONOH;6MgAC!1pu@k.AAGKl>:b]O&rC"e&2MZ+T@!0^:"^
%mV$+hj3BIZT.O69e,ha1S1R.C!ZsVN"@U2faMklBN@).?<C?>r3&c&H+F36UjIk!AeGW)(#`]+3oh;V-]LVJc(EN?;J3[Y8a(MuX
%Y6N3bd=U'*<)R,RAfMg2_M=>2acYVZMHY-ph$/YAm,BW@_1QfNO9)(lJGfnaUMAu8[fC:2b#Zh*`s(SF39%OAh7-h2,tRjF#@b,>
%iGgM0=B\@u+"SSX=_SHjSsf7MK6mei6<j,@JNo1.cP"ltkNMjV=GGETbHMF"@@>TN@R2jO#:gQha"9A"@mQ:.PQ9F4dW``M+]CGc
%:IHZSh"5@T%$s^\^]>f]>YIL\CdD&]=.DSHXS(uJ4sC:Bo"YQ=V9<*R7N&&X_2c0p/lWNJk%s$pD3.hareP/:**[/+`SIKY:4u[[
%mT-[m"\S>gYh>1Z60u$lX$>,0!u`af4D=C(YRR,,FIMR,/]6ZmRe2"R-N`i(8dm!l\rrPSQ+jrb,P(m.,t(PY]H')'3LH$u+U8fS
%`U]+ErQP>d\RgrHZduUpHR]AY:bg4jY@03-YHun(-kJOY=)qQ6*ei(bBCS*sk</&-!KFP>$5@OJbXTdVK=sB&07reKFBM27KJgR<
%#j]GkcD/fPCnHg22+-P<:Kn&88RD7UO%/Kn:&+Iq;)'cJc9(4A*n%mGNBMms'ACclg%W^n73[ci_NU"so9Kf\#&oVe9:@R[_F*6k
%fmNEb8")#_-]=T*Br4XW`,-r"Bde-SEBE7r@]`>j4@=&BM3E<aS`pl`d%RU(<1t'@l>un&(s[S`_G!T-%+aRI+5]eq5a[M.`q6VT
%R)[fl5<`We\iCp?<Vki8MpHCiWCW;sm^)rS4;ikl3).%iKK;6%lC;=<4Yhn$<;>l.[g7ghkV@[h9_tX@$3=*-=-57"S`d^=i$oM8
%*3"bj&C13RdN?kQAXS,ih!(!bEG&7H7tMYYL=%,Ldb98p@hgui&<YD!3oAfX4Ut(hnq6")<!!Jt*P%G?2m9+Rop3W+)ssk%Mk&33
%Q+jrb2%tE,qV9,*lj6#I"ANp&3ftB5Bg]!^`,^I$6&kN:f!i-c3oG:u$Jm0O*F"o,\:8WI^7Sh/*D7a+Hh64>K!q.=SNidp[^TJ%
%-o`15^heqp,I?<V==gR?XT=j#[Dn6uW:UW!fH9?<BF=jX@StPRhQhF+KPD+G1#_+OH[8hV)(9,gb$tIRk(Rt/PMbM\Ik@*"@bmHK
%HZN(]gGu,h:g7tlSb<_[G[]Q.X)gS&?):'qYm<J!Xto0llm_VK;WiWS^Lt&OTp1Z1aNo3F`lU)-/TO-j0/sanD@nOVo8g`q^gpF^
%#=,ftB)FYK"I#q???9rH>hSF"#p]>E8Ib5jV=.a-fFFI\;%d--j2[Pn?)bL3KTQYJlP#"ml!+e@F>4Tm7AXp@G.N]gM*JbP<N05b
%l_N43<RhO@#:(d>5sQc*i-B7lCO9+Y".C65)g7rdZh9`k/_K?+q$$J]eW"/k(Z_gDn5ZSTT\[oJkg%s^]1:q6aC0G'qM8C<IS4N&
%*6JQg<nr(&kM'3H1Manmr+bn`>`]'AL8**6R0s(<Joa5^%%I^RJh?deX`&-%"9sDYN*HorVi_?roH6(r_c;hQ*P!<f/p<t@H@WOK
%cUr[PX!;Ci:YITGH-QS-5q%7q7kVlKPVlVK>*@K;U+dDE7BM'tjo?5E*-0[HM"p7+MOX[&56g.6#!pD;#%h.lN0<^rH4,_bgNG*Z
%"[$Nr`rT2W&AHrtWj/s9E//*<L<WrN(9O^7I:.ag,lOL:Y?<#PUbqK]BH^O^j7f@'kcnbdL:S_bM>Fs`XrgX"]#p#7Vk<:A"8^&G
%%nPnl*r8!W(nr!Yld[88#bi[JJJKuY*b/N?(ue]_]01H76:tC\G@Ch+cjHh8]FZ;c-gCqCLa*>AZ?RN6FhYQ>i>uS"Dt-/1p)oC$
%GTfh7l-P\7017ad%dVTV&<BG57'jQUI,K]4F8f1PGTfh/#18\T01:kBCL=^cO':Gtm_dhlUO;!R!6G?;Siu)U&8*ofiWCo'%i!@(
%L`mh)^:i2EDCYMg@Yj#G`7Pk\`9&#_IclD5R1?n^?AM+JDf>?V;eYM>L`oqICi,(IU,ZWj?+CP7CiPHeOr31]leC0BR^a6fRN"%N
%9?>@eL9S64qf62$#[4MtP8W@_lTYtn`!4''s89SJOE3mK`!H1-Y7^`\QeI/',&R"!EZAL6j:*4$INpW]lqe<1OX+2a+P&Q"e2W3V
%Huun8p/Ku8$'s57Z6:".KX83``1Qh!]-jXe&'Vr36[i%H-2UWe[Vmb50?Z#S]nEQh8L3d5%!bVU?fhoY[!AsFnaDBG;UM1+Ztu.f
%^F.7cq0bHD4E+daKDBJ.:r&Ar4I]+=jFs5Q$RS/Pa<1-f'6o3372+<i0?"F+n$`1O,EMo,&0\s%@$JB/_&g+E$5kirnPF%K&-Z@)
%"ot#F=Qqh451aU`>8VJr8<"j='"=0i$PD^`W/7>FP`Y8iBL,5jQIZf:R;m9KEJ1#Ccf+b2Yj-1iS`2g7_B:t4TWLGS3-Kr_DW1rO
%F%\3+*5[)%Lm[tp(KJ3H@b,<cdkH2kAt,3S\a::#R5X<^NI_&7dH5E&1=l&qoBhOGnTDP'*pPb&d8:'NJ0R=SB[O(8&X0,>hjg"]
%7)^f/r=R9iI9u,4A[A5/ZYb<oWnGmk799QjX(I8:*&KjkR#W8r^:i>\^90EMUHN6lF;*_$VjgD=Na3O5R>nH7.#:2J_AAKO^"HhA
%@Co^jShhoY-kXVX">CQB3qO]e^YD4gd:!]p+Qp)Z[l6Bb0.7ed@5lIA=`be50\c(4(>TBsW!pC5rGJ.1j#h+*Hb72hU*OF-=4$Bp
%DkD9j/M&sTAZ;,i8MiLai:F&C&)5&J]iYrMc'/c<ndjjBW01Es-+[3[X1+R/;Q-pbi)/ba>KAp)/#\nT>r(U<Wmi1iat<Gg`1[G9
%H3tn5>A7C!HL3J`m"DR6dV>_'RW+fY2&<_kc>b@`XTa*5Fm3?)EGuYF_4,`6W#p9cCgA3Pc:G(AB"Ni?5GNns<`A)Ue_pB<SG`:I
%rfUo"WX_^Mcp9WhruI6:KCj`X@cSlp,a!BmJtdXr8#:,/mT67\0EYbdK_MOrf5,($o[%eT.7t9p?.k5ZF7k@XL&Kf[#*2r;5\^PM
%'/A2"l5-E?53jjp3E3\S'ZgYBp;ELU[:<8WHchU<C]+k4mQpahYX>f;RGgo/TVg<H)12!%@#&L+bjrY.`ij-*Hb6KYjM%&XorMY8
%]7&BTB(9<AI@]SK'!gg(MND>Bn'^oW<;Q<#&#K+N^SHPZ)5tDdI4l<f.#s0t(CBgnF5'Gu'\V,5oSCgchqi/O_3A05Kt'9'@(3/[
%(i'sYbas7IOTKWQ(CF_F8ss^?0.Qo$boV!`o.,6edHk.G^6r&Sc1[lJQ<fDlHVoAS7TiL4>5uCaIu64"9AK7e^o&@k1S73HD%4D0
%7TmU"hais:KKWUGp;h@7QY*@_Ing(G6;gPK>\O0<nnAm5lXac1OM%(B`HhG)hUFt>P37<POc4CBF]Lk83qad4qtrrFgr><F*p8$P
%f/uICOlnqAT<36.!@FH=f0-Bp#O"0oIgcM]BWj<ZaLK!E,M4fp#Qp`f$^1oaN+2<=Pg';59M7f4AFV'1lhmk`+8[OPC4>nnrI+US
%2XP[hdg3lu6Q7#DOJT7+XIXf5_!1OU-3cJ.+^ZPt8-U-#raUpWGl%3k)dQW@j0g<jQ*bUbP7CG85RTR;lq_%L8htOb\=7(@hLgUC
%=m80%lH:k3qsW'MYCHU68#q(/=&Y6E>p;8!EG(aVUT/V1(T.JNWqFW+3jp4SdWL])ZJD)_jn)l"jM>3lU6.;DraHMp=-^M5fm-,T
%R;B*l8[D@F4EQeio>t@be2$)+lB<=C.[(4=cV!*Olo_)+*AR0LaHM*<6Z0BraU_`t8sZkIqY*,i[[so+J9LgO^@lahK$eHXrO^0B
%fkqo1='l"VW.gn>IfnJ?*^@?<oagua03b)%kk,F2hZ?PJM4/sr7Dc%RI]'?a[T$MQK&q[ihFg#Cm_i\YIp\8F\7U:GMjkeZC^rr@
%DUS/YF$dg<`%b6b(2&-%:Caduh3pHJ6;q%c6^`/BDtccT/L!-VZ9o(/R=#f^O,3HkB<$PjUXBSKTG'kW4pURIb$4=2U6)'Ig20n$
%*BHqXO27-&$t\\D:hZ/RG)298)YgX>c!/W!74!,<npSu=7s(jh%FKgJpeSH*D<q:`\irPdOj@5&IH`Tj!!"K]H=)[#M9$Y(!n[;X
%\WM5'g_)[]Xq&,uQ*?mghVMliL?@c[pSI^K)>or\2a#+'0@0B<Y09k^Ib'tVRj"SZ79%Tqn$Au&k##k#Q_ekTF/\\YQLCEEK`.u0
%h?T;57\PfY]@$G*-XZ`;dr$up0CneZ'5k3\%_\WCB.@=SCX)V8e+:)sR_m635uiUB`Rs,A^7N48a.8E4/[EmCIb+ATIEpICjnjX<
%kl/;UBf3YMh$>V!B:[q/=2hQ('5A%m=tt8m,>ZXdGWHOa::#p8T3n*W9Th>.;ZKfeY(8lQb3h4kMoL]t?V$EVV4FVi+A@;Yae@:k
%1:ZH^RKc#9*7o42Ekb_>!?7^]U6L'CGoZ))H;aLCmB03./'\:I^%t*iX-&Vbr0lejq\eZ'[??m^cO<6,#Ok5U>lr2fNA]Y6&eohT
%U,CcB>Xm,^XbV(Eh:("bBVCH-$EkX3JJXUNUIN/i-[(?*VFoncFE^>/&_feqTALl2_Ft6DbVQ1M'?YWE/U4"p\C\Hpp"L\4n<&TE
%mkq6AS19pk]1!&ME?Q4d4B':DZTmYRXge%-AXg6`&N1lS#OBB,JYSX`m:H$e&\uc[dHB5P8b-6<Rd]PSfYUg^LSKd6=LJrO^VRPp
%_NDqPGVh,L;A'_dkZm`;;/<nla"opjSK<)aLsH.7TU\sQ<7h^D\mY4fBPd2`l.NbK2;T,r!]P^r!BN$Sn+mjL+Llk(IE&%p/:I+d
%6osapjH!rUO8#@-Q+D6fh]<W'HlnY<mD<5EY=7$^Zdp5)N=0[A%C\9o1t.Mq"g(FQ&/Pk"LbpO-[#b*=$g)HSpM3ifTcF.Ml9SIg
%%JMoE4%WTPGm;S9K#%S@p2f&iYMrtG$e.uT0r'fd_,8X44HC;#m&4T`kRKO*]TCgApLAJF:b9b>%f'$XQ5)gqYG,eF:k*5@ajlk`
%Hl5/\5+ae?H8Bs7e`crDps3L=lV$dUdg]f?1(H$JrH)WgI>(#Ep1Y:[I<6k`!YO6#oH'%Hs.[qcUDV)f5>S\*":a1qP?ke])=`Dk
%Mn&KFN%Y_G<k@F3eYIFejkJN0an;2;dFma!'(jS'`j'@:'@E'F4306[';7cBeZ)-95GHiT-gJTNgMAdAGTEc>)nGReCpAhJZd='6
%Ra#VmVbS\eQ=m=<Dte3;;'0C4MfpmLV^&9Ah.eZmUF4+9bYHX"ohZWW<Ti+@*PC@`Y%gEU60,t+dXFl:m,?P0m0pQ=Jh5\G"l/<3
%ni&^II<W<$l!lfl\oGQ@:J&*D*@^Q<;J^Hb_eMM>_Ns,(3=+%!Lc5dcg-.!7H`K)<-?b%F=qKm`855_j,me>n1Bh%jP=3TE$%X*:
%.\]IZf(r/FLAl*_T]]^H.,=6WoHO\'G*CR@S_S$@_,L!n*l2'"A%I\3TD-g3TS.<De[Z_1d>O=Ki2qL1o_=4o-N1>Z<0SX'WqB_H
%3U]Ot>8Mi!4]&h^dqEM#ld!^rh7)IQ\hWZ+#u[rg(ZJS:l0rEk<]o+/I/A,q$_@@Y\Aq:I3ZT=agC\i4A^:SQ^4M/PTCM,bk+had
%6VX4tEq/pIO6s"BgCbj]9p@BqNF!134d59l#Ma[85du@b,_f`#D^8//h=ak$FoX4^Bt#OOr2;Ds&"g%dL5g#cH,o[>h'.Lk$%3nr
%ib^"-cf>EucEFNfaKIlt-re?/IaGt!+gj_,Mp8is5q[1N)TXSUA5YVdD!-"L1>;;`ki&]t[A\H\)T20VQR,5bg$cnBgn1>,AO4.B
%.`,a0l[d[0-k>TXn*-duORPD'9K=A$.MW"&k\be6_1qL'rb0hFo/N\`XsGkK)T.U@Zb?jKXug]9VO%N*)9HNFoQ//:+N\\kX.T\P
%C=X:F71!\<`l_;32n@Mq&6.r:]CVL8j[uE&,ft[snRhUlr&"uU_0c*d94)/*VX*pX;;.-RehX"`RMF/fC<_fJ^Bibgbb&'7T$%P(
%g:AdgXZdJ\h6NGs4m]i1!mSG#7qPEt4k@<jd&:#Ond`i.L_agAM$7]0.qA*#!N4%XE6\t.hDLj@q.MTdH/rIBJ3VY)RRgO[mUl'Z
%!FT[pbPZG<rT\^9`M9K-,N&Le;tP5D`umQ1CLD'R0QpisZocjCYou"s;sp.&K<F/)S@eG$G8iJLjE"hlJ?uSRnIb)tFV\1W>W<SL
%G7?^U"Y.@bq8i*,\I/0BB7br!)qD8lb5p@Er;8Q!h?EmC)_c%=Xs<:N:^;8p.Ih]+[5I8+?=r&C)hbOcEOWuVW(]Wsb"[^ZpdIZ"
%9/A']kLXSGflJ<7[WoDj>hR")@@Ea)h,ts5Um;slqWSgt&JQ;4RB*N&gj7.&72r'#Qf0PF,4Q'0,s"O5db(Zj\7\FX&Q.Y,k+ce+
%DNnKtE&0^@Q]V)$r8BYg@e[Nm[s59]L&W!hn%Wm@#X+[PVW?;M1\RI#DZ0F)NnET2$m<-mX&$bF-ks@%)^=I-J).tM2/<Uk]s"W-
%UL-HLH51#G9<O[=?X<MFQiN^Wj4>i-FPYO-G34Nc[U;+,"!dsLiW>gG=&?$SV3*NN!No\noOT;D7T9%56WWUJ757\h1tE$89AW3C
%9Se+6,khna5C19#YP-0O3!-T9HF[4iMIM-%_fOJqd#[kUdZD"6OC&LPpUBN`B7tN7/"E;k[q2?Q4-PB5[X^r7Z,1*hS;Y"I$TXss
%,f\,OjJ-[N&YOZFWI_P:kLXR,SI%r>(m<<@=KMmN-uKD$N:Iq$$kB_K0!-o=-]<>)kdLgR"5J.M7l`/J_.E\Dr:B5$jL,qgBiO\4
%g[l#&DEH<Z3/;CRnB?j,ciqo_qpC^T`1;\:QQ/kWNdlN6L1hUEr,<`_IlVG!LRY:;Y#c*['e$B1/A<lW?Y^0$q!6=RgOHU/@PlXU
%5kl</#WA->-pPIaK3JRX:k-=NBn,fukoMns[d[`I]*5,U,hBrjLbm?'c""6Xc2"[-Yu=?dkLWFaTkgnVmPL*ENtd9EPd'f&D"]AU
%*g0nCR<QCE8qaPT,5qT,-`)%cZ/ZnD?LF4"dj$_`05'@rjMA+MkgfouVj(tqD?)uS!qu]%QC>+pZgW?G0%=Ag+O,cg],rFH=_t-7
%7m+@PC<o(,7k]6,+mm0"YcV8<]P1bmFVD3'[Im"C/l8J"d+4uFKqisup,o6sC@"Wp%!F-.!lu2QWh'=Fma.OM5O@c3O7n(<-[l`P
%iM3n))6B+[U2in8`CZ)-jIpqo$son@6@6Ord\AC,"3`-W$)\6\UJiP5<<A:88!=*(i*HN_%?ajq0J,@Kbrs*iFDc[."scUp(Ut!0
%fpbLmeRDVKo*4pPb3s@?,4R6*&RhLB8Ik1$V6d;1'Eb%$+YbAS[cclQ&Ho9sD'mo$3Tun0L!QMGOlsAFZ\N7qq'?j$l55X.5.bej
%cV!)Sg,r'bb^DZcjX!*i"LXX_A%2hjAtUXt/'laVpbHEsc_"NDqY"MCU,]hmH6rqZQ]i9t&;uf%,5;F#6ZF')<(QZ.q2\g'DQbPg
%&^BGjZNXMfRsbpRHTJo1bsnd:<l5LTE*Q@$-@,n_oW)/F5eAnTk?Z+J/jdD/cHn9NqFUFeo<)R5,=CD/OZMWc3oAfXWs,./k)Qj"
%F,7-Ql.sGg\_-&uiI&ioZNQ@CXYpXsE4r:EmHpL-&T_5L=74GFB.!Iu9Z-s/Ogq5X@O#H;Q#Y65fQ<^mrd]/RoC<f/`p'8S#.F5!
%,eD^s2*$Q4258nr/pDq1?e,".%KJ/=$J^S7?n;HE05?H`@k1>Xfb<XUDGIV*G&#F+)%"YN607I97S81)UP`^)e[(JDP_6;*:r<:J
%MG9;d=TMu_Xr#NP>*F^d/?g98gSZCG371]9j!b3T3/3OY/i>W!J<SDr.^`F\%]Cu8bO?i-BJAlsE$F;V9*s24Gm77G3I\_q!<>UR
%CJ4Jo';+-1rm/s,SY>QjY^bnGe'1)_dm_7dagg&&Fs%LU?N)\^(&Y0*[ncq[G7\9b''4gM7Ir6;D4k4km1(Sa$%WMZUrFsS9pJND
%-5g%cXRt>N`_JeYa:Lg?X0GbNFMoVS[CQV>Z@3YWOK$69B&N\hXm^0dXZ=D%d`I)QMiEdNNf5Y-VJ&XjK=Aq\5dNTqY'XcN!KUFA
%h<\q=G:mP'bHol0"X4A.-tG:61o!'9Gdh;Jejn])>(1ctlarW,qB^YhVa6=pfBbN0=d-#uCU:A`6=5#I_1sap'd*Lb'HXZr]@g+C
%")OT^W_BCSPR=iuTb0mSH3af%<8tkTDt<qm"6!DEqjX\64UAr=h*mg0;i5OieejGP,@o+7raMWSZnS!9JQK7n[FtRS=T%@eO^B9r
%>ng\Q$M:n?$d%X'bKXD#A^\`[bV-udU214+ajC&ld1c@l!gIY:%+nUVjQ9K5[\.]cU/m"=j%W!^?"Msr6H8eHe"2O+ed'2#jR(ZI
%SF8+c,Ql;2njAsb$&K+h7T#jR:rADe%Nr<@FGLNJP;Am;aArl`Oq_Wq\.,',&h$Z`&l/OPOjM(0+X\!K6\ZJ#f)El`,NU8$?'\U6
%9YAVQ;mS8s3@ar`$1U]J8+k%oAJc6hFAssc(W5mJ5emh1n50m:NH_XXcEDYJ/8YaR>Wp9_GK]K(-;'d?Du!inXFo+p"qVHlS<"9f
%*cFma-D8]q]XNhgn+e.t[J9QZEma<iB:;nL^,u#iXtZ]n*$H.9;)&F1']C)W84QpA)oS=0Q_l@q_0XE]qr2k-qhnO.TgKmZ45smK
%aMmb/r>KL+JPfp\7_=R<gF#^HOD+ahH4tH2rOq=@^5<@qimROB%X(Nd6@%C'M\afN%<c,P[!L%fbls4BQ]P`&O?*Yr&8Kf9^NZii
%J'^=BZ'^S?KUk7oj]fV%`Yn"CcQNTZosP!'CPqW0__9IN3^A<MV@lB6O@IoU4crRfA^S#L6pX_2h,(6n!Y?"p"Cm^(Y=FZ+\WKH*
%O5A+6'ro1j@4*$h5Pjcp='\^:s5?+<`5(kJ#1\hu`%74l]^@p,%ODUs>+?))</AdBj,/IZln:Y7J(<7jK&Y+C7GnBD,+*W@#BAl]
%"8f)[,8VZ9$>ZnB4u+l-<N=.>0b/ZdDhM<[L^$*#'s.Hh#*\XC%`VMmbdRCV>jGV^0b/r?Aq]-"WRb2DBhfYE)Y8+#0^Io&Z4Se8
%iW"bteV:tek8Xd@0u84Pm-p&<&HJ<t5`do`lHFg(]ICa3&S%bD\\YOr6>MCP%EW&OYmo<)b'VfA_2(+&+:XmeA^9&#GeP\4&^7(o
%F+d2gk`X9'>#D&Ef+OMnMP\/0bsS91Pnr%0O-QSXR4Yfr?bJ"ZE<Pf9RGR5:!H/J6i_q?aKUl.`kdoZ`#gkIaa5ebi=2eL1oA5Gh
%bH`#'9<-dQA6D_$P+!7Wgh[[6^4n;5;+);+,r/),[ecbhHb(&$]duP6M.R\)2B(DGdoS>GM',4/-o=-;g+VGN\EZidZ=c.F\Equ9
%Qi6hQ?HWo:Zq"F@!%S@:e2O)p!le@=ja<pFGE;J8,$Cf&%cp=I0/ng]=HP0:Xd,l;'.D;F5r1jIq6AAoH"f1b*2qY<MBa7>_2pJ=
%&0A!bo"b<$/V"PKN=od;.?rFhQqa=*^K-d?[rD#:<sL2f6k,CeW_4^&l'lYXYfK2[2a%E7O!912)iA%mbSuNIhIR=&WbMZ0+G_/a
%U-F[^l"+8+=mi6:8q'e)]A;oETSphfRU>9m>!53@,,2#;Wt03LYU>8V5mJ4s?DO7?9&JLjCK.-'"RJkfn,PGB4tS&MaDFVKf;\T!
%O2Y[fE2;aQ&M7&emoereBX^ll+9PV!JqpiPST'Zn1:tNVo+PMc7g/:>*5rL$rE$E+J9G/ikNMZYOU*$;SpK$c1:^g5+%T-:VeqCn
%D7utAmEIft02Mko,/;b^/(TlAJt>ErMW"c*+Zs#E,q]B!Ydln<Q+jrbOn0*GUmWAg&q=lTLcq""pLI#VqNBX0pb833d-=p"7BJeI
%h<j85d4C.ogbdT5Wf^Ue#T2O#X>@hdZk0Soi<rZlmoeuV%s$$apgK;V^#gT5lXPdnf_I>P10@)N^fb^)BoL0UO\1.@$hDo\Znmms
%]&e3CmW?WF'r2'-Bj:EWJ[(O$0pP4C&>:3I6iPh;QS\3[caZ9mlrJ5eCDO7e7tB.`QBb]ZaVbAqIGNP:YXjmE2cE]&ba:oo[]_UE
%F6e.j>Qq[dUL?Dt8'k7_*-^G?k6U]fV]stIPo.uk70DPs_!?U+Er>K&Xl"<uQ4:NM59X``b=8$'D1%@WH7NqmFr^+[hFRKX?CjOL
%M,l0[$)Q4L#'i?mc$4s.Qa`K((gQe-')*_<8]4>+r:B54r9RCf)JiSJQ<_)l8bBPlnl4%e<fL`R)3\YB=&&H/=O&3OqlKJFK"_#@
%HIL+_A<H+rV8=D-l+Fk3Wj:[97J'higpNTZjf10L:po(r^<_!LpbqoL)IujVh@o**T0_4AD^PoSH]><R67+gH>Q.XX_L%oZcrLX]
%N8+E3D*.Ef0-@>eBE2V7=J\hU%Iu/Dign!D5[C_FgMi0tHeH7<na+_k2<HXDG+Amnk+6EA_E^A2:7'3ErW@+!fFul(Dkq:_U5?@n
%)g:PdRrZGW7aS1iZ4/rLZ/@#ne:t%-q7B3bL`$`>BmsRf-"d$q>t4oJn(EN;X6u?j!r:cYfM,6D^EHUE3DIF:NTI5\1F?84RQJQ@
%>3,%YF2$%X:%!d_9/_.0lfWaC89UObqt[i;3nKL$b$lUdV5<d#`3urQ<=R4iBSqNt9bXB61G7%6jfrU1*U(JcSlbR1IsEp=0E1Y7
%fDibGreJi"rqh3C]79P#>k"*[nNZushm2J"0C8Cu"2+O7n+!f=YQ*:)3`,VIs8:-6r978]m&/1EH6rOQJ+[_Ds1<dZYC?<a5Q0hR
%s$(Z'lg*MZq9tu8`P:9=^V6;Rrpk'1DUui)Y,8t#@MjV]`0tch%aC^k'j&nfdaiVWW>@*=O:'oZ0-h2\aN?afTeh=5.Y_r[N13dK
%6i,2"6)*\/T!Yn&2PoaC^?S"9"A6!]72NMgo/p";Qda!3HrlQWMSC?seP<?SFa1S?%Q\gN0Zh34>WMRu:+Wj66o,u@:mib,?h(R_
%"/h]FS'J-Tm%SL0el.5Br,WEc^ad%#Nn7eW7fn^:C>&5rK9uZ\754#^*;#U#.WZ`>!*>\b(=u-"W9i0E,;O#]`_O5S>aTar6nY\^
%ME&b%3,2;pkB"FHSU*@A0mt!Of`6,OC>]3S5"S(l$W)%RI1\-OFaY)o,DY8bocte#W;h[snNileMAGg7a3[aIfC1BOk?H^>kV:hR
%+007gluf0U'FR]\r"2BL5'HeS@#R*>F#8)EC,epZ9`\dEgMKkpa6aFjb^KtESE]6JOb"`qQN25hR=/)b<$QeM`t21lAJ.SJ%JH8U
%&/))A^<864<$R-o9rgt>_+=nmV>)b\+aK95Mkk6#7d2]aP0@(UaHh",>AA(_.TG9l0Sr@]V6>62*QKiCPnjABY3jW_omQGX.p/#r
%*frQ9ZLS3eJu6\*hjVa^;-e?Mp;eW\*'\a3l1kDS2_K0?rF]3Ze_'./Q^F.R&rJo[(q*:aPHHdtF<C0<\EpQ$BnW.6k3rL"bZ+'M
%Q^MXK@cG:6L8dnpf?-A\Y=:N4YAoG<]T@bQ.qc^/6sR-AC!fViX_9V!CN)C[^%,@:druEMrSuM#jLY7oaRS&r7R48j91[YJQ=[BZ
%3Y"ELG*RL8cX@"I';Cj5"h:E^g\b%(op[/JY[a"u'hRgo[,WhMeTt@P]m"HV?!"FBcUoFA(m[0@6d/HB>sHqtnWS[UgD'V7AKjfT
%Ae*+7GdsS?^N3]Ma&(LLI&G;1E:8RSZ73_MYgOt,1@6at,Z>OdrgLB.*-D\++g.VVDK5J]Z^[0M)'IrLB*KQmAR6+"o$8til0q`#
%2A?#t:3^TsLK]^b)I@m\/N8&rlV'c1&Q[?jZE&U;ZMY:r3,]X`YIScN$NB&'"Rh,S$8&q)K\2fCfDs\>gpjLMc6J';_WjX8*\&#p
%b:&B@3VPW+<B(I:bO)Tfd@">L`S0fHHH>I[1&^G+`p5?=?5\k/ZZrYM*W1$WFj4b*H,]HTlM"<OTe`18-Y7Du]s'Ci*c33a)-G3(
%Ag^B:;Kf0h:ORWKU77pJ::apZ-HZY<]J8dq)!UI-_mRogXjmM/9ff(n+3%t_,r>jjl"V.R3+0tCW$@^]Rj])$o`74?Uk.2Qj+&1M
%Lu_,n;97Q,Cs"fS'&%M5#FhU1g8o"AE6#c^:Wid+PB5@';7$RW,"i555K#kl=8-i4HmU(0na$EbP'0\WP3@GQ_VuDXUqk`@)(e=@
%CT#Rb$Y"aZ5<lV2&&@ONOQ6P-/X+CcaG<Mo$`PPM#J=5!G&a[D32[Zl_kE$7'UQ)E:M-EPKS<]SZtjZd9DL_a^qi//Ckg$2!Otm]
%A"t"ch'Fn2+=thJ$>>fPn4Wrd*&E^OAa8oL!NA)"nlV*XGN_0PH5J\.in%ure4Fb:+NTPMp%burqtV=R'K2UsILk:9:tV_u\9MC@
%jbN'ifdd&<]5]qkLN152G!cg&:C8N:!8In>Rb2;5iR'C*.U^jR()b$5Q,-l2+0Ebp[`9a"ccn.Z(G.V\#Y[0\#L,p(=pNZG3iYnH
%=ue9-Y:j-l4g'tb/r!iqZ-,gpi$t(9n*slj&\$4)(tV5ZJ)!n76>[FI*dM1E4kUO/!S"0=JF6YXfKbHMMd'@hT\s_,<fh-PL.*\H
%"ZMLpOOh2jmn&<6RMQ5]?FCMMNT`dn$,j0!CDLC"-6n_,NVZ+;"PI+EO1sb_bV6hZ%s^])D&-WV5A#-J]l#+Phd]G#K],_t:3MUN
%qUY@]C(m@V"llnD<<rn?m0Ralkr*VU6MHa2jON[XD0A.oiXUQ-8:(lKA_q6J#hb0P&N+]s;pFLPF^jLL":&OO'H/#S)I)td1:Bqi
%,]Ys)r7cM)]1.<tFrCuS<.X9^U.>DfRO_p,WrZg.-\EuJCNXjA@E?VW!&0raB*PnBmd#7l2T]Y5nasG0'H9:pcgtpNWjHd>YWT1m
%YRPQFlMrt;g<nnN78drq+`Rr,<u7_$=b^A6:-,=U_da/?J3^5i+n*e]Q]LLab7N&=%pN2K)fJLl[Qtda,>Q3n@*!s,&U5C5B.dI8
%ae-LZ5tI]uZocI:r@j$t[tWA%"@oB76/6!^F+`7-0"j.^FGA:)"^7*9s(^0_roSWo;(NW%3%mno^.Lm2-S8@jj-Y@S?0hIi;*<lA
%j?Vg!`dP2jQl)W?(#A=eM\ekIjHR[^\n:.To0OB3q6s,VC$;!LA'`"pr].\fRD)<0bZ5J=Gib%r]3*ZhVDZeRV-<PnRQRJXABK#4
%FWE6B^=/ppL:ER.H`0'tX8lSB[p.)G3kaif;6$b>Z5pN[(YcLQ*-;8O_L32<(d*9>oDS]kmTXi\8Zq.J%FdVlL4HWJ,!6qG=H4:E
%5XGj)?j(Hl#XY;`_3&\p,;k0JeDDeCjcS)]jK/e924P+QN6](u*q&!9NZBo;!FKkMf7\6b4fVr2\W00TjR2c%MdOR51J_lpN=''i
%H.__o4^UcBJ7,3l84P^H1_J(hjQG.f-R#OY\4!I8)Z]:J4Bq=?/IZ9"JisV8-]AXgAr7BaB8b>9K/B\#.AL3;Qj113P)DdR'>4nm
%T/ZU-]JPPL?Jf&o+755YMq@`QUOk`%l[tquj5uP12i*rc^[Ue*5!VE:%O$A.4qa*eit<J#D)=8hE#A+H+<G(#fZ:]A"G+%\,R&.Q
%f65TInDCLk0i1>?>7N".1b7S=]4\lsd,Z>Kqqd++Ij<*c`XAdW0L0^]]XC5X\AjSXrtR5<1q]'c>JTnLW:RgD17jgkQQihU,JM[$
%#UF]MFE2^Tc@7"-dZ'.%:L*SZU+jT#%G.+YXRi*\fhR-]F45oU7(J6ud[H,f9gBDkKXPM7#nt3\(B]a)98[2Hilq\*KJ5ABY2bGo
%fGF,B2i/Co*N=[Hdj3nB\2Kim@W1#F_)V1-L%C]3DF-]fIa)qNfsqOm^J_(fQ(ue4%N7;UH$?]E&;%.O"lqPcDbXu,98c-+C=l)7
%7_+5baHFNI"EqZ-ihsN;GOa$W3!-b0#$'Ci[Qm'"Rb>1:TW>4=6mF^e)e7:IMtbIc(:i:G0K$AD!Eii!bO'nd0.H0Hr+Y.C>iXU$
%K$r`A"]elsEljWc)/V1MR,9NDT8?JS$38)``st5dn_.qM90i]teF3?Q-+]%\Q=6F\+Zcb8a)K;6;I>tZ"Z9JmeI]=pY'r>WL&+5Z
%JO;a(A7#cU-YO.^MT_:CB4Z9`j81m(E,]N8`&38T'6@&^[k0X1H#6d>mBs]=@$mYgDIg8"@Q`tpGX-'(b%>W:9+u<)hK8Zm57k9u
%7O1I.6e,m7!LtF"6C=bd)5NDH7Z7Oc";[-*nhll&RCVgm:7(R+i]07;:][]]al4[og]0\I`Z"rLH!+sd6GlX.A1W&G]Gf.aF!acj
%7s9<-4^XGrf;s>nl/XCs<ZW7)]0Xu&P'4hZ7\IOBd*3/E&GGIt\KN/T1S5g&ro?0`@*#1@Gg$d#$`@eEcZ;mEQVLM-C-q\$9m7ZM
%f9[*<lY+/%\[`C"'?COB6d'!"9?'m4I^?%q!9_hShTpUBDf@ASO=%-T2]0*ojt&W50E_-fC]Zm&pG9IUJd[\sjcmeIlIiiX<kJ)s
%>cUP4ED<Y:E>,s.$JtRcTouYE]gGh]L_6'b"YHgK$/[h!U+>@">Lk.6d04Ij72'>?%L^#MGPl.!HX3tu&iHUC(5BEOTSbG@C1L63
%bF2KLrSr1M"-O7BK9,F#!eGCf9ged*]Ipa\[JSlu?jKMc?7d^q:hk=Ajr+X,2:j-JL_g83pc;k%@Uu=rPIkRUNQoS"rZYFY&sQkh
%XO#</&eon.F=#cQI!P0Gba8JQ+I>hH>5\dLKTqi9+=rrj7ZGpsE/jH[9be9rf"dAF/\<:5!n0-1-=u[$s.GK2IMm/+Sp%e.P=IDV
%A$YG`5Wpn;JXcMP5l&uYCGrcc%bFUg*(L?^G_!Lg0^ps8j$WqQZ5n[C`$;ft#)--L?Vc5`[%+g'&<fo-GIM7,7oM$goK"V/TC]0M
%0*Gj&J2g%3%-ZI"R$X5^J]LlF;7@gI1-7,!Q@OK;%lp]GdO6"=I6nV#%!Y<Za+P9plJ)lB$M<(G8)0Y'ZiPb9*dfmp9?%s"c38*g
%@EbE2Oo!ZPMaP-)n&if402f-Qflco1G]k[Z`C[#>g3-iB$hAr#/nA=/3HKK-1-<;@nts,QX?IYr,chpT*:.j.`#d=I-ds/&^X_'#
%/u=VD6eJoVX1,37NF=n_B)8/3c\=1,*gsD)cDt->@CP,`F?[D7X>g?Zo.&LGo2OuNh5FSaZ@Dk+&\e#Xl;WIc%ajV:^@uo9(L:XY
%VSBVZQf7P(4cOaP1]-16pI1Sj`X%M<Gti_5Af.>[L`j-4Tr.7[Akr]aFu?Ah1'j+:Z<$_>/_h;]W,X*"X2i4S#5$lFD-D+pjn!;!
%i2gh)NU\b2._(B@^=f6L75`!8'Q.3CGqR@b>[P-kcK2]Bf5b/^7#VS5)S6'6>_DP3@'IF)p!j_2ZtEsEgV%s52`G@U!<eMnIU,a6
%Jd&rT)1^:9o8`Ns)*@K9@eA!@gCKU]$*?KgYY]\WR\liqCU(1+XinWb5Y1CXeTVDUh@W)i#smS8(l"2t]nEFj08nVB&qI^0Wh1H0
%0?+mX"g[5-'-A_.bJ$$-$_X@M;_-VT"(UqNW5qqdG"=&e=-nJpJag:jp1FdPGASCoi:b^22MiUBJuMTl#PU7'bNBXTAhJ9fp%KHM
%KQcN&]LGY_&E^t!;5lb2SOgSn+WH\0X;I]KU&H=9]#BMQJiGWu>aZ8#+88C"4euMWaX36a8$R&a'%u@nL)X3;[A<@]:Nk\)9@+d'
%Tp6:NRp$U)\I+,13Pfrl8oW>I],q[Q^`.(5h$"C>];6iXZb9;nIm0qX1f!PYTZK(k+p:uM%)VeoBH#/g#&J8R2I?S*A-NMtb\rI$
%O_W)ihOrtpRb:YWIHS$+bT!d]s!0'74OJ.#AP(P6qe)XHc!U`g^Yr$p/$sJ/QGOf^&i@_XJ0%jS'>KR++,krlPVH!.n)>[9&Bu;[
%6,HMj#n-'f<Qu90!,U#tq+m<%G;&^Zq/oB.5:Ik=QUHI8ER^>XRp>Iq.(Ua!oh=h?^nFZ&ZcQ*9)&`3I/]HYaQ6Mhk8fS]VSQhM=
%2MZ3=6QF^EDWt2:f%GFRW"'5U%*IQJUJc1pXQ$SRj/S=d[bCsC".5ddrld],X+R..mOOASqdWV2!Pbc)MnEkj9YD?D[)ULiG@a>W
%L[s>OjAdEdB&)D;FDoi7_lpE/eEI?d\Bm4O)KdVW7HrSR'HaTj.H*E*@o^Z?SW/>WbqHH`nVL/=1T;421*^obQ>;]CO(T*WN_sH&
%5rB3[Ao,MT89MoCR`jV@#sPMsC8G0ESRpA0A3`QVZOGY+#"hFa<$BmfBi$/*_iFj5aKQGr:<8F/P7hAl@uoA4W2(b$W>C'k<0"pR
%eoM(!8C*ilTiTA\=Mp0Q"0hli0\l`Z>UEkbiV;2O)"tH>^<_kNMSQGe#r4[mY`ZJtaTMF!'H-3br<)"uW@XZmbtU7;mLu2-QHFN`
%2@FSJ%GCBcJ_UnE>2ZOGFhMq&.L1VDF0,s=^E@*ZCM2k=?nhV50,rU%S!-1+.IlAKI]4m)9]g#kV;u4-+>.FEP`TW^oAYtHY;1P+
%e2l05:+rOMW=FN5SZfnC_b,Z'0EYE20>rd+Z,aT1<"8p\ooX$&K&]2Al>qQD?&1MRFHN;5^B6I&-mLf4/5D2_S`$JLYU7E`0gQ,]
%'A]Lm@mX*M&XNBME$TL2q8<G)GKT`;Tp-7-#Qu_n]n=+(W)6*J"DHB(f9j3jq5W)#CQmBU+S.9>#5\O@0/p[>9%<oEN+a3?lPFi0
%E^0J%5o&l4<!=5=Z2p)(i:rL`nA7qPolEYmO1Vnm&+$*m4Ndq[";J%-MqPSD)WY$J#`T,lKQRFA=832!a=rp7lRRWe8@F*nRSc,e
%M3J2hB_7X0L5dE-:lqZj1tZjZNl%bNl[@cf@!_L&5P-'GTQMY*X':$",(167l/3cf*smNVn_>\0[qn(o<miGt@g(+ZD=Rgp!tks@
%:<+Y]9aPS(G\,-D2c+M6-oBo9,j/.mhHK7a;\n*1o%$/?02@89].#=ucke(q7EI8f3?k2]]1+)_dp.QTFm_V8!TR"q7N=8kg<h0G
%38D"TWUV[`a@ot25&>UKSCKLZ$JaJSh4/E&Y1u"H1/h0;.(/@[-ofYA)79PtiV>R9P2Si?HeMh'Ju]6*;22^(,RAAYFeb3qDC)I@
%&_q@o[;:mpIO\X/=f.!CQC/D'>I4$OE=J<g/OpTjFe;eG:g'(mOj%r3&AYmt&N2^'\PJMF3Z5o[2X"b3UP_(Zd0#o'-51!jMgaYB
%s#CU"lb3ha'J"D2m:.Hjc&DXLiqet1[7!4_Am.=2piZBlTd!U'clj4Z=B5NKlkih"e&$\\4JZ(^@FnZ4!FY$1SK&DPeX=j[KrDI/
%\1Pkd/#ct[G2Qu'L[Ye?.%eP)a(BFSe:mZ\Z6eJp88S-5Z5Xh%L,Hi#bbI6Qca^'2R)88n>BLRR=:IDi[YsO<3)dPr8i^Ki"LLS@
%3Nss":MsJ"F8WieQKt3j6lh8<_SsVtkp4uOMVUqo:$$)f1)rJs"pnPHM4(@]+hT`aL(+15/q,OTNf\`5$rVV9UeN,H'Eqm6.'O^X
%]<eO!0H5l)P\6MB]uk`Igo7X57CS5pJ2sW]@ene7Hl4sq=50J2^pO=4I8YAfT-_+%&tG$f#pTu$pQiY2;;6)3<V=d_'f.nSfEt%s
%-On>=(.K8R_`#?AdTH3^CM"!14\]C<h-BMPa03ARnXRN:#1AiW\/J+SEE&tH;+bn`(H\$R7E:R9%l5T!fMN9+A#I\\V$=*dA$_nd
%=$Ml(k+im'?]l9YWA:4)GVN$L$-uk[1Mh)n%2<U_BROoKHOth\UK#$UaVj).d=TP8Y5).UP,\4=Pj=HZ,K_/KOQ1&(1+/tt=$X&b
%(Xm#>OAeXWQ(o\i"T3;FYRe[rA#LHPf1>HL8M:.Kj)ZP5QK<i&N`a[[[cAI]7SVql+cCAAaKm>_7eB"t)=I%\$s@#!,G)rEa<(Gh
%C),f:!'p?j)N+)H>iu#OeV\SbX7nud4V?Vnal30jD-5!pcA7`BYND>@Oj@i<o_0Z3L<U>EnNs]u.e(;im$,J,VPjj'_2uuU=G.1T
%]FMour:e+6&g*JH"=t631>n^BmV)OK!5/Yt,.FolVYr:3(Th#N"E9jS$c3P+I)6%a_NufCMIBJ@7]j.,FNS8e5l+GPNGGRE?Y`2B
%?tHaf+IEm.C1P8\gleh'(,f:um?#LI?N?u]CWhc:^QYNK]j$?@;q(j(-a7$U"d3=C9.:om?r(Af?<':Sm(7=$)$Gl`XWX4/H1nQk
%L-/`cZ(H1!9`.)LopfLm?srQnHou\8NlEZ,i=TK>N^cYdO:G9Y_4O@fi7s"uX1+MDOpd]5VeulQM9\#SJABn6jdCQPZg3Pk&20HT
%gB>m:qF9?&C.RH="dJ0:FPFEWAd!M%,pWX,B\mB]:^,HMe7V%@Z6J.Hs2h!NqDtDHTu12`$JLAl?Ks53nDH`k+&3sr/!pki_(.(:
%F^-+5JHCMrW2_''+5*GZR=YedVOCkZBh>A1H[G`:_8CoUod;WNmpEg?q!l3LQ@sGFUF/ed2Ir\)PhN\6.Z&Wf[RHh+CX$%[U2$Jf
%MPAa3\:6>PZbsCE*=78,Z0Rg;G+lP_3@Y^];fIBk,68GVcDkZ<#q.'V#'[jiQ*RA!=$$+(*@-SOJ>fP_DR"6doDiINeDG8:FH\?e
%^+bj!:Rcd86C@J6GBikLht"$t-iEW:mUV(0.!,s>%(>NKgqSKF+h(DB%+_/)muB"0[KS%@;B%<O,;YIk8OZ#uZBROSN>?\I$#)8F
%dX9FsM4MO[]sIJJJg(P2'^AP#TJZrV3h^;)!B2S%TJI4S$b4RN=u'QAj#.=e?bO$m:*IjQEK1dSppZ6^,%Y>U*`oQT%"!cq=<Hq'
%hm@&h'p,h12erW3I_q_KbbYP!al027:s&L7NC;Shr5lZKQp)?0K6)![]FP$7-NK0$haJ>'lsH,"9K?$o,!\uLeEuDP)uo18rYA+C
%J^#=X98K[eSs1fMorK?jdrg?>8qst!?(e2/+9m1A)pUeDTU<,5)Q$TAdN*96>=NPE=kbPlA=n6^>UC,O'F*m8:_6<0UF_[D=CBNn
%R3JW#-kGJ#g$4DpVEhg#ir*\b<AOHh[!]Z%MLm:I8]48"O,iR=71lq`Q=la9Iig$!W(,/!727.&7A*$fH+7_.q&o7L4+UtpL^u,1
%"L;d07umuS@R>@q64Zg4.m@Rf2`0<J.I_lV*,U>L/662K8HINo.c%hgcg-Q3J_99#Rk$kJ/bgdjfZ.mV;WFHW/%d362V%R.PoPie
%-Po-`J1P%i8WLTIP',<lTYbS9PipSHe]0+C^?^X*8?kK?ju!lcV<sfaZqe>bAFmLZ<up&$WcXW;_m51Nhksu^@Zk`'ht@KQeM1M\
%3OcPhIUVgjD9/\bMT<hUF-V0>"7Ok.PP7@<SfTL<5n)h\2sK@<c'DU,Q0lF1+rX(F)hKM/g^Eht@RmT);!!L(Q/B=*,2:W(KlK_E
%^Vgh'SZ-d;,H0V4aM0<%"mtlcfF?FkP-$%4/CE%$"^-1?Qm4(sb'aTT`dn5J`C^Rdnhh.aQK8I>4"5*<q%E!+m#-0gBF'6E_e"6#
%GHN/&g*B?HH$ColUB$GJ7G%LYe?l\sr,4?cUcd'R>JGiQPQ]*"A2?4d:pJp-QC:%Z4@tcUFeM=T>b#u[W.?b'Wf%+o3H4<c6U8'C
%&_aU>no+a'BRN$h?cRgKEs8ji3%Cj*b]60i,Ik[*'d,drN:*%E/`uKcWTt-]VgA>_#"Li!1N&k<IqO-4hrJ<Z!(=K$bai1q1Y'k(
%J<flJ.%*s<aB^'*`q3IM=fgo0&(O-7%ff1Rqj+WsC=`26+3'MRMa7Y*pUu-A:X6%pa.pW-$rA1L[?A^\iE(ZtraZU$*]tVqS=q/?
%k^jQY(@&'q.`^PlE^7GC,C,M]^Gs<ensL#O(1jVp>%WI]r*%CiH.CSs:TDlERuMgc-WcJYEAi]WJN@$pfOmYBX,@ENgm5Tm-nHX!
%);tYQ5Iot&NG;BKOCWHfHn:<U]:AfmC@3=PdS1We.8/0EA"0mf`G$F9A.fC@_r03](Ft!Ge-oRa%QR0)&h&O)#d^T*3'Q31)-:Gf
%9_g6:h"=rXgP>;1"@h_FLflhR<^\5K#a&.$koY'.TYRRi\Gdmo%rr5JA]cHL-e1WZ'_P$b;BZB9;i*]66Y!;@Ym":Z?UZNIW?/@?
%b"/QI@$$kC.857olt_N["'("]#aUdqIrUlF0Y@j`%F\`,c1&&lA<\@X7r44#PSS+7EerSOblhPDF).<MhofY`(.>/UXO/C/oNf'T
%?3])fT>ckLoEN.X9-AZja&p>H8?9_(,4/ee2I[XA2bIOinLe4AW#?(0J#-I^V(,4Z3mbaPE%.R.Gd?u+9=5]!`c#sm#fP\i&Q+F_
%8jn><[#f:uAFPr5!.sFbMY%>@Qt6g:QLm#C)g/IX;-5R[aQ]$\#<(E1iu*T6ns^="$(I%@:R`Yko0=:r$/eEFaZ'`g`3186YtTFq
%\?ss(5am0PGEgHa_9\nX`;n0ZAd\]KfYc\D2Ea0[?Y6AVlp[PZi!ph/#.@&OE?4&e45I*lkO,>\a@_H9H>CQj?4a2S]4a(bj(Mk/
%+`rSJ.T*Q`BS]No4A3:5FShFZ4t+#TI9s?HdF>F]of?,&Gu_qE.]RTcj:uW8>$Rp&iZB:&JJ"jQEeP5+VYGe)p=5qDF$njJW*7L$
%*oFMN#"&9#q-[QKN<U9jm[Z[H(?d?)]tSra:C^LlBQ4SDIs2j'/l_N]*eM`@$4>0MV(mBunO8-I\0hQ1Mc.45,71TAKX\`t'ZqTM
%Rgt"N^C]<+X%nU$)RabT,_o+$fP>_6kt0/5^Kp#j#2bDg)qnOj\,&^FRRDfKI2/O:=kFO-OW;TAg%D0tZgagYaoek&8u9\G=+N)X
%=<?1U?06;l8q$Y[T0@\RYRp:(DF&kX!H*#6#WPCB\%#Qf>`Oq*,;(957I6L?U*N1ul?-2US,cYQH<gZB<`IOMpTR1P"jpH[#,fFD
%qu)[-o)J3\TrGXt*uGb!jfCDFC'cssmQ@d5)=d7O*&M[W]_p^b1sLiB25se*o*dgj0i,M4*b[b2Q2/^f%!-45Li:Q!Q5JE5:WKg3
%LmI\BFr.$?cV8:JZa1^1mr:uUFVVM\-oLnH*+G\nJUb'%@:6mJ[="6f[t$/Od8=$bmtcc%e\qoEo^Y++hki7P.GXLUG:?;=h12)E
%69V"a+\7Y=lrVckR+:To>XbkhJeJN^-8+_A#QbF`;(bh=!>OgY*CZ$'+h3:\1+;H(U%Z!Y_9DgS!"/U<h]rM$Qp\[1`bri-g7p/`
%]g[8g0IeVgFt[C0Fu!2<\hWkkeQd8/bI)VV(>;*9IY_KchSe!"Nj^6GOknG"%"JRPIoZR-g\G0dk1d37mo.2(-bXSZjE_fNB>E\J
%'Ilb9"I)(fq)t+BkD'"tR+_4="`D,[?kE9ZSR_iPlU3X]X2aQ1R<CGK92M^Q3<B[hf=JNoAO<QMqY;$=[K9A&"SEJZQ5DFIeb$##
%b">=*&k3fm?c=?*Hkr2\dcktPY\oj/)jmtF`8PG;NmOXD'dtD$8&,EF[L!Fr/U5GJ3*FB\(U6ku0qFD5S5NtdPX#=m4IrndT_dlf
%"]7f+.eaXF00Z5n,dP&Wa&pMn?<D4thJG""fg;fg5k#@%W5JoHN&YS(&AZt%`FmMtJ#T5B3)<9.@KUtW"APh+SEL'O:2MJ1].$6?
%P(L]^cO:i18kjH0dE/".pbDSF-"Ke6Hb8d4:tk0C1>2RO,!&m\1[O-9/,__j2B?$DZ@ca4!Ec\"nhQ2]i\VrG1-LVG>]=\XZbqq.
%7>hK7E12au)_u$4[N4.7Z15quON.k/8<OLNpM!!Fjf9S&-j@#Hi?:ss>_KS<=2;gZMj)"b]\?6=:S(BthsJnDW0^5(!m24N%!rsk
%pK3/ijj!H.Le@,?$!)_%[Q7i&mE3Ns.>se'gap`\3Z]l%Mq!,H=jb[(A,r.SHhFn=Y,er>R-2H6,YPM/fF;EgK4@1q_e?fF$PuJT
%*6'#hbX+W=g<HjQ1p;bm<km?IiOkhPo9^k21`.:2<nLt&<F%%@qZUTY]ME&ePaBMQ`N&;s2e6-M/Qk/!;O(fSqjm'H0]?\kNK%Wi
%?>V@b)@2kBTCa6OX"%pNb]m.-9,@"+4.&0,H1i4AHG::cZ<2:Z'c*"0&P4/1L1/`'J.dEq3_2n8B%FgD-Ei<b3HOtZC><k%P]1=g
%iV[T`IbSK9Fj!flg#eB"1<LnDh0WaDZl`3D\mL9>)LM((![K'=<IAhN(_(Rbm'@p35^8aV#"p\nT=O<P^JNrb#*094o@@V8$a,Yn
%hDb9EWh;bM7pTJ9'd,D)a`p,%RZH3o):']uMdcg4K.'3gI#I^1L&Nc8V$YkZI0BEu0XeMW`f3JJE$8<H7uPE!m3Wt&10mHlXZlr3
%D)ZA7Ch#$C5&P+tEDj9^:S#I!'F!Y%3A8F`\X4OrP=tm%]V\X+R)SP=k!VbT7YT!dD'!a[S:Ji>%f'a-_!#ebX:s;7]\l,5X3!.g
%%V<hikKq,SM<ag[`hQY!p-j_Q>$u%SGEHNa</\O/-6kukIS(M^%=)QV`55J,&Li&K4@V_\H_%hqN2u2c5&<K=YH,7QCYHpkWLO.<
%AQd5&^!qA$4:@K=V?C9GTr_G,6!9aZ/lpBT8t`8L*ES[Wd/8\]8_l2jqrdsFQ:jEi@XX:4M+UO*)p<)/E:-g%/U<?!8s@AbdnY$b
%PKV*0`C!aFqHW8NN[=PUBrSt8X(p,G7To#SDC*nHD&X,m=)<D^pOmdHF@uW(%iK&>O?"bd.T/76)KcesG1hX=%$;Ubd<l[G<r?Xi
%j59sNUc/h`C-N,g*\r!aKN&qb+q4M2:U9kY&fYW3Nqdf`pTjGE[sG1$E@2K2X4ooH<jD6(1,=jpR]6*:%lIcr<?(*:B5Q&f21QrB
%SrG;AU7\A;mrQd?C&bO:=^W:llTOpEeH2T&qblmnH?R'5rp1Nlq!,)V@/'9EL$WB3:92VbF>96\qA&/>fN!h$Dii5.G6#.:e>bt0
%c,KrO##KnG9e<0#<4Fg9!u=<..U-8VZEt$lUsoZ')JcmQ3GYS]W)9p&<:gqT[FhiPIrl(MUEkb/d9@u+Z"!^_pGYHqc%9%!DM_M!
%2WprrJSM55Rj'HiGY[Z2!fD`^Y@.5Il$J68:ajVr>Fc!LSu=XOb=rEJQ^sV@l:kn#Ui4!G&J0_f/"PV=NPPr=#OC[7UBPc_A]_\,
%f!U02+"WSi[%3UaEne]ZF''cR@leNhilF-DB-i;g9l4;o+@HWD2;PCPi<N@r2EJ$j%<u9W^rk)ZC@MRba]DnBUAGt'e@sZ.1g)nH
%dQo2aT=0mXi_"nS!N^jpdLlUI)),OcXi>N5RLtO[fYpJ7A3C5orXcn/r!%aOdDHPV(XW?KeY8'BGE;CB^)tbm<e,sYGta%Q1Se"\
%G.2QtAU<@J>>)n:L)83HaM?$&,k.ZI$'/Didl8p+,.9t.^s51ipla@kXG[J/Cce:>6i:4Y&5*X,.ps[AkR4=P$^P;CDF=l4'DWs%
%XD1iUTW#WE^@]tK=G'&s)KY,m?AImgZ6n=Z<*F)[[_Cd41-8CCU8]:5jWf4tOTT\j_*0UPq!8gHMEX;F8r<Tr0GDLbGQPX+^.l">
%=#&i1&'S4WU2N4cG*LVQkCbEfePLS$2g91Besm"^jJM>SG<b`1@LSC:>bc=jos6<p-kiZ28j'c1X%6A\"J\'dNFlB^+>':B:kLI<
%##s&F=\dZE_>XE)0X*>hZ8,oKG/n6K19?ES6,sZrhU<^.-(BaCSWTsa.!pVb&,tj8kOsCTphp-,mloO*I)n1aDCu>NN\*f8m9`$D
%3ue-R="hg.&kcr?ccr=o>0SdU_ad87A%<2foZ4PsQo6L3k9/O>.cL`?9npJSU^LoXZWn!^nFrHqjg74H=/)#Ell$+$E-!P=h*>:R
%XsSD"QQ%?lZEV=M1htjjf6HrScEI8cL[Y5cL[Y4U9?m3,ealsYU1*0h(QhdiTG4A\<3?R(9<Yii3oNSbT!%J/pP7<*<%O[ue=J&e
%opsrE`5e:8n*_C?QN63,/c9*Q,XiXg@^@)LUL-EFZT(kCqF%_OKG#qmYU.p'mU_IDqg6">RPU-Xmhed#qU'qM61X33j>pH@I\VNs
%8XB]f:QqF)k%,hK0:=N#Jj@6+9G7BE^"saRH9SHLmRZfljtmTPS=Y3'G2[MLL\Ga2L99.S.,^i[VWLj._l<"J>kL57s5a/kcTVa&
%&h!:HDkF`A4&m7nqWn3(:i3B.\Pf590YqL#U%I=n99^@nn:Q'NI5H_m8-m/@3Y*fF@^1'Vg\(dF"o#%A(^E]2jZ7FM<kgWCHPph5
%pXm*)4aSm,p-l6lJI=thAW7q*#k3eD`V063!<B0&"47"o(XJK#.S:kAq<i1peo3OsRG'`W'7N$5HJ=UJ#3Mq;`R,pTUtg1#7-9@T
%d-Ad/6p[:qShfj$J@/#rEIY$%cV71W?+K+b?>4ZYLIF;qaeX;S<P%Vd"Y+k8WP8snoYi\FE@Gh&cFCL:ZY'K51"><*22hI?IuD5M
%jDl:g)FcqjZuS!j=M!Pc@*_7N-IaGYOUb=eIW;E$cO?Uto!O*;ejsaEAm^SOSJLaYaKjhQ-gAV36,"?6i6)A)WC4.+F#B)=mr.mc
%R2M38"Jd8t%0^$Th\J&)Q$9JiL3p^L1_V-dPn(s%)GX!L\_,<fdES7F2a#%.+^d1f:W#b2Q[Zif\'?'[Hdi=oBacj=H8446B]p'U
%hJ%+FgB[J!o&Ke/QK&"mTc)J?a!bC"$.ee28V!GJ>:%uP0H:;!?9Dk8NI*gKqg1JQDFuGo#^u.gRF<Zca[mp1-Z._8Yd`R2GtfGW
%:,7:O3>;aM"NrAuDihRm4aUe6[IS6AYG6i(#Hj%A-1P2k(Y\&*5K5;q_b_VbL)61!'c[42N&g%VXkk&A)&p76i5F>hS?]VSLC0Zm
%Skj/Q\At&f].5"'/A:98/[A84pu;*iZ^W`)K&#8Kc,&c$fXGc@bVn4FJ0?r1REZ(:/:HhBNqe;"jZ::^`SJ5OL.!O3%B*]]gZ)`8
%k[&1fk)9rInW)"m`tg*@%QCY;G0+'V?cu'L`Ii9Ci?Q-qd_1?l/H[kpQ=_Bgg;Nk-]f?]>3PTj%rT=^KNK=,!?[hptRH"7eRt!(5
%ru1q/Rm0"e<sPfXGkj:*nGiLTq60gD?MhW1AFUcAl[N,&rr%WD5Q7Pkhq^,'_j8-USTHNaO&IMc)e3NiGIn!o[)["F'tH.E]9.<h
%m?=sq_t2Y4l2A+>_ka/&U`s8Q'M,#aQnW,p?<q1q;Ue%Dfn(#3.0WWm);hUG/.?D@+sO5hlLHdV$?4O=4EN)Q.Irj\($ZPr]5^u[
%"'Z?(<NFXW!]akZ.4D"aS)@E:b/_a!5V*K.)@&M9$e9i)S'EtucUWIL9@$$_KB^eU<_T4LIb-@(31Mp/MUH3=Jh@.7>P&la*\J=N
%>\9a;nJg\o3BRk4K/P,H3;:r?)qB3kW`q,HM.<"#9g0<E]Y\!8G14/?/S0VsnQ.Po=/=nWjQAipYf>mX4b#nl3atM'(4VOA#2$TA
%(FagV,F0aqaV,0m&N"4i2VXC)QWHD)55ge@5nNRe9p4-,PQ(hT&5Gj\bHq1H!J39EU2Mm!7kMPi6e=4_\H0&\s4"bh"`(9#l$1,2
%h2=40Zfnui_EGK`TA60eQf'uk8q4la1Le'V%[FuqBV[j]MJq87fb"=OaoIt($9;"$X>?lU9-!U$,Tkn#m*3r-nd\?T%f7l6>GS.D
%(p,*ZGWkD4in&O%J9dDugr^2PBeZ$#B?IVU]t1i-)hU/nH:B1K(eiGaZ[jY4;l?ah.(3l>,p(o@DR(0=E8Sq7A"!-=gORHDb8e[\
%S_b:-]3[dKhFeo)/&.%]VHa*$G)aG;2bUnVq6]K(X2!<,3$X9@ZFP#eme#k.m&B-LIXH37pA@8)q)L#a_XL[jEE:<Xkc0SR/FJI#
%bX6f#Y@eBC\a7nqI8kjP@rqc4LR&5@39gEhd1iKA2)Xrt_J(]PHFKaZk(A#o24.l8?c@3tVFNJ"K):ZM!'N2nCT_OX_Ok\:.Gl6W
%A]sn\q/t7b7LF&*Rh^_TmS6QLQXb>HO]e71XA1FCeQa=E;ZU15I:a_:Ciq!#(BZX@pAGbp@'t+9_9JQ60h5p#W-WI&J+b(+fkHAb
%>0kcQnlcTT?:3FU<O)G.Un<f4ZW`fsgu%AL'9ai!QGm8o^]UXJTl^,qqh-4tpma0hTX>D1S?&RmTLEr=IHqZhXS\JMHX_/N%.&%i
%8Eb+1M+eTKm'eu1R#mgqQoMXa_o;s8$(^fIZF7C=rOndc2,j6Mm6^U$&([8]A"C:sk?AKP)b2]]>unYTcMQ,/;_>>*HuuE%:X$2B
%XS(Red_CbJ`8MIE16n3Jp3?^:T;&%G.8?Yt_Mca3BV(2#4M'..-`0Yq+fkn>`h_3:'LPdQ1(KLsU!5J/m"&V$:ik+R(S<gqlqVc?
%q\q\D;F'L`osNUb9Pm0f=<hGDF@"q_[^8=FC%fiJ#o_[`Q`gpk<ocU;i)XcUV4J"<4$q+O9aCMOrohh3*X-)t@pf]';W"Uck8:[3
%5p%^B?Is%;D8!R/>N6R`c/+#9eb%.^IOeEd5-:F=Y?$.[*jZIp"NdVHeu[?(]+"Dm6UsVpZ6iLWiObSm24B9n0(0WO1+C_/-J&Bk
%+&_BFFNtA87Lb)6eS-l3:kU"7glQk6<p@^qI-&2hhAAs=B+FIX*;^\q>bg-2k@FE)YQntInS-MfEj8YbqXT8E/LqaJ9TY\`RB`@F
%gfMlg=j7DLSQod]_4JA>302i\kmA/cn7QD9-H<iM25"Nm,ZdT^Rc9l><iaY>QPBTB$4!E)Rrf_JD@b!ARlZUO*A%YA(7Wc\[]FK+
%fr]%,aZteBQVF`[4.DsGNO"k[!V.,%U9:E,`E!l.(:.E)>kEq=C=.(uoPoud<nbQQhd15`TNr>uE0Cku3hk1YO/Mfa(?to2nauQI
%"7G,(U>'d!gOR,-'Q:1ROj$[Rq6:hkV5lLWq:>RHm]O2H[X)HW*hW6d7<rPN-KPD3T]f%n5+mNR=GCPR[M:A@*V*LN$&<VQHE7$Q
%X8.HsT#a.HRN7!#RS^j\hru__L#s/X9c5s4if@mn?ml]nBp:TPOh&efRW$k?@h"D1ftX*^S4d_DZmnmsnBAWJ2?]$,r8HOlN'/+<
%KE[/,9]`cHpLsWkS8OascDr[YD81r<nGc^)Si/Y9d`YL^Pgpt_8,)kDHTO2JB)qJh9L:9cYN=:t9/N$tQZ)q3AiI0P>Xd#_N88Ue
%=1"Bt`kPmh9M6TOh<`D6S.WQGf6,cI="AQuQZ4^e:A0iQdVT?*Ru5G`I6o^PjVliI'\s`<;?p?q_D6u2mXq"B0q*5Fp@7P?2I7u1
%2otNe!tN#!ZhmDeJ]#Q0Y]r[u#EL0B),8'$07Fu$S6H-jk[namk$;mK9mY#p5ark^Un>?l\`_:&],nkpN?h4ZD<rRh`pDc-=LG!Q
%>j#_DQ?Iba-]a!V9S^#-nMQSEO9F=M);KVn"uiT=&!;C1WD`I@LDU`)1\Eb#qP)d&le-nNiZ\aY,N7ptaL9.U>1q?NN6R<YeIma@
%Ftm-q\9^_'2IaCJopGQoc/'A`)5:s)?91@#CM3[fI[,%F9n5OYB*B;mqQRC#C2\Y\C%mtV'(1ZR22b>sC`@SJZY.V/OrdoE19.87
%Ql^'$KfOgsp2+O(Ak/n9&:h]9$fjJWG\I&HIuC.fqg1JOB!sVRqV4[7F8!-[$Nq6NnJYMQcmO%'bK5[G:S%nUXh;YcK89akHLe.R
%l,u9B]10*(G_!r=/>m]5!(iCb6q,]Z7E34SHX@c\g4Hbm)&_>fle0_gp1CRGr"9Ybo=XNjq9%:ZqUmfMF1b_#[ib<%dV-(Y^f$-a
%#<.#'e.`]X8`>\60KNG7eEgn\9]J'ojrfa[UE^cFh)^otW99)2LG<KGhs)J4J$UNK%@ZkO.#]]@/pLfAQDD'tDTs^TFB,m0M%J46
%-%,7SE:uAfOaV2T-dU&kgp[rtSq2Yd;j/hmQ6'>i1YAPRl1M)a&E+g@[3_E4Bb<m^p<U@ce[&n#f(@609kBR/ZA#@^cQGilO0ff.
%pMBQ%\9bG)6e`gV)#KnZacHO`N>^I+^"s[OJ^+-6K3=1R@*)b9c!KO?qK*KHD]3RR;qp8OdN;S.?2<KdfE@M'C<2$S]eu1+k)J8Y
%mg_<2M/BYf9`*M@O4tG%%STSNh'CNo$>s?:BBC7]&5@$Cq/A/E!Ke(2[S_9gZaWDF51"Lm#gn7L*q\[[0T>P]<!]2Fe6n#3k-/b_
%H6On3-1]tSmW1VI6=/V=dM_;cc/'9HUs%Y%6hnjC'$685QV)4&-E/.t:9mX1,\7G="M<^:.p1-j1-]NTEb\eCihPr#"=0-m$/C^1
%\ocf6<Tl/Lf:t,$A-hs>NcE*!DCh2I4CcZe_TC>_amdV2;HE$rgsa$Dq*BLLWA$m'+Jl<SmK'7kSf*'M-#r4,WVC<i\a=+.mY^8b
%o6b^O!1(]p.]_XFKcje"omV%dROh$T;iZ)cblW9b5/R&DoZn^E<l5%Ys+%.CjdXJMMVWL?9T)9"juJp\d%*?FYI<ku>`:e^R:9LZ
%'ZUh7)ZjNt,qq`A/"[5hQtm+W3lOBDD(aULQl39M^rLa/26Mt@fu&dt*i'$i-W\d<Kf#*ce8VEfgJ/`KMp4/SmpfHAcE$oFk`gFk
%]Oj?*Q?!HT0'8>\ChfjGaf\"o^J/I@Na2QS?-Htd-9lhEhgdVZ7n2>7a[h<PT]*5TJB+d&e3F3!4SAh\H[:K5a0P/?6*sYMH3'/;
%aRn(ZdkA?BAWY->r.cBMm#CE4I*;5%-RkWG!0YQu#YM_Hg%2\g\Y[5=Cq<KGZ<Gu:":NntA<A\<q2V4sKa%Wc=j^?5G<NOd>=3,W
%FME5PYj!$aX!%aiPejdYB<]E6^;pQS]LGqDd<hB=np,LH&RR23&0S.H74Y!b,-&rDh<V2ZS?MOnQ]YGMn[SjL`7?]2`EQ',Xk9L`
%G(>E^,tgjCBO8%N'Ea>BMpEtg3:aj+nE<o&E\-[-!SK5!49OlE>T%'2SMOr"E0Lho-0t!/iEN%jk(Ag7m,g6=@7%VP"(C5C#<.##
%BR2O2K,[KE3@YF-G/\.-NK;mj1B"^WR7<..0q&BOn6pNgfIS:rE3!W4V7>C2ku;;-%tC67O>[mhH(mmi#*R@bfqLYV"leLtBW<r^
%H170b7Ws!Z[g'10dI00&N#!^a?RPFH34ss"><G109.%(QK>ZCFR?"4FJrOLrCTN\CCI[c2p#Kh<Kcni_asR3:I.e)X^^>c9j_cZ)
%cNl%R71oNa@1<:P$iYjATuO1b-.2UZ4aCA\c??Nkj)!"l7jr*/DAaP4?d[isLq7F:/eqFunK;%@Bdb:%TKUP^n*fo0GsN;7%P6Z2
%RH?/%#Su0&L/?/qWjO4X7]b^C8'22l^W\/2F4Oi`'_p)#SieY[6Bup&B6:OBB983>&tOP83i:g8&Ui>ni$HY?;(u=ZQbS9H_;J>O
%ci(PK4>m##5A`;^r1'DC7*`JXM$\N%W&N.2U5;LhWZ1%(!+$H&/%aj-qg1JOAge,:rd.j,7=\anISSsDU8UIufe#+iXF5E\_4'kl
%hTD4De7?PPQLF;8jI+[fl0N6Z*UnhEPqo.WT-l7c7Xumo)8'Mq`5`u<6?Pt,/kJt=SfZ\Ra]#O2+Ii.+DX%^6c<Qd4V4J,^StJ-/
%kPuQZ_u[1S7eA*?7AKo/X/^k_[84\mHbD;&1PU2\<H5gfO1'qX_N;Q8g6ZTNKnHQ[ccbqXQsHm"!BR7LCiKF6I+6':e+*'s2gT6Z
%B8#aaWZilK&jbuqmln\I>4"9O[ut)B2!;jiB>=pBb&$j3a$Bc_[DOrQN"eA/hs7D\S29pMVW*s`VO0.\60-uG-Le$QNXdN%jJ?1[
%RDjG3rhs@u(/N+gk6q>B(%,Unme#(,c6`J9Su0#X*34u:c04sE'8s;PPgA,[!@Vdf=C96F0[a$W$V1I.,qX_bpC_,-Nr-L.mO;AA
%1Y2=t%QH&IoZ:ONd.:EZSj7K^H\.k%:LZR7k-C7XQH]-d2ESj(Q?6A"i[`3s;'lJMI?(]:r)(LL^Lakd6Ir2$4a^mEpk3;@T(X:;
%OaV8P@^Vf;Rhp;:%AJ1\[no*OrlICX0p=2#eHugbYuJ'^>"Ost@@p_0PHYmq0^Qt/F`,o16I%!K(8R7j8+[B0qJ?\^XtNiu2`rP2
%45*Z6;;<f#aN2':"CqZsR'et/ZkWCV,.atp-"1+k];sd',Q31^YnZ/38(`Y!S!_#pR#mp%"?g5OZ@u%K.\U]]dNXm+L4ln=Hm.q%
%hRD=<)Bp1cGk01PgX5$jZ!<=ZI!*:G00*pm4rZ9E=*JIc%Muo46[6jTi\jG+AQhL2X330*>F3k*XB2/l.!@kH9W*"gSUb(FBe;4[
%l!2@.;?uK^\_mb\/)<G(peG"GFX"C')X*-7TD@cgS';:q3n)^X,lUJ]mj65uqpk[FN-<b/GM.-.K;K-%GF]_sQ;?>*E%gJ&L=\q>
%Gq_U(<>eURDsmuYbHGP7=e';:G_s\!nuVBsR(k)(=^3OU;VW;H/=m\&/9Zq7h_`eDqK.uC2k:mUQQ<59b=2QCPZ:o)qZ,S3.9+`Q
%m$!"0AJasTI7K*UNeJrlbY((q@El3I;T&+BJ$PR-cn9e=lm=aJOc.!&M\hY*=cpU_XFsS.)odsD\!`e[m05Fs_`>&+r7s_i[`pNt
%>UFP'.J[NU\:qWA^'n%CRD!X\?5%scBnL*1W780Cg2=E39A4'qrm0BC7Ia9%+GhCnUa%[@9<5fYN@f9A7qcH[a"b#PjgF$NaZg9Y
%_fgO[*Pgb3dGiO^*Y2i'fUpsXDKe$8Nek`2g2HD&:o=H=b.korpVEVOp9)$7m#U<RRU@N&TlfEq4]/qAo8r&bnG#9W$d3/YoXcNX
%SZE,Ol<u90jqq1G7`7[BFMPFZR-Apmj5[G42TT8qr>NL[39&l$V(GK(pg,"/[^`Y:&]5sMZ(TJ`:>,8S;44npZX+'t\Ifo5i6u$q
%8iQJ/6UJfi#P[$5V=\9_7>@Eibq_a]PJ:[Hbd4jrIcDs];.c:*d_QEXJg)?YM;'/+FH8[P^M,fd3cd@HVE#<4Se;ah=T@E&;=W3/
%$t8\[QGm]4e+#U^h9?jJf"K<BDuK6_LEJ4`c=tRYZ?]VE\fKIja3X"\Je`;_e51cLRZ$D;36'bTW0s'#P:3Y"FHi.`94b]Sb=W+<
%%TH@PB`=eN\Jg^?SfVhq]s2?GHob*KAX:L-qV%YJUm8#uqZARnAI)/nWiF"/!#aQiOp`kJT=sXY'GSNG\k[$>Pb5X9/Q;2IV"J8\
%!F9^`Mg\H`'?^I5Lnt1*W*W%BA&djJf*')WU2_gO(%.*FXV2HkZA_.o_tWq@BSV+1q_ih2gkpJQ6[q"t;rEr&#JZh(!tcVR#79^J
%5<6;s@kfZ#KWX&`N;kPj+6&s?06RsI(q@uVOs=O4.ou@N#iH2*$?n,UeoWi?lVMG2>72,kmgR<.p=XQTrr,^URb[P)hs;H^fg!JO
%-8=^_]>lc3'TR<ZGX,=R&[U)F$Lq!B?r:*E9,_6GE4EABV@S-kZ\JejOBMt!ob'Z&$WN!bZ"[5rOXa[sE3.@'J/-&@(lQeEo?^*Q
%3GdC@T4&%.;$7TC<G8gF?C5oj=-YH]%=D!afpe0Xj\uuNQ*HtOO7m)_dFij;IS<O$&R12npiOOJ??VZ*BF$FW8358Q^>6ekT\)'=
%]/EA38c@%S;3Du(Z%fdn`8uVn\%6b3`/Yno4;-'(;XNU3-.a)j(5UN.MLPBmT6s8ic\m7*I;=ZW)h)/fXWa'8nj5!pgVtY?'^>_l
%q(2DXcsiSOr$XI"L3WKoG0RZ!!Dd#%gpTX+DJk$)hF0/g`B2H%^*i(]j8$n7Rn"rR:RM1A^L/p#F[,If2gbC?Aq'pHjl5][f2je+
%)UK"_IaqgFi&9=EM[-J7)g5-_eVq#V-A@[.[R``g9a0GdO>:dVZZu`+B#qImIb/Yml8-#FX<DpK<_m5E^=G:7UdLdpJ*[\gW)oO5
%riGhH49sRA"eFsR*MdP/l)<H>mXBZ_B-.`?&S4&Hp1_'tT4%36R\C%i'f&FT#juCcbJ0_"Cn5uEOn&c=>OA93O7&unn,^E"nBhbk
%mLX=&#=&-eo@dROS)_9`c0tZ2LEF;/o^cGgeTp+Ts5D#Urq*Zas7efbIerlXGJF+TO0:crr:,!G_dE<*J"?W(j)9GHl1b5@++O:S
%j7!$,+9-jApsT)WYC?.'s8HATq!S.`&;SHf~>
%AI9_PrivateDataEnd
