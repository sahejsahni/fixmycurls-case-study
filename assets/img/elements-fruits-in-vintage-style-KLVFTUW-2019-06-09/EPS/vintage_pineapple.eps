%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: vintage_pineapple.eps
%%Creator: Adobe Illustrator(R) 13.0
%%For: Алексей Попов
%%CreationDate: 3/12/2016
%%BoundingBox: 0 0 1000 1000
%%HiResBoundingBox: 0 0 1000 1000
%%CropBox: 0 0 1000 1000
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 13.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 13.0.0 x406 R agm 4.4378 ct 5.1039%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 73 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		clonedict
		begin
			/Intent Intent def
			currentdict
		end
		setcolorrendering
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: (Page 1) 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="п»ї" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.1-c036 46.277092, Fri Feb 23 2007 14:17:08        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">vintage_ananas</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xap="http://ns.adobe.com/xap/1.0/"
            xmlns:xapGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xap:CreatorTool>Adobe Illustrator CS3</xap:CreatorTool>
         <xap:CreateDate>2016-03-12T00:52:15+03:00</xap:CreateDate>
         <xap:ModifyDate>2016-03-12T00:52:15+03:00</xap:ModifyDate>
         <xap:MetadataDate>2016-03-12T00:52:15+03:00</xap:MetadataDate>
         <xap:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xapGImg:width>256</xapGImg:width>
                  <xapGImg:height>256</xapGImg:height>
                  <xapGImg:format>JPEG</xapGImg:format>
                  <xapGImg:image>/9j/4AAQSkZJRgABAgEBaAFoAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABABaAAAAAEA&#xA;AQFoAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A6xnNu4dirsVdirsVdirs&#xA;VdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsV&#xA;dirsVdirsVdirsVdirsVQd9rOkaeQL69gtWIqqzSIhPyDEE5IRJ5BBkBzQ6+avLbFf8AcnbLz+yW&#xA;kVQfkWIGHw5dzAZYE0CEzR1dQ6EMrCqsDUEexyDY3irsVdirsVdiqjd31lZx+pd3EdvH/PK6ov3s&#xA;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&#xA;uxV2KuxV2KuxV2KuxV2Kv//Z</xapGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xap:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#">
         <xapMM:DocumentID>uuid:EBFD1B6ED3E7E5119BEA8FBC829CE640</xapMM:DocumentID>
         <xapMM:InstanceID>uuid:ECFD1B6ED3E7E5119BEA8FBC829CE640</xapMM:InstanceID>
         <xapMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:aebf91a1-a8a8-bb4b-a976-43626f6afcfa</stRef:instanceID>
            <stRef:documentID>xmp.did:FE2F935165206811822A8E87B3A63B49</stRef:documentID>
            <stRef:renditionClass>default</stRef:renditionClass>
         </xapMM:DerivedFrom>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Print</illustrator:StartupProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xapG="http://ns.adobe.com/xap/1.0/g/">
         <xapTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>352.777778</stDim:w>
            <stDim:h>352.777778</stDim:h>
            <stDim:unit>Millimeters</stDim:unit>
         </xapTPg:MaxPageSize>
         <xapTPg:NPages>1</xapTPg:NPages>
         <xapTPg:HasVisibleTransparency>False</xapTPg:HasVisibleTransparency>
         <xapTPg:HasVisibleOverprint>False</xapTPg:HasVisibleOverprint>
         <xapTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xapTPg:PlateNames>
         <xapTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xapG:groupName>Default Swatch Group</xapG:groupName>
                  <xapG:groupType>0</xapG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xapTPg:SwatchGroups>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -1000 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 1000 li
1000 1000 li
1000 0 li
cp
clp
[1 0 0 1 0 0 ]ct
1000 1000 mo
0 1000 li
0 0 li
1000 0 li
1000 1000 li
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
.878431 .745098 .545098 rgb
f
426.345 326.919 mo
426.345 326.919 411.892 340.345 405.704 350.286 cv
405.704 350.286 404.165 359.235 396.938 362.716 cv
389.72 366.196 383.524 372.657 379.911 389.075 cv
377.329 393.548 li
377.329 393.548 372.161 388.071 368.044 395.54 cv
368.044 395.54 378.876 392.056 372.161 402.493 cv
365.466 412.935 359.271 423.376 357.216 432.325 cv
355.657 436.802 li
352.048 433.813 li
348.946 432.825 li
348.946 432.825 355.142 433.813 349.989 444.759 cv
344.821 455.685 338.11 459.669 339.149 478.063 cv
339.149 478.063 337.603 489.505 335.024 495.97 cv
332.438 502.427 335.536 509.388 335.536 509.388 cv
335.536 509.388 330.892 514.36 328.825 517.845 cv
326.771 521.321 324.181 507.399 324.181 507.399 cv
324.181 507.399 325.224 518.341 323.157 524.802 cv
321.091 531.271 321.599 539.22 328.31 542.204 cv
327.282 545.188 li
319.544 541.712 li
319.544 541.712 326.771 549.661 323.669 561.595 cv
320.571 573.521 321.61 582.978 327.282 587.45 cv
327.282 587.45 324.704 591.923 324.704 595.399 cv
324.704 598.884 321.61 608.829 320.056 611.806 cv
318.509 614.794 318.509 614.794 318.509 614.794 cv
316.446 611.317 li
316.446 611.317 320.056 617.774 318.509 625.243 cv
316.966 632.696 323.157 646.61 323.157 646.61 cv
317.474 643.134 li
317.474 643.134 322.642 649.599 322.642 659.052 cv
322.642 668.493 325.22 670.978 325.22 670.978 cv
325.22 670.978 321.091 688.876 331.407 701.806 cv
325.22 698.321 li
325.22 698.321 330.892 702.306 332.438 716.228 cv
333.997 730.146 340.696 732.126 340.696 732.126 cv
340.696 732.126 328.829 727.657 324.704 737.606 cv
324.704 737.606 336.563 735.118 337.603 742.579 cv
338.634 750.04 347.407 756.005 351.532 758.485 cv
355.657 760.978 356.173 775.392 372.161 781.356 cv
372.161 781.356 372.161 792.782 390.224 801.735 cv
390.224 801.735 388.157 803.728 385.583 803.728 cv
383.001 803.728 388.681 807.204 399.001 811.181 cv
409.321 815.165 415.497 817.149 419.626 820.634 cv
423.774 824.11 429.95 831.071 447.493 837.04 cv
465.036 842.997 474.325 844.493 478.97 848.974 cv
483.606 853.438 481.032 857.423 481.032 857.423 cv
481.032 857.423 491.618 854.013 486.458 847.54 cv
481.298 841.083 486.704 848.974 486.704 848.974 cv
486.704 848.974 488.251 850.954 496.001 850.458 cv
503.735 849.97 503.216 848.478 509.923 851.454 cv
516.638 854.442 532.106 849.97 532.106 849.97 cv
532.106 849.97 544.489 854.442 557.915 852.45 cv
571.317 850.458 580.095 848.974 590.927 849.97 cv
601.755 850.954 612.595 845.985 612.595 845.985 cv
612.595 845.985 630.134 846.485 639.427 835.536 cv
639.427 835.536 648.196 841.017 657.485 833.556 cv
666.771 826.103 667.29 828.583 673.478 822.618 cv
679.665 816.649 686.368 820.634 694.11 809.696 cv
694.11 809.696 711.134 804.716 715.782 793.778 cv
720.427 782.841 724.556 782.345 724.556 782.345 cv
724.556 782.345 726.614 777.868 732.294 772.399 cv
737.966 766.931 737.458 750.524 744.165 741.083 cv
739.009 744.071 li
739.009 744.071 741.587 735.106 745.196 731.63 cv
748.802 728.153 747.774 715.72 751.384 710.751 cv
754.997 705.771 758.087 699.806 759.118 696.337 cv
760.157 692.853 766.341 687.384 766.341 687.384 cv
766.341 687.384 758.087 691.356 757.567 692.853 cv
757.056 694.345 766.868 674.95 767.376 663.517 cv
767.892 652.079 768.919 650.087 772.536 645.614 cv
776.149 641.142 776.665 627.228 780.271 620.263 cv
780.271 620.263 772.536 628.212 770.989 630.204 cv
769.442 632.196 767.22 608.985 770.833 600.04 cv
774.446 591.095 772.021 591.423 774.603 581.474 cv
777.181 571.528 773.567 564.571 777.181 556.614 cv
777.181 556.614 770.989 558.606 769.442 562.579 cv
767.892 566.563 769.442 556.622 766.341 545.677 cv
763.243 534.739 763.763 516.345 766.341 512.856 cv
768.919 509.388 757.056 517.337 757.056 517.337 cv
757.056 517.337 754.997 504.907 759.642 499.938 cv
764.282 494.966 766.341 497.454 766.341 497.454 cv
766.341 497.454 763.763 492.478 754.478 498.942 cv
754.478 498.942 753.962 491.478 750.349 477.56 cv
746.735 463.634 744.165 445.743 757.056 438.782 cv
757.056 438.782 751.384 435.298 744.677 447.239 cv
744.677 447.239 736.415 446.739 738.478 439.274 cv
740.548 431.821 737.966 431.817 736.938 426.349 cv
735.907 420.884 742.095 418.888 747.774 422.368 cv
747.774 422.368 746.735 413.419 742.61 412.923 cv
738.478 412.423 741.067 402.974 733.333 398.009 cv
725.583 393.04 730.751 391.048 721.97 371.661 cv
713.2 352.263 651.798 297.087 567.196 298.071 cv
482.579 299.067 443.368 308.536 426.345 326.919 cv
cp
.27451 .207843 .145098 rgb
f
551.524 850.731 mo
541.923 850.731 534.192 847.985 534.118 847.958 cv
533.017 847.556 li
531.876 847.88 li
531.794 847.907 523.556 850.263 516.989 850.263 cv
514.337 850.263 512.903 849.872 512.165 849.548 cv
508.646 847.978 506.63 847.431 504.454 847.431 cv
503.368 847.431 502.368 847.567 501.2 847.743 cv
500.048 847.899 498.603 848.114 496.536 848.243 cv
495.759 848.29 495.052 848.321 494.415 848.321 cv
491.446 848.321 490.22 847.829 489.915 847.696 cv
485.497 843.153 484.728 842.724 483.161 842.724 cv
480.974 842.724 li
479.985 844.626 li
479.798 845.001 479.681 845.353 479.622 845.692 cv
475.911 843.282 470.767 841.72 463.243 839.415 cv
459.267 838.204 454.763 836.813 449.438 835.009 cv
434.829 830.04 428.606 824.481 424.505 820.81 cv
423.864 820.235 425.521 823.087 424.97 822.618 cv
421.024 819.298 413.548 813.946 405.638 810.938 cv
401.071 809.208 li
397.642 807.88 394.958 806.696 392.962 805.743 cv
393.235 805.524 393.415 805.353 393.474 805.282 cv
396.888 802.009 li
392.606 799.892 li
376.942 792.126 376.462 782.86 376.454 782.462 cv
376.38 780.224 li
374.208 779.364 li
364.7 775.821 361.399 768.798 358.993 763.673 cv
357.536 760.575 356.396 758.114 354.165 756.774 cv
346.923 752.431 342.435 747.501 341.853 743.29 cv
341.579 741.317 340.364 737.306 335.024 735.681 cv
335.204 735.673 335.388 735.673 335.575 735.673 cv
337.841 735.673 339.778 736.298 340.149 736.423 cv
346.63 740.251 li
346.587 740.235 337.938 728.114 336.704 717.032 cv
336.005 710.743 334.501 706.259 332.931 703.126 cv
343.462 714.657 li
334.294 703.181 329.384 673.024 329.423 672.868 cv
329.833 671.063 li
328.478 669.755 li
328.489 669.755 li
328.513 669.755 326.915 667.392 326.915 660.204 cv
326.915 657.618 326.575 655.224 326.052 653.087 cv
331.146 659.728 li
327.149 646.446 li
325.556 642.841 321.634 632.313 322.724 627.06 cv
323.485 623.388 323.181 619.938 322.575 617.188 cv
323.974 614.481 li
325.587 611.396 328.985 600.915 328.985 596.563 cv
328.985 594.599 330.419 591.462 331.126 590.251 cv
332.54 587.782 li
330.274 585.985 li
325.931 582.556 325.032 574.392 327.845 563.587 cv
329.228 558.263 328.813 553.646 327.798 549.962 cv
335.438 562.204 li
331.419 545.567 li
330.56 540.294 li
325.688 538.138 325.751 531.759 327.282 526.966 cv
327.681 525.708 327.97 524.333 328.192 522.903 cv
328.431 522.931 328.657 522.942 328.899 522.942 cv
328.899 522.942 li
329.634 522.942 331.438 522.728 332.649 520.681 cv
334.192 518.087 337.692 514.122 338.919 512.81 cv
340.423 511.204 li
339.532 509.216 li
339.521 509.173 337.06 503.392 339.071 498.341 cv
341.767 491.575 343.337 480.149 343.399 479.665 cv
343.438 479.356 li
343.423 479.04 li
342.724 466.438 345.767 461.438 349.61 455.11 cv
351.048 452.751 352.532 450.313 353.942 447.321 cv
354.868 445.372 355.517 443.606 355.892 441.974 cv
358.114 443.802 li
361.368 434.396 li
361.403 434.224 li
363.368 425.739 369.54 415.372 375.927 405.431 cv
376.923 403.888 378.036 401.931 378.462 399.942 cv
378.829 400.31 li
381.169 396.349 li
384.001 391.427 li
384.114 390.938 li
387.743 374.454 393.817 369.536 399.274 366.907 cv
406.794 363.282 409.22 355.161 409.794 352.712 cv
415.837 343.313 432.681 335.899 432.813 335.774 cv
450.118 317.103 490.509 311.302 570.313 310.356 cv
570.731 309.106 li
651.716 309.106 710.614 354.454 719.528 374.173 cv
723.372 382.661 724.407 387.532 725.149 391.075 cv
726.106 395.548 726.735 398.509 732.157 401.989 cv
735.353 404.036 736.185 407.169 736.985 410.196 cv
737.724 413.04 738.751 416.946 742.954 417.438 cv
743.122 417.571 743.353 417.931 743.587 418.438 cv
743.353 418.431 743.122 418.419 742.892 418.419 cv
740.001 418.419 737.532 419.45 735.907 421.321 cv
734.353 423.106 733.763 425.528 734.259 428.118 cv
734.661 430.267 735.274 431.72 735.774 432.884 cv
736.552 434.743 736.946 435.677 735.868 439.567 cv
734.767 443.536 735.896 446.185 737.04 447.72 cv
739.751 451.341 744.677 451.739 745.231 451.771 cv
745.403 451.778 li
743.513 460.622 745.521 471.071 747.728 479.544 cv
751.196 492.927 751.751 500.255 751.759 500.333 cv
752.185 506.403 li
754.79 504.595 li
753.087 510.735 754.192 517.974 754.368 519.036 cv
755.247 524.353 li
759.833 521.271 li
760.521 520.821 761.247 520.337 761.978 519.884 cv
760.923 528.216 761.649 540.384 763.735 547.728 cv
765.306 553.317 765.61 558.677 765.79 561.888 cv
765.95 564.759 766.126 568.013 769.688 568.013 cv
769.696 568.013 769.696 568.013 769.696 568.013 cv
771.2 568.013 772.138 567.231 772.72 566.438 cv
772.704 567.774 772.751 569.114 772.79 570.427 cv
772.919 573.981 773.048 577.669 771.978 581.813 cv
770.587 587.149 771.169 591.579 771.681 595.497 cv
772.196 599.454 772.649 602.868 771.067 606.767 cv
768.122 614.103 766.173 630.118 768.446 633.329 cv
769.501 634.806 li
765.458 651.97 li
766.274 651.97 768.021 648.974 768.665 648.493 cv
767.774 652.743 771.876 643.048 770.54 644.696 cv
766.302 649.938 765.169 652.821 764.646 664.532 cv
764.228 673.837 756.927 689.376 755.509 692.04 cv
753.021 695.353 li
752.384 696.345 753.935 698.798 753.646 699.728 cv
752.813 702.548 752.864 705.028 749.282 709.962 cv
747.032 713.063 746.321 717.696 745.626 722.165 cv
745.181 725.056 744.517 729.415 743.489 730.399 cv
739.337 734.392 736.681 743.31 736.392 744.313 cv
734.04 752.478 li
737.298 750.595 li
736.454 753.321 735.798 756.103 735.169 758.72 cv
733.958 763.845 732.688 769.13 730.579 771.173 cv
726.313 775.29 723.907 778.946 722.813 780.821 cv
720.446 782.021 716.892 785.212 713.31 793.661 cv
710.024 801.407 698.161 806.356 693.868 807.618 cv
692.688 807.97 li
691.989 808.946 li
688.103 814.431 684.856 815.399 681.106 816.524 cv
678.196 817.384 674.915 818.36 671.767 821.384 cv
669.017 824.032 667.704 824.716 665.716 825.731 cv
663.567 826.825 660.896 828.204 656.017 832.118 cv
653.415 834.196 650.653 835.263 647.767 835.263 cv
644.478 835.263 642.103 833.868 642.079 833.845 cv
639.454 832.282 li
637.485 834.56 li
629.88 843.505 615.349 843.767 613.712 843.767 cv
612.884 843.751 li
611.868 844.091 li
611.786 844.13 603.462 847.868 594.646 847.868 cv
593.782 847.868 592.903 847.829 592.032 847.763 cv
589.595 847.54 587.235 847.431 584.798 847.431 cv
577.181 847.431 569.892 848.517 560.665 849.892 cv
558.149 850.263 li
556.04 850.575 553.817 850.731 551.524 850.731 cv
cp
1 .854902 .152941 rgb
f
529.173 416.251 mo
529.173 416.251 531.849 408.751 529.173 401.794 cv
526.493 394.837 533.993 383.595 543.63 376.626 cv
553.267 369.669 558.626 362.708 572.54 361.638 cv
586.462 360.567 603.063 364.849 611.626 372.884 cv
620.188 380.915 622.333 393.228 622.333 393.228 cv
622.333 393.228 608.946 405.544 596.095 406.079 cv
596.095 406.079 580.036 411.438 560.228 413.575 cv
540.419 415.716 529.173 416.251 529.173 416.251 cv
cp
.27451 .207843 .145098 rgb
f
536.005 416.997 mo
536.157 413.419 535.86 409.192 534.466 404.974 cv
533.321 401.536 529.728 391.216 538.958 383.478 cv
541.071 381.704 555.868 371.431 557.708 369.728 cv
564.048 363.864 565.036 363.673 574.271 362.853 cv
575.54 362.739 581.103 364.224 582.396 364.415 cv
595.208 366.29 603.919 370.063 610.208 376.915 cv
614.876 381.993 617.532 390.509 618.646 394.728 cv
614.013 398.911 605.173 409.067 598.021 409.415 cv
595.833 408.79 li
594.896 409.415 li
594.739 409.478 578.532 412.091 559.618 414.466 cv
549.274 415.759 541.251 416.544 536.005 416.997 cv
cp
1 .854902 .152941 rgb
f
572.005 462.298 mo
572.005 462.298 562.903 433.384 551.122 428.028 cv
539.345 422.673 529.173 416.251 529.173 416.251 cv
529.173 416.251 535.657 415.04 545.833 415.04 cv
556.005 415.04 565.165 414.728 566.771 407.228 cv
568.376 399.728 569.325 390.548 576.825 391.087 cv
584.325 391.622 580.618 406.067 592.396 406.603 cv
604.173 407.142 609.481 395.899 621.798 395.372 cv
621.798 395.372 613.767 403.399 610.017 418.392 cv
606.274 433.384 618.587 452.657 618.587 452.657 cv
618.587 452.657 606.142 445.845 594.896 446.915 cv
583.649 447.985 572.005 462.298 572.005 462.298 cv
cp
.27451 .207843 .145098 rgb
f
571.771 455.04 mo
567.724 445.118 559.798 428.946 550.521 424.728 cv
546.755 423.013 546.095 419.321 542.958 417.642 cv
543.177 417.638 543.399 417.634 543.63 417.634 cv
554.544 417.634 568.024 417.634 570.587 405.661 cv
572.501 396.724 574.673 396.724 575.966 396.724 cv
576.54 396.755 li
576.509 396.853 577.028 397.95 577.376 398.673 cv
579.04 402.146 582.138 408.61 592.095 409.063 cv
592.563 409.083 593.021 409.095 593.474 409.095 cv
599.739 409.095 604.521 407.103 608.72 405.177 cv
607.142 408.54 605.649 412.497 604.521 417.013 cv
602.446 425.325 604.423 434.446 607.079 441.751 cv
603.435 440.7 599.446 439.935 595.556 439.935 cv
594.657 439.935 593.763 439.974 592.884 440.056 cv
585.313 440.778 576.446 450.173 571.771 455.04 cv
cp
1 .854902 .152941 rgb
f
576.29 410.899 mo
576.29 410.899 575.22 398.048 567.185 394.837 cv
567.185 394.837 571.474 388.946 576.825 391.087 cv
582.177 393.228 582.177 393.228 582.177 393.228 cv
582.177 393.228 579.501 403.942 576.29 410.899 cv
cp
.27451 .207843 .145098 rgb
f
571.474 454.271 mo
571.474 454.271 581.642 426.954 573.079 396.974 cv
573.079 396.974 579.501 414.103 578.962 427.493 cv
578.427 440.88 571.474 454.271 571.474 454.271 cv
cp
f
.91061 lw
0 lc
0 lj
10 ml
[] 0 dsh
true sadj
506.149 553.302 mo
506.149 553.302 495.974 544.2 500.798 535.638 cv
505.618 527.071 505.079 520.642 510.438 514.759 cv
515.79 508.868 514.188 507.794 526.493 507.259 cv
538.813 506.724 544.7 495.485 557.552 499.231 cv
570.399 502.974 575.759 511.544 582.712 516.899 cv
589.673 522.251 597.173 544.2 592.353 549.556 cv
587.532 554.915 559.157 567.224 542.556 567.224 cv
525.966 567.224 506.149 553.302 506.149 553.302 cv
cp
.486275 .796078 .945098 rgb
@
501.329 552.771 mo
501.329 552.771 527.567 572.591 524.892 604.169 cv
524.892 604.169 538.274 590.782 553.802 590.782 cv
569.333 590.782 576.825 595.067 576.825 595.067 cv
576.825 595.067 571.474 579.54 581.106 569.903 cv
590.743 560.267 600.915 545.274 600.915 545.274 cv
600.915 545.274 590.212 543.138 582.712 550.63 cv
575.22 558.126 570.935 551.696 566.118 551.696 cv
561.298 551.696 558.626 546.349 555.407 540.989 cv
552.196 535.638 553.802 530.821 553.802 530.821 cv
553.802 530.821 543.095 532.427 543.095 539.388 cv
543.095 546.345 542.021 542.052 538.274 549.556 cv
534.528 557.052 530.774 555.989 525.427 555.45 cv
520.071 554.915 513.646 550.091 501.329 552.771 cv
cp
.27451 .207843 .145098 rgb
f
526.767 593.739 mo
526.181 575.813 515.329 561.54 507.759 554.919 cv
510.571 555.274 516.989 556.935 519.157 557.622 cv
521.181 558.267 523.099 558.88 525.063 559.075 cv
526.228 559.2 li
527.556 559.341 528.798 559.474 529.97 559.474 cv
535.103 559.474 538.669 556.915 541.536 551.188 cv
542.853 548.536 543.657 547.794 544.235 547.247 cv
546.392 545.247 546.735 543.614 546.735 539.388 cv
546.735 537.845 548.2 536.673 549.88 535.853 cv
550.134 538.021 550.837 540.45 552.282 542.864 cv
553.142 544.31 li
556.2 549.485 559.661 555.345 566.118 555.345 cv
566.849 555.345 567.919 555.786 569.052 556.263 cv
570.798 556.993 572.966 557.907 575.548 557.907 cv
578.942 557.907 582.126 556.368 585.29 553.204 cv
587.903 550.591 591.032 549.411 593.845 548.927 cv
590.063 554.079 584.157 561.7 578.532 567.325 cv
571.712 574.153 571.837 585.438 572.54 591.603 cv
568.415 590.458 560.97 588.376 552.997 588.376 cv
542.997 588.376 532.126 591.423 526.767 593.739 cv
cp
1 .854902 .152941 rgb
f
529.712 591.317 mo
529.712 591.317 537.212 581.681 540.954 573.118 cv
544.7 564.548 545.231 558.665 544.7 554.915 cv
544.169 551.157 547.38 546.345 547.38 546.345 cv
547.38 546.345 541.493 554.376 540.954 562.403 cv
540.419 570.431 532.392 586.493 529.712 591.317 cv
cp
.27451 .207843 .145098 rgb
f
544.7 537.243 mo
544.7 537.243 548.45 525.462 555.407 525.997 cv
562.368 526.536 558.622 535.099 568.798 535.099 cv
568.798 535.099 560.228 537.243 556.481 534.028 cv
552.728 530.821 544.7 537.243 544.7 537.243 cv
cp
f
552.728 541.524 mo
552.728 541.524 554.872 547.95 557.552 551.696 cv
560.228 555.45 559.153 558.657 559.153 560.802 cv
559.153 562.942 563.438 571.505 563.438 571.505 cv
563.438 571.505 556.478 565.083 555.946 558.665 cv
555.407 552.231 552.728 541.524 552.728 541.524 cv
cp
f
563.438 500.837 mo
563.438 500.837 554.204 480.095 562.771 470.993 cv
571.337 461.896 576.29 449.974 589.142 446.759 cv
601.989 443.548 610.017 446.224 620.728 452.649 cv
631.435 459.079 638.396 466.036 643.747 468.712 cv
649.103 471.388 652.317 483.165 651.243 486.38 cv
650.181 489.595 643.747 495.481 643.747 495.481 cv
643.747 495.481 634.114 499.767 614.306 504.583 cv
594.489 509.396 576.29 509.938 563.438 500.837 cv
cp
f
589.349 504.356 mo
579.876 504.356 572.306 502.278 566.259 497.993 cv
564.755 494.767 559.321 481.872 565.017 475.454 cv
567.993 472.103 570.563 468.052 573.056 464.142 cv
578.005 456.349 582.685 448.978 590.024 447.028 cv
593.396 446.138 596.399 445.708 599.212 445.708 cv
606.224 445.708 611.927 448.442 618.856 452.845 cv
624.333 456.329 628.759 459.935 632.657 463.118 cv
636.212 466.009 639.286 468.509 642.122 470.017 cv
645.575 471.849 648.259 481.837 647.771 484.142 cv
647.36 485.446 644.36 489.044 641.743 491.653 cv
639.489 492.638 630.079 496.556 613.446 500.845 cv
604.271 503.204 596.392 504.356 589.349 504.356 cv
cp
1 .854902 .152941 rgb
f
567.185 499.231 mo
567.185 499.231 572.005 498.692 581.638 499.231 cv
591.282 499.767 597.173 498.692 598.778 496.556 cv
600.388 494.411 595.563 491.735 601.454 486.915 cv
607.341 482.091 603.06 478.888 609.481 473.532 cv
615.911 468.177 622.333 467.638 622.333 467.638 cv
622.333 467.638 611.626 473.532 616.446 479.954 cv
621.263 486.38 619.657 486.38 621.798 491.196 cv
623.938 496.017 627.157 492.806 632.509 491.196 cv
637.86 489.595 654.454 484.778 654.454 484.778 cv
654.454 484.778 645.892 492.806 642.673 500.837 cv
639.466 508.868 638.396 530.286 638.935 532.423 cv
639.466 534.567 639.997 538.313 639.997 538.313 cv
639.997 538.313 633.981 537.11 622.196 539.259 cv
610.423 541.403 588.868 549.7 588.868 549.7 cv
588.868 549.7 597.704 540.989 586.462 524.396 cv
575.22 507.794 562.771 502.716 562.771 502.716 cv
567.185 499.231 li
cp
.27451 .207843 .145098 rgb
f
594.958 544.396 mo
596.032 538.45 595.173 530.763 589.47 522.356 cv
583.134 513.001 576.638 506.583 571.978 502.649 cv
572.478 502.638 573.024 502.638 573.61 502.638 cv
576.028 502.638 578.665 502.712 581.442 502.868 cv
583.161 502.962 584.763 503.009 586.247 503.009 cv
597.216 503.009 600.313 500.567 601.692 498.735 cv
603.356 496.517 602.685 494.204 602.321 492.966 cv
601.95 491.724 601.833 491.31 603.763 489.731 cv
607.614 486.579 608.294 483.56 608.79 481.353 cv
609.196 479.571 609.462 478.364 611.556 476.544 cv
611.571 478.501 612.235 480.411 613.528 482.142 cv
616.278 485.802 616.56 486.853 616.989 488.438 cv
617.267 489.478 617.618 490.767 618.47 492.677 cv
620.204 496.567 622.907 497.384 624.88 497.384 cv
626.735 497.384 628.474 496.665 630.31 495.911 cv
631.286 495.501 632.36 495.052 633.552 494.688 cv
635.712 494.04 639.688 492.872 643.681 491.712 cv
641.981 494.118 640.376 496.778 639.294 499.485 cv
636.028 507.649 634.802 528.13 635.302 532.7 cv
634.103 532.513 632.743 532.403 631.185 532.403 cv
628.923 532.403 624.829 534.759 622.196 535.247 cv
614.532 536.634 603.54 540.212 594.958 544.396 cv
cp
1 .854902 .152941 rgb
f
607.88 490.122 mo
607.88 490.122 603.591 502.442 605.735 509.396 cv
607.88 516.364 601.454 534.028 601.454 534.028 cv
601.454 534.028 611.626 521.716 609.481 509.935 cv
607.341 498.157 607.88 490.122 607.88 490.122 cv
cp
.27451 .207843 .145098 rgb
f
554.47 367.142 mo
554.47 367.142 546.442 347.864 542.825 345.454 cv
539.212 343.044 537.606 339.028 532.384 338.224 cv
527.165 337.423 516.185 330.524 506.149 335.337 cv
496.11 340.161 491.829 345.856 484.196 347.864 cv
476.571 349.868 475.771 359.106 470.946 364.329 cv
466.13 369.548 466.931 377.173 466.931 377.173 cv
466.931 377.173 472.552 376.778 503.075 377.173 cv
533.591 377.579 554.47 367.142 554.47 367.142 cv
cp
f
503.114 374.341 mo
492.919 374.204 485.501 374.161 480.142 374.161 cv
475.079 374.161 471.829 374.204 469.798 374.243 cv
470.013 371.993 470.739 368.731 473.032 366.251 cv
475.067 364.044 476.403 361.38 477.692 358.802 cv
479.642 354.907 481.325 351.548 484.919 350.603 cv
490.653 349.099 494.024 347.368 499.138 344.759 cv
501.146 343.731 503.45 342.556 506.306 341.177 cv
509.36 339.72 512.864 339.005 517.028 339.005 cv
521.497 339.005 525.813 339.856 528.962 340.474 cv
530.106 340.7 531.118 340.896 531.954 341.028 cv
534.438 341.407 535.81 342.798 537.54 344.563 cv
538.583 345.622 539.759 346.817 541.251 347.813 cv
542.876 348.985 547.235 357.536 550.771 365.681 cv
544.657 368.22 527.524 374.353 504.813 374.353 cv
503.114 374.341 li
cp
1 .854902 .152941 rgb
f
501.462 426.97 mo
501.462 426.97 505.079 404.485 495.442 396.853 cv
485.81 389.22 489.423 390.833 483.396 386.009 cv
477.376 381.192 471.751 376.778 465.325 375.974 cv
458.903 375.169 454.884 376.372 454.884 376.372 cv
454.884 376.372 462.919 366.735 470.544 368.341 cv
478.177 369.954 484.599 370.755 488.216 369.142 cv
491.829 367.54 493.435 365.935 497.849 365.13 cv
502.267 364.329 500.263 358.704 500.661 355.489 cv
501.063 352.278 505.485 348.267 505.485 348.267 cv
505.485 348.267 511.907 353.888 515.521 359.106 cv
519.138 364.329 519.938 366.735 531.579 366.735 cv
543.228 366.735 557.685 362.321 562.497 363.126 cv
562.497 363.126 552.868 373.966 546.04 377.981 cv
539.212 381.993 529.571 393.88 530.313 398.267 cv
533.438 416.813 529.173 416.251 529.173 416.251 cv
529.173 416.251 516.325 413.716 501.462 426.97 cv
cp
.27451 .207843 .145098 rgb
f
504.896 420.657 mo
505.235 412.856 504.493 400.407 497.2 394.63 cv
491.981 390.493 490.821 389.204 489.798 388.067 cv
488.868 387.032 487.993 386.056 485.169 383.794 cv
479.196 379.021 473.021 374.083 465.677 373.161 cv
464.798 373.048 463.958 372.974 463.161 372.927 cv
464.962 371.813 466.927 370.997 468.782 370.997 cv
469.188 370.997 469.583 371.036 469.958 371.114 cv
475.665 372.321 479.661 372.856 482.923 372.856 cv
485.56 372.856 487.669 372.485 489.368 371.731 cv
490.595 371.188 491.61 370.646 492.567 370.13 cv
494.372 369.153 498.587 370.509 501.146 370.04 cv
506.86 369.005 503.7 361.075 503.517 358.286 cv
503.462 357.403 503.388 356.548 503.474 355.841 cv
503.587 354.935 504.54 353.509 505.61 352.239 cv
507.712 354.243 511.028 357.595 513.192 360.72 cv
513.876 361.72 li
517.489 367.024 519.751 369.571 531.579 369.571 cv
537.97 369.571 544.899 368.341 551.013 367.259 cv
552.556 366.985 554.021 366.724 555.368 366.505 cv
552.149 369.708 547.962 373.56 544.603 375.532 cv
535.954 380.622 525.837 388.704 526.751 398.325 cv
527.267 403.743 526.911 409.821 526.626 413.224 cv
526.571 413.224 526.513 413.224 526.454 413.224 cv
522.106 413.224 514.087 414.294 504.896 420.657 cv
cp
1 .854902 .152941 rgb
f
480.521 470.353 mo
480.521 470.353 482.438 464.591 480.833 460.978 cv
479.231 457.364 479.782 448.255 487.81 441.021 cv
495.845 433.794 500.661 424.962 509.095 420.548 cv
517.528 416.126 527.966 413.716 535.599 417.735 cv
543.228 421.751 549.251 426.169 554.872 428.177 cv
560.497 430.177 564.911 437.813 568.122 446.642 cv
571.337 455.481 573.88 459.88 572.005 462.298 cv
570.134 464.72 548.845 472.747 529.978 474.751 cv
511.106 476.759 480.521 470.353 480.521 470.353 cv
cp
.27451 .207843 .145098 rgb
f
518.138 471.673 mo
506.067 471.673 493.825 470.188 488.778 469.497 cv
488.032 466.485 486.72 461.521 485.521 458.821 cv
484.329 456.146 483.786 449.548 490.251 443.731 cv
493.489 440.821 496.161 437.735 498.747 434.759 cv
502.571 430.345 506.181 426.185 510.782 423.771 cv
516.251 420.903 521.868 419.329 526.599 419.329 cv
529.392 419.329 531.853 419.88 533.899 420.954 cv
536.755 422.458 539.368 424.009 541.899 425.521 cv
545.989 427.95 549.856 430.251 553.646 431.603 cv
557.45 432.966 561.376 438.747 564.704 447.892 cv
565.438 449.919 566.142 451.712 566.759 453.302 cv
567.79 455.942 568.942 458.907 569.001 460.071 cv
565.501 462.388 546.888 469.294 529.595 471.134 cv
526.212 471.497 522.36 471.673 518.138 471.673 cv
cp
1 .854902 .152941 rgb
f
472.958 466.72 mo
472.958 466.72 479.376 464.72 490.622 466.321 cv
501.868 467.927 515.521 464.72 519.138 461.907 cv
522.747 459.095 526.767 453.88 526.767 453.88 cv
526.767 453.88 529.978 452.267 533.591 457.087 cv
537.2 461.907 541.626 463.911 550.056 463.11 cv
558.485 462.306 574.954 456.286 574.954 456.286 cv
574.954 456.286 570.134 465.118 564.509 471.54 cv
558.892 477.966 559.688 494.431 566.915 504.864 cv
566.915 504.864 555.274 497.642 546.442 500.856 cv
537.606 504.063 538.005 506.876 526.36 509.29 cv
514.72 511.7 506.286 518.923 506.286 518.923 cv
506.286 518.923 511.907 506.478 500.661 493.224 cv
489.423 479.974 484.599 477.563 480.985 473.548 cv
477.376 469.532 472.958 466.72 472.958 466.72 cv
cp
.27451 .207843 .145098 rgb
f
511.345 511.153 mo
511.376 505.685 509.798 498.364 503.435 490.864 cv
495.771 481.833 491.044 477.735 487.595 474.747 cv
486.005 473.376 484.751 472.286 483.696 471.11 cv
483.134 470.489 482.567 469.903 481.993 469.349 cv
482.06 469.349 482.134 469.349 482.204 469.349 cv
484.724 469.349 487.384 469.536 490.11 469.927 cv
492.274 470.235 494.606 470.392 497.044 470.392 cv
506.638 470.392 517.321 467.927 521.376 464.778 cv
524.177 462.595 527.099 459.231 528.61 457.396 cv
529.153 457.63 529.876 458.2 530.677 459.274 cv
534.646 464.563 539.579 466.927 546.673 466.927 cv
547.829 466.927 549.071 466.86 550.399 466.735 cv
554.845 466.31 561.22 464.583 566.521 462.946 cv
565.087 465.021 563.466 467.208 561.767 469.142 cv
556.54 475.118 555.888 487.13 559.364 497.634 cv
556.911 496.911 554.192 496.388 551.446 496.388 cv
549.204 496.388 547.095 496.739 545.192 497.435 cv
541.321 498.845 539.024 500.208 537.017 501.407 cv
534.204 503.083 531.981 504.407 525.626 505.72 cv
519.989 506.888 515.063 509.079 511.345 511.153 cv
cp
1 .854902 .152941 rgb
f
522.353 477.966 mo
522.353 477.966 520.739 467.927 519.138 461.907 cv
517.528 455.88 523.548 455.481 526.767 453.88 cv
529.978 452.267 534.392 455.075 534.392 455.075 cv
534.392 455.075 525.966 461.505 522.353 477.966 cv
cp
.27451 .207843 .145098 rgb
f
554.47 494.024 mo
554.47 494.024 552.868 488.009 546.442 482.384 cv
540.013 476.759 531.981 466.321 531.981 460.298 cv
531.981 460.298 533.591 461.907 535.192 465.521 cv
536.806 469.134 538.411 472.345 544.032 477.966 cv
549.657 483.587 554.872 487.603 554.47 494.024 cv
cp
f
523.548 469.134 mo
523.548 469.134 522.603 478.458 519.251 487.942 cv
517.743 492.228 515.739 496.544 513.114 500.052 cv
504.677 511.294 509.493 504.063 509.493 504.063 cv
509.493 504.063 514.313 494.024 517.528 486.802 cv
520.739 479.571 523.548 469.134 523.548 469.134 cv
cp
f
422.763 426.567 mo
422.763 426.567 417.942 408.497 423.563 400.063 cv
429.188 391.634 431.599 388.021 434.403 386.411 cv
437.216 384.806 446.454 373.56 461.306 375.169 cv
476.165 376.778 473.356 377.173 485.001 385.208 cv
496.649 393.239 511.907 405.286 503.876 425.763 cv
503.876 425.763 471.353 427.774 453.681 427.368 cv
436.013 426.97 422.763 426.567 422.763 426.567 cv
cp
f
458.868 423.169 mo
457.071 423.169 455.364 423.157 453.778 423.118 cv
441.38 422.837 434.583 430.04 426.173 422.415 cv
424.896 415.896 424.282 406.657 427.103 402.423 cv
432.079 394.958 434.579 391.212 436.517 390.099 cv
437.396 389.603 438.267 388.86 439.466 387.833 cv
443.228 384.626 449.517 379.263 458.427 379.263 cv
459.212 379.263 460.017 379.302 460.849 379.396 cv
471.458 380.544 471.657 380.696 476.774 384.513 cv
478.271 385.626 480.11 386.997 482.591 388.708 cv
493.896 396.505 505.407 406.087 500.79 421.685 cv
493.431 422.106 473.267 423.169 458.868 423.169 cv
cp
1 .854902 .152941 rgb
f
409.509 422.954 mo
409.509 422.954 410.716 420.142 421.157 422.149 cv
431.599 424.161 436.415 427.368 440.833 424.161 cv
445.251 420.95 446.454 421.349 447.657 417.337 cv
448.86 413.313 454.481 409.7 457.294 408.099 cv
460.106 406.497 467.731 400.47 467.731 400.47 cv
467.731 400.47 462.919 406.497 462.118 411.712 cv
461.306 416.931 462.118 423.36 472.958 423.36 cv
483.798 423.36 485.81 420.142 493.032 419.743 cv
500.263 419.337 509.095 416.524 514.72 417.735 cv
514.72 417.735 502.267 426.97 497.45 433.396 cv
492.634 439.821 486.208 443.028 484.599 446.642 cv
482.997 450.259 480.481 469.739 484.896 475.356 cv
484.896 475.356 473.356 465.521 464.118 466.321 cv
454.884 467.126 451.267 469.532 445.649 473.95 cv
440.028 478.372 435.614 480.778 435.614 480.778 cv
435.614 480.778 433.603 467.532 435.208 460.696 cv
436.813 453.88 441.638 453.88 437.216 451.067 cv
432.802 448.255 425.575 445.442 423.161 438.614 cv
420.751 431.79 413.931 423.36 409.509 422.954 cv
cp
.27451 .207843 .145098 rgb
f
439.091 473.528 mo
438.767 469.411 438.657 464.622 439.349 461.665 cv
439.821 459.653 428.591 441.224 427.173 437.2 cv
426.013 433.927 423.798 429.915 421.04 426.462 cv
423.767 427.013 426.083 427.642 428.099 428.188 cv
431.36 429.075 433.935 429.771 436.524 429.771 cv
439.091 429.771 441.317 429.063 443.333 427.603 cv
444.407 426.821 445.271 426.274 445.989 425.821 cv
448.712 424.095 450.454 422.817 451.731 418.56 cv
452.106 417.302 454.087 415.122 457.708 412.81 cv
457.368 417.017 458.298 420.442 460.493 423.001 cv
463.114 426.06 467.306 427.614 472.958 427.614 cv
479.841 427.614 483.728 426.368 486.849 425.372 cv
489.017 424.681 490.731 424.126 493.267 423.985 cv
496.013 423.833 498.884 423.376 501.688 422.907 cv
498.786 425.509 495.927 428.341 494.048 430.845 cv
491.903 433.708 489.294 435.931 487.001 437.892 cv
484.267 440.228 481.903 442.243 480.716 444.907 cv
479.243 448.243 478.974 457.399 480.47 465.29 cv
475.888 463.591 470.337 462.009 465.536 462.009 cv
464.931 462.009 464.333 462.032 463.751 462.083 cv
453.376 462.989 448.997 465.911 443.021 470.606 cv
441.614 471.716 440.282 472.692 439.091 473.528 cv
cp
1 .854902 .152941 rgb
f
456.091 411.712 mo
456.091 411.712 452.079 416.931 452.079 423.755 cv
452.079 430.583 446.853 439.415 444.446 443.829 cv
442.032 448.255 439.271 452.853 439.271 452.853 cv
439.271 452.853 438.825 448.653 442.837 443.028 cv
446.853 437.407 449.267 432.591 449.665 427.368 cv
450.071 422.149 450.071 418.138 456.091 411.712 cv
cp
.27451 .207843 .145098 rgb
f
462.919 432.188 mo
462.919 432.188 460.505 443.829 474.97 455.075 cv
474.97 455.075 457.294 448.255 462.919 432.188 cv
cp
f
458.021 375.978 mo
458.021 375.978 463.317 369.528 460.106 359.497 cv
456.892 349.466 457.294 337.825 450.071 336.622 cv
442.837 335.415 430.392 340.235 423.161 343.45 cv
415.935 346.657 406.298 353.083 400.677 374.767 cv
400.677 374.767 407.099 377.981 421.556 377.981 cv
436.013 377.981 452.802 380.392 458.021 375.978 cv
cp
f
421.556 375.142 mo
412.646 375.142 406.942 373.872 404.099 373.005 cv
411.458 355.04 417.63 349.005 424.313 346.04 cv
434.142 341.673 442.399 339.271 447.571 339.271 cv
448.294 339.271 448.974 339.313 449.606 339.419 cv
452.618 339.919 453.724 344.243 455.188 351.31 cv
455.806 354.274 456.438 357.337 457.407 360.364 cv
459.872 368.06 456.56 370.774 456.419 370.884 cv
451.364 375.142 430.478 375.142 421.556 375.142 cv
cp
1 .854902 .152941 rgb
f
423.563 375.169 mo
427.181 371.556 li
427.181 371.556 424.368 369.954 424.368 365.528 cv
424.368 361.114 414.728 353.083 414.728 353.083 cv
414.728 353.083 417.942 361.114 414.728 366.329 cv
411.517 371.556 409.509 371.153 405.095 370.353 cv
400.677 369.548 393.044 370.353 393.044 370.353 cv
393.044 370.353 397.063 372.759 396.259 381.192 cv
395.458 389.626 402.282 392.845 398.665 397.657 cv
395.056 402.474 390.923 427.091 393.333 429.103 cv
395.743 431.11 401.321 426.118 407.396 423.79 cv
411.38 422.263 411.638 424.376 416.458 423.165 cv
421.278 421.966 423.563 422.954 423.563 422.954 cv
423.563 422.954 422.36 404.485 426.376 397.251 cv
430.392 390.032 443.642 380.388 454.884 376.372 cv
454.884 376.372 451.673 371.954 444.845 373.966 cv
438.021 375.974 435.614 378.786 431.993 377.173 cv
428.384 375.571 423.563 375.169 423.563 375.169 cv
cp
.27451 .207843 .145098 rgb
f
394.181 426.329 mo
394.13 420.708 398.114 403.122 400.935 399.356 cv
403.86 395.462 402.22 391.978 400.896 389.181 cv
399.853 386.97 398.774 384.685 399.079 381.462 cv
399.438 377.712 398.954 374.915 398.181 372.856 cv
398.774 372.845 399.388 372.829 400.009 372.829 cv
401.911 372.829 403.45 372.935 404.587 373.142 cv
406.165 373.431 407.454 373.665 408.735 373.665 cv
412.149 373.665 414.587 371.97 417.146 367.813 cv
418.399 365.774 418.899 363.481 418.993 361.29 cv
420.54 363.149 421.532 364.739 421.532 365.528 cv
421.532 368.079 422.29 370.06 423.231 371.497 cv
417.243 377.474 li
423.321 377.989 li
423.368 377.993 427.728 378.384 430.849 379.767 cv
431.938 380.251 433.017 380.489 434.142 380.489 cv
436.2 380.489 438.017 379.692 440.118 378.774 cv
441.653 378.106 443.388 377.349 445.649 376.685 cv
446.415 376.458 447.157 376.325 447.86 376.286 cv
437.646 381.29 427.489 389.419 423.899 395.876 cv
420.7 401.638 420.438 412.833 420.571 418.997 cv
420.165 418.958 419.735 418.931 419.282 418.931 cv
418.118 418.931 416.892 419.087 415.653 419.399 cv
414.938 419.575 414.325 419.665 413.763 419.665 cv
413.134 419.665 412.634 419.556 412.001 419.419 cv
411.286 419.263 410.478 419.087 409.481 419.087 cv
408.356 419.087 407.212 419.317 405.966 419.798 cv
403.321 420.806 400.704 422.446 398.392 423.892 cv
397.118 424.688 395.368 425.782 394.181 426.329 cv
cp
1 .854902 .152941 rgb
f
415.755 418.274 mo
415.755 418.274 410.935 406.622 413.349 398.595 cv
415.755 390.567 417.368 386.149 419.372 381.731 cv
421.376 377.31 419.774 370.079 419.774 370.079 cv
419.774 370.079 418.567 382.536 414.556 388.556 cv
410.536 394.583 407.321 408.634 415.755 418.274 cv
cp
.27451 .207843 .145098 rgb
f
616.313 451.868 mo
616.313 451.868 606.669 438.614 607.478 425.364 cv
608.278 412.114 618.72 395.247 626.751 391.231 cv
634.782 387.22 644.423 386.009 652.048 395.646 cv
659.677 405.286 662.083 404.884 669.716 411.31 cv
677.345 417.735 682.165 422.149 682.165 429.376 cv
682.165 429.376 666.907 440.622 654.056 443.829 cv
641.208 447.044 616.313 451.868 616.313 451.868 cv
cp
f
614.896 449.103 mo
612.446 445.071 607.888 432.622 609.06 424.103 cv
611.981 402.853 622.005 398.356 628.649 395.036 cv
632.021 393.353 635.149 392.501 637.958 392.501 cv
642.118 392.501 645.634 394.392 648.712 398.282 cv
654.204 405.216 657.368 407.454 661.028 410.04 cv
662.708 411.224 664.567 412.536 666.978 414.563 cv
673.505 420.06 676.884 423.298 677.712 427.31 cv
673.337 430.306 662.337 437.38 653.024 439.704 cv
642.962 442.224 621.759 447.751 614.896 449.103 cv
cp
1 .854902 .152941 rgb
f
607.478 446.642 mo
607.478 446.642 607.478 444.642 619.521 443.829 cv
631.563 443.028 639.997 443.435 639.997 437.407 cv
639.997 431.388 642.009 427.368 645.622 424.556 cv
649.235 421.751 652.048 419.743 655.263 418.938 cv
658.474 418.138 668.513 422.149 668.513 422.149 cv
668.513 422.149 660.079 421.349 658.876 426.169 cv
657.673 430.989 663.7 438.614 666.509 436.606 cv
669.321 434.603 669.321 433.396 672.927 432.188 cv
676.54 430.989 682.97 426.97 682.97 426.97 cv
682.97 426.97 677.751 439.415 677.345 443.028 cv
676.946 446.642 674.134 452.669 679.353 458.692 cv
684.571 464.72 680.962 476.759 680.962 476.759 cv
680.962 476.759 677.86 477.009 673.864 477.853 cv
670.673 478.521 666.907 479.571 663.7 481.185 cv
656.462 484.79 649.235 488.403 649.235 488.403 cv
649.235 488.403 654.454 478.372 644.021 471.138 cv
633.579 463.911 625.946 458.294 619.126 454.274 cv
612.294 450.259 607.478 446.642 607.478 446.642 cv
cp
.27451 .207843 .145098 rgb
f
654.188 481.86 mo
654.001 477.38 652.017 472.247 646.091 468.146 cv
643.392 466.274 640.876 464.513 638.517 462.853 cv
631.61 458.009 626.149 454.185 620.966 451.134 cv
619.001 449.981 617.2 448.853 615.642 447.845 cv
616.786 447.708 618.149 447.579 619.763 447.474 cv
621.282 447.364 622.731 447.286 624.13 447.208 cv
634.165 446.642 643.642 446.114 643.642 437.407 cv
643.642 432.778 644.946 429.7 647.86 427.435 cv
651.493 424.606 653.778 423.063 656.146 422.474 cv
656.302 422.474 656.478 422.481 656.657 422.493 cv
656.048 423.313 655.599 424.243 655.345 425.286 cv
654.349 429.251 656.29 433.599 658.438 436.349 cv
659.673 437.931 662.224 440.579 665.454 440.579 cv
666.599 440.579 667.696 440.228 668.622 439.571 cv
669.813 438.724 670.587 437.985 671.22 437.396 cv
672.126 436.524 672.509 436.169 674.079 435.642 cv
674.661 435.45 675.29 435.2 675.946 434.915 cv
674.86 437.95 673.915 440.938 673.728 442.634 cv
673.661 443.216 673.513 443.88 673.368 444.603 cv
672.548 448.423 671.196 454.837 676.603 461.075 cv
679.13 463.997 678.688 469.829 678.009 473.438 cv
676.704 473.614 675.001 473.888 673.114 474.29 cv
668.786 475.196 665.071 476.419 662.067 477.923 cv
654.188 481.86 li
cp
1 .854902 .152941 rgb
f
652.45 476.36 mo
652.45 476.36 658.075 465.919 652.849 455.075 cv
647.63 444.235 648.837 430.989 652.45 425.364 cv
652.45 425.364 647.235 435.001 651.649 446.243 cv
656.063 457.493 659.677 465.919 652.45 476.36 cv
cp
.27451 .207843 .145098 rgb
f
676.946 474.349 mo
676.946 474.349 677.978 473.481 680.017 472.438 cv
682.548 471.134 686.63 469.583 692.204 469.134 cv
702.243 468.333 705.458 462.306 705.458 462.306 cv
705.458 462.306 705.458 469.134 694.216 471.138 cv
682.97 473.149 676.946 474.349 676.946 474.349 cv
cp
.486275 .796078 .945098 rgb
@
733.165 447.446 mo
733.165 447.446 727.942 443.829 725.931 437.407 cv
723.923 430.989 715.091 422.954 708.669 421.349 cv
702.243 419.743 697.825 418.138 693.407 419.337 cv
688.993 420.548 682.97 423.36 678.954 435.802 cv
674.938 448.255 672.396 449.728 679.353 458.692 cv
682.509 462.755 680.017 472.438 680.017 472.438 cv
680.017 472.438 699.431 473.548 711.478 468.728 cv
723.524 463.911 731.157 453.067 731.157 453.067 cv
731.157 453.067 729.95 449.056 733.165 447.446 cv
cp
.27451 .207843 .145098 rgb
f
683.462 469.704 mo
684.032 465.97 684.29 460.317 681.563 456.919 cv
679.595 454.458 677.458 449.681 681.653 436.673 cv
685.142 425.872 689.931 423.228 694.157 422.071 cv
694.938 421.856 695.767 421.755 696.665 421.755 cv
699.013 421.755 701.673 422.454 705.04 423.341 cv
707.981 424.099 li
713.579 425.501 721.556 432.907 723.228 438.255 cv
724.56 442.513 727.099 445.669 729.024 447.599 cv
728.157 449.153 728.005 450.919 728.142 452.341 cv
726.079 454.942 719.548 462.446 710.427 466.095 cv
702.556 469.243 691.095 469.712 684.962 469.712 cv
684.962 469.712 683.923 469.708 683.462 469.704 cv
cp
1 .854902 .152941 rgb
f
721.517 445.841 mo
721.517 445.841 714.29 444.235 712.685 437.407 cv
711.083 430.583 708.271 424.556 697.423 423.755 cv
697.423 423.755 706.657 425.763 707.06 432.989 cv
707.462 440.22 711.083 447.044 721.517 445.841 cv
cp
.27451 .207843 .145098 rgb
f
626.751 537.798 mo
626.751 537.798 635.989 532.181 645.224 533.782 cv
654.454 535.388 662.888 534.985 666.907 532.575 cv
670.923 530.169 674.134 530.974 672.927 528.161 cv
671.728 525.353 671.728 521.333 673.735 518.528 cv
675.739 515.716 676.142 514.509 676.142 511.294 cv
676.142 508.083 677.751 504.864 679.353 503.263 cv
680.962 501.661 682.97 495.638 682.97 495.638 cv
682.97 495.638 682.567 499.649 681.759 504.063 cv
680.962 508.489 688.192 514.915 687.38 520.532 cv
686.579 526.153 695.017 523.341 695.415 522.134 cv
695.817 520.935 706.259 512.103 709.47 510.892 cv
712.685 509.688 703.45 520.532 703.45 532.181 cv
703.45 543.821 707.462 553.458 707.462 553.458 cv
707.462 553.458 696.626 559.485 689.392 565.103 cv
682.165 570.724 669.716 577.149 669.716 577.149 cv
669.716 577.149 668.11 564.704 658.474 555.872 cv
648.837 547.032 637.591 544.626 633.579 541.813 cv
629.56 539.005 626.751 537.798 626.751 537.798 cv
cp
f
672.185 571.681 mo
670.731 566.798 667.556 559.259 660.938 553.185 cv
653.978 546.802 646.435 543.634 640.923 541.321 cv
638.634 540.353 636.657 539.524 635.665 538.829 cv
635.388 538.634 635.11 538.442 634.841 538.259 cv
636.903 537.634 639.31 537.134 641.774 537.134 cv
642.751 537.134 643.708 537.212 644.603 537.376 cv
648.485 538.044 652.212 538.384 655.692 538.384 cv
659.618 538.384 665.075 537.923 668.782 535.704 cv
669.911 535.032 671.005 534.661 671.97 534.341 cv
673.54 533.829 675.493 533.181 676.419 531.13 cv
677.009 529.806 676.962 528.325 676.274 526.731 cv
675.563 525.063 675.466 522.36 676.696 520.642 cv
679.149 517.204 679.782 515.29 679.782 511.294 cv
679.782 511.106 679.794 510.915 679.813 510.724 cv
680.243 511.567 680.712 512.403 681.173 513.235 cv
682.509 515.606 684.024 518.298 683.782 520.017 cv
683.396 522.708 684.313 524.427 685.153 525.392 cv
686.009 526.38 687.614 527.552 690.442 527.552 cv
692.489 527.552 697.118 526.622 698.603 523.911 cv
699.118 523.294 700.427 522.091 702.009 520.739 cv
700.778 524.157 699.802 528.071 699.802 532.181 cv
699.802 540.544 701.735 547.876 703.005 551.813 cv
699.267 553.997 692.372 558.177 687.157 562.228 cv
682.81 565.606 676.364 569.356 672.185 571.681 cv
cp
1 .854902 .152941 rgb
f
576.825 595.067 mo
576.825 595.067 570.532 582.774 576.962 572.735 cv
583.388 562.696 589.407 555.06 594.626 549.044 cv
599.853 543.021 608.278 537.396 619.521 536.997 cv
630.767 536.595 638.802 542.618 648.837 547.837 cv
658.876 553.06 673.329 555.466 671.325 577.946 cv
671.325 577.946 652.849 590.001 629.157 594.415 cv
605.47 598.837 576.825 595.067 576.825 595.067 cv
cp
.27451 .207843 .145098 rgb
f
602.563 592.919 mo
592.134 592.919 583.216 592.11 579.349 591.688 cv
578.118 588.368 576.091 580.849 580.028 574.692 cv
585.376 566.345 591.048 558.731 597.38 551.427 cv
600.716 547.575 608.048 541.048 619.649 540.63 cv
619.962 540.622 620.274 540.618 620.583 540.618 cv
628.239 540.618 634.403 544.044 641.54 548.021 cv
643.36 549.028 645.224 550.06 647.149 551.071 cv
648.708 551.876 650.36 552.618 652.04 553.38 cv
660.896 557.345 668.583 560.802 667.821 575.833 cv
663.024 578.673 647.368 587.313 628.493 590.837 cv
621.071 592.228 612.345 592.919 602.563 592.919 cv
cp
1 .854902 .152941 rgb
f
572.142 592.411 mo
572.142 592.411 581.376 588.388 593.017 590.001 cv
604.665 591.603 611.091 594.013 612.692 589.599 cv
614.306 585.185 613.505 582.372 618.72 579.56 cv
623.938 576.751 624.345 576.751 626.345 573.138 cv
628.356 569.524 630.368 564.704 631.97 567.911 cv
633.579 571.126 637.997 577.552 637.997 577.552 cv
637.997 577.552 630.767 577.946 630.368 576.751 cv
629.962 575.548 630.767 583.571 636.79 584.384 cv
642.81 585.185 650.048 587.587 653.657 585.575 cv
657.267 583.571 666.103 581.571 666.103 581.571 cv
666.103 581.571 655.263 592.813 653.255 600.438 cv
651.243 608.063 655.263 629.353 655.263 629.353 cv
655.263 629.353 643.618 622.528 633.177 623.728 cv
622.731 624.931 607.478 636.981 607.478 636.981 cv
607.478 636.981 609.087 624.532 601.853 614.091 cv
594.626 603.649 584.989 596.423 572.142 592.411 cv
cp
.27451 .207843 .145098 rgb
f
611.083 629.899 mo
610.618 624.911 608.134 619.181 603.86 613.009 cv
598.274 604.938 592.411 597.79 584.087 593.407 cv
585.146 593.321 586.267 593.259 587.431 593.259 cv
589.149 593.259 590.86 593.376 592.524 593.603 cv
595.036 593.954 597.302 594.337 599.325 594.688 cv
602.864 595.282 605.661 595.759 608.024 595.759 cv
612.216 595.759 614.935 594.11 616.122 590.849 cv
616.571 589.61 616.86 588.485 617.11 587.45 cv
617.735 584.95 617.954 584.11 620.446 582.763 cv
621.575 582.157 li
624.247 580.731 625.728 579.899 626.942 578.661 cv
627.763 581.954 630.392 587.196 636.313 587.985 cv
637.86 588.192 639.501 588.517 641.134 588.837 cv
644.087 589.415 647.138 590.001 649.856 590.001 cv
652.079 590.001 653.88 589.61 655.368 588.798 cv
652.907 592.243 650.622 596.103 649.728 599.509 cv
648.282 605.017 649.47 615.888 650.536 623.103 cv
646.532 621.532 641.157 619.938 635.731 619.938 cv
634.735 619.938 633.743 620.001 632.759 620.118 cv
625.614 620.938 616.794 626.083 611.083 629.899 cv
cp
1 .854902 .152941 rgb
f
525.966 598.282 mo
525.966 598.282 525.966 573.938 514.72 562.696 cv
503.474 551.45 495.442 550.649 488.216 549.438 cv
480.985 548.243 478.579 546.634 471.353 548.638 cv
464.118 550.649 443.642 565.505 438.427 583.571 cv
433.2 601.649 435.614 613.29 435.614 613.29 cv
435.614 613.29 459.704 618.517 483.396 614.899 cv
507.087 611.278 525.966 598.282 525.966 598.282 cv
cp
.27451 .207843 .145098 rgb
f
465.458 612.528 mo
454.372 612.528 455.821 621.845 438.892 610.204 cv
438.532 606.11 438.36 596.903 441.923 584.587 cv
446.864 567.474 466.442 553.782 472.321 552.153 cv
474.333 551.587 475.974 551.329 477.485 551.329 cv
479.22 551.329 480.817 551.673 483.024 552.142 cv
484.364 552.423 485.853 552.747 487.614 553.04 cv
488.743 553.22 li
495.407 554.31 502.302 555.431 512.146 565.267 cv
520.466 573.595 521.981 590.587 522.259 596.329 cv
517.274 599.431 501.501 608.446 482.849 611.298 cv
477.489 612.118 471.638 612.528 465.458 612.528 cv
465.458 612.528 li
cp
1 .854902 .152941 rgb
f
419.556 520.935 mo
419.556 520.935 417.942 511.294 420.353 506.075 cv
422.763 500.856 423.563 496.837 426.774 492.024 cv
429.989 487.208 438.825 475.157 448.06 469.532 cv
457.294 463.911 462.919 461.907 468.942 465.118 cv
472.396 466.958 485.888 472.696 493.837 481.185 cv
499.86 487.603 511.106 499.243 507.892 513.704 cv
507.892 513.704 495.04 522.54 466.532 525.755 cv
438.021 528.962 419.556 520.935 419.556 520.935 cv
cp
.27451 .207843 .145098 rgb
f
453.161 523.673 mo
437.11 523.673 425.954 520.259 422.138 518.888 cv
421.782 515.739 421.536 510.274 422.927 507.267 cv
423.806 505.364 424.478 503.618 425.118 501.935 cv
426.251 498.997 427.228 496.45 429.134 493.595 cv
430.86 491.001 439.978 477.774 449.532 471.954 cv
454.993 468.634 459.384 466.419 463.079 466.419 cv
464.634 466.419 466.071 466.802 467.61 467.618 cv
468.165 467.915 468.978 468.313 469.978 468.802 cv
474.989 471.247 485.407 476.333 491.767 483.122 cv
497.845 489.591 507.356 499.72 505.349 511.938 cv
501.954 513.899 489.345 520.329 466.212 522.935 cv
461.853 523.431 457.462 523.673 453.161 523.673 cv
cp
1 .854902 .152941 rgb
f
405.896 522.134 mo
405.896 522.134 416.337 518.528 427.181 520.935 cv
438.021 523.341 446.052 522.942 448.06 516.517 cv
450.071 510.091 450.071 510.091 452.079 505.271 cv
454.079 500.454 457.696 498.048 457.696 498.048 cv
457.696 498.048 459.306 502.056 460.911 507.677 cv
462.513 513.302 469.743 511.7 470.946 516.517 cv
472.157 521.333 480.985 519.329 485.81 518.528 cv
490.622 517.728 507.892 513.704 507.892 513.704 cv
507.892 513.704 510.302 525.353 505.079 532.181 cv
499.86 539.005 510.302 558.278 510.302 558.278 cv
510.302 558.278 494.638 549.845 481.786 549.438 cv
468.942 549.044 448.06 567.517 448.06 567.517 cv
448.06 567.517 448.86 558.278 438.021 547.837 cv
427.181 537.396 423.962 536.997 420.751 532.575 cv
417.54 528.161 413.528 524.544 405.896 522.134 cv
cp
.27451 .207843 .145098 rgb
f
450.614 560.677 mo
449.325 556.517 446.532 550.974 440.544 545.216 cv
434.853 539.728 431.22 536.95 428.563 534.923 cv
426.239 533.146 424.958 532.165 423.7 530.435 cv
421.767 527.774 419.688 525.599 417.313 523.802 cv
417.958 523.767 418.61 523.751 419.282 523.751 cv
421.782 523.751 424.173 523.997 426.384 524.485 cv
430.771 525.462 434.423 525.931 437.548 525.931 cv
446.962 525.931 450.349 521.403 451.54 517.603 cv
453.493 511.333 453.493 511.333 455.438 506.677 cv
455.692 506.067 455.978 505.505 456.282 504.981 cv
456.638 506.106 457.024 507.345 457.411 508.685 cv
458.72 513.274 462.438 514.825 464.899 515.853 cv
466.677 516.595 467.294 516.927 467.415 517.403 cv
467.962 519.591 469.946 523.267 477.021 523.267 cv
479.802 523.267 482.767 522.751 485.149 522.337 cv
486.403 522.114 li
489.872 521.536 499.325 519.407 504.759 518.165 cv
504.95 521.833 504.587 526.817 502.188 529.962 cv
498.271 535.091 500.341 544.005 502.946 550.911 cv
497.048 548.556 489.138 546.028 481.903 545.802 cv
481.376 545.798 li
471.181 545.798 457.829 555.024 450.614 560.677 cv
cp
1 .854902 .152941 rgb
f
456.091 512.903 mo
456.091 512.903 456.493 524.146 452.478 530.567 cv
448.462 536.997 444.446 547.032 446.454 555.872 cv
446.454 555.872 446.454 545.833 452.079 537.798 cv
457.696 529.767 459.306 520.935 456.091 512.903 cv
cp
.27451 .207843 .145098 rgb
f
463.724 657.06 mo
463.724 657.06 460.505 649.833 459.704 638.583 cv
458.903 627.345 454.079 620.915 448.06 617.306 cv
442.032 613.688 434.009 612.892 434.009 612.892 cv
434.009 612.892 440.028 608.876 448.462 612.087 cv
456.892 615.29 459.306 613.688 465.325 609.274 cv
471.353 604.853 469.743 603.649 471.751 596.024 cv
473.759 588.388 473.356 587.188 478.978 583.173 cv
484.599 579.157 488.622 572.735 488.622 572.735 cv
488.622 572.735 486.61 581.571 484.599 585.575 cv
482.595 589.599 490.622 599.638 491.024 602.45 cv
491.431 605.251 495.442 605.251 499.056 603.649 cv
502.673 602.04 497.45 600.837 505.485 602.45 cv
513.513 604.052 515.114 600.438 518.329 599.228 cv
521.548 598.036 532.384 595.626 532.384 595.626 cv
532.384 595.626 517.263 611.005 515.251 623.446 cv
513.243 635.899 511.106 639.392 511.106 639.392 cv
511.106 639.392 502.267 633.368 493.032 634.169 cv
483.798 634.97 466.931 647.021 463.724 657.06 cv
cp
f
464.759 648.024 mo
464.157 645.36 463.606 642.079 463.337 638.329 cv
462.692 629.313 459.626 622.274 454.208 617.345 cv
454.704 617.392 455.196 617.423 455.681 617.423 cv
460.384 617.423 463.513 615.118 467.485 612.216 cv
472.868 608.259 473.524 605.81 474.31 601.462 cv
474.528 600.251 474.79 598.798 475.274 596.954 cv
475.544 595.927 475.771 595.017 475.974 594.196 cv
477.181 589.345 477.302 588.876 480.661 586.446 cv
480.345 590.399 483.024 595.079 485.438 599.286 cv
486.212 600.642 487.278 602.509 487.446 603.095 cv
487.888 606.251 490.661 608.376 494.485 608.376 cv
496.36 608.376 498.505 607.88 500.536 606.981 cv
501.396 606.603 502.099 606.142 502.665 605.603 cv
503.388 605.743 504.196 605.899 504.767 606.017 cv
506.364 606.337 507.81 606.493 509.181 606.493 cv
513.622 606.493 516.095 603.251 517.927 602.032 cv
518.001 601.981 524.286 599.938 524.353 599.892 cv
521.052 603.856 513.962 614.415 513.114 619.704 cv
512.024 626.435 509.06 629.97 508.396 633.767 cv
504.97 632.177 500.04 630.446 494.759 630.446 cv
494.079 630.446 493.396 630.478 492.72 630.536 cv
484.626 631.251 471.853 639.157 464.759 648.024 cv
cp
1 .854902 .152941 rgb
f
509.095 640.196 mo
509.095 640.196 509.095 630.556 514.72 618.103 cv
520.341 605.665 526.63 594.267 552.333 590.653 cv
552.333 590.653 570.134 587.306 586.462 598.688 cv
599.872 608.024 613.099 617.704 607.478 639.794 cv
607.478 639.794 584.989 651.435 552.462 649.423 cv
519.938 647.423 509.095 640.196 509.095 640.196 cv
cp
.27451 .207843 .145098 rgb
f
560.013 646.017 mo
557.579 646.017 555.114 645.946 552.688 645.79 cv
528.864 644.325 517.048 639.978 512.884 638.063 cv
513.22 634.728 514.337 627.79 518.036 619.61 cv
523.563 607.36 528.79 595.798 552.392 592.431 cv
552.575 592.423 552.927 592.411 553.427 592.411 cv
557.009 592.411 569.579 592.88 580.876 598.845 cv
591.548 604.47 608.485 616.845 604.325 637.243 cv
599.423 639.431 582.724 646.017 560.013 646.017 cv
cp
1 .854902 .152941 rgb
f
504.677 636.579 mo
504.677 636.579 517.126 635.368 521.548 639.392 cv
525.966 643.407 531.579 642.204 537.2 644.208 cv
542.825 646.22 549.251 645.419 550.458 641.798 cv
551.657 638.181 552.063 638.583 556.079 633.368 cv
560.091 628.142 555.673 621.317 561.298 618.517 cv
566.915 615.704 568.524 607.267 568.524 607.267 cv
568.524 607.267 570.532 613.688 568.524 619.313 cv
566.521 624.931 569.333 630.157 570.532 632.97 cv
571.735 635.771 578.563 638.181 580.173 641.798 cv
581.774 645.419 584.989 641.798 587.802 640.196 cv
590.614 638.583 590.614 641.396 594.626 638.993 cv
598.642 636.579 610.286 636.181 610.286 636.181 cv
610.286 636.181 604.267 643.806 600.247 651.032 cv
596.235 658.259 587.001 672.724 595.028 688.778 cv
595.028 688.778 568.931 673.923 539.212 695.603 cv
539.212 695.603 542.423 679.142 536.005 669.103 cv
529.571 659.071 527.966 657.86 525.153 653.048 cv
522.353 648.231 516.325 642.606 504.677 636.579 cv
cp
.27451 .207843 .145098 rgb
f
543.618 688.388 mo
543.845 682.204 543.22 673.634 539.071 667.149 cv
535.634 661.774 533.583 658.946 531.938 656.657 cv
530.556 654.735 529.548 653.337 528.306 651.212 cv
527.009 648.993 525.228 646.786 522.966 644.626 cv
525.481 645.759 528.071 646.134 530.454 646.474 cv
532.396 646.747 534.228 647.009 535.974 647.634 cv
538.337 648.485 540.853 648.923 543.259 648.923 cv
548.685 648.923 552.665 646.688 553.907 642.946 cv
554.548 641.032 554.673 640.888 556.185 639.063 cv
556.868 638.231 557.759 637.157 558.962 635.587 cv
561.513 632.274 561.626 628.583 561.704 625.888 cv
561.806 622.634 562.009 622.228 562.927 621.767 cv
563.431 621.513 563.915 621.228 564.372 620.915 cv
563.54 626.228 565.622 630.888 566.825 633.571 cv
567.185 634.392 li
568.173 636.696 570.415 638.231 572.786 639.853 cv
574.313 640.888 576.415 642.313 576.845 643.282 cv
578.333 646.63 581.005 646.993 582.083 646.993 cv
584.372 646.993 586.302 645.634 588.005 644.423 cv
588.544 644.04 589.087 643.661 589.606 643.36 cv
590.091 643.485 590.798 643.661 591.692 643.661 cv
593.216 643.661 594.743 643.173 596.501 642.11 cv
597.587 641.462 599.938 640.927 602.567 640.548 cv
600.771 643.134 598.759 646.22 597.063 649.267 cv
596.317 650.595 li
592.513 657.333 585.962 668.935 588.931 682.45 cv
584.911 681.251 579.528 680.173 573.2 680.173 cv
562.978 680.173 553.056 682.938 543.618 688.388 cv
cp
1 .854902 .152941 rgb
f
563.31 639.794 mo
563.31 639.794 558.087 650.634 557.685 656.259 cv
557.282 661.884 553.669 670.313 550.056 677.54 cv
546.442 684.767 543.63 688.778 543.63 688.778 cv
543.63 688.778 551.657 673.126 552.868 666.298 cv
554.071 659.47 553.267 659.47 555.673 654.247 cv
558.087 649.032 563.31 639.794 563.31 639.794 cv
cp
.27451 .207843 .145098 rgb
f
568.931 645.017 mo
568.548 643.868 571.735 666.298 589.001 680.751 cv
589.001 680.751 574.548 661.884 568.931 645.017 cv
cp
f
595.028 688.778 mo
595.028 688.778 585.388 681.954 593.017 662.685 cv
600.653 643.407 602.657 638.583 609.481 632.556 cv
616.313 626.54 630.368 616.103 644.021 621.72 cv
657.673 627.345 669.321 639.392 674.134 655.048 cv
678.954 670.712 679.353 678.751 679.353 678.751 cv
679.353 678.751 682.567 691.993 652.048 692.399 cv
621.532 692.79 595.028 688.778 595.028 688.778 cv
cp
f
647.72 688.778 mo
623.04 688.778 601.571 686.017 596.634 685.329 cv
595.114 683.688 591.024 677.626 596.415 664.024 cv
603.97 644.923 605.782 640.692 611.892 635.29 cv
620.454 627.743 628.72 623.751 635.81 623.751 cv
638.188 623.751 640.478 624.208 642.63 625.087 cv
655.876 630.548 667.282 641.603 671.591 655.587 cv
676.181 670.485 675.712 678.856 675.72 678.935 cv
675.735 679.267 li
675.817 679.61 li
675.817 679.649 676.009 681.103 674.595 682.802 cv
672.81 684.938 667.497 688.544 652.005 688.759 cv
650.563 688.767 649.134 688.778 647.72 688.778 cv
cp
1 .854902 .152941 rgb
f
617.11 735.759 mo
617.11 735.759 624.743 717.294 615.106 708.856 cv
605.47 700.431 603.06 696.813 601.454 694.403 cv
599.853 691.993 595.028 688.778 595.028 688.778 cv
595.028 688.778 598.239 683.962 606.669 685.966 cv
615.106 687.978 618.72 690.392 621.532 687.177 cv
624.345 683.962 625.146 684.364 627.958 683.165 cv
630.767 681.954 627.157 677.138 629.56 672.313 cv
631.97 667.501 628.356 664.286 632.774 661.071 cv
637.188 657.86 637.985 657.321 646.024 657.06 cv
650.173 656.923 656.063 653.048 656.063 653.048 cv
656.063 653.048 652.45 658.259 646.024 661.071 cv
639.603 663.884 652.45 667.899 649.235 673.923 cv
646.024 679.938 648.837 685.165 655.263 686.376 cv
661.688 687.579 666.103 685.563 668.11 684.364 cv
670.118 683.165 678.954 680.353 678.954 680.353 cv
678.954 680.353 671.325 694.806 672.528 700.028 cv
673.735 705.243 671.728 714.481 671.325 719.298 cv
670.923 724.118 673.735 727.333 673.735 727.333 cv
673.735 727.333 662.489 718.493 650.849 725.731 cv
639.196 732.946 635.185 735.36 617.11 735.759 cv
cp
.27451 .207843 .145098 rgb
f
622.173 731.931 mo
623.958 725.079 625.517 713.134 617.501 706.11 cv
608.231 697.997 605.974 694.618 604.485 692.384 cv
603.767 691.317 602.685 690.204 601.552 689.196 cv
601.927 689.149 602.329 689.118 602.767 689.118 cv
603.708 689.118 604.743 689.259 605.829 689.509 cv
607.88 690.001 609.638 690.517 611.165 690.954 cv
613.88 691.759 616.032 692.384 618.083 692.384 cv
620.56 692.384 622.642 691.446 624.271 689.579 cv
625.794 687.841 626.181 687.696 627.462 687.255 cv
628.017 687.048 628.642 686.825 629.392 686.501 cv
633.317 684.821 632.802 680.81 632.528 678.661 cv
632.313 676.97 632.103 675.38 632.821 673.946 cv
634.286 671.024 634.169 668.505 634.079 666.681 cv
633.993 664.743 634.021 664.677 634.915 664.024 cv
636.024 663.204 li
638.173 661.61 639.071 660.954 641.087 660.72 cv
640.888 661.122 640.739 661.54 640.653 661.993 cv
640.067 664.899 642.146 667.079 643.817 668.829 cv
645.524 670.626 646.325 671.642 646.024 672.204 cv
643.954 676.095 643.7 680.087 645.306 683.438 cv
646.931 686.825 650.231 689.13 654.595 689.95 cv
656.122 690.243 657.665 690.38 659.157 690.38 cv
664.118 690.38 667.782 688.806 669.985 687.489 cv
670.302 687.306 671.013 686.993 671.981 686.618 cv
669.958 691.513 668.157 697.282 668.978 700.849 cv
669.704 703.993 668.896 709.806 668.306 714.052 cv
668.044 715.927 667.806 717.626 667.692 719.001 cv
667.653 719.442 667.642 719.884 667.642 720.313 cv
665.56 719.688 663.188 719.235 660.618 719.235 cv
656.481 719.235 652.548 720.38 648.923 722.626 cv
638.868 728.868 635.075 731.22 622.173 731.931 cv
cp
1 .854902 .152941 rgb
f
622.731 584.774 mo
622.731 584.774 625.146 589.196 622.731 595.626 cv
620.329 602.04 616.313 621.317 616.313 621.317 cv
616.313 621.317 615.505 606.063 618.72 600.04 cv
621.931 594.013 622.731 584.774 622.731 584.774 cv
cp
.27451 .207843 .145098 rgb
f
643.212 616.903 mo
643.212 616.903 641.005 616.774 636.79 608.063 cv
630.767 595.626 628.485 579.813 628.485 579.813 cv
628.485 579.813 634.11 585.978 639.728 586.774 cv
645.353 587.579 651.649 589.599 651.649 589.599 cv
651.649 589.599 644.423 594.415 639.997 594.013 cv
635.583 593.61 646.431 596.024 646.431 596.024 cv
646.431 596.024 644.423 598.427 638.802 596.423 cv
633.177 594.415 644.423 600.438 641.208 599.638 cv
637.997 598.837 644.821 606.063 642.009 604.052 cv
639.196 602.04 635.989 600.04 635.989 600.04 cv
635.989 600.04 637.997 611.278 643.212 616.903 cv
cp
f
531.579 746.603 mo
531.579 746.603 524.622 740.837 529.442 727.188 cv
534.255 713.532 529.036 697.47 545.907 688.231 cv
562.771 678.993 585.794 680.353 597.04 689.989 cv
608.278 699.618 611.892 706.454 615.106 708.856 cv
618.317 711.267 624.743 721.306 617.517 738.571 cv
617.517 738.571 597.438 746.603 579.368 751.423 cv
561.298 756.251 542.423 751.024 531.579 746.603 cv
cp
f
564.013 749.704 mo
551.446 749.704 540.036 746.032 533.856 743.595 cv
533.021 742.235 531.001 737.657 534.216 728.544 cv
535.79 724.091 536.384 719.833 536.97 715.72 cv
538.22 706.923 540.532 696.22 550.72 690.642 cv
559.157 686.024 568.505 684.22 577.224 684.22 cv
584.872 684.22 590.364 689.063 594.665 692.751 cv
601.415 698.532 605.267 703.212 608.075 706.618 cv
609.978 708.935 611.356 710.595 612.919 711.774 cv
615.192 713.478 620.188 721.446 614.72 735.759 cv
609.821 737.657 593.321 743.935 578.427 747.899 cv
573.942 749.103 569.099 749.704 564.013 749.704 cv
cp
1 .854902 .152941 rgb
f
456.892 699.618 mo
456.892 699.618 454.884 691.591 456.892 683.165 cv
458.903 674.728 458.099 655.048 471.751 644.61 cv
485.403 634.169 495.712 626.798 508.157 634.821 cv
520.603 642.86 525.153 650.235 530.778 658.259 cv
536.399 666.298 545.235 683.563 539.212 699.22 cv
539.212 699.22 525.153 707.255 505.485 710.067 cv
485.81 712.88 456.892 699.618 456.892 699.618 cv
cp
.27451 .207843 .145098 rgb
f
499.603 706.813 mo
484.384 706.813 465.755 699.442 460.11 697.048 cv
459.696 694.462 459.181 689.274 460.438 684.001 cv
460.911 682.009 461.22 679.618 461.579 676.864 cv
462.79 667.548 464.442 654.794 473.962 647.501 cv
482.868 640.692 488.763 637.001 494.423 637.001 cv
497.528 637.001 500.673 638.095 504.31 640.446 cv
516.591 648.368 522.567 652.88 527.798 660.353 cv
530.153 663.72 541.384 680.954 536.251 696.669 cv
532.591 698.544 520.54 704.235 504.962 706.462 cv
503.317 706.696 501.513 706.813 499.603 706.813 cv
cp
1 .854902 .152941 rgb
f
481.392 745.798 mo
481.392 745.798 487.411 735.759 480.587 722.919 cv
473.759 710.067 462.919 703.642 456.892 699.618 cv
450.872 695.603 464.923 699.22 469.345 701.63 cv
473.759 704.04 480.185 704.442 482.595 702.829 cv
485.001 701.228 490.224 702.829 493.435 698.017 cv
496.649 693.204 496.649 686.376 495.04 681.954 cv
493.435 677.54 493.032 672.724 487.81 670.712 cv
487.81 670.712 495.845 665.888 499.056 669.911 cv
502.267 673.923 495.845 671.513 502.267 673.923 cv
508.696 676.337 509.899 677.54 512.708 683.962 cv
515.521 690.392 512.708 699.22 516.728 701.63 cv
520.739 704.04 526.36 698.017 530.778 696.813 cv
535.192 695.603 540.817 694.403 540.817 694.403 cv
540.817 694.403 535.599 707.657 534.794 712.079 cv
533.993 716.485 530.036 740.368 533.649 751.61 cv
533.649 751.61 521.989 747.567 511.149 750.782 cv
500.306 753.985 494.481 754.11 481.392 745.798 cv
cp
.27451 .207843 .145098 rgb
f
485.313 746.61 mo
486.591 741.806 488.446 729.962 483.802 721.212 cv
480.599 715.165 476.54 710.446 472.501 706.708 cv
474.364 707.188 476.306 707.438 478.161 707.438 cv
480.024 707.438 482.653 707.165 484.618 705.868 cv
484.853 705.751 485.778 705.626 486.462 705.524 cv
489.087 705.146 493.47 704.532 496.462 700.04 cv
500.497 693.985 500.38 685.966 498.466 680.712 cv
498.181 679.931 497.938 679.142 497.692 678.349 cv
497.392 677.36 497.067 676.298 496.657 675.243 cv
497.517 676.032 498.935 676.563 500.989 677.333 cv
506.462 679.384 506.931 679.833 509.368 685.431 cv
510.353 687.665 510.47 690.563 510.583 693.376 cv
510.751 697.606 510.946 702.399 514.853 704.755 cv
516.048 705.478 517.38 705.837 518.817 705.837 cv
521.981 705.837 524.853 704.11 527.634 702.438 cv
529.126 701.54 530.657 700.626 531.743 700.321 cv
532.782 700.04 533.899 699.755 534.989 699.493 cv
533.454 703.673 531.688 708.79 531.212 711.423 cv
531.063 712.255 530.677 713.556 530.212 715.173 cv
528.591 720.79 528.739 737.228 529.063 745.36 cv
526.716 744.579 507.399 745.782 507.399 745.782 cv
499.403 748.165 492.274 746.462 485.313 746.61 cv
cp
1 .854902 .152941 rgb
f
429.587 704.845 mo
429.587 704.845 426.376 690.79 423.563 683.962 cv
420.751 677.138 413.931 671.513 409.11 668.7 cv
404.29 665.888 397.45 654.501 387.813 654.11 cv
378.177 653.7 374.579 664.286 369.36 667.099 cv
364.138 669.911 354.493 681.552 352.087 693.204 cv
349.681 704.845 353.696 711.267 353.696 711.267 cv
353.696 711.267 369.36 716.892 373.368 718.493 cv
377.384 720.106 403.884 724.923 429.587 704.845 cv
cp
.27451 .207843 .145098 rgb
f
385.626 717.345 mo
379.04 717.345 374.892 716.259 373.954 715.876 cv
370.587 714.501 359.204 710.329 355.673 709.04 cv
354.868 707.177 353.204 702.032 354.853 693.946 cv
357.056 683.103 366.118 672.243 370.321 669.938 cv
372.196 668.915 373.782 667.478 375.466 665.946 cv
378.685 663.048 381.72 660.29 386.731 660.29 cv
387.333 660.313 li
393.118 660.548 397.634 664.392 401.618 667.782 cv
403.306 669.22 404.907 670.563 406.446 671.485 cv
410.923 674.142 416.993 679.337 419.403 685.282 cv
421.47 690.36 423.813 699.884 424.739 703.806 cv
409.985 714.962 395.399 717.345 385.626 717.345 cv
385.626 717.345 li
cp
1 .854902 .152941 rgb
f
432.399 703.642 mo
432.399 703.642 417.942 707.657 411.122 710.47 cv
404.29 713.271 395.856 711.267 391.845 703.642 cv
388.114 696.552 382.985 691.54 374.216 690.868 cv
373.552 690.81 371.614 690.353 372.165 690.79 cv
377.79 695.204 379.794 698.415 377.79 702.829 cv
375.778 707.255 376.181 709.267 376.181 713.271 cv
376.181 717.294 353.696 711.267 353.696 711.267 cv
353.696 711.267 363.735 719.704 367.751 727.735 cv
371.767 735.759 372.567 747.813 372.567 747.813 cv
372.567 747.813 372.966 749.813 378.591 745.001 cv
384.212 740.185 392.646 739.376 402.282 747.411 cv
411.923 755.438 418.747 755.837 418.747 755.837 cv
418.747 755.837 412.724 745.001 416.743 738.173 cv
420.751 731.345 419.95 710.47 432.399 703.642 cv
cp
.27451 .207843 .145098 rgb
f
413.853 751.454 mo
411.313 750.341 407.958 748.446 404.099 745.235 cv
398.763 740.79 393.407 738.532 388.177 738.532 cv
383.993 738.532 380.04 740.028 376.747 742.853 cv
376.079 743.427 375.517 743.868 375.048 744.22 cv
374.528 740.028 373.22 732.333 370.286 726.462 cv
368.493 722.88 365.642 719.274 362.919 716.29 cv
366.341 716.942 369.985 717.489 372.657 717.489 cv
378.188 717.489 379.017 714.853 379.017 713.271 cv
378.997 711.54 li
378.954 708.728 378.923 707.188 380.368 704.001 cv
381.899 700.642 381.571 697.79 380.22 695.274 cv
383.88 697.001 386.806 700.157 389.333 704.962 cv
392.478 710.946 398.349 714.509 405.032 714.509 cv
407.489 714.509 409.899 714.032 412.2 713.087 cv
414.958 711.954 419.063 710.595 422.919 709.392 cv
419.642 715.028 418.165 721.876 416.978 727.438 cv
416.146 731.278 415.368 734.911 414.294 736.735 cv
411.575 741.368 412.497 747.196 413.853 751.454 cv
cp
1 .854902 .152941 rgb
f
481.786 806.837 mo
481.786 806.837 469.345 793.583 474.563 781.142 cv
479.782 768.688 486.208 762.665 491.431 759.454 cv
496.649 756.251 503.876 749.415 515.521 748.61 cv
527.165 747.813 536.005 750.626 544.032 756.642 cv
552.063 762.665 560.896 772.704 563.31 787.157 cv
565.716 801.618 561.696 807.243 561.696 807.243 cv
561.696 807.243 553.669 812.462 532.79 812.86 cv
511.907 813.259 490.224 812.06 481.786 806.837 cv
cp
.27451 .207843 .145098 rgb
f
525.587 810.095 mo
504.606 810.095 489.743 808.153 483.61 804.626 cv
482.001 802.774 473.114 791.923 477.177 782.243 cv
481.181 772.685 486.478 765.829 492.915 761.864 cv
493.978 761.212 495.126 760.419 496.368 759.548 cv
501.165 756.2 507.138 752.032 515.716 751.446 cv
516.946 751.356 518.149 751.317 519.313 751.317 cv
528.103 751.317 535.419 753.728 542.333 758.915 cv
549.313 764.149 558.138 773.376 560.509 787.626 cv
562.282 798.259 560.345 803.61 559.61 805.157 cv
557.552 806.2 549.427 809.704 532.735 810.028 cv
530.36 810.079 527.966 810.095 525.587 810.095 cv
cp
1 .854902 .152941 rgb
f
624.743 732.548 mo
624.743 732.548 643.212 711.669 638.802 684.364 cv
638.802 684.364 643.618 696.813 639.997 708.454 cv
636.384 720.106 629.157 728.134 624.743 732.548 cv
cp
.27451 .207843 .145098 rgb
f
486.61 743.399 mo
486.61 743.399 504.274 724.118 504.274 699.618 cv
504.274 699.618 508.696 726.923 486.61 743.399 cv
cp
f
527.966 741.786 mo
527.966 741.786 523.954 737.774 520.739 728.935 cv
517.528 720.106 512.302 706.056 512.302 706.056 cv
512.302 706.056 519.938 721.306 523.153 728.935 cv
526.36 736.571 527.966 741.786 527.966 741.786 cv
cp
f
670.118 723.72 mo
670.118 723.72 649.642 706.853 645.622 691.591 cv
645.622 691.591 659.544 712.071 670.118 723.72 cv
cp
f
673.735 727.333 mo
673.735 727.333 668.11 724.923 669.716 714.079 cv
671.325 703.243 670.118 686.376 680.962 673.524 cv
691.798 660.673 705.458 656.259 716.696 661.884 cv
727.942 667.501 733.563 674.728 734.364 683.165 cv
735.169 691.591 732.36 705.243 726.337 710.47 cv
720.31 715.681 715.497 722.11 703.845 724.118 cv
692.204 726.122 673.735 727.333 673.735 727.333 cv
cp
f
674.45 724.442 mo
673.517 723.634 671.556 721.122 672.513 714.696 cv
672.86 712.392 673.079 709.821 673.31 707.079 cv
674.118 697.509 675.126 685.587 682.978 676.337 cv
689.962 668.103 698.165 663.571 706.079 663.571 cv
709.134 663.571 712.079 664.259 714.821 665.626 cv
724.646 670.509 729.993 676.767 730.704 684.259 cv
731.478 692.274 728.665 704.415 723.747 708.642 cv
722.665 709.579 721.618 710.548 720.563 711.524 cv
715.931 715.837 709.774 725.126 701.149 726.603 cv
691.407 728.271 678.282 724.169 674.45 724.442 cv
cp
1 .854902 .152941 rgb
f
695.017 763.466 mo
695.017 763.466 697.024 746.603 685.778 736.571 cv
674.54 726.532 668.11 721.708 658.075 722.919 cv
648.036 724.118 640.927 729.181 634.899 731.188 cv
628.88 733.192 622.712 736.513 619.899 756.188 cv
617.087 775.868 623.54 782.345 627.157 783.954 cv
630.767 785.556 646.431 786.356 666.509 780.743 cv
686.579 775.118 695.017 763.466 695.017 763.466 cv
cp
.27451 .207843 .145098 rgb
f
637.157 782.306 mo
631.825 782.306 629.036 781.688 628.31 781.368 cv
625.931 780.302 622.579 773.728 625.142 755.837 cv
627.61 738.556 633.915 736.474 639.481 734.638 cv
640.095 734.442 li
642.79 733.532 644.884 732.06 646.907 730.634 cv
649.997 728.446 652.919 726.384 658.411 725.731 cv
659.306 725.626 660.169 725.563 661.005 725.563 cv
668.399 725.563 673.907 729.767 683.892 738.681 cv
692.634 746.485 692.462 759.149 692.263 762.372 cv
690.302 764.688 682.017 773.454 665.739 778.009 cv
652.407 781.735 642.11 782.306 637.161 782.306 cv
637.157 782.306 li
cp
1 .854902 .152941 rgb
f
641.524 816.728 mo
640.579 815.38 li
639.626 813.907 640.329 812.353 640.626 811.688 cv
642.099 808.478 640.509 795.087 637.708 791.239 cv
635.653 788.407 624.899 782.126 618.61 778.829 cv
620.071 773.485 li
621.681 773.571 623.239 773.61 624.739 773.61 cv
641.708 773.61 652.888 768.321 653.231 760.134 cv
653.626 750.673 662.337 746.884 666.892 746.212 cv
674.032 745.146 li
669.521 750.79 li
666.825 754.157 667.224 755.368 668.235 757.384 cv
668.505 757.931 li
670.017 761.017 671.356 763.204 674.782 763.204 cv
675.681 763.204 676.704 763.048 677.806 762.743 cv
686.845 760.274 697.665 759.853 698.122 759.833 cv
699.126 765.36 li
686.169 769.677 689.962 785.79 690.134 786.474 cv
691.063 790.274 li
691.063 790.274 687.079 789.989 687.032 789.989 cv
685.196 789.989 681.868 790.224 678.774 792.021 cv
677.138 792.978 675.454 793.759 673.622 794.61 cv
670.067 796.251 666.044 798.114 660.595 802.267 cv
656.954 805.04 653.177 808.649 650.142 811.552 cv
645.759 815.731 644.724 816.728 643.071 816.728 cv
641.524 816.728 li
cp
.27451 .207843 .145098 rgb
f
667.306 749.013 mo
667.306 749.013 656.462 750.626 656.063 760.251 cv
655.661 769.899 643.618 777.528 619.923 776.317 cv
619.923 776.317 636.79 785.157 639.997 789.571 cv
643.212 793.985 645.224 808.446 643.212 812.86 cv
641.208 817.282 650.442 806.446 658.876 800.009 cv
667.306 793.583 672.528 792.384 677.345 789.571 cv
682.165 786.767 687.38 787.157 687.38 787.157 cv
687.38 787.157 682.567 767.892 698.228 762.665 cv
698.228 762.665 687.38 763.063 678.552 765.478 cv
669.716 767.892 667.306 761.864 665.7 758.649 cv
664.095 755.438 664.095 753.024 667.306 749.013 cv
cp
1 .854902 .152941 rgb
f
683.368 784.353 mo
683.368 784.353 700.231 798.407 693.407 808.446 cv
686.579 818.478 680.563 817.673 677.751 820.899 cv
674.938 824.103 669.716 829.325 662.888 829.728 cv
656.063 830.126 654.056 836.962 648.435 837.353 cv
642.81 837.763 637.86 833.856 637.86 833.856 cv
637.86 833.856 641.61 821.696 642.81 816.474 cv
644.021 811.259 646.024 805.235 656.462 798.806 cv
666.907 792.384 681.364 783.954 683.368 784.353 cv
cp
.27451 .207843 .145098 rgb
f
647.606 834.548 mo
645.075 834.548 642.688 833.485 641.196 832.646 cv
642.321 828.923 644.649 821.11 645.575 817.11 cv
646.751 812.032 648.587 806.981 657.946 801.22 cv
670.751 793.349 679.528 788.583 682.54 787.423 cv
685.759 790.438 695.466 800.368 691.063 806.853 cv
687.032 812.774 683.415 814.462 680.517 815.821 cv
678.7 816.669 676.981 817.47 675.618 819.032 cv
671.196 824.071 666.978 826.649 662.724 826.892 cv
658.157 827.165 655.306 829.677 653.017 831.696 cv
651.11 833.376 649.86 834.415 648.235 834.532 cv
647.606 834.548 li
cp
1 .854902 .152941 rgb
f
721.517 747.411 mo
721.517 747.411 730.751 761.462 726.735 769.091 cv
722.724 776.728 721.118 778.329 722.724 781.54 cv
724.329 784.755 723.524 785.954 720.712 787.567 cv
717.903 789.169 707.06 806.837 690.192 808.446 cv
690.192 808.446 691.001 793.985 687.786 789.97 cv
684.571 785.954 685.38 770.704 693.407 765.079 cv
701.438 759.454 703.845 759.052 707.462 756.642 cv
711.083 754.235 711.083 754.638 715.497 753.024 cv
719.911 751.423 719.911 749.415 721.517 747.411 cv
cp
.27451 .207843 .145098 rgb
f
693.134 805.095 mo
693.177 800.087 692.802 791.696 689.997 788.204 cv
689.22 787.235 688.435 783.728 689.118 778.993 cv
689.872 773.728 692.028 769.501 695.032 767.399 cv
699.892 764.001 702.634 762.567 704.841 761.407 cv
706.317 760.634 707.587 759.97 709.036 759.001 cv
711.435 757.411 711.884 757.255 713.782 756.618 cv
714.481 756.384 715.329 756.103 716.47 755.692 cv
718.868 754.821 720.31 753.767 721.286 752.712 cv
723.618 757.294 726.185 764.063 724.228 767.774 cv
723.517 769.118 722.888 770.274 722.337 771.278 cv
719.673 776.161 718.2 778.845 720.188 782.813 cv
720.657 783.751 720.7 784.142 720.704 784.22 cv
720.7 784.22 li
720.642 784.22 720.329 784.521 719.306 785.106 cv
718.243 785.712 717.161 786.942 715.368 788.993 cv
711.052 793.907 703.368 802.665 693.134 805.095 cv
cp
1 .854902 .152941 rgb
f
671.728 726.532 mo
671.728 726.532 678.153 723.31 688.591 724.521 cv
699.032 725.731 702.243 721.306 703.044 716.485 cv
703.845 711.669 704.251 708.056 706.259 706.454 cv
708.271 704.845 706.259 689.989 715.497 687.579 cv
715.497 687.579 707.868 701.228 715.091 706.454 cv
722.321 711.669 730.751 702.431 730.751 702.431 cv
730.751 702.431 731.556 712.47 727.142 719.298 cv
722.724 726.122 726.735 747.009 719.11 752.626 cv
711.478 758.251 691.001 769.493 691.001 769.493 cv
691.001 769.493 695.017 755.438 687.38 745.001 cv
679.755 734.56 671.728 726.532 671.728 726.532 cv
cp
.27451 .207843 .145098 rgb
f
694.755 764.149 mo
695.228 758.634 697.099 749.853 691.981 742.853 cv
687.177 736.29 679.962 731.173 676.884 727.841 cv
678.696 727.431 681.087 727.079 683.958 727.079 cv
685.298 727.079 686.735 727.157 688.267 727.333 cv
689.567 727.489 690.771 727.556 691.872 727.556 cv
699.743 727.556 704.704 723.79 705.845 716.954 cv
706.063 715.614 li
706.575 712.438 707.063 709.442 708.024 708.673 cv
709.196 707.735 709.626 706.298 709.954 704.247 cv
710.603 705.954 711.708 707.509 713.431 708.751 cv
715.392 710.165 717.579 710.888 719.938 710.888 cv
722.841 710.888 725.548 709.767 727.731 708.446 cv
727.392 711.396 726.587 714.938 724.763 717.763 cv
722.485 721.278 722.106 727.071 721.708 733.192 cv
721.259 740.087 720.751 747.899 717.431 750.353 cv
712.368 754.079 701.29 760.47 694.755 764.149 cv
cp
1 .854902 .152941 rgb
f
418.747 755.837 mo
418.747 755.837 410.989 751.024 414.735 739.247 cv
418.478 727.462 418.86 697.696 440.731 695.771 cv
454.899 694.521 468.438 698.231 477.915 714.618 cv
489.899 735.353 490.665 748.036 485.313 752.853 cv
479.962 757.665 437.751 760.653 418.747 755.837 cv
cp
.27451 .207843 .145098 rgb
f
437.536 754.892 mo
430.614 754.892 424.548 754.313 419.954 753.22 cv
418.813 752.294 414.806 748.368 417.435 740.106 cv
418.212 737.673 418.837 734.704 419.501 731.563 cv
422.157 718.962 425.462 703.298 440.978 701.923 cv
443.981 701.657 447.2 701.415 450.388 701.415 cv
459.392 701.415 471.032 705.993 476.981 718.688 cv
484.392 734.501 482.048 744.403 477.618 748.376 cv
474.774 750.946 456.278 754.892 437.536 754.892 cv
cp
1 .854902 .152941 rgb
f
388.493 781.54 mo
388.493 781.54 363.868 784.755 360.126 770.829 cv
356.376 756.915 349.95 748.349 349.95 748.349 cv
349.95 748.349 360.657 746.212 367.614 750.485 cv
374.579 754.774 391.173 757.978 392.782 758.517 cv
394.388 759.052 388.493 781.54 388.493 781.54 cv
cp
.27451 .207843 .145098 rgb
f
384.481 782.438 mo
378.017 782.438 364.954 777.868 362.864 770.095 cv
360.501 761.329 357.134 754.626 354.817 750.681 cv
355.251 750.665 355.7 750.653 356.173 750.653 cv
359.04 750.653 363.099 751.044 366.13 752.907 cv
372.103 756.579 383.923 759.337 389.603 760.653 cv
389.798 760.704 389.978 760.743 390.153 760.782 cv
389.767 764.11 388.048 771.845 386.247 778.907 cv
385.29 778.974 385.931 782.438 384.481 782.438 cv
cp
1 .854902 .152941 rgb
f
566.79 838.829 mo
566.79 838.829 551.563 823.688 562.497 805.634 cv
570.845 791.853 578.036 788.493 584.454 785.821 cv
590.876 783.153 601.048 775.118 617.649 777.79 cv
634.247 780.47 654.056 788.231 642.81 816.474 cv
642.81 816.474 626.224 831.337 602.657 837.763 cv
579.099 844.188 566.79 838.829 566.79 838.829 cv
cp
.27451 .207843 .145098 rgb
f
580.97 838.087 mo
574.599 838.087 570.493 837.06 568.79 836.532 cv
566.942 832.802 560.524 818.407 565.134 806.669 cv
569.923 794.493 577.306 791.642 583.243 789.353 cv
584.048 789.04 584.817 788.739 585.544 788.438 cv
586.864 787.892 588.333 787.126 589.978 786.278 cv
595.282 783.524 601.876 780.087 611.067 780.087 cv
613.071 780.087 615.13 780.263 617.2 780.595 cv
629.778 782.626 637.606 786.618 641.122 792.821 cv
644.192 798.231 643.958 805.626 640.427 814.782 cv
637.548 817.216 622.317 829.462 601.911 835.028 cv
594.466 837.06 587.419 838.087 580.97 838.087 cv
cp
1 .854902 .152941 rgb
f
707.595 659.47 mo
707.595 659.47 705.458 638.595 711.884 624.142 cv
718.31 609.677 726.337 596.825 733.298 594.688 cv
740.263 592.548 752.04 586.657 755.251 603.251 cv
758.466 619.853 756.86 630.017 756.86 630.017 cv
756.86 630.017 753.649 640.196 740.263 649.833 cv
726.872 659.47 707.595 659.47 707.595 659.47 cv
cp
.27451 .207843 .145098 rgb
f
710.231 656.524 mo
709.919 650.575 709.743 635.927 714.47 625.29 cv
721.407 609.677 728.942 598.993 734.134 597.392 cv
734.837 597.177 735.583 596.923 736.368 596.657 cv
739.04 595.759 742.063 594.743 744.716 594.743 cv
746.513 594.743 750.716 594.743 752.47 603.79 cv
755.497 619.423 754.11 629.247 754.06 629.579 cv
754.06 629.579 li
754.017 629.579 750.739 638.798 738.606 647.54 cv
728.962 654.481 715.782 656.134 710.231 656.524 cv
cp
1 .854902 .152941 rgb
f
618.646 399.103 mo
618.646 399.103 620.204 376.056 596.771 367.142 cv
569.896 356.915 554.47 367.142 554.47 367.142 cv
554.47 367.142 562.489 356.872 574.271 358.478 cv
586.052 360.083 590.345 359.106 594.634 354.825 cv
598.907 350.54 600.517 351.606 603.192 352.681 cv
605.876 353.755 610.157 352.681 610.692 345.188 cv
611.228 337.696 620.329 326.985 620.329 326.985 cv
620.329 326.985 628.36 348.938 634.782 348.399 cv
641.208 347.864 640.134 347.325 645.493 345.724 cv
650.849 344.118 650.849 344.118 650.849 344.118 cv
650.849 344.118 643.739 365.622 651.771 374.728 cv
659.802 383.829 662.396 399.728 644.271 389.728 cv
636.989 385.716 618.646 399.103 618.646 399.103 cv
cp
.27451 .207843 .145098 rgb
f
623.907 390.911 mo
622.185 383.79 614.72 370.493 595.833 365.04 cv
591.942 363.919 589.716 362.462 585.739 361.927 cv
590.274 361.521 593.478 359.985 596.634 356.833 cv
598.61 354.849 599.532 354.556 599.911 354.556 cv
600.298 354.556 600.907 354.81 601.618 355.099 cv
602.138 355.313 li
603.048 355.677 604.048 355.872 605.017 355.872 cv
608.767 355.872 615.603 355.587 616.149 347.856 cv
616.419 344.126 616.872 336.458 619.524 332.692 cv
622.79 340.481 628.415 351.247 634.548 351.247 cv
639.54 350.845 640.739 350.446 642.821 349.642 cv
643.634 349.329 644.642 348.938 646.302 348.438 cv
646.782 348.298 li
645.079 355.677 643.161 369.255 649.646 376.603 cv
654.11 381.665 655.72 387.642 654.868 389.536 cv
654.774 389.743 654.622 390.083 653.532 390.083 cv
652.278 390.083 649.892 389.591 645.638 387.247 cv
644.04 386.364 642.118 385.919 639.931 385.919 cv
634.399 385.919 627.88 388.825 623.907 390.911 cv
cp
1 .854902 .152941 rgb
f
376.188 565.239 mo
377.79 565.239 368.149 559.353 378.329 551.321 cv
388.493 543.294 386.892 538.47 393.853 530.435 cv
400.81 522.403 401.747 516.106 411.923 523.063 cv
422.095 530.021 437.216 539.005 442.571 549.177 cv
447.927 559.353 448.06 567.517 448.06 567.517 cv
448.06 567.517 428.118 576.481 407.235 577.017 cv
386.356 577.556 376.188 565.239 376.188 565.239 cv
cp
.27451 .207843 .145098 rgb
f
405.915 573.392 mo
390.759 573.392 382.204 566.165 379.724 563.704 cv
379.442 563.005 379.017 562.442 378.728 562.067 cv
377.216 560.103 375.653 558.067 380.579 554.177 cv
387.243 548.919 389.407 544.759 391.493 540.728 cv
392.81 538.169 394.063 535.755 396.61 532.825 cv
397.411 531.892 398.149 531.013 398.825 530.2 cv
401.274 527.267 402.704 525.606 403.821 525.606 cv
404.997 525.606 407.071 526.622 409.997 528.626 cv
412.782 530.528 415.798 532.325 418.997 534.235 cv
427.302 539.177 435.888 544.294 439.349 550.872 cv
442.548 556.946 443.735 562.259 444.169 565.181 cv
438.368 567.474 422.915 572.97 407.146 573.38 cv
405.915 573.392 li
cp
1 .854902 .152941 rgb
f
377.79 559.353 mo
377.79 559.353 387.958 569.524 394.388 564.165 cv
400.81 558.813 395.462 553.997 398.134 549.177 cv
400.81 544.356 399.739 536.325 399.739 536.325 cv
399.739 536.325 405.095 544.356 404.021 549.177 cv
402.958 553.997 408.845 560.423 412.591 565.774 cv
416.337 571.134 422.763 573.274 431.325 567.923 cv
439.896 562.563 450.071 565.239 450.071 565.239 cv
450.071 565.239 441.638 578.212 439.489 586.239 cv
437.353 594.274 435.614 613.29 435.614 613.29 cv
435.614 613.29 422.224 606.462 412.056 605.392 cv
401.884 604.325 398.649 607.021 398.649 607.021 cv
398.649 607.021 395.458 590.399 386.356 579.696 cv
377.255 568.985 373.513 561.489 377.79 559.353 cv
cp
.27451 .207843 .145098 rgb
f
431.911 607.567 mo
426.86 605.392 419.099 602.47 412.435 601.767 cv
406.962 601.188 403.513 600.782 401.532 600.517 cv
400.126 595.978 396.419 585.915 389.134 577.337 cv
384.899 572.356 382.548 568.903 381.247 566.575 cv
383.786 568.079 386.872 569.368 390.009 569.368 cv
392.548 569.368 394.806 568.567 396.716 566.97 cv
401.915 562.638 401.532 558.028 401.165 554.896 cv
402.462 558.243 404.95 561.575 407.384 564.825 cv
408.157 565.86 408.923 566.88 409.606 567.864 cv
412.673 572.247 417.087 574.665 422.04 574.665 cv
425.603 574.665 429.376 573.435 433.259 571.009 cv
436.626 568.903 440.36 568.313 443.134 568.224 cv
439.677 572.931 437.985 579.782 436.54 585.165 cv
435.048 590.79 431.923 601.083 431.911 607.567 cv
cp
1 .854902 .152941 rgb
f
361.149 676.61 mo
361.149 676.61 361.196 635.907 354.763 628.415 cv
348.345 620.927 345.673 611.813 345.673 611.813 cv
345.673 611.813 351.56 615.028 355.302 605.399 cv
359.052 595.759 360.661 590.407 356.907 582.907 cv
353.161 575.411 357.446 580.235 363.333 590.407 cv
369.22 600.575 367.083 601.11 374.579 602.712 cv
382.071 604.325 383.142 605.938 385.282 608.61 cv
387.431 611.278 392.251 607.54 395.462 605.927 cv
398.669 604.325 417.411 601.649 425.978 608.61 cv
425.978 608.61 397.063 639.13 395.989 648.231 cv
394.923 657.321 392.239 655.712 388.231 657.06 cv
384.216 658.399 375.653 663.751 375.653 663.751 cv
375.653 663.751 372.813 665.771 361.149 676.61 cv
cp
.27451 .207843 .145098 rgb
f
364.899 667.021 mo
365.595 660.118 362.782 633.407 356.911 626.571 cv
353.501 622.587 351.204 618.075 349.868 614.95 cv
352.356 614.353 355.638 612.36 357.942 606.423 cv
359.872 601.462 361.36 597.384 361.771 593.399 cv
362.79 595.251 363.517 596.72 364.099 597.899 cv
366.634 603.017 367.681 604.142 373.985 605.485 cv
380.243 606.837 381.063 607.86 382.86 610.118 cv
384.118 611.688 385.587 612.384 387.321 612.384 cv
389.853 612.384 392.478 610.868 394.798 609.532 cv
395.481 609.142 396.134 608.759 396.731 608.466 cv
397.626 608.017 402.501 606.892 408.704 606.892 cv
413.931 606.892 418.356 607.696 421.552 609.188 cv
413.7 617.646 394.173 639.423 393.173 647.899 cv
392.556 653.181 391.931 653.31 389.86 653.728 cv
389.075 653.896 388.251 654.142 387.329 654.376 cv
378.649 656.61 369.481 666.61 364.899 667.021 cv
cp
1 .854902 .152941 rgb
f
439.583 468.47 mo
439.583 468.47 443.864 456.153 433.161 444.376 cv
422.454 432.595 419.505 422.677 409.196 422.017 cv
398.892 421.349 390.86 431.521 381.224 440.091 cv
371.591 448.657 364.095 468.47 374.267 476.501 cv
384.438 484.532 398.896 486.673 407.997 486.673 cv
417.099 486.673 440.118 475.427 440.118 475.427 cv
440.118 475.427 439.052 475.427 439.583 468.47 cv
cp
.27451 .207843 .145098 rgb
f
408.31 484.771 mo
403.649 484.771 387.567 484.083 376.337 475.212 cv
373.942 473.321 372.673 470.45 372.563 466.677 cv
372.341 459.095 377.106 448.755 383.423 443.146 cv
385.313 441.462 387.149 439.712 388.954 437.993 cv
395.849 431.431 401.806 425.759 408.544 425.759 cv
408.802 425.759 409.063 425.767 409.325 425.782 cv
414.884 426.138 417.696 429.614 423.036 436.817 cv
425.345 439.935 425.548 443.79 428.958 447.54 cv
438.423 457.95 437.255 468.364 437.22 468.474 cv
437.099 468.825 li
437.067 469.192 li
436.872 471.724 436.868 473.532 437.005 474.86 cv
429.524 478.36 414.544 484.771 408.31 484.771 cv
cp
1 .854902 .152941 rgb
f
528.103 641.915 mo
528.103 641.915 527.841 634.157 530.517 627.196 cv
533.192 620.235 533.997 617.021 539.88 613.544 cv
545.771 610.067 554.606 601.767 569.06 603.368 cv
569.06 603.368 560.497 600.966 553.54 603.634 cv
546.575 606.317 540.681 610.868 536.399 613.009 cv
532.118 615.146 524.892 628.798 524.892 636.032 cv
524.892 643.259 523.821 642.45 523.821 642.45 cv
523.821 642.45 527.841 644.052 528.103 641.915 cv
cp
.27451 .207843 .145098 rgb
f
513.646 636.032 mo
513.646 636.032 515.521 596.681 548.177 592.126 cv
580.837 587.579 599.04 610.603 602.528 618.36 cv
602.528 618.36 587.563 600.173 564.271 599.103 cv
540.985 598.036 526.771 609.103 513.646 636.032 cv
cp
1 1 .607843 rgb
f
629.021 528.411 mo
629.021 528.411 621.396 522.396 620.595 512.755 cv
619.794 503.118 615.376 491.876 615.376 491.876 cv
615.376 491.876 621.396 499.903 621.798 506.731 cv
622.196 513.556 629.021 528.411 629.021 528.411 cv
cp
.27451 .207843 .145098 rgb
f
562.497 805.634 mo
562.497 805.634 565.31 785.556 556.079 773.114 cv
546.845 760.653 537.2 752.626 530.38 749.813 cv
523.548 747.009 527.966 741.786 527.966 741.786 cv
527.966 741.786 537.2 745.399 551.657 747.813 cv
566.118 750.224 574.548 748.212 571.337 741.786 cv
568.122 735.36 566.915 730.134 568.931 728.134 cv
570.935 726.122 569.333 723.31 572.142 721.708 cv
574.954 720.106 574.149 708.856 581.376 706.056 cv
588.606 703.243 571.735 716.083 583.786 725.731 cv
595.829 735.36 582.177 735.36 593.825 739.376 cv
605.47 743.399 611.755 733.61 620.595 732.813 cv
629.427 732.001 631.97 735.36 631.97 735.36 cv
631.97 735.36 621.931 744.196 622.333 755.438 cv
622.731 766.681 619.923 773.505 625.544 782.345 cv
625.544 782.345 606.274 776.317 598.642 780.743 cv
591.013 785.157 589.407 787.958 580.173 790.771 cv
570.935 793.583 566.118 801.22 561.696 807.243 cv
561.485 807.517 561.302 807.774 561.142 807.997 cv
557.767 812.567 562.497 805.634 562.497 805.634 cv
cp
f
566.481 795.302 mo
566.146 787.985 564.505 778.349 559.001 770.938 cv
551.052 760.212 542.044 751.747 534.376 747.685 cv
538.532 748.868 544.22 750.263 551.063 751.407 cv
555.185 752.087 558.876 752.438 562.024 752.438 cv
568.622 752.438 572.751 750.938 574.649 747.86 cv
575.61 746.306 576.376 743.72 574.599 740.157 cv
571.497 733.962 571.423 731.083 571.657 730.497 cv
573.235 728.985 573.556 727.021 573.763 725.72 cv
573.821 725.392 573.896 724.938 573.954 724.813 cv
575.126 724.169 575.892 723.181 576.481 721.97 cv
577.317 724.22 578.884 726.474 581.513 728.571 cv
585.876 732.071 585.571 733.204 585.388 733.884 cv
583.923 739.325 588.165 741.278 592.634 742.821 cv
595.478 743.798 598.165 744.274 600.853 744.274 cv
605.481 744.274 609.267 742.821 612.606 741.54 cv
615.185 740.556 617.614 739.626 620.251 739.384 cv
621.657 739.267 622.907 739.157 624.021 739.091 cv
621.22 743.204 618.462 748.974 618.696 755.563 cv
618.806 758.642 618.661 761.368 618.524 764.001 cv
618.294 768.368 618.075 772.567 619.231 776.981 cv
615.524 776.2 610.938 775.478 606.704 775.478 cv
602.497 775.478 599.267 776.161 596.813 777.587 cv
594.208 779.091 592.274 780.431 590.571 781.603 cv
587.216 783.896 584.802 785.556 579.11 787.294 cv
573.751 788.923 569.735 791.931 566.481 795.302 cv
cp
1 .854902 .152941 rgb
f
567.724 793.985 mo
567.724 793.985 574.149 785.157 574.548 776.728 cv
574.954 768.29 576.962 769.493 578.962 762.665 cv
580.974 755.837 580.173 739.782 576.149 728.935 cv
576.149 728.935 580.575 749.013 576.556 757.048 cv
572.54 765.079 571.337 771.903 571.735 777.931 cv
572.142 783.954 567.724 793.985 567.724 793.985 cv
cp
.27451 .207843 .145098 rgb
f
619.923 776.317 mo
619.923 776.317 588.2 761.462 582.579 737.774 cv
582.579 737.774 587.001 738.173 590.208 745.399 cv
593.423 752.626 608.278 769.091 619.923 776.317 cv
cp
f
439.759 593.204 mo
439.759 593.204 443.239 569.646 459.837 558.399 cv
476.435 547.161 483.396 550.903 490.892 552.513 cv
498.388 554.118 511.767 561.88 516.056 569.646 cv
516.056 569.646 504.798 561.071 491.146 557.853 cv
477.493 554.642 466.942 559.29 456.771 569.728 cv
446.595 580.173 439.759 593.204 439.759 593.204 cv
cp
1 1 .607843 rgb
f
453.142 614.345 mo
453.142 614.345 455.556 606.72 456.356 597.079 cv
457.161 587.438 455.153 579.813 461.579 572.185 cv
468.001 564.552 482.458 554.919 503.337 566.165 cv
503.337 566.165 498.118 559.333 487.681 558.927 cv
477.239 558.532 470.013 558.532 463.985 565.356 cv
457.966 572.185 453.942 575.798 453.942 581.017 cv
453.942 586.239 453.544 593.868 451.54 601.493 cv
449.532 609.118 447.524 614.743 447.524 614.743 cv
453.142 614.345 li
cp
.27451 .207843 .145098 rgb
f
516.981 328.267 mo
516.981 328.267 536.149 317.438 534.899 284.103 cv
534.899 284.103 542.81 319.099 516.981 328.267 cv
cp
f
661.771 479.728 mo
661.771 479.728 669.716 479.571 672.528 475.958 cv
675.341 472.345 683.368 469.134 692.204 469.134 cv
701.032 469.134 701.438 467.927 703.45 465.118 cv
705.458 462.306 701.032 466.72 705.458 462.306 cv
709.872 457.888 708.669 455.481 711.884 453.474 cv
715.091 451.466 719.509 449.856 719.509 449.856 cv
719.509 449.856 720.31 454.681 723.524 453.474 cv
726.735 452.267 731.157 453.067 731.157 453.067 cv
731.157 453.067 730.751 467.532 727.942 473.95 cv
725.13 480.372 740.833 495.665 740.833 495.665 cv
740.833 495.665 725.931 496.837 717.501 504.063 cv
709.071 511.294 703.044 519.728 703.044 519.728 cv
703.044 519.728 705.856 504.063 696.626 495.235 cv
687.38 486.399 676.626 477.317 661.771 479.728 cv
cp
f
706.188 511.333 mo
705.798 505.669 704.079 498.442 698.583 493.185 cv
691.095 486.032 683.974 479.927 674.251 478.313 cv
674.427 478.118 674.603 477.911 674.763 477.7 cv
676.954 474.88 684.079 471.97 692.204 471.97 cv
700.778 471.97 702.841 470.88 705.481 467.153 cv
705.935 466.521 706.419 465.837 706.673 465.099 cv
706.892 464.876 707.157 464.614 707.458 464.313 cv
710.04 461.724 711.005 459.653 711.708 458.142 cv
712.29 456.896 712.509 456.427 713.388 455.876 cv
714.798 454.993 716.497 454.181 717.88 453.575 cv
718.88 455.267 720.446 456.501 722.54 456.501 cv
723.192 456.501 723.856 456.372 724.521 456.13 cv
725.364 455.813 726.532 455.642 727.884 455.642 cv
727.993 455.642 728.099 455.642 728.2 455.646 cv
727.903 460.591 727.087 468.825 725.345 472.813 cv
722.708 478.833 729.646 486.661 734.794 491.38 cv
729.646 493.345 721.419 496.974 715.657 501.911 cv
711.942 505.099 708.7 508.489 706.188 511.333 cv
cp
1 .854902 .152941 rgb
f
717.501 475.157 mo
717.501 475.157 711.884 469.532 713.884 463.11 cv
715.896 456.685 711.884 453.474 711.884 453.474 cv
719.509 449.856 li
719.509 449.856 724.329 451.868 721.118 459.493 cv
717.903 467.126 717.501 475.157 717.501 475.157 cv
cp
.27451 .207843 .145098 rgb
f
472.083 525.978 mo
472.083 525.978 474.896 532.228 482.396 535.353 cv
489.896 538.478 499.271 543.478 503.333 551.915 cv
503.333 551.915 499.896 549.103 493.958 545.353 cv
488.021 541.603 487.708 539.103 481.146 536.915 cv
474.583 534.728 472.083 530.978 472.083 525.978 cv
cp
f
440.431 476.364 mo
440.431 476.364 427.048 492.427 422.767 503.138 cv
418.478 513.841 419.556 520.935 419.556 520.935 cv
419.556 520.935 409.845 522.278 403.958 524.415 cv
398.063 526.556 389.583 535.665 389.583 535.665 cv
389.583 535.665 383.142 514.376 382.61 505.274 cv
382.071 496.173 373.513 492.966 371.364 485.47 cv
369.22 477.97 367.708 477.853 366.009 476.364 cv
358.978 470.2 353.161 468.868 353.161 468.868 cv
353.161 468.868 358.513 468.333 368.685 471.548 cv
378.86 474.759 384.751 473.149 386.892 466.731 cv
389.032 460.306 383.673 459.231 389.567 451.204 cv
395.462 443.169 398.669 430.317 398.669 430.317 cv
398.669 430.317 402.419 439.415 398.134 446.384 cv
393.853 453.341 390.103 459.767 395.989 464.048 cv
401.884 468.333 404.567 468.333 405.095 475.833 cv
405.634 483.321 413.661 480.646 419.017 478.501 cv
424.368 476.364 435.087 473.688 440.431 476.364 cv
cp
f
391.146 527.853 mo
390.481 523.462 385.794 511.173 385.442 505.11 cv
385.079 498.997 381.72 495.169 378.759 491.794 cv
376.747 489.505 374.853 487.341 374.091 484.688 cv
372.161 477.946 370.556 476.306 368.493 474.728 cv
368.313 474.587 368.126 474.446 367.942 474.29 cv
371.595 475.431 374.704 475.989 377.45 475.989 cv
383.556 475.989 387.759 473.099 389.583 467.63 cv
390.688 464.302 390.208 462.013 389.829 460.173 cv
389.442 458.337 389.173 457.044 390.888 454.298 cv
389.47 458.626 389.688 462.974 394.325 466.345 cv
395.524 467.22 396.599 467.923 397.556 468.548 cv
401.103 470.86 401.942 471.411 402.267 476.032 cv
402.614 480.853 405.521 483.614 410.247 483.614 cv
410.247 483.614 li
413.438 483.614 417.005 482.36 420.071 481.134 cv
423.88 479.61 429.813 478.079 434.478 478.079 cv
434.798 478.079 435.106 478.083 435.403 478.099 cv
431.149 483.532 423.329 494.095 420.134 502.083 cv
417.458 508.767 416.747 514.177 416.626 517.552 cv
414.782 517.29 412.415 517.052 409.993 517.052 cv
407.024 517.052 404.517 517.419 402.528 518.138 cv
398.544 519.587 395.196 526.431 391.146 527.853 cv
cp
1 .854902 .152941 rgb
f
394.388 467.794 mo
394.388 467.794 397.603 504.739 411.521 513.302 cv
411.521 513.302 399.978 508.474 396.771 497.228 cv
393.556 485.989 394.388 467.794 394.388 467.794 cv
cp
.27451 .207843 .145098 rgb
f
356.204 437.907 mo
356.204 437.907 372.915 450.505 369.896 472.853 cv
369.896 472.853 363.724 449.806 355.892 440.813 cv
348.075 431.813 356.204 437.907 356.204 437.907 cv
cp
f
437.614 794.392 mo
437.614 794.392 443.642 769.091 416.743 754.638 cv
416.743 754.638 423.161 756.642 425.974 754.235 cv
428.786 751.825 441.638 751.825 442.438 753.024 cv
443.239 754.235 442.438 751.825 444.048 746.2 cv
445.649 740.587 445.649 734.962 445.649 734.962 cv
445.649 734.962 446.853 737.774 439.228 738.571 cv
431.599 739.376 442.032 738.173 443.642 733.36 cv
445.251 728.532 449.267 728.532 451.673 733.759 cv
454.079 738.974 458.099 739.782 460.505 740.185 cv
462.919 740.587 462.118 743.399 462.919 747.411 cv
463.724 751.423 474.97 746.2 485.403 747.813 cv
495.845 749.415 497.45 753.024 503.876 752.228 cv
503.876 752.228 477.774 770.302 475.771 791.981 cv
475.771 791.981 464.923 790.771 460.911 793.985 cv
456.892 797.196 442.837 795.595 437.614 794.392 cv
cp
f
451.47 793.036 mo
447.634 793.036 443.63 792.587 440.798 792.118 cv
441.419 785.626 441.149 769.626 426.126 757.45 cv
426.755 757.165 427.321 756.813 427.813 756.384 cv
428.532 755.837 432.06 755.067 436.81 755.067 cv
438.72 755.067 439.931 755.204 440.548 755.302 cv
440.923 755.868 li
442.728 756.173 li
443.97 756.173 445.497 755.548 445.751 752.595 cv
445.845 751.501 446.001 749.677 446.771 746.981 cv
448.032 742.556 448.368 738.212 448.454 736.017 cv
445.778 735.497 li
446.001 735.106 446.185 734.688 446.329 734.259 cv
446.731 733.056 447.212 732.657 447.317 732.618 cv
447.431 732.646 448.255 733.103 449.099 734.938 cv
451.989 741.22 456.954 742.438 459.521 742.892 cv
459.583 743.298 459.634 743.884 459.673 744.353 cv
459.763 745.407 459.872 746.618 460.142 747.97 cv
460.427 749.392 461.571 751.798 466.001 751.798 cv
467.649 751.798 469.599 751.513 471.86 751.188 cv
474.638 750.79 477.786 750.329 480.962 750.329 cv
482.415 750.329 483.724 750.419 484.97 750.614 cv
489.524 751.317 492.212 752.392 494.583 753.349 cv
495.31 753.642 496.024 753.935 496.755 754.188 cv
489.134 760.626 476.048 773.634 473.317 788.974 cv
472.673 788.946 471.942 788.923 471.165 788.923 cv
465.544 788.923 461.501 789.884 459.138 791.774 cv
458.876 791.981 457.263 793.036 451.47 793.036 cv
cp
1 .854902 .152941 rgb
f
417.411 755.837 mo
417.411 755.837 400.81 735.509 386.892 739.782 cv
372.978 744.063 369.22 751.024 362.802 747.813 cv
356.376 744.599 347.274 747.274 346.2 734.97 cv
346.2 734.97 342.454 747.813 349.95 748.349 cv
357.438 748.884 362.806 748.349 368.153 753.165 cv
373.505 757.978 378.329 760.665 387.958 757.45 cv
397.603 754.235 409.376 753.7 417.411 755.837 cv
cp
.27451 .207843 .145098 rgb
f
461.981 742.86 mo
461.981 742.86 456.563 741.61 452.813 735.36 cv
449.063 729.11 447.399 728.7 445.313 732.86 cv
443.231 737.032 440.313 738.271 430.313 738.688 cv
430.313 738.688 442.81 741.61 446.981 739.938 cv
451.149 738.282 458.646 740.36 461.981 742.86 cv
cp
f
455.313 749.532 mo
455.313 749.532 461.149 752.438 462.813 764.532 cv
464.481 776.61 473.317 788.974 473.317 788.974 cv
473.317 788.974 471.563 777.438 467.813 770.782 cv
464.063 764.11 464.481 752.032 455.313 749.532 cv
cp
f
390.638 657.06 mo
390.638 657.06 390.208 646.103 395.056 637.384 cv
404.06 621.2 408.126 612.274 416.56 607.45 cv
424.993 602.626 436.048 610.876 444.481 613.688 cv
452.915 616.493 458.505 625.743 459.704 635.368 cv
460.911 645.017 463.724 657.06 463.724 657.06 cv
463.724 657.06 452.88 665.485 432.399 665.888 cv
411.923 666.298 390.638 657.06 390.638 657.06 cv
cp
f
431.083 663.063 mo
414.919 663.063 398.274 657.04 393.271 655.079 cv
393.024 651.853 392.978 644.259 397.224 639.208 cv
399.337 636.696 401.571 633.505 403.931 630.134 cv
408.712 623.282 414.138 615.517 419.349 612.54 cv
421.126 611.524 422.864 611.024 424.661 611.024 cv
427.669 611.024 430.681 612.36 434.169 613.896 cv
436.142 614.767 438.177 615.665 440.337 616.384 cv
447.435 618.751 455.778 626.813 456.892 635.72 cv
457.829 643.212 459.681 651.962 460.524 655.782 cv
457.048 657.892 447.411 662.763 432.345 663.056 cv
431.083 663.063 li
cp
1 .854902 .152941 rgb
f
369.481 610.36 mo
369.481 610.36 375.313 610.782 376.563 622.86 cv
377.813 634.938 385.243 647.528 389.86 653.728 cv
389.86 653.728 379.899 648.688 376.563 638.271 cv
373.231 627.86 376.146 616.61 369.481 610.36 cv
cp
.27451 .207843 .145098 rgb
f
427.813 701.188 mo
427.813 701.188 425.731 684.11 414.481 675.771 cv
403.231 667.438 399.481 661.188 395.731 658.271 cv
391.981 655.36 389.86 653.728 389.86 653.728 cv
389.86 653.728 399.063 650.782 404.063 654.11 cv
409.063 657.438 411.571 661.188 414.899 657.021 cv
418.231 652.86 412.813 651.188 417.813 644.521 cv
422.813 637.86 433.231 631.188 433.231 631.188 cv
433.231 631.188 424.485 647.86 429.899 653.271 cv
435.313 658.688 437.399 658.688 442.813 657.86 cv
448.231 657.021 463.649 654.938 463.649 654.938 cv
463.649 654.938 461.146 667.438 460.731 672.438 cv
460.313 677.438 456.892 699.618 456.892 699.618 cv
456.892 699.618 448.231 697.021 427.813 701.188 cv
cp
f
430.106 697.86 mo
428.931 692.294 425.419 680.353 416.169 673.493 cv
409.114 668.271 405.075 663.856 402.126 660.642 cv
400.368 658.728 398.981 657.216 397.47 656.032 cv
396.634 655.392 li
396.966 655.368 397.306 655.36 397.649 655.36 cv
399.728 655.36 401.403 655.743 402.493 656.462 cv
403.509 657.149 404.415 657.841 405.247 658.478 cv
407.501 660.204 409.45 661.696 411.892 661.696 cv
413.817 661.696 415.575 660.72 417.11 658.798 cv
419.423 655.907 418.958 653.485 418.618 651.72 cv
418.306 650.087 418.075 648.907 420.079 646.22 cv
421.821 643.907 424.306 641.563 426.731 639.532 cv
425.032 645.106 424.243 651.618 427.899 655.274 cv
432.188 659.571 435.067 661.095 438.884 661.095 cv
440.165 661.095 441.454 660.938 443.243 660.665 cv
446.915 660.095 455.185 658.954 460.114 658.282 cv
459.333 662.431 458.181 668.845 457.903 672.204 cv
457.591 675.985 455.462 690.173 454.528 696.317 cv
453.032 696.142 450.989 695.985 448.353 695.985 cv
442.981 695.985 436.853 696.61 430.106 697.86 cv
cp
1 .854902 .152941 rgb
f
426.981 660.36 mo
426.981 660.36 435.735 666.61 438.649 674.11 cv
441.563 681.61 457.399 697.438 457.399 697.438 cv
457.399 697.438 445.731 694.938 440.731 684.521 cv
435.731 674.11 436.981 671.188 426.981 660.36 cv
cp
.27451 .207843 .145098 rgb
f
390.313 713.688 mo
390.313 713.688 398.235 714.938 399.899 730.771 cv
401.563 746.61 415.731 752.86 415.731 752.86 cv
415.731 752.86 405.31 741.603 404.481 733.688 cv
403.649 725.771 400.731 716.188 390.313 713.688 cv
cp
f
336.634 497.13 mo
336.634 497.13 334.61 510.188 346.267 514.614 cv
352.692 517.052 358.313 513.802 358.313 513.802 cv
358.313 513.802 359.329 519.075 346.669 518.274 cv
340.247 517.872 332.216 515.841 336.634 497.13 cv
cp
f
377.255 785.821 mo
377.255 785.821 378.329 769.228 383.681 761.728 cv
389.032 754.235 406.165 749.415 418.747 755.837 cv
431.325 762.267 440.427 781.005 439.364 795.47 cv
438.29 809.923 453.817 808.845 439.364 814.735 cv
424.907 820.626 416.337 822.235 416.337 822.235 cv
416.337 822.235 420.087 799.743 404.56 800.282 cv
389.032 800.821 377.255 785.821 377.255 785.821 cv
cp
1 .854902 .152941 rgb
f
492.376 849.532 mo
492.376 849.532 484.735 839.938 483.462 829.532 cv
482.188 819.11 479.212 813.271 474.544 806.188 cv
469.88 799.11 471.169 791.423 471.169 791.423 cv
471.169 791.423 477.524 798.282 487.708 803.282 cv
497.899 808.282 501.716 806.61 506.384 804.938 cv
511.056 803.282 508.509 797.86 515.302 795.36 cv
522.099 792.86 525.911 782.45 525.493 777.86 cv
525.067 773.282 520.821 768.688 520.821 768.688 cv
520.821 768.688 531.438 772.438 532.708 783.282 cv
533.981 794.11 528.04 799.938 532.29 803.688 cv
536.532 807.438 540.774 808.282 548.415 807.86 cv
556.056 807.438 566.243 802.032 566.243 802.032 cv
566.243 802.032 559.45 813.7 562.423 825.36 cv
565.399 837.032 572.188 849.95 572.188 849.95 cv
572.188 849.95 550.54 856.61 541.626 854.11 cv
532.708 851.61 534.833 849.11 523.372 851.188 cv
511.907 853.282 509.782 855.782 500.872 850.36 cv
496.985 847.997 495.677 852.782 492.376 849.532 cv
cp
.27451 .207843 .145098 rgb
f
546.665 851.837 mo
544.915 851.837 543.489 851.688 542.415 851.384 cv
539.794 850.653 538.243 849.931 536.884 849.298 cv
534.907 848.376 533.192 847.587 530.013 847.587 cv
528.212 847.587 525.931 847.841 522.845 848.407 cv
519.024 849.103 515.501 849.454 512.356 849.454 cv
508.294 849.454 504.884 848.884 501.946 847.735 cv
500.884 847.313 499.868 847.11 498.837 847.11 cv
497.435 847.11 496.36 847.489 495.575 847.774 cv
495.364 847.853 495.071 847.946 494.923 847.985 cv
494.911 847.946 494.72 847.821 494.427 847.54 cv
494.427 847.54 li
494.454 847.54 487.474 838.583 486.325 829.188 cv
485.024 818.517 482.032 812.333 476.97 804.657 cv
475.497 802.423 474.704 800.118 474.298 798.087 cv
477.263 800.458 481.392 803.349 486.419 805.81 cv
491.47 808.29 495.501 809.442 499.114 809.442 cv
502.251 809.442 504.622 808.595 506.907 807.774 cv
510.7 806.423 511.747 803.896 512.513 802.048 cv
513.282 800.173 513.79 798.946 516.317 798.017 cv
524.075 795.165 528.243 784.704 528.399 778.868 cv
529.103 780.224 529.634 781.798 529.837 783.603 cv
530.376 788.153 529.505 791.681 528.743 794.794 cv
527.798 798.673 526.81 802.665 530.353 805.798 cv
534.423 809.392 538.579 810.798 545.157 810.798 cv
546.224 810.798 547.36 810.759 548.579 810.692 cv
552.571 810.478 557.087 809.063 560.716 807.634 cv
559.142 812.462 557.88 819.208 559.622 826.056 cv
561.79 834.56 565.856 843.563 568.079 848.165 cv
563.134 849.509 553.54 851.837 546.665 851.837 cv
cp
1 .854902 .152941 rgb
f
327.407 576.431 mo
327.407 576.431 328.603 589.853 344.661 587.001 cv
344.661 587.001 340.649 590.665 335.032 591.071 cv
329.411 591.485 327.407 585.782 327.407 576.431 cv
cp
.27451 .207843 .145098 rgb
f
605.341 814.196 mo
605.341 814.196 609.091 828.126 618.72 822.774 cv
628.36 817.411 645.493 811.524 645.493 811.524 cv
645.493 811.524 648.173 832.938 633.177 840.438 cv
618.188 847.931 611.755 845.79 608.017 848.466 cv
604.267 851.149 590.306 850.653 579.063 851.188 cv
567.825 851.728 564.11 835.087 564.11 832.399 cv
564.11 829.728 578.024 839.364 590.341 832.938 cv
602.657 826.524 605.341 814.196 605.341 814.196 cv
cp
f
578.54 848.368 mo
575.079 848.368 572.134 846.056 569.782 841.493 cv
568.704 839.403 567.981 837.255 567.536 835.556 cv
570.712 836.552 575.458 838.024 580.7 838.024 cv
580.7 838.024 580.7 838.024 580.704 838.024 cv
584.696 838.024 588.376 837.165 591.653 835.458 cv
599.056 831.591 603.271 825.829 605.579 821.368 cv
607.474 824.181 610.36 826.825 614.509 826.825 cv
616.325 826.825 618.204 826.298 620.095 825.243 cv
626.782 821.532 637.341 817.489 642.829 815.485 cv
642.802 821.446 641.446 833.134 631.907 837.899 cv
623.153 842.274 617.579 843.204 613.513 843.876 cv
610.638 844.353 608.36 844.735 606.364 846.161 cv
604.235 847.685 594.548 847.919 587.474 848.095 cv
584.587 848.165 581.677 848.231 578.931 848.36 cv
578.54 848.368 li
cp
1 .854902 .152941 rgb
f
525.587 810.095 mo
525.587 810.095 531.56 822.032 540.731 825.782 cv
549.899 829.532 551.563 837.032 566.282 845.665 cv
566.282 845.665 560.731 844.95 553.231 840.368 cv
545.731 835.782 544.896 832.45 538.231 829.118 cv
531.563 825.782 525.446 818.165 525.587 810.095 cv
cp
.27451 .207843 .145098 rgb
f
655.263 629.353 mo
655.263 629.353 651.649 620.915 651.649 610.478 cv
651.649 600.04 657.673 587.188 669.716 575.548 cv
681.759 563.899 693.813 563.091 703.45 564.704 cv
713.083 566.31 727.942 580.759 725.13 602.45 cv
718.306 610.079 li
718.306 610.079 714.29 619.313 695.415 625.743 cv
676.54 632.165 655.263 629.353 655.263 629.353 cv
cp
f
666.771 627.126 mo
662.556 627.126 659.188 626.892 657.298 626.72 cv
656.337 623.946 654.485 617.673 654.485 610.478 cv
654.485 600.29 660.915 587.997 671.688 577.583 cv
679.11 570.403 687.146 566.911 696.251 566.911 cv
698.415 566.911 700.618 567.106 702.981 567.501 cv
711.005 568.841 724.54 581.563 722.419 601.228 cv
715.888 608.532 li
715.704 608.954 li
715.681 609.001 711.688 617.204 694.501 623.056 cv
684.61 626.423 673.962 627.126 666.771 627.126 cv
cp
1 .854902 .152941 rgb
f
733.298 689.454 mo
733.298 689.454 735.438 663.759 707.595 659.47 cv
707.595 659.47 716.704 656.798 721.517 651.446 cv
726.341 646.095 730.087 643.407 734.899 639.657 cv
739.724 635.907 741.868 639.657 740.794 633.767 cv
739.724 627.88 739.188 618.243 741.329 613.954 cv
741.329 613.954 740.263 624.142 745.614 625.743 cv
750.966 627.345 747.751 638.056 753.114 634.845 cv
758.466 631.63 760.603 625.204 764.884 621.454 cv
769.169 617.712 774.392 612.743 774.392 612.743 cv
774.392 612.743 770.782 625.743 768.103 635.38 cv
765.419 645.017 761.673 664.821 754.177 672.853 cv
746.681 680.888 733.298 689.454 733.298 689.454 cv
cp
.27451 .207843 .145098 rgb
f
735.892 684.286 mo
734.989 677.021 731.239 664.384 716.38 658.806 cv
718.915 657.423 721.587 655.603 723.626 653.337 cv
727.712 648.798 730.927 646.317 734.989 643.173 cv
736.642 641.892 li
738.056 640.798 739.056 640.603 739.938 640.438 cv
744.36 639.599 744.165 636.435 743.583 633.259 cv
743.267 631.501 743.021 629.548 742.868 627.567 cv
743.438 627.938 744.079 628.243 744.798 628.454 cv
745.673 628.72 746.079 630.302 746.513 632.345 cv
746.985 634.56 747.782 638.282 751.431 638.282 cv
752.419 638.282 753.446 637.946 754.567 637.274 cv
758.181 635.106 760.485 631.767 762.524 628.829 cv
763.899 626.837 765.204 624.95 766.751 623.595 cv
767.485 622.946 768.235 622.282 768.985 621.603 cv
765.376 634.618 li
764.88 636.384 764.349 638.505 763.767 640.821 cv
761.364 650.399 757.735 664.884 752.106 670.915 cv
747.458 675.899 740.353 681.173 735.892 684.286 cv
cp
1 .854902 .152941 rgb
f
745.075 725.86 mo
745.075 725.86 730.548 733.024 725.731 726.603 cv
723.138 723.142 727.798 712.782 730.731 702.021 cv
733.259 692.751 733.528 682.892 738.231 680.353 cv
748.411 674.86 747.759 677.673 748.825 670.712 cv
749.896 663.751 748.282 667.501 754.177 656.259 cv
760.071 645.017 759.532 640.731 761.142 637.517 cv
762.743 634.306 769.833 622.384 771.981 620.771 cv
774.126 619.169 778.649 608.271 778.649 608.271 cv
778.649 608.271 779.091 632.501 774.271 641.603 cv
768.31 652.86 768.646 672.853 759.899 686.188 cv
753.595 695.798 755.251 716.759 745.075 725.86 cv
cp
.27451 .207843 .145098 rgb
f
732.274 726.446 mo
729.153 726.446 728.282 725.282 727.997 724.899 cv
726.985 723.524 729.415 715.888 730.872 711.329 cv
731.747 708.583 732.669 705.692 733.466 702.763 cv
734.212 700.04 734.763 697.255 735.29 694.618 cv
736.325 689.415 737.399 684.024 739.579 682.853 cv
742.337 681.356 744.274 680.509 745.657 679.892 cv
750.29 677.841 750.755 676.845 751.556 671.618 cv
751.853 669.665 751.966 668.649 752.056 667.868 cv
752.259 665.954 752.259 665.954 754.806 661.142 cv
756.688 657.579 li
760.751 649.821 761.903 645.146 762.669 642.048 cv
763.021 640.626 763.274 639.587 763.673 638.778 cv
765.618 634.899 772.157 624.306 773.7 623.024 cv
774.243 622.618 774.841 621.915 775.458 621.005 cv
774.97 628.251 773.903 636.228 771.767 640.274 cv
768.974 645.548 767.532 652.321 766.005 659.501 cv
764.114 668.388 762.161 677.579 757.532 684.638 cv
754.595 689.11 753.306 695.36 751.938 701.97 cv
750.231 710.224 748.47 718.759 743.478 723.485 cv
742.079 724.118 736.712 726.446 732.274 726.446 cv
cp
1 .854902 .152941 rgb
f
652.813 628.271 mo
652.813 628.271 654.481 627.021 669.063 627.021 cv
683.649 627.021 687.813 626.603 689.063 619.521 cv
690.313 612.438 689.899 606.603 696.563 603.271 cv
703.231 599.938 708.231 591.188 708.231 591.188 cv
708.231 591.188 708.231 601.181 705.731 605.771 cv
703.231 610.353 706.146 616.188 710.731 614.103 cv
715.313 612.021 726.563 603.271 726.563 603.271 cv
726.563 603.271 714.071 623.271 712.399 635.353 cv
710.731 647.438 716.696 661.884 716.696 661.884 cv
716.696 661.884 706.56 655.771 693.231 664.103 cv
679.899 672.438 676.149 683.688 676.149 683.688 cv
676.149 683.688 680.313 650.771 652.813 628.271 cv
cp
.27451 .207843 .145098 rgb
f
679.001 673.134 mo
678.103 662.118 674.099 644.728 659.149 630.126 cv
661.399 629.97 664.587 629.853 669.063 629.853 cv
682.642 629.853 690.118 629.853 691.86 620.009 cv
692.071 618.798 692.239 617.618 692.399 616.485 cv
693.216 610.692 693.79 607.821 697.829 605.798 cv
700.31 604.571 702.556 602.704 704.45 600.759 cv
704.149 602.188 703.751 603.478 703.239 604.415 cv
701.575 607.47 701.56 611.228 703.204 614.001 cv
704.478 616.142 706.54 617.372 708.868 617.372 cv
709.876 617.372 710.896 617.138 711.903 616.681 cv
713.423 615.993 715.521 614.696 717.712 613.22 cv
714.243 619.989 710.493 628.454 709.595 634.97 cv
708.485 642.978 710.458 651.774 712.134 657.345 cv
710.751 657.071 709.165 656.884 707.407 656.884 cv
702.11 656.884 696.837 658.505 691.728 661.696 cv
685.927 665.329 681.829 669.47 679.001 673.134 cv
cp
1 .854902 .152941 rgb
f
707.462 553.458 mo
707.462 553.458 697.966 536.86 705.458 520.267 cv
712.954 503.669 721.497 496.638 729.063 492.853 cv
732.396 491.188 739.13 492.149 744.481 499.103 cv
749.837 506.067 760.067 530.446 754.177 535.794 cv
748.29 541.146 735.438 548.646 729.017 551.856 cv
722.595 555.071 707.462 553.458 707.462 553.458 cv
cp
.27451 .207843 .145098 rgb
f
715.853 551.028 mo
713.177 551.028 710.767 550.884 709.286 550.774 cv
707.399 546.755 702.392 533.95 708.04 521.431 cv
715.829 504.185 724.493 498.306 730.337 495.388 cv
730.86 495.122 731.599 494.981 732.415 494.981 cv
733.661 494.981 738.056 495.403 742.235 500.833 cv
748.618 509.126 755.794 530.501 752.274 533.692 cv
746.907 538.567 734.583 545.899 727.747 549.321 cv
725.548 550.423 721.325 551.028 715.853 551.028 cv
cp
1 .854902 .152941 rgb
f
706.524 551.321 mo
717.552 547.032 724.196 550.247 727.411 545.962 cv
730.622 541.681 731.981 536.013 739.481 534.938 cv
746.97 533.868 761.149 510.353 761.149 510.353 cv
761.149 510.353 753.356 539.153 755.313 556.188 cv
756.028 562.407 756.317 567.044 755.251 572.2 cv
750.731 594.103 762.813 601.188 745.731 594.938 cv
734.259 590.743 723.134 605.392 723.134 605.392 cv
723.134 605.392 723.935 584.196 716.165 574.876 cv
704.063 560.353 686.185 566.849 686.185 566.849 cv
686.185 566.849 696.892 555.071 706.524 551.321 cv
cp
.27451 .207843 .145098 rgb
f
725.837 598.446 mo
725.399 591.044 723.802 579.618 718.345 573.06 cv
711.118 564.388 702.017 562.563 695.653 562.563 cv
695.313 562.563 694.989 562.571 694.661 562.579 cv
698.353 559.337 703.122 555.685 707.556 553.962 cv
712.454 552.056 716.474 551.743 719.7 551.501 cv
723.579 551.196 727.235 550.919 729.677 547.661 cv
730.481 546.599 731.181 545.45 731.872 544.298 cv
733.946 540.86 735.454 538.38 739.88 537.747 cv
744.462 537.091 750.235 530.872 755.048 524.505 cv
753.173 534.313 751.407 547.036 752.497 556.509 cv
753.231 562.907 753.431 567.005 752.474 571.626 cv
750.54 581.005 751.509 587.919 752.087 592.048 cv
752.181 592.724 752.29 593.478 752.353 594.103 cv
750.599 593.7 747.884 592.704 746.704 592.274 cv
745.024 591.657 743.255 591.345 741.458 591.345 cv
735.228 591.345 729.622 595.079 725.837 598.446 cv
cp
1 .854902 .152941 rgb
f
709.481 718.688 mo
709.481 718.688 707.821 728.271 703.649 735.771 cv
699.481 743.271 694.755 764.149 694.755 764.149 cv
694.755 764.149 698.649 757.86 702.399 747.438 cv
706.149 737.021 710.31 727.86 709.481 718.688 cv
cp
.27451 .207843 .145098 rgb
f
694.501 623.056 mo
694.501 623.056 692.81 630.771 688.231 640.353 cv
683.649 649.938 678.646 668.271 678.231 674.938 cv
677.813 681.603 681.571 664.11 686.149 653.688 cv
690.731 643.271 694.501 623.056 694.501 623.056 cv
cp
f
737.813 553.267 mo
737.813 553.267 732.399 561.599 731.563 569.935 cv
730.731 578.271 724.063 599.521 724.063 599.521 cv
724.063 599.521 731.517 597.724 732.399 579.931 cv
733.231 563.267 737.813 553.267 737.813 553.267 cv
cp
f
678.649 537.435 mo
673.649 547.853 li
673.649 547.853 674.063 566.185 670.313 572.017 cv
666.563 577.853 672.399 573.688 675.313 559.103 cv
678.231 544.517 678.649 537.435 678.649 537.435 cv
cp
f
657.267 389.626 mo
657.267 389.626 656.063 379.981 652.45 376.778 cv
648.837 373.56 648.036 368.341 646.829 360.708 cv
645.622 353.083 648.036 334.61 658.474 338.224 cv
668.915 341.837 676.946 350.274 683.774 353.489 cv
690.599 356.7 703.044 366.329 701.845 381.993 cv
701.845 381.993 691.798 388.021 683.774 389.22 cv
675.739 390.427 657.267 389.626 657.267 389.626 cv
cp
f
669.935 387.052 mo
665.856 387.052 662.024 386.954 659.696 386.876 cv
659.04 383.47 657.489 377.458 654.329 374.661 cv
651.509 372.142 650.771 367.485 649.657 360.442 cv
648.86 355.411 649.837 345.915 653.114 342.075 cv
654.251 340.747 655.259 340.599 655.915 340.599 cv
656.407 340.599 656.954 340.7 657.548 340.903 cv
663.431 342.942 668.673 346.739 673.298 350.091 cv
676.54 352.438 679.603 354.661 682.567 356.052 cv
688.931 359.048 699.282 367.438 699.087 380.306 cv
696.208 381.892 689.103 385.56 683.353 386.419 cv
680.587 386.833 675.946 387.052 669.935 387.052 cv
cp
1 .854902 .152941 rgb
f
639.997 390.032 mo
639.997 390.032 648.036 390.032 655.661 387.22 cv
663.294 384.407 666.907 384.407 670.923 384.806 cv
674.938 385.208 678.954 388.021 679.353 383.2 cv
679.755 378.38 680.563 375.169 683.774 372.356 cv
686.985 369.548 688.993 362.72 688.993 362.72 cv
688.993 362.72 694.61 367.942 691.001 373.966 cv
687.38 379.981 688.993 383.2 693.005 381.192 cv
697.024 379.181 702.243 373.165 702.243 373.165 cv
702.243 373.165 706.259 383.599 705.056 389.626 cv
703.845 395.646 714.583 417.052 711.771 420.665 cv
708.962 424.282 704.462 418.474 698.626 419.743 cv
688.646 421.915 680.833 432.228 680.833 432.228 cv
680.833 432.228 675.966 416.423 668.333 411.603 cv
660.704 406.782 657.04 405.88 653.021 400.665 cv
649.013 395.446 639.997 390.032 639.997 390.032 cv
cp
.27451 .207843 .145098 rgb
f
682.708 425.665 mo
680.142 421.802 674.751 412.649 668.646 408.79 cv
661.458 404.251 658.806 403.239 654.896 398.165 cv
653.54 396.399 653.079 392.692 651.106 391.501 cv
652.899 391.095 654.778 390.567 656.642 389.88 cv
662.446 387.739 665.446 387.454 667.618 387.454 cv
668.657 387.454 669.634 387.524 670.638 387.63 cv
671.56 387.716 672.474 387.966 673.337 388.188 cv
674.587 388.513 675.771 388.821 676.97 388.821 cv
678.083 388.821 681.767 388.431 682.181 383.435 cv
682.587 378.548 683.392 376.458 685.642 374.489 cv
687.149 373.169 688.392 371.247 689.36 369.376 cv
689.423 370.349 689.228 371.411 688.567 372.505 cv
686.11 376.599 685.505 379.993 686.829 382.325 cv
687.653 383.786 689.134 384.626 690.896 384.626 cv
691.946 384.626 693.083 384.321 694.274 383.728 cv
696.571 382.579 699.071 380.435 701.013 378.556 cv
701.97 381.978 702.829 386.302 702.278 389.067 cv
701.532 392.774 703.505 397.751 705.595 403.021 cv
706.759 405.958 709.657 415.942 709.271 417.228 cv
707.79 419.087 704.954 414.7 701.161 415.915 cv
700.087 416.255 698.931 416.626 697.673 417.071 cv
693.556 418.54 686.056 423.981 682.708 425.665 cv
cp
1 .854902 .152941 rgb
f
621.146 438.478 mo
621.146 438.478 618.333 422.54 623.646 413.79 cv
628.958 405.04 634.583 402.228 640.208 402.54 cv
645.833 402.853 650.833 405.353 650.833 405.353 cv
650.833 405.353 647.708 401.603 640.833 401.29 cv
633.958 400.978 627.708 404.728 625.521 407.54 cv
623.333 410.353 615.833 423.79 621.146 438.478 cv
cp
.27451 .207843 .145098 rgb
f
648.646 528.79 mo
648.646 528.79 648.333 510.978 653.646 501.915 cv
658.958 492.853 664.271 491.915 669.583 488.79 cv
674.896 485.665 688.333 491.603 688.333 491.603 cv
688.333 491.603 680.833 485.978 672.708 485.978 cv
664.583 485.978 665.521 489.103 660.521 492.228 cv
655.521 495.353 645.521 501.603 648.646 528.79 cv
cp
f
498.021 459.728 mo
498.021 459.728 495.521 449.728 501.146 446.29 cv
506.771 442.853 507.083 442.228 510.833 437.228 cv
514.583 432.228 525.833 426.915 537.708 432.54 cv
549.583 438.165 550.833 437.853 550.833 437.853 cv
550.833 437.853 543.333 433.79 539.271 431.603 cv
535.208 429.415 527.708 427.228 520.521 429.415 cv
513.333 431.603 509.896 436.29 506.458 439.103 cv
503.021 441.915 492.708 447.54 498.021 459.728 cv
cp
f
736.146 594.103 mo
736.146 594.103 747.396 592.228 748.646 579.103 cv
749.896 565.978 746.771 562.228 753.021 559.728 cv
759.271 557.228 768.685 553.692 773.04 545.774 cv
777.396 537.853 780.813 533.497 780.813 533.497 cv
780.813 533.497 781.146 555.978 778.021 562.853 cv
774.896 569.728 775.521 577.228 776.146 584.728 cv
776.771 592.228 772.396 596.603 771.771 604.103 cv
771.146 611.603 773.646 614.728 773.646 614.728 cv
751.146 635.978 li
751.146 635.978 761.771 595.978 736.146 594.103 cv
cp
f
755.521 632.646 mo
756.61 624.313 756.927 607.228 751.185 599.169 cv
749.345 596.591 747.04 594.626 744.286 593.29 cv
747.712 590.556 750.821 586.122 751.47 579.376 cv
751.892 574.923 751.829 571.442 751.786 568.903 cv
751.681 563.317 751.864 563.243 754.075 562.36 cv
754.72 562.103 li
761.134 559.544 770.829 555.681 775.524 547.142 cv
776.341 545.649 777.126 544.294 777.86 543.067 cv
777.61 550.118 776.954 558.345 775.442 561.681 cv
772.009 569.224 772.673 577.228 773.317 584.962 cv
773.618 588.505 772.587 591.251 771.399 594.423 cv
770.392 597.11 769.255 600.146 768.942 603.868 cv
768.54 608.767 769.505 613.544 770.31 615.556 cv
755.521 632.646 li
cp
1 .854902 .152941 rgb
f
744.06 643.056 mo
742.606 653.478 li
742.606 653.478 745.731 656.181 741.146 663.896 cv
736.56 671.603 735.935 683.056 735.935 683.056 cv
735.935 683.056 734.688 669.313 736.981 665.353 cv
739.271 661.396 739.899 661.396 740.731 657.021 cv
741.56 652.646 742.392 644.728 744.06 643.056 cv
cp
.27451 .207843 .145098 rgb
f
481.146 809.938 mo
481.146 809.938 472.06 797.353 475.771 791.981 cv
479.481 786.61 476.981 778.282 466.146 781.61 cv
455.31 784.938 455.31 783.271 442.81 779.938 cv
430.31 776.61 422.81 784.95 410.31 784.11 cv
397.81 783.282 388.493 781.54 388.493 781.54 cv
388.493 781.54 396.142 792.438 420.31 793.282 cv
444.481 794.11 445.313 797.45 451.981 801.61 cv
458.646 805.782 476.981 810.771 481.146 809.938 cv
cp
f
511.771 850.665 mo
511.771 850.665 506.981 838.282 506.981 829.11 cv
506.981 819.938 489.091 812.899 481.786 806.837 cv
474.481 800.782 435.31 791.61 426.146 793.282 cv
416.981 794.938 398.646 811.61 421.146 825.782 cv
443.646 839.938 459.478 844.938 465.31 845.782 cv
471.146 846.61 473.134 842.978 482.396 848.478 cv
491.657 853.974 511.771 850.665 511.771 850.665 cv
cp
f
492.899 846.552 mo
488.517 846.552 485.157 845.876 482.915 844.54 cv
479.563 842.548 476.692 841.618 473.876 841.618 cv
471.907 841.618 470.31 842.079 468.903 842.478 cv
467.747 842.813 466.751 843.095 465.677 843.095 cv
465.388 843.095 465.095 843.075 464.782 843.024 cv
459.149 842.228 443.899 837.255 422.489 823.759 cv
415.478 819.337 416.005 814.181 416.981 809.11 cv
418.212 802.751 422.044 797.696 426.419 796.892 cv
427.009 796.786 427.767 796.747 428.657 796.747 cv
441.278 796.747 473.138 804.938 478.798 809.638 cv
481.079 811.524 484.192 813.427 487.489 815.438 cv
494.196 819.521 502.54 824.61 502.54 829.392 cv
502.54 835.603 504.489 841.513 505.923 845.017 cv
502.786 845.681 497.782 846.552 492.899 846.552 cv
492.899 846.552 li
cp
1 .854902 .152941 rgb
f
436.146 829.938 mo
436.146 829.938 422.579 813.7 439.364 814.735 cv
456.146 815.782 456.981 818.282 461.981 815.782 cv
466.981 813.282 487.81 821.61 490.31 836.61 cv
490.31 836.61 474.481 819.11 466.146 819.938 cv
457.81 820.782 453.747 819.259 444.481 818.282 cv
428.646 816.61 438.688 835.47 438.688 835.47 cv
436.146 829.938 li
cp
.27451 .207843 .145098 rgb
f
375.466 665.946 mo
375.466 665.946 362.813 670.782 356.981 686.61 cv
351.146 702.438 351.142 708.282 360.31 715.782 cv
360.31 715.782 353.642 701.61 340.31 702.438 cv
326.981 703.282 321.146 699.938 321.146 699.938 cv
321.146 699.938 329.481 690.782 324.481 675.782 cv
319.481 660.782 309.333 649.884 307.81 629.11 cv
307.81 629.11 319.481 642.45 324.481 649.11 cv
329.481 655.782 332.81 662.438 333.646 654.938 cv
334.481 647.438 330.31 641.61 333.646 638.282 cv
336.981 634.938 329.481 619.11 329.481 619.11 cv
329.481 619.11 337.81 622.438 340.31 634.938 cv
342.81 647.438 337.81 650.771 348.646 657.438 cv
359.481 664.11 368.954 661.954 375.466 665.946 cv
cp
f
350.157 701.552 mo
347.399 700.235 344.485 699.571 341.438 699.571 cv
341.009 699.571 340.575 699.587 340.134 699.618 cv
338.712 699.704 337.38 699.743 336.134 699.743 cv
331.243 699.743 327.747 699.118 325.524 698.524 cv
327.927 694.235 330.872 685.993 327.173 674.884 cv
325.462 669.755 323.688 665.966 322.126 662.626 cv
319.595 657.196 317.485 652.696 316.243 644.196 cv
318.173 646.032 320.337 648.31 322.216 650.81 cv
323.11 652.009 323.946 653.204 324.728 654.306 cv
327.708 658.532 329.505 661.095 332.146 661.095 cv
335.813 661.095 336.302 656.696 336.462 655.251 cv
336.872 651.591 336.235 648.31 335.716 645.681 cv
335.095 642.509 334.899 641.032 335.653 640.282 cv
337.001 638.935 337.415 636.774 337.255 634.259 cv
337.353 634.657 337.446 635.079 337.532 635.497 cv
338.274 639.228 338.31 642.048 338.337 644.54 cv
338.407 650.712 338.868 654.755 347.161 659.853 cv
353.739 663.907 359.938 664.95 364.919 665.79 cv
366.282 666.017 367.575 666.228 368.782 666.493 cv
364.228 669.696 358.009 675.626 354.321 685.634 cv
351.966 692.021 350.419 697.138 350.157 701.552 cv
cp
1 .854902 .152941 rgb
f
gsave
505.521 514.728 mo
505.521 514.728 513.333 502.853 500.208 490.353 cv
487.083 477.853 479.271 469.728 479.271 469.728 cv
479.271 469.728 490.13 471.993 497.044 470.392 cv
503.958 468.79 519.896 466.915 519.896 466.915 cv
519.896 466.915 524.271 486.603 524.271 494.415 cv
524.271 502.228 521.771 507.228 516.458 510.978 cv
511.146 514.728 505.521 514.728 505.521 514.728 cv
cp
clp
482.399 470.142 mo
482.399 470.142 498.021 475.767 515.731 469.938 cv
515.731 469.938 494.274 482.438 482.399 470.142 cv
cp
.27451 .207843 .145098 rgb
f
482.399 475.188 mo
482.399 475.188 498.021 480.813 515.731 474.981 cv
515.731 474.981 494.274 487.481 482.399 475.188 cv
cp
f
483.649 480.231 mo
483.649 480.231 499.271 485.856 516.981 480.024 cv
516.981 480.024 495.524 492.524 483.649 480.231 cv
cp
f
483.86 485.274 mo
483.86 485.274 499.481 490.899 517.188 485.071 cv
517.188 485.071 495.735 497.571 483.86 485.274 cv
cp
f
484.485 490.325 mo
484.485 490.325 500.106 495.95 517.813 490.118 cv
517.813 490.118 496.36 502.618 484.485 490.325 cv
cp
f
486.673 495.368 mo
486.673 495.368 502.294 500.993 520.001 495.161 cv
520.001 495.161 498.548 507.661 486.673 495.368 cv
cp
f
488.548 500.411 mo
488.548 500.411 504.169 506.036 521.876 500.208 cv
521.876 500.208 500.423 512.708 488.548 500.411 cv
cp
f
488.548 505.454 mo
488.548 505.454 504.169 511.079 521.876 505.251 cv
521.876 505.251 500.423 517.751 488.548 505.454 cv
cp
f
grestore
410.31 697.438 mo
410.31 697.438 409.481 685.771 401.981 681.603 cv
394.481 677.438 392.81 672.438 380.31 672.438 cv
367.81 672.438 361.981 687.438 361.981 687.438 cv
361.981 687.438 370.208 675.353 378.021 674.728 cv
385.833 674.103 391.771 674.103 394.583 678.165 cv
397.396 682.228 396.771 683.165 400.833 684.415 cv
404.896 685.665 410.31 697.438 410.31 697.438 cv
cp
.27451 .207843 .145098 rgb
f
715.313 421.192 mo
716.563 415.356 li
716.657 415.231 727.47 389.524 698.407 354.161 cv
667.392 316.427 623.997 302.454 623.563 302.321 cv
621.728 301.743 li
607.665 255.274 li
611.716 254.563 li
611.966 254.524 617.931 253.497 626.989 253.497 cv
645.165 253.497 678.806 257.79 699.872 286.517 cv
717.888 311.079 756.325 371.978 724.247 406.79 cv
715.313 421.192 li
cp
f
612.341 258.157 mo
612.341 258.157 667.489 248.513 696.938 288.673 cv
726.384 328.825 746.735 377.013 721.571 404.317 cv
721.571 404.317 733.345 390.935 701.22 351.849 cv
669.095 312.767 624.657 298.845 624.657 298.845 cv
612.341 258.157 li
cp
.376471 .603922 .407843 rgb
f
630.544 275.821 mo
630.544 275.821 694.794 286.528 722.634 363.63 cv
722.634 363.63 707.646 290.274 630.544 275.821 cv
cp
.27451 .207843 .145098 rgb
f
333.509 352.649 mo
333.606 351.427 336.087 322.739 360.993 308.024 cv
367.47 304.196 373.024 300.06 378.407 296.067 cv
392.606 285.505 406.013 275.528 433.142 272.735 cv
437.849 272.259 442.29 271.743 446.532 271.251 cv
458.177 269.915 468.235 268.751 478.161 268.751 cv
494.946 268.751 508.974 272.134 525.071 280.052 cv
525.817 280.423 li
526.329 281.075 li
526.649 281.481 529.388 285.196 527.743 290.685 cv
525.407 298.513 515.353 305.485 497.864 311.403 cv
496.657 311.81 li
495.458 311.38 li
495.415 311.36 494.567 311.056 493.04 310.579 cv
485.649 308.267 465.681 300.169 441.509 302.896 cv
382.653 309.552 360.337 322.243 332.329 365.231 cv
333.509 352.649 li
cp
f
496.696 307.946 mo
496.696 307.946 495.794 307.622 494.126 307.103 cv
477.665 301.958 386.228 277.591 337.146 352.923 cv
337.146 352.923 339.286 325.079 362.845 311.165 cv
386.399 297.239 397.106 280.11 433.517 276.364 cv
469.919 272.614 490.806 267.259 523.466 283.321 cv
523.466 283.321 533.11 295.638 496.696 307.946 cv
cp
.317647 .513726 .211765 rgb
f
547.251 275.571 mo
546.845 275.208 506.501 238.946 465.587 238.946 cv
445.267 238.946 418.806 258.579 405.146 276.353 cv
407.958 262.579 li
408.47 260.638 421.017 214.747 464.056 204.271 cv
471.317 202.501 478.239 201.606 484.642 201.606 cv
512.493 201.606 522.438 218.165 522.849 218.872 cv
552.853 271.06 li
547.251 275.571 li
cp
.27451 .207843 .145098 rgb
f
549.696 272.876 mo
549.696 272.876 464.169 194.974 411.478 263.509 cv
411.478 263.509 423.493 217.896 464.919 207.813 cv
506.341 197.728 519.7 220.7 519.7 220.7 cv
549.696 272.876 li
cp
.376471 .603922 .407843 rgb
f
483.708 227.501 mo
483.708 227.501 482.103 184.138 429.634 161.653 cv
429.634 161.653 489.599 172.356 502.45 207.696 cv
483.708 227.501 li
cp
.27451 .207843 .145098 rgb
f
498.985 205.626 mo
498.544 205.235 453.798 166.868 406.2 166.868 cv
386.286 166.868 368.501 173.599 353.329 186.876 cv
343.583 195.411 li
348.786 182.657 li
350.118 181.067 351.497 175.157 360.833 165.794 cv
369.36 157.247 384.126 145.153 410.341 145.153 cv
411.47 145.157 li
460.743 145.696 479.978 162.786 504.442 200.911 cv
498.985 205.626 li
cp
f
501.376 202.872 mo
501.376 202.872 415.181 127.923 350.931 184.138 cv
350.931 184.138 362.173 148.263 411.431 148.802 cv
460.692 149.337 478.356 167.005 501.376 202.872 cv
cp
.376471 .603922 .407843 rgb
f
552.454 164.919 mo
533.04 164.919 531.142 136.954 531.071 135.763 cv
531.048 135.396 li
531.095 135.04 li
531.251 133.958 534.938 108.392 544.595 94.8799 cv
551.442 85.2861 563.712 75.5674 573.903 75.5674 cv
575.696 75.5674 577.376 75.8799 578.896 76.4854 cv
580.157 76.9932 581.423 77.2275 582.642 77.2471 cv
592.126 77.4541 597.329 70.6455 597.345 70.626 cv
594.325 79.0283 li
594.208 79.3369 591.688 85.7275 586.024 88.7314 cv
586.067 91.5479 586.196 96.7197 586.532 103.79 cv
587.079 115.317 582.903 137.935 582.724 138.892 cv
582.665 139.231 li
582.54 139.552 li
582.157 140.54 572.907 163.677 553.673 164.884 cv
553.267 164.907 552.853 164.919 552.454 164.919 cv
cp
.27451 .207843 .145098 rgb
f
534.704 135.548 mo
534.704 135.548 538.313 109.935 547.556 96.9971 cv
555.583 85.7549 569.509 76.6533 577.54 79.8682 cv
585.575 83.0791 590.923 77.7275 590.923 77.7275 cv
590.923 77.7275 588.251 84.6846 582.356 86.29 cv
582.356 86.29 582.353 92.7158 582.888 103.958 cv
583.427 115.2 579.149 138.224 579.149 138.224 cv
579.149 138.224 570.583 160.173 553.446 161.247 cv
536.313 162.321 534.704 135.548 534.704 135.548 cv
cp
.376471 .603922 .407843 rgb
f
535.642 170.337 mo
516.149 170.337 502.106 160.337 501.521 159.915 cv
499.571 158.501 li
500.103 156.165 li
500.153 155.899 504.181 129.856 479.841 93.8096 cv
451.981 52.5557 416.142 62.8564 415.04 63.001 cv
415.04 63.001 423.188 58.79 444.759 57.7744 cv
476.028 56.3018 503.044 76.5596 529.485 110.778 cv
549.22 136.325 560.665 159.341 561.103 160.396 cv
562.419 163.626 li
559.259 165.091 li
551.735 168.571 543.786 170.337 535.642 170.337 cv
535.642 170.337 li
cp
.27451 .207843 .145098 rgb
f
557.731 161.782 mo
557.731 161.782 512.216 50.958 432.446 60.5908 cv
432.446 60.5908 455.466 54.7041 482.771 91.6416 cv
510.075 128.591 503.657 156.966 503.657 156.966 cv
503.657 156.966 528.817 175.169 557.731 161.782 cv
cp
.376471 .603922 .407843 rgb
f
504.204 201.896 mo
503.474 200.063 li
487.958 160.657 468.399 137.493 440.071 124.954 cv
429.196 120.138 417.392 117.696 404.974 117.696 cv
390.134 117.696 366.56 123.196 366.454 123.228 cv
378.903 114.798 li
393.681 106.38 406.79 102.028 422.47 102.028 cv
448.024 102.028 475.735 114.063 501.146 135.978 cv
520.185 152.388 530.794 168.122 531.267 168.802 cv
533.376 171.817 li
530.329 173.892 li
522.431 179.278 524.47 195.313 525.915 201.04 cv
527.353 206.681 li
504.204 201.896 li
cp
.27451 .207843 .145098 rgb
f
528.278 170.884 mo
528.278 170.884 459.216 71.833 378.368 117.876 cv
378.368 117.876 408.884 107.169 441.548 121.622 cv
474.208 136.075 492.946 163.392 506.868 198.728 cv
522.392 201.938 li
522.392 201.938 516.501 178.919 528.278 170.884 cv
cp
.376471 .603922 .407843 rgb
f
575.806 234.759 mo
576.688 232.731 597.88 184.903 645.966 168.509 cv
666.403 161.544 689.896 157.7 712.106 157.7 cv
738.36 157.7 759.634 162.853 770.466 171.829 cv
781.278 180.794 li
767.47 178.216 li
767.384 178.196 758.353 176.536 744.544 176.536 cv
724.388 176.536 694.321 180.013 665.556 196.536 cv
642.38 209.845 635.97 215.548 634.196 217.657 cv
635.341 223.099 li
572.685 241.954 li
575.806 234.759 li
cp
.27451 .207843 .145098 rgb
f
579.149 236.204 mo
579.149 236.204 600.028 188.021 647.142 171.954 cv
694.255 155.896 749.407 159.103 768.142 174.63 cv
768.142 174.63 714.063 164.466 663.739 193.376 cv
613.407 222.286 634.294 219.606 634.294 219.606 cv
579.149 236.204 li
cp
.376471 .603922 .407843 rgb
f
566.56 247.989 mo
548.63 227.634 li
593.005 165.462 li
593.298 165.22 593.739 164.86 594.306 164.392 cv
631.985 133.118 675.009 117.204 715.001 117.204 cv
722.134 117.204 743.751 120.56 750.743 121.622 cv
736.259 124.649 li
735.407 124.841 650.868 143.88 606.2 206.204 cv
572.97 251.216 li
566.56 247.989 li
cp
.27451 .207843 .145098 rgb
f
570.048 249.056 mo
594.673 168.743 li
596.278 168.204 657.849 109.317 735.481 121.095 cv
735.481 121.095 649.29 139.837 603.239 204.083 cv
570.048 249.056 li
cp
.376471 .603922 .407843 rgb
f
582.356 329.653 mo
582.356 329.653 564.688 321.622 555.052 325.372 cv
555.052 325.372 543.806 306.634 530.962 306.634 cv
530.962 306.634 547.021 296.462 560.938 305.032 cv
574.86 313.591 582.356 329.653 582.356 329.653 cv
cp
.27451 .207843 .145098 rgb
f
510.614 320.255 mo
510.614 320.255 534.704 341.146 515.431 374.868 cv
515.431 374.868 544.88 373.263 551.837 349.708 cv
558.802 326.153 558.267 323.47 558.267 323.47 cv
558.267 323.47 541.083 302.731 528.231 303.267 cv
515.384 303.806 510.614 320.255 510.614 320.255 cv
cp
f
520.493 371.282 mo
533.462 343.63 518.688 324.661 513.88 319.517 cv
515.341 315.774 519.817 306.458 528.349 306.099 cv
528.349 306.099 528.353 306.099 528.356 306.099 cv
537.681 306.099 550.415 318.688 555.407 324.485 cv
555.173 326.028 554.149 331.899 549.118 348.903 cv
544.528 364.446 528.79 369.614 520.493 371.282 cv
cp
.223529 .427451 .176471 rgb
f
563.212 294.966 mo
563.212 294.966 558.935 263.911 523.603 258.021 cv
488.259 252.13 469.521 267.657 469.521 267.657 cv
469.521 267.657 496.298 275.696 498.435 301.388 cv
498.435 301.388 517.173 309.427 534.841 308.353 cv
552.509 307.278 563.212 294.966 563.212 294.966 cv
cp
.27451 .207843 .145098 rgb
f
427.946 396.134 mo
409.696 379.021 389.974 335.45 405.638 296.286 cv
419.47 261.7 444.841 249.142 458.517 249.142 cv
460.173 249.142 461.681 249.329 463.001 249.692 cv
467.708 251.001 471.341 251.38 479.216 251.38 cv
481.688 251.38 484.532 251.341 487.899 251.302 cv
492.81 251.243 498.845 251.169 506.462 251.169 cv
535.907 251.169 542.747 259.728 543.817 261.446 cv
549.095 269.899 li
539.61 266.841 li
530.376 263.868 521.462 262.356 513.11 262.356 cv
460.118 262.356 441.185 321.595 436.649 339.759 cv
426.692 379.563 434.735 399.446 435.521 405.919 cv
427.946 396.134 li
cp
f
430.438 393.478 mo
430.438 393.478 422.407 381.704 433.114 338.868 cv
443.821 296.032 475.946 242.497 540.731 263.376 cv
540.731 263.376 535.38 254.806 506.462 254.806 cv
477.556 254.806 471.657 255.88 462.028 253.204 cv
452.384 250.528 424.009 260.157 409.021 297.642 cv
394.032 335.118 413.306 377.415 430.438 393.478 cv
cp
.376471 .603922 .407843 rgb
f
630.544 215.86 mo
630.544 215.86 642.86 192.837 682.474 179.993 cv
722.099 167.142 768.142 174.63 768.142 174.63 cv
768.142 174.63 699.071 161.247 648.747 211.575 cv
630.544 215.86 li
cp
.27451 .207843 .145098 rgb
f
574.86 240.489 mo
574.86 240.489 580.22 203.548 617.696 176.774 cv
655.169 150.013 685.692 139.837 685.692 139.837 cv
685.692 139.837 635.899 158.571 603.239 218.536 cv
574.86 240.489 li
cp
f
556.907 233.567 mo
541.669 219.946 525.524 205.481 521.056 204.88 cv
521.056 205.415 li
517.575 203.005 li
515.106 192.501 511.747 169.411 530.157 162.142 cv
537.712 159.161 545.563 157.649 553.485 157.649 cv
563.712 157.649 572.138 160.138 577.708 161.782 cv
578.567 162.032 li
588.267 164.896 594.571 169.993 594.833 170.208 cv
594.673 173.024 li
594.946 175.755 li
594.767 175.911 576.677 192.396 562.774 232.052 cv
560.97 237.2 li
556.907 233.567 li
cp
f
519.45 201.665 mo
519.45 201.665 511.149 173.567 531.497 165.528 cv
551.837 157.501 568.438 162.856 577.54 165.528 cv
586.638 168.204 592.532 173.028 592.532 173.028 cv
592.532 173.028 575.13 190.688 560.677 231.915 cv
560.677 231.915 525.872 200.06 519.45 201.665 cv
cp
.223529 .427451 .176471 rgb
f
545.485 162.083 mo
546.86 159.751 579.505 104.864 626.2 80.9033 cv
664.017 61.5049 691.345 57.4385 707.618 57.4385 cv
717.712 57.4385 735.259 63.7314 735.481 63.8018 cv
735.481 63.8018 710.583 63.001 675.735 79.6611 cv
644.438 94.626 615.911 124.153 589.118 163.821 cv
588.11 165.313 li
542.04 167.95 li
545.485 162.083 li
cp
.27451 .207843 .145098 rgb
f
548.63 163.927 mo
548.63 163.927 581.575 107.896 627.868 84.1455 cv
689.442 52.5596 722.228 62.5947 722.228 62.5947 cv
722.228 62.5947 656.239 57.915 586.103 161.782 cv
548.63 163.927 li
cp
.376471 .603922 .407843 rgb
f
577.54 165.528 mo
577.54 165.528 620.368 71.8369 717.81 62.7354 cv
717.81 62.7354 665.884 68.626 627.333 113.063 cv
583.22 163.907 584.501 181.056 584.501 181.056 cv
577.54 165.528 li
cp
.27451 .207843 .145098 rgb
f
556.657 261.907 mo
556.657 261.907 573.79 212.649 609.13 218.536 cv
644.462 224.427 650.353 230.313 650.353 230.313 cv
650.353 230.313 625.192 220.138 604.845 260.833 cv
604.845 260.833 580.22 266.72 556.657 261.907 cv
cp
f
576.813 260.157 mo
571.497 260.157 566.435 259.802 561.716 259.095 cv
566.247 248.704 580.251 221.692 603.317 221.692 cv
605.028 221.692 606.786 221.837 608.528 222.13 cv
619.228 223.911 627.122 225.677 632.907 227.251 cv
623.864 230.274 612.478 238.216 602.392 257.638 cv
598.606 258.399 588.603 260.157 576.813 260.157 cv
cp
.223529 .427451 .176471 rgb
f
716.735 291.677 mo
716.106 290.993 653.31 223.243 607.646 223.243 cv
596.716 223.243 580.079 229.642 568.837 243.692 cv
574.56 231.517 li
574.759 230.755 579.845 212.81 606.376 212.22 cv
627.552 211.751 633.817 209.591 640.454 207.302 cv
642.774 206.509 li
643.935 206.13 645.087 205.661 646.274 205.177 cv
649.997 203.673 654.231 201.966 659.681 201.966 cv
665.692 201.966 672.028 204.099 679.056 208.489 cv
697.653 220.114 724.716 251.243 723.06 289.368 cv
722.681 298.138 li
716.735 291.677 li
cp
.27451 .207843 .145098 rgb
f
578.075 232.458 mo
578.075 232.458 582.356 216.399 606.454 215.86 cv
630.544 215.329 635.896 212.649 643.923 209.974 cv
651.954 207.298 659.997 200.864 677.126 211.575 cv
694.255 222.286 721.028 252.267 719.423 289.212 cv
719.423 289.212 622.513 183.735 578.075 232.458 cv
cp
.376471 .603922 .407843 rgb
f
574.06 230.845 mo
574.13 230.521 583.696 192.032 556.56 176.778 cv
549.774 172.97 543.337 171.282 537.708 171.282 cv
528.153 171.282 523.11 174.935 522.927 175.161 cv
518.376 180.521 li
518.845 179.798 523.466 154.821 545.774 154.919 cv
546.618 154.935 li
547.458 154.958 548.255 154.978 549.013 154.978 cv
554.751 154.978 558.048 154.177 561.54 153.333 cv
564.919 152.517 568.407 151.673 573.767 151.673 cv
574.501 151.673 575.271 151.685 576.087 151.72 cv
589.962 152.302 596.169 162.833 596.169 173.028 cv
596.169 173.938 596.278 175.024 596.399 176.29 cv
597.212 185.091 599.052 199.485 580.751 223.079 cv
574.06 230.845 li
cp
.27451 .207843 .145098 rgb
f
577.54 222.825 mo
577.54 222.825 584.501 187.481 558.267 173.567 cv
532.028 159.646 520.79 174.63 520.79 174.63 cv
520.79 174.63 531.497 156.958 546.485 157.497 cv
561.478 158.032 562.548 152.946 575.399 153.478 cv
588.251 154.017 592.532 166.067 592.532 173.028 cv
592.532 179.993 597.884 196.583 577.54 222.825 cv
cp
.619608 .776471 .607843 rgb
f
555.587 156.427 mo
555.587 156.427 582.892 156.958 583.157 185.876 cv
583.157 185.876 578.88 162.845 549.431 157.497 cv
555.587 156.427 li
cp
.27451 .207843 .145098 rgb
f
633.083 212.376 mo
633.083 212.376 666.415 208.36 694.118 249.317 cv
694.118 249.317 673.642 215.587 623.048 213.978 cv
633.083 212.376 li
cp
f
585.7 301.927 mo
585.7 301.927 568.974 218.536 551.306 208.899 cv
533.634 199.263 520.653 200.724 502.579 225.622 cv
502.579 225.622 537.782 251.325 547.958 301.114 cv
585.7 301.927 li
cp
f
551.169 299.509 mo
541.634 260.661 516.2 231.423 507.712 224.845 cv
517.157 212.552 525.204 207.028 533.517 207.028 cv
538.122 207.028 543.216 208.634 549.56 212.095 cv
562.181 218.981 578.899 282.989 582.489 299.509 cv
551.169 299.509 li
cp
.376471 .603922 .407843 rgb
f
478.337 276.149 mo
467.341 249.642 465.419 228.919 472.474 212.794 cv
479.509 196.712 490.36 194.849 497.907 194.849 cv
499.696 194.849 501.407 194.962 502.981 195.063 cv
503.356 195.099 li
504.45 195.169 505.438 195.196 506.376 195.196 cv
508.259 195.196 509.993 195.079 512.067 194.935 cv
514.587 194.778 li
517.181 194.614 520.853 194.435 526.286 194.435 cv
528.61 194.435 531.247 194.47 534.267 194.552 cv
545.61 194.845 553.759 204.771 555.583 208.755 cv
556.716 211.228 569.509 232.747 568.435 234.056 cv
550.716 209.122 li
548.142 207.907 li
548.122 207.896 544.271 206.169 538.267 206.169 cv
531.774 206.169 521.774 208.228 510.915 218.028 cv
490.212 236.712 485.36 274.81 485.321 275.192 cv
483.642 288.942 li
478.337 276.149 li
cp
.27451 .207843 .145098 rgb
f
549.696 204.61 mo
549.696 204.61 544.743 198.321 534.173 198.188 cv
524.61 198.071 518.954 198.157 514.806 198.411 cv
510.126 198.692 507.38 199.017 503.118 198.728 cv
495.087 198.188 483.31 197.122 475.813 214.255 cv
468.317 231.388 472.603 252.806 481.696 274.751 cv
481.696 274.751 486.521 235.138 508.47 215.329 cv
530.423 195.521 549.696 204.61 549.696 204.61 cv
cp
.376471 .603922 .407843 rgb
f
480.091 256.017 mo
480.091 256.017 487.595 200.329 518.114 198.188 cv
518.114 198.188 504.72 196.583 500.978 200.872 cv
497.224 205.149 485.985 216.931 480.091 256.017 cv
cp
.27451 .207843 .145098 rgb
f
573.79 257.087 mo
573.79 257.087 568.435 206.759 543.271 199.263 cv
518.114 191.763 489.196 228.177 482.235 269.396 cv
482.235 269.396 498.837 213.716 528.278 205.685 cv
557.731 197.657 573.79 257.087 573.79 257.087 cv
cp
f
472.868 254.938 mo
472.868 254.938 434.72 263.771 423.474 310.755 cv
423.474 310.755 428.294 266.985 465.235 252.532 cv
465.235 252.532 474.071 253.333 472.868 254.938 cv
cp
f
530.067 302.942 mo
530.067 302.942 511.868 322.212 495.271 337.208 cv
478.669 352.2 470.106 375.22 466.356 390.747 cv
466.356 390.747 457.255 353.267 470.638 325.431 cv
484.024 297.591 495.263 293.845 505.978 295.981 cv
516.688 298.126 528.993 299.728 530.067 302.942 cv
cp
f
467.11 377.935 mo
465.603 364.888 464.985 343.728 473.192 326.661 cv
485.407 301.251 495.017 298.313 501.185 298.313 cv
502.524 298.313 503.907 298.458 505.423 298.763 cv
507.415 299.161 509.462 299.544 511.481 299.919 cv
516.149 300.782 522.724 302.005 525.884 303.224 cv
520.61 308.716 506.407 323.325 493.372 335.103 cv
479.685 347.462 471.657 364.505 467.11 377.935 cv
cp
.376471 .603922 .407843 rgb
f
516.149 299.103 mo
516.149 299.103 494.481 303.267 479.063 337.853 cv
479.063 337.853 486.149 309.099 511.149 298.267 cv
536.149 287.438 516.149 299.103 516.149 299.103 cv
cp
.27451 .207843 .145098 rgb
f
530.521 299.103 mo
530.521 299.103 536.146 262.228 559.271 261.603 cv
582.396 260.978 592.396 272.853 592.396 272.853 cv
592.396 272.853 585.884 284.122 585.7 301.927 cv
585.7 301.927 555.521 304.103 530.521 299.103 cv
cp
f
569.646 299.563 mo
560.142 299.563 546.493 299.075 533.845 296.841 cv
535.626 288.712 542.29 264.899 559.349 264.435 cv
561.024 264.415 li
577.032 264.415 585.821 270.642 588.935 273.411 cv
587.134 277.243 583.509 286.423 582.938 299.243 cv
580.208 299.38 575.478 299.563 569.646 299.563 cv
cp
.317647 .513726 .211765 rgb
f
528.251 305.177 mo
528.251 305.177 538.958 291.255 556.63 295.005 cv
574.294 298.755 588.212 297.146 598.392 295.544 cv
608.556 293.938 612.306 321.774 612.306 331.419 cv
612.306 341.048 609.095 364.606 575.899 405.294 cv
575.899 405.294 587.146 356.04 566.263 322.849 cv
545.384 289.649 528.251 305.177 528.251 305.177 cv
cp
.27451 .207843 .145098 rgb
f
582.501 389.782 mo
584.188 371.935 582.157 343.024 568.024 320.563 cv
560.837 309.134 555.071 301.892 547.177 298.884 cv
548.278 298.712 549.438 298.614 550.638 298.614 cv
552.313 298.614 554.032 298.802 555.743 299.165 cv
563.313 300.774 570.692 301.556 578.294 301.556 cv
586.446 301.556 593.36 300.638 599.052 299.743 cv
599.056 299.743 599.056 299.743 599.056 299.743 cv
603.024 299.743 608.056 317.798 608.056 331.419 cv
608.056 340.548 604.478 359.517 582.501 389.782 cv
cp
.223529 .427451 .176471 rgb
f
574.688 297.228 mo
574.688 297.228 600.946 308.478 591.774 357.228 cv
591.774 357.228 599.271 315.981 568.856 298.063 cv
574.688 297.228 li
cp
.27451 .207843 .145098 rgb
f
623.251 387.634 mo
623.251 387.052 622.997 329.017 602.513 300.337 cv
587.298 279.044 572.126 267.31 559.782 267.31 cv
554.896 267.31 550.478 269.044 546.263 272.622 cv
536.325 281.048 li
540.454 268.692 li
542.157 263.567 548.915 253.872 562.274 253.872 cv
562.614 253.872 562.958 253.88 563.313 253.888 cv
566.962 254.024 li
571.911 254.212 576.188 254.368 580.087 254.368 cv
586.513 254.368 591.509 253.938 597.329 252.884 cv
599.216 252.524 li
603.153 251.782 607.618 250.938 612.454 250.938 cv
625.876 250.938 636.188 257.774 643.997 271.829 cv
658.665 298.224 657.431 350.821 629.86 389.739 cv
623.251 399.075 li
623.251 387.634 li
cp
f
543.903 269.845 mo
543.903 269.845 548.188 256.993 563.181 257.532 cv
578.173 258.067 586.2 258.606 597.978 256.462 cv
609.759 254.317 629.013 249.997 642.399 274.087 cv
655.778 298.185 654.196 349.083 626.892 387.634 cv
626.892 387.634 626.892 328.204 605.478 298.224 cv
584.06 268.235 561.571 254.856 543.903 269.845 cv
cp
.376471 .603922 .407843 rgb
f
594.231 256.993 mo
594.231 256.993 645.634 285.372 634.923 356.579 cv
634.923 356.579 652.595 283.224 594.231 256.993 cv
cp
.27451 .207843 .145098 rgb
f
576.771 823.478 mo
576.771 823.478 571.146 803.478 583.021 801.603 cv
594.896 799.728 597.396 798.478 603.021 795.978 cv
608.646 793.478 618.646 788.478 627.396 794.728 cv
627.396 794.728 623.646 787.228 615.521 787.853 cv
607.396 788.478 606.146 794.728 595.521 795.978 cv
584.896 797.228 564.271 800.353 576.771 823.478 cv
cp
f
354.763 628.415 mo
354.763 628.415 348.021 619.103 344.271 607.853 cv
340.521 596.603 337.356 591.396 331.126 590.251 cv
324.896 589.103 326.438 585.837 332.54 587.782 cv
338.646 589.728 341.771 590.353 344.271 599.103 cv
346.771 607.853 349.271 612.228 349.271 612.228 cv
349.271 612.228 349.009 623.36 354.763 628.415 cv
cp
f
344.271 603.478 mo
344.271 603.478 339.271 587.228 341.146 578.478 cv
343.021 569.728 346.146 554.728 352.396 552.228 cv
358.646 549.728 368.11 554.505 376.188 565.239 cv
384.271 575.978 394.896 587.228 394.896 587.228 cv
394.896 587.228 385.688 568.782 378.728 562.067 cv
371.771 555.353 374.271 551.603 359.896 548.478 cv
345.521 545.353 335.521 570.353 338.646 590.353 cv
344.271 603.478 li
cp
f
356.771 515.978 mo
356.771 515.978 378.021 507.853 389.583 535.665 cv
393.021 533.478 li
393.021 533.478 383.021 500.353 356.771 515.978 cv
cp
f
339.896 523.478 mo
339.896 523.478 366.146 519.728 373.646 545.353 cv
373.646 545.353 373.646 535.353 364.896 527.853 cv
356.146 520.353 347.396 522.853 339.896 523.478 cv
cp
f
431.771 510.353 mo
431.771 510.353 443.646 483.478 458.646 482.228 cv
473.646 480.978 491.146 499.103 491.146 499.103 cv
491.146 499.103 478.646 482.853 462.396 480.353 cv
446.146 477.853 435.521 497.853 431.771 510.353 cv
cp
f
gsave
607.708 637.54 mo
607.708 637.54 615.521 625.665 602.396 613.165 cv
589.271 600.665 579.583 593.478 579.583 593.478 cv
579.583 593.478 592.317 594.806 599.231 593.204 cv
606.146 591.603 622.083 589.728 622.083 589.728 cv
622.083 589.728 626.458 609.415 626.458 617.228 cv
626.458 625.04 623.958 630.04 618.646 633.79 cv
613.333 637.54 607.708 637.54 607.708 637.54 cv
cp
clp
583.024 593.271 mo
583.024 593.271 598.646 598.896 616.356 593.063 cv
616.356 593.063 594.899 605.563 583.024 593.271 cv
cp
f
584.587 597.997 mo
584.587 597.997 600.208 603.622 617.919 597.79 cv
617.919 597.79 596.462 610.29 584.587 597.997 cv
cp
f
585.837 603.048 mo
585.837 603.048 601.458 608.673 619.169 602.841 cv
619.169 602.841 597.712 615.341 585.837 603.048 cv
cp
f
586.048 608.087 mo
586.048 608.087 601.669 613.712 619.376 607.88 cv
619.376 607.88 597.923 620.38 586.048 608.087 cv
cp
f
586.673 613.134 mo
586.673 613.134 602.294 618.759 620.001 612.931 cv
620.001 612.931 598.548 625.431 586.673 613.134 cv
cp
f
588.86 618.181 mo
588.86 618.181 604.481 623.806 622.188 617.978 cv
622.188 617.978 600.735 630.478 588.86 618.181 cv
cp
f
590.735 623.22 mo
590.735 623.22 606.356 628.845 624.063 623.017 cv
624.063 623.017 602.61 635.517 590.735 623.22 cv
cp
f
590.735 628.271 mo
590.735 628.271 606.356 633.896 624.063 628.063 cv
624.063 628.063 602.61 640.563 590.735 628.271 cv
cp
f
grestore
754.896 576.29 mo
754.896 576.29 754.583 592.54 758.646 597.853 cv
762.708 603.165 769.896 613.165 769.896 617.228 cv
769.896 617.228 772.396 611.603 766.458 604.415 cv
760.521 597.228 754.896 584.103 754.896 576.29 cv
cp
f
715.521 525.353 mo
715.521 525.353 723.021 506.603 730.521 502.853 cv
738.021 499.103 742.083 508.478 742.083 508.478 cv
742.083 508.478 737.708 502.228 730.833 505.665 cv
723.958 509.103 715.521 525.353 715.521 525.353 cv
cp
f
703.958 622.853 mo
703.958 622.853 703.021 642.853 714.271 656.29 cv
714.271 656.29 714.634 662.372 710.231 656.524 cv
705.833 650.665 702.083 638.478 703.958 622.853 cv
cp
f
gsave
524.583 599.103 mo
524.583 599.103 527.095 591.083 519.271 574.728 cv
512.396 560.353 508.646 555.353 508.646 555.353 cv
508.646 555.353 509.751 551.618 516.106 554.767 cv
528.646 560.978 548.021 558.165 548.021 558.165 cv
548.021 558.165 543.333 570.978 543.333 578.79 cv
543.333 586.603 540.833 591.603 535.521 595.353 cv
530.208 599.103 524.583 599.103 524.583 599.103 cv
cp
clp
499.978 554.376 mo
499.978 554.376 515.438 560.427 533.298 555.083 cv
533.298 555.083 511.513 566.993 499.978 554.376 cv
cp
f
501.462 559.563 mo
501.462 559.563 517.083 565.188 534.794 559.356 cv
534.794 559.356 513.337 571.856 501.462 559.563 cv
cp
f
502.712 564.606 mo
502.712 564.606 518.333 570.231 536.044 564.399 cv
536.044 564.399 514.587 576.899 502.712 564.606 cv
cp
f
502.923 569.649 mo
502.923 569.649 518.544 575.274 536.251 569.446 cv
536.251 569.446 514.798 581.942 502.923 569.649 cv
cp
f
503.548 574.7 mo
503.548 574.7 519.169 580.321 536.876 574.493 cv
536.876 574.493 515.423 586.993 503.548 574.7 cv
cp
f
505.735 579.743 mo
505.735 579.743 521.356 585.368 539.063 579.54 cv
539.063 579.54 517.61 592.04 505.735 579.743 cv
cp
f
507.61 584.782 mo
507.61 584.782 523.231 590.407 540.938 584.579 cv
540.938 584.579 519.485 597.079 507.61 584.782 cv
cp
f
507.61 589.833 mo
507.61 589.833 523.231 595.458 540.938 589.626 cv
540.938 589.626 519.485 602.126 507.61 589.833 cv
cp
f
grestore
523.231 647.321 mo
523.231 647.321 540.731 655.665 559.899 649.821 cv
559.899 649.821 535.31 663.153 523.231 647.321 cv
cp
f
530.208 655.353 mo
530.208 655.353 536.146 660.04 553.021 655.978 cv
553.021 655.978 546.771 661.603 534.583 660.353 cv
534.583 660.353 530.521 659.103 530.208 655.353 cv
cp
f
530.833 660.978 mo
530.833 660.978 536.771 665.665 553.646 661.603 cv
553.646 661.603 547.396 667.228 535.208 665.978 cv
535.208 665.978 531.146 664.728 530.833 660.978 cv
cp
f
533.021 665.978 mo
533.021 665.978 538.958 670.665 555.833 666.603 cv
555.833 666.603 549.583 672.228 537.396 670.978 cv
537.396 670.978 533.333 669.728 533.021 665.978 cv
cp
f
534.896 670.978 mo
534.896 670.978 540.833 675.665 557.708 671.603 cv
557.708 671.603 551.458 677.228 539.271 675.978 cv
539.271 675.978 535.208 674.728 534.896 670.978 cv
cp
f
536.458 675.978 mo
536.458 675.978 542.396 680.665 559.271 676.603 cv
559.271 676.603 553.021 682.228 540.833 680.978 cv
540.833 680.978 536.771 679.728 536.458 675.978 cv
cp
f
538.333 681.915 mo
538.333 681.915 544.271 686.603 561.146 682.54 cv
561.146 682.54 554.896 688.165 542.708 686.915 cv
542.708 686.915 538.646 685.665 538.333 681.915 cv
cp
f
392.708 804.103 mo
392.708 804.103 406.458 797.228 415.833 799.728 cv
419.271 797.228 li
419.271 797.228 399.583 792.54 392.708 804.103 cv
cp
f
524.271 829.103 mo
524.271 829.103 529.583 848.478 543.646 852.228 cv
543.646 852.228 540.521 852.54 535.833 850.978 cv
531.146 849.415 526.146 849.728 526.146 849.728 cv
526.146 849.728 519.896 842.54 524.271 829.103 cv
cp
f
663.646 828.165 mo
663.646 828.165 665.833 829.728 667.083 820.978 cv
668.333 812.228 673.021 802.54 673.021 802.54 cv
673.021 802.54 670.521 810.353 671.146 814.415 cv
671.771 818.478 676.146 828.165 663.646 828.165 cv
cp
f
338.333 666.603 mo
338.333 666.603 342.915 670.212 344.896 680.353 cv
347.708 694.728 351.771 704.728 351.771 704.728 cv
351.771 704.728 346.458 701.603 345.208 696.29 cv
343.958 690.978 344.583 673.478 338.333 666.603 cv
cp
f
746.149 446.188 mo
746.149 446.188 740.731 450.356 738.231 456.606 cv
735.731 462.856 732.396 469.942 725.731 474.106 cv
725.731 474.106 730.731 474.106 734.481 468.274 cv
738.231 462.438 740.731 457.856 740.731 457.856 cv
734.063 471.606 li
734.063 471.606 737.81 467.856 740.731 462.024 cv
743.649 456.188 743.231 454.106 743.231 460.356 cv
743.231 466.606 744.899 474.106 744.899 474.106 cv
747.728 479.544 li
747.728 479.544 743.231 452.856 750.313 443.274 cv
746.149 446.188 li
cp
f
535.731 297.837 mo
535.731 297.837 539.271 284.728 544.899 274.923 cv
544.899 274.923 542.552 280.665 540.521 289.259 cv
538.489 297.853 538.649 297.837 538.649 297.837 cv
535.731 297.837 li
cp
f
509.481 378.673 mo
509.481 378.673 506.149 384.509 506.149 396.173 cv
506.149 407.837 505.313 417.009 505.313 417.009 cv
505.313 417.009 510.321 405.337 509.899 395.337 cv
509.481 385.337 509.481 378.673 509.481 378.673 cv
cp
f
520.731 377.009 mo
520.731 377.009 529.485 401.587 529.899 404.087 cv
530.313 406.587 529.899 392.423 529.899 392.423 cv
529.899 392.423 523.231 380.345 520.731 377.009 cv
cp
f
540.575 296.743 mo
540.575 296.743 544.114 283.634 549.743 273.829 cv
549.743 273.829 547.396 279.571 545.364 288.165 cv
543.333 296.759 543.493 296.743 543.493 296.743 cv
540.575 296.743 li
cp
f
545.575 295.649 mo
545.575 295.649 549.114 282.54 554.743 272.735 cv
554.743 272.735 552.396 278.478 550.364 287.071 cv
548.333 295.665 548.493 295.649 548.493 295.649 cv
545.575 295.649 li
cp
f
550.106 295.493 mo
550.106 295.493 553.646 282.384 559.274 272.579 cv
559.274 272.579 556.927 278.321 554.896 286.915 cv
552.864 295.509 553.024 295.493 553.024 295.493 cv
550.106 295.493 li
cp
f
554.95 296.118 mo
554.95 296.118 558.489 283.009 564.118 273.204 cv
564.118 273.204 561.771 278.946 559.739 287.54 cv
557.708 296.134 557.868 296.118 557.868 296.118 cv
554.95 296.118 li
cp
f
559.638 296.899 mo
559.638 296.899 563.333 282.54 568.962 272.735 cv
568.962 272.735 566.638 278.481 564.583 287.071 cv
562.864 294.259 562.556 296.899 562.556 296.899 cv
559.638 296.899 li
cp
f
564.013 297.212 mo
564.013 297.212 567.708 282.853 573.337 273.048 cv
573.337 273.048 571.013 278.794 568.958 287.384 cv
567.239 294.571 566.931 297.212 566.931 297.212 cv
564.013 297.212 li
cp
f
568.075 298.306 mo
568.075 298.306 571.771 283.946 577.399 274.142 cv
577.399 274.142 575.075 279.888 573.021 288.478 cv
571.302 295.665 570.993 298.306 570.993 298.306 cv
568.075 298.306 li
cp
f
572.606 298.774 mo
572.606 298.774 576.302 284.415 581.931 274.61 cv
581.931 274.61 579.606 280.356 577.552 288.946 cv
575.833 296.134 575.524 298.774 575.524 298.774 cv
572.606 298.774 li
cp
f
577.606 297.837 mo
577.606 297.837 580.833 286.446 585.364 276.915 cv
585.364 276.915 584.606 279.419 582.552 288.009 cv
580.833 295.196 580.524 297.837 580.524 297.837 cv
577.606 297.837 li
cp
f
685.731 394.106 mo
685.731 394.106 685.31 395.356 684.481 407.024 cv
683.649 418.688 682.708 425.665 682.708 425.665 cv
682.708 425.665 679.899 419.528 680.313 412.856 cv
680.731 406.188 685.731 394.106 685.731 394.106 cv
cp
f
382.399 392.024 mo
382.399 392.024 393.235 395.353 393.649 419.938 cv
393.333 429.103 li
393.333 429.103 391.985 401.606 379.899 394.106 cv
382.399 392.024 li
cp
f
363.649 513.692 mo
363.649 513.692 350.31 521.196 346.981 511.614 cv
343.649 502.028 353.231 484.942 353.231 484.942 cv
353.231 484.942 345.731 507.864 354.063 509.114 cv
362.399 510.364 370.731 513.278 370.731 513.278 cv
363.649 513.692 li
cp
f
417.399 587.86 mo
423.29 593.759 424.899 596.188 427.399 601.61 cv
429.899 607.032 432.399 610.782 432.399 610.782 cv
432.399 610.782 426.149 607.032 421.563 599.11 cv
416.981 591.2 417.399 590.782 413.649 587.45 cv
409.899 584.11 405.313 575.778 405.313 569.114 cv
405.313 569.114 410.321 580.782 417.399 587.86 cv
cp
f
519.481 535.364 mo
519.481 535.364 521.981 525.364 528.231 522.446 cv
534.481 519.532 536.981 512.868 546.981 510.782 cv
556.981 508.696 566.985 508.282 577.399 522.446 cv
577.399 522.446 566.571 509.946 553.649 512.446 cv
540.731 514.946 539.481 519.946 533.231 522.446 cv
526.981 524.946 521.981 528.692 519.481 535.364 cv
cp
f
589.899 573.696 mo
589.899 573.696 598.649 567.032 603.649 559.946 cv
608.649 552.864 617.821 547.864 629.899 552.446 cv
641.981 557.032 655.313 561.196 655.313 561.196 cv
655.313 561.196 639.063 557.446 630.313 554.946 cv
621.563 552.446 612.81 552.864 608.231 559.114 cv
603.649 565.364 599.071 570.782 589.899 573.696 cv
cp
f
665.731 609.95 mo
665.731 609.95 669.896 590.368 681.981 583.282 cv
694.063 576.196 705.731 572.454 712.813 585.782 cv
712.813 585.782 708.649 577.028 696.563 580.36 cv
684.481 583.7 674.896 587.032 665.731 609.95 cv
cp
f
608.231 665.38 mo
608.231 665.38 610.731 643.298 624.481 639.548 cv
638.231 635.798 649.06 635.392 655.731 640.798 cv
662.399 646.22 666.981 658.298 666.981 658.298 cv
666.981 658.298 657.821 639.97 647.399 639.97 cv
636.981 639.97 616.981 639.13 608.231 665.38 cv
cp
f
544.063 728.72 mo
544.063 728.72 547.399 719.548 548.649 709.97 cv
549.899 700.38 564.485 690.798 577.399 692.048 cv
590.313 693.298 600.313 704.13 600.313 704.13 cv
600.313 704.13 585.313 691.22 571.563 694.548 cv
565.169 696.103 558.407 698.399 554.481 705.38 cv
549.97 713.407 548.517 726.267 544.063 728.72 cv
cp
f
437.396 397.856 mo
437.396 397.856 451.56 384.942 460.31 387.856 cv
469.06 390.774 470.313 393.278 476.981 395.356 cv
483.646 397.438 487.396 409.524 487.396 409.524 cv
487.396 409.524 481.149 398.274 471.981 397.024 cv
462.81 395.774 465.728 390.767 456.56 391.188 cv
447.396 391.606 437.396 397.856 437.396 397.856 cv
cp
f
399.481 435.774 mo
399.481 435.774 409.06 432.856 414.06 442.856 cv
419.06 452.856 423.642 451.606 426.56 457.856 cv
429.481 464.106 429.481 468.274 429.481 468.274 cv
429.481 468.274 426.563 459.938 420.731 455.774 cv
414.896 451.606 413.231 447.024 411.146 443.274 cv
409.06 439.524 408.649 435.774 399.481 435.774 cv
cp
f
gsave
591.771 545.563 mo
591.771 545.563 599.583 533.688 586.458 521.188 cv
573.333 508.688 565.521 500.563 565.521 500.563 cv
565.521 500.563 576.38 502.829 583.294 501.228 cv
590.208 499.626 606.146 497.751 606.146 497.751 cv
606.146 497.751 610.521 517.438 610.521 525.251 cv
610.521 533.063 608.021 538.063 602.708 541.813 cv
597.396 545.563 591.771 545.563 591.771 545.563 cv
cp
clp
568.649 500.978 mo
568.649 500.978 584.271 506.603 601.981 500.774 cv
601.981 500.774 580.524 513.274 568.649 500.978 cv
cp
f
568.649 506.021 mo
568.649 506.021 584.271 511.646 601.981 505.817 cv
601.981 505.817 580.524 518.317 568.649 506.021 cv
cp
f
569.899 511.067 mo
569.899 511.067 585.521 516.692 603.231 510.86 cv
603.231 510.86 581.774 523.36 569.899 511.067 cv
cp
f
570.11 516.11 mo
570.11 516.11 585.731 521.735 603.438 515.903 cv
603.438 515.903 581.985 528.403 570.11 516.11 cv
cp
f
570.735 521.157 mo
570.735 521.157 586.356 526.782 604.063 520.954 cv
604.063 520.954 582.61 533.454 570.735 521.157 cv
cp
f
572.923 526.204 mo
572.923 526.204 588.544 531.829 606.251 525.997 cv
606.251 525.997 584.798 538.497 572.923 526.204 cv
cp
f
574.798 531.247 mo
574.798 531.247 590.419 536.872 608.126 531.04 cv
608.126 531.04 586.673 543.54 574.798 531.247 cv
cp
f
574.798 536.29 mo
574.798 536.29 590.419 541.915 608.126 536.087 cv
608.126 536.087 586.673 548.587 574.798 536.29 cv
cp
f
grestore
gsave
666.981 579.521 mo
666.981 579.521 675.427 567.853 661.56 556.188 cv
647.688 544.517 634.267 539.075 634.267 539.075 cv
634.267 539.075 645.251 540.665 652.048 538.646 cv
658.853 536.614 674.646 533.767 674.646 533.767 cv
674.646 533.767 680.224 553.146 680.7 560.942 cv
681.185 568.743 678.997 573.888 673.923 577.958 cv
668.856 582.021 666.981 579.521 666.981 579.521 cv
cp
clp
637.419 539.298 mo
637.419 539.298 653.353 543.946 670.677 537.036 cv
670.677 537.036 650.028 550.837 637.419 539.298 cv
cp
f
637.731 544.329 mo
637.731 544.329 653.669 548.981 670.985 542.075 cv
670.985 542.075 650.341 555.872 637.731 544.329 cv
cp
f
639.286 549.282 mo
639.286 549.282 655.228 553.938 672.54 547.032 cv
672.54 547.032 651.899 560.825 639.286 549.282 cv
cp
f
639.806 554.31 mo
639.806 554.31 655.739 558.962 673.063 552.052 cv
673.063 552.052 652.419 565.853 639.806 554.31 cv
cp
f
640.743 559.31 mo
640.743 559.31 656.677 563.962 673.993 557.052 cv
673.993 557.052 653.349 570.845 640.743 559.31 cv
cp
f
643.235 564.212 mo
643.235 564.212 659.173 568.864 676.493 561.954 cv
676.493 561.954 655.845 575.747 643.235 564.212 cv
cp
f
645.419 569.126 mo
645.419 569.126 661.356 573.782 678.673 566.872 cv
678.673 566.872 658.032 580.665 645.419 569.126 cv
cp
f
645.731 574.161 mo
645.731 574.161 661.665 578.817 678.981 571.907 cv
678.981 571.907 658.337 585.704 645.731 574.161 cv
cp
f
grestore
gsave
461.669 651.603 mo
461.669 651.603 464.177 643.571 456.356 627.228 cv
449.481 612.853 444.896 613.282 444.896 613.282 cv
444.896 613.282 438.122 610.966 444.481 614.11 cv
457.021 620.321 485.106 610.665 485.106 610.665 cv
485.106 610.665 480.419 623.478 480.419 631.29 cv
480.419 639.103 477.919 644.103 472.606 647.853 cv
467.294 651.603 461.669 651.603 461.669 651.603 cv
cp
clp
437.063 606.876 mo
437.063 606.876 452.524 612.919 470.384 607.579 cv
470.384 607.579 448.595 619.493 437.063 606.876 cv
cp
f
438.548 612.06 mo
438.548 612.06 454.169 617.685 471.876 611.853 cv
471.876 611.853 450.423 624.353 438.548 612.06 cv
cp
f
439.798 617.099 mo
439.798 617.099 455.419 622.724 473.126 616.892 cv
473.126 616.892 451.673 629.392 439.798 617.099 cv
cp
f
440.009 622.149 mo
440.009 622.149 455.626 627.774 473.337 621.942 cv
473.337 621.942 451.884 634.442 440.009 622.149 cv
cp
f
440.634 627.196 mo
440.634 627.196 456.251 632.821 473.962 626.993 cv
473.962 626.993 452.509 639.493 440.634 627.196 cv
cp
f
442.821 632.235 mo
442.821 632.235 458.438 637.86 476.149 632.032 cv
476.149 632.032 454.696 644.532 442.821 632.235 cv
cp
f
444.696 637.282 mo
444.696 637.282 460.313 642.907 478.024 637.079 cv
478.024 637.079 456.571 649.579 444.696 637.282 cv
cp
f
444.696 642.321 mo
444.696 642.321 460.313 647.946 478.024 642.118 cv
478.024 642.118 456.571 654.618 444.696 642.321 cv
cp
f
grestore
419.06 525.239 mo
419.06 525.239 436.56 533.575 455.731 527.739 cv
455.731 527.739 431.142 541.071 419.06 525.239 cv
cp
f
426.872 533.685 mo
426.872 533.685 432.81 538.372 449.685 534.31 cv
449.685 534.31 443.435 539.935 431.247 538.685 cv
431.247 538.685 427.185 537.435 426.872 533.685 cv
cp
f
432.915 538.892 mo
432.915 538.892 438.853 543.579 455.728 539.517 cv
455.728 539.517 449.478 545.142 437.29 543.892 cv
437.29 543.892 433.228 542.642 432.915 538.892 cv
cp
f
437.603 543.892 mo
437.603 543.892 443.54 548.579 460.415 544.517 cv
460.415 544.517 454.165 550.142 441.978 548.892 cv
441.978 548.892 437.915 547.642 437.603 543.892 cv
cp
f
440.935 549.114 mo
440.935 549.114 446.872 553.802 463.747 549.739 cv
463.747 549.739 457.497 555.364 445.31 554.114 cv
445.31 554.114 441.247 552.864 440.935 549.114 cv
cp
f
442.29 554.31 mo
442.29 554.31 448.228 558.997 465.103 554.935 cv
465.103 554.935 458.853 560.56 446.665 559.31 cv
446.665 559.31 442.603 558.06 442.29 554.31 cv
cp
f
gsave
438.005 471.833 mo
438.005 471.833 445.157 458.138 432.489 445.177 cv
419.817 432.22 418.626 424.669 418.626 424.669 cv
418.626 424.669 424.142 428.575 431.11 427.224 cv
438.075 425.872 454.071 424.563 454.071 424.563 cv
454.071 424.563 457.743 444.392 457.462 452.2 cv
457.188 460.005 454.509 464.915 449.071 468.474 cv
443.626 472.032 438.005 471.833 438.005 471.833 cv
cp
clp
416.485 426.458 mo
416.485 426.458 431.899 432.63 449.798 427.435 cv
449.798 427.435 427.915 439.161 416.485 426.458 cv
cp
f
416.306 431.497 mo
416.306 431.497 431.716 437.673 449.622 432.474 cv
449.622 432.474 427.735 444.204 416.306 431.497 cv
cp
f
417.376 436.579 mo
417.376 436.579 432.786 442.755 450.692 437.56 cv
450.692 437.56 428.806 449.29 417.376 436.579 cv
cp
f
417.407 441.634 mo
417.407 441.634 432.813 447.806 450.72 442.61 cv
450.72 442.61 428.837 454.337 417.407 441.634 cv
cp
f
417.849 446.696 mo
417.849 446.696 433.259 452.872 451.165 447.677 cv
451.165 447.677 429.282 459.407 417.849 446.696 cv
cp
f
419.856 451.813 mo
419.856 451.813 435.267 457.989 453.173 452.794 cv
453.173 452.794 431.286 464.524 419.856 451.813 cv
cp
f
421.552 456.927 mo
421.552 456.927 436.962 463.099 454.868 457.903 cv
454.868 457.903 432.981 469.63 421.552 456.927 cv
cp
f
421.368 461.966 mo
421.368 461.966 436.782 468.142 454.688 462.942 cv
454.688 462.942 432.806 474.673 421.368 461.966 cv
cp
f
grestore
gsave
484.481 749.11 mo
484.481 749.11 489.06 732.45 482.489 723.923 cv
471.419 709.579 468.626 703.415 468.626 703.415 cv
468.626 703.415 474.142 707.321 481.11 705.978 cv
488.075 704.618 504.071 703.31 504.071 703.31 cv
504.071 703.31 507.743 723.142 507.462 730.946 cv
507.188 738.759 504.509 743.661 499.071 747.228 cv
493.626 750.782 484.481 749.11 484.481 749.11 cv
cp
clp
466.485 705.204 mo
466.485 705.204 481.899 711.376 499.798 706.181 cv
499.798 706.181 477.915 717.907 466.485 705.204 cv
cp
f
466.306 710.243 mo
466.306 710.243 481.716 716.423 499.622 711.22 cv
499.622 711.22 477.735 722.958 466.306 710.243 cv
cp
f
467.376 715.329 mo
467.376 715.329 482.786 721.501 500.692 716.306 cv
500.692 716.306 478.806 728.036 467.376 715.329 cv
cp
f
467.407 720.38 mo
467.407 720.38 482.813 726.552 500.72 721.356 cv
500.72 721.356 478.837 733.087 467.407 720.38 cv
cp
f
467.849 725.446 mo
467.849 725.446 483.259 731.618 501.165 726.423 cv
501.165 726.423 479.282 738.153 467.849 725.446 cv
cp
f
469.856 730.563 mo
469.856 730.563 485.267 736.735 503.173 731.54 cv
503.173 731.54 481.286 743.271 469.856 730.563 cv
cp
f
471.552 735.673 mo
471.552 735.673 486.962 741.845 504.868 736.649 cv
504.868 736.649 482.981 748.376 471.552 735.673 cv
cp
f
471.368 740.712 mo
471.368 740.712 486.782 746.892 504.688 741.688 cv
504.688 741.688 482.806 753.427 471.368 740.712 cv
cp
f
grestore
gsave
619.06 735.36 mo
619.06 735.36 623.642 718.7 617.067 710.173 cv
606.001 695.829 603.204 689.665 603.204 689.665 cv
603.204 689.665 608.724 693.571 615.692 692.228 cv
622.653 690.868 638.649 689.56 638.649 689.56 cv
638.649 689.56 642.321 709.392 642.044 717.196 cv
641.771 725.009 639.091 729.911 633.649 733.478 cv
628.204 737.032 619.06 735.36 619.06 735.36 cv
cp
clp
601.067 691.454 mo
601.067 691.454 616.478 697.626 634.376 692.431 cv
634.376 692.431 612.493 704.157 601.067 691.454 cv
cp
f
600.888 696.493 mo
600.888 696.493 616.298 702.673 634.204 697.47 cv
634.204 697.47 612.317 709.208 600.888 696.493 cv
cp
f
601.954 701.579 mo
601.954 701.579 617.368 707.751 635.271 702.556 cv
635.271 702.556 613.388 714.286 601.954 701.579 cv
cp
f
601.985 706.63 mo
601.985 706.63 617.396 712.802 635.302 707.606 cv
635.302 707.606 613.415 719.337 601.985 706.63 cv
cp
f
602.431 711.696 mo
602.431 711.696 617.841 717.868 635.743 712.673 cv
635.743 712.673 613.86 724.403 602.431 711.696 cv
cp
f
604.438 716.813 mo
604.438 716.813 619.845 722.985 637.751 717.79 cv
637.751 717.79 615.868 729.521 604.438 716.813 cv
cp
f
606.13 721.923 mo
606.13 721.923 621.54 728.095 639.446 722.899 cv
639.446 722.899 617.563 734.626 606.13 721.923 cv
cp
f
605.95 726.962 mo
605.95 726.962 621.36 733.142 639.271 727.938 cv
639.271 727.938 617.384 739.677 605.95 726.962 cv
cp
f
grestore
gsave
673.642 674.532 mo
673.642 674.532 678.22 657.868 671.649 649.345 cv
660.579 635.001 657.786 628.837 657.786 628.837 cv
657.786 628.837 663.306 632.743 670.271 631.396 cv
677.235 630.04 693.231 628.728 693.231 628.728 cv
693.231 628.728 696.903 648.563 696.626 656.368 cv
696.353 664.181 693.669 669.079 688.231 672.646 cv
682.786 676.2 673.642 674.532 673.642 674.532 cv
cp
clp
655.649 630.626 mo
655.649 630.626 671.056 636.798 688.958 631.603 cv
688.958 631.603 667.071 643.329 655.649 630.626 cv
cp
f
655.466 635.665 mo
655.466 635.665 670.876 641.845 688.782 636.642 cv
688.782 636.642 666.899 648.376 655.466 635.665 cv
cp
f
656.536 640.751 mo
656.536 640.751 671.946 646.923 689.853 641.728 cv
689.853 641.728 667.966 653.454 656.536 640.751 cv
cp
f
656.563 645.798 mo
656.563 645.798 671.978 651.97 689.88 646.774 cv
689.88 646.774 667.997 658.505 656.563 645.798 cv
cp
f
657.009 650.868 mo
657.009 650.868 672.419 657.04 690.325 651.845 cv
690.325 651.845 668.438 663.571 657.009 650.868 cv
cp
f
659.017 655.985 mo
659.017 655.985 674.427 662.157 692.333 656.962 cv
692.333 656.962 670.446 668.688 659.017 655.985 cv
cp
f
660.712 661.095 mo
660.712 661.095 676.122 667.267 694.024 662.071 cv
694.024 662.071 672.142 673.798 660.712 661.095 cv
cp
f
660.532 666.134 mo
660.532 666.134 675.938 672.313 693.853 667.11 cv
693.853 667.11 671.966 678.845 660.532 666.134 cv
cp
f
grestore
gsave
560.31 797.032 mo
560.31 797.032 564.892 780.368 558.317 771.845 cv
547.251 757.501 538.646 752.04 538.646 752.04 cv
538.646 752.04 549.974 755.243 556.942 753.896 cv
563.903 752.54 579.899 751.228 579.899 751.228 cv
579.899 751.228 583.571 771.063 583.294 778.868 cv
583.021 786.681 580.341 791.579 574.899 795.146 cv
569.454 798.7 560.31 797.032 560.31 797.032 cv
cp
clp
542.317 753.126 mo
542.317 753.126 557.728 759.298 575.626 754.103 cv
575.626 754.103 553.743 765.829 542.317 753.126 cv
cp
f
542.138 758.165 mo
542.138 758.165 557.548 764.345 575.454 759.142 cv
575.454 759.142 553.567 770.876 542.138 758.165 cv
cp
f
543.204 763.251 mo
543.204 763.251 558.618 769.423 576.521 764.228 cv
576.521 764.228 554.638 775.954 543.204 763.251 cv
cp
f
543.235 768.298 mo
543.235 768.298 558.646 774.47 576.552 769.274 cv
576.552 769.274 554.665 781.005 543.235 768.298 cv
cp
f
543.681 773.368 mo
543.681 773.368 559.091 779.54 576.993 774.345 cv
576.993 774.345 555.11 786.071 543.681 773.368 cv
cp
f
545.688 778.485 mo
545.688 778.485 561.095 784.657 579.001 779.462 cv
579.001 779.462 557.118 791.188 545.688 778.485 cv
cp
f
547.38 783.595 mo
547.38 783.595 562.79 789.767 580.696 784.571 cv
580.696 784.571 558.813 796.298 547.38 783.595 cv
cp
f
547.2 788.634 mo
547.2 788.634 562.61 794.813 580.521 789.61 cv
580.521 789.61 558.634 801.345 547.2 788.634 cv
cp
f
grestore
425.731 732.04 mo
425.731 732.04 429.899 710.782 443.231 708.7 cv
456.56 706.618 469.896 709.95 474.896 728.7 cv
474.896 728.7 471.56 712.868 455.31 710.79 cv
439.06 708.7 431.981 712.45 425.731 732.04 cv
cp
f
376.146 752.45 mo
376.146 752.45 387.396 759.962 399.481 759.118 cv
411.563 758.29 419.478 759.962 425.31 766.618 cv
425.31 766.618 416.56 760.368 404.896 762.04 cv
393.231 763.7 372.396 759.532 376.146 752.45 cv
cp
f
gsave
426.981 703.7 mo
426.981 703.7 427.81 689.11 421.239 680.595 cv
410.169 666.239 399.481 661.618 399.481 661.618 cv
399.481 661.618 412.892 663.993 419.86 662.634 cv
426.825 661.29 442.821 659.978 442.821 659.978 cv
442.821 659.978 446.493 679.806 446.212 687.618 cv
445.938 695.419 443.259 700.329 437.821 703.884 cv
432.376 707.45 426.981 703.7 426.981 703.7 cv
cp
clp
401.067 661.876 mo
401.067 661.876 416.478 668.048 434.376 662.853 cv
434.376 662.853 412.493 674.579 401.067 661.876 cv
cp
f
405.056 666.915 mo
405.056 666.915 420.466 673.087 438.372 667.892 cv
438.372 667.892 416.485 679.618 405.056 666.915 cv
cp
f
406.126 671.993 mo
406.126 671.993 421.536 678.173 439.442 672.978 cv
439.442 672.978 417.556 684.704 406.126 671.993 cv
cp
f
406.157 677.048 mo
406.157 677.048 421.563 683.22 439.47 678.024 cv
439.47 678.024 417.587 689.755 406.157 677.048 cv
cp
f
406.599 682.11 mo
406.599 682.11 422.009 688.29 439.915 683.095 cv
439.915 683.095 418.032 694.821 406.599 682.11 cv
cp
f
408.606 687.228 mo
408.606 687.228 424.017 693.407 441.923 688.212 cv
441.923 688.212 420.036 699.938 408.606 687.228 cv
cp
f
410.302 692.345 mo
410.302 692.345 425.712 698.517 443.618 693.321 cv
443.618 693.321 421.731 705.048 410.302 692.345 cv
cp
f
410.118 697.384 mo
410.118 697.384 425.532 703.556 443.438 698.36 cv
443.438 698.36 421.556 710.087 410.118 697.384 cv
cp
f
grestore
gsave
362.396 659.95 mo
362.396 659.95 362.243 647.177 358.646 637.04 cv
356.052 629.735 352.396 623.29 352.396 623.29 cv
352.396 623.29 348.31 620.243 355.274 618.884 cv
362.239 617.54 378.235 616.228 378.235 616.228 cv
378.235 616.228 381.907 636.056 381.63 643.868 cv
381.356 651.669 378.673 656.579 373.235 660.134 cv
367.79 663.7 362.396 659.95 362.396 659.95 cv
cp
clp
336.481 618.126 mo
336.481 618.126 351.892 624.298 369.794 619.103 cv
369.794 619.103 347.907 630.829 336.481 618.126 cv
cp
f
340.47 623.165 mo
340.47 623.165 355.884 629.337 373.786 624.142 cv
373.786 624.142 351.903 635.868 340.47 623.165 cv
cp
f
341.54 628.243 mo
341.54 628.243 356.95 634.423 374.856 629.228 cv
374.856 629.228 352.97 640.954 341.54 628.243 cv
cp
f
341.571 633.298 mo
341.571 633.298 356.981 639.47 374.884 634.274 cv
374.884 634.274 353.001 646.005 341.571 633.298 cv
cp
f
342.017 638.36 mo
342.017 638.36 357.423 644.54 375.329 639.345 cv
375.329 639.345 353.446 651.071 342.017 638.36 cv
cp
f
344.021 643.478 mo
344.021 643.478 359.431 649.657 377.337 644.462 cv
377.337 644.462 355.454 656.188 344.021 643.478 cv
cp
f
345.716 648.595 mo
345.716 648.595 361.126 654.767 379.032 649.571 cv
379.032 649.571 357.146 661.298 345.716 648.595 cv
cp
f
345.536 653.634 mo
345.536 653.634 360.946 659.806 378.856 654.61 cv
378.856 654.61 356.97 666.337 345.536 653.634 cv
cp
f
grestore
gsave
373.231 754.54 mo
373.231 754.54 372.993 740.028 371.146 734.118 cv
369.06 727.45 361.146 714.54 361.146 712.868 cv
361.146 712.868 369.177 716.306 376.146 714.95 cv
383.11 713.603 389.071 710.81 389.071 710.81 cv
389.071 710.81 392.743 730.642 392.462 738.446 cv
392.188 746.259 389.509 751.161 384.071 754.728 cv
378.626 758.282 373.231 754.54 373.231 754.54 cv
cp
clp
347.317 712.704 mo
347.317 712.704 362.728 718.876 380.626 713.681 cv
380.626 713.681 358.743 725.407 347.317 712.704 cv
cp
f
351.306 717.743 mo
351.306 717.743 366.716 723.923 384.622 718.72 cv
384.622 718.72 362.735 730.458 351.306 717.743 cv
cp
f
352.376 722.829 mo
352.376 722.829 367.786 729.001 385.692 723.806 cv
385.692 723.806 363.806 735.536 352.376 722.829 cv
cp
f
352.407 727.88 mo
352.407 727.88 367.813 734.052 385.72 728.856 cv
385.72 728.856 363.837 740.587 352.407 727.88 cv
cp
f
352.849 732.946 mo
352.849 732.946 368.259 739.118 386.165 733.923 cv
386.165 733.923 364.282 745.653 352.849 732.946 cv
cp
f
354.856 738.063 mo
354.856 738.063 370.267 744.235 388.173 739.04 cv
388.173 739.04 366.286 750.771 354.856 738.063 cv
cp
f
356.552 743.173 mo
356.552 743.173 371.962 749.345 389.868 744.149 cv
389.868 744.149 367.981 755.876 356.552 743.173 cv
cp
f
356.368 748.212 mo
356.368 748.212 371.782 754.392 389.688 749.188 cv
389.688 749.188 367.806 760.927 356.368 748.212 cv
cp
f
grestore
gsave
441.56 786.618 mo
441.56 786.618 439.243 780.028 437.396 774.118 cv
435.31 767.45 424.481 758.29 424.481 756.618 cv
424.481 756.618 435.845 757.138 442.81 755.79 cv
449.774 754.431 452.407 754.56 452.407 754.56 cv
452.407 754.56 456.079 774.392 455.798 782.196 cv
455.524 790.009 457.837 786.396 452.396 789.95 cv
446.95 793.517 441.56 786.618 441.56 786.618 cv
cp
clp
410.653 756.454 mo
410.653 756.454 426.063 762.626 443.962 757.431 cv
443.962 757.431 422.079 769.157 410.653 756.454 cv
cp
f
414.642 761.493 mo
414.642 761.493 430.052 767.673 447.958 762.47 cv
447.958 762.47 426.071 774.208 414.642 761.493 cv
cp
f
415.712 766.579 mo
415.712 766.579 431.122 772.751 449.024 767.556 cv
449.024 767.556 427.142 779.286 415.712 766.579 cv
cp
f
415.739 771.63 mo
415.739 771.63 431.149 777.802 449.056 772.606 cv
449.056 772.606 427.173 784.337 415.739 771.63 cv
cp
f
416.185 776.696 mo
416.185 776.696 431.595 782.868 449.501 777.673 cv
449.501 777.673 427.614 789.403 416.185 776.696 cv
cp
f
418.192 781.813 mo
418.192 781.813 433.603 787.985 451.509 782.79 cv
451.509 782.79 429.622 794.521 418.192 781.813 cv
cp
f
419.884 786.923 mo
419.884 786.923 435.298 793.095 453.2 787.899 cv
453.2 787.899 431.317 799.626 419.884 786.923 cv
cp
f
419.704 791.962 mo
419.704 791.962 435.114 798.142 453.024 792.938 cv
453.024 792.938 431.142 804.677 419.704 791.962 cv
cp
f
grestore
398.231 785.79 mo
398.231 785.79 410.313 789.54 423.231 785.368 cv
436.146 781.2 436.56 779.95 445.31 784.95 cv
454.06 789.95 461.146 787.032 464.896 786.2 cv
468.646 785.368 470.728 787.868 467.81 789.95 cv
464.896 792.04 466.56 795.782 469.06 798.7 cv
471.56 801.618 456.704 795.536 440.798 792.118 cv
424.896 788.7 402.813 789.54 398.231 785.79 cv
cp
1 .854902 .152941 rgb
f
gsave
388.649 529.938 mo
388.649 529.938 384.899 502.438 380.821 496.849 cv
370.146 482.204 366.962 476.341 366.962 476.341 cv
366.962 476.341 372.478 480.247 379.446 478.892 cv
386.407 477.54 402.407 476.231 402.407 476.231 cv
402.407 476.231 406.079 496.06 405.798 503.868 cv
405.524 511.677 402.845 516.583 397.407 520.142 cv
391.962 523.704 388.649 529.938 388.649 529.938 cv
cp
clp
364.821 478.126 mo
364.821 478.126 380.231 484.298 398.134 479.103 cv
398.134 479.103 376.247 490.833 364.821 478.126 cv
cp
.27451 .207843 .145098 rgb
f
364.642 483.165 mo
364.642 483.165 380.052 489.341 397.958 484.142 cv
397.958 484.142 376.071 495.876 364.642 483.165 cv
cp
f
365.712 488.247 mo
365.712 488.247 381.122 494.427 399.024 489.231 cv
399.024 489.231 377.142 500.958 365.712 488.247 cv
cp
f
365.739 493.302 mo
365.739 493.302 381.149 499.474 399.056 494.278 cv
399.056 494.278 377.173 506.009 365.739 493.302 cv
cp
f
366.185 498.364 mo
366.185 498.364 381.595 504.544 399.501 499.349 cv
399.501 499.349 377.614 511.075 366.185 498.364 cv
cp
f
368.192 503.481 mo
368.192 503.481 383.603 509.661 401.509 504.466 cv
401.509 504.466 379.622 516.192 368.192 503.481 cv
cp
f
369.884 508.595 mo
369.884 508.595 385.298 514.767 403.2 509.571 cv
403.2 509.571 381.317 521.302 369.884 508.595 cv
cp
f
369.704 513.634 mo
369.704 513.634 385.114 519.81 403.024 514.61 cv
403.024 514.61 381.142 526.345 369.704 513.634 cv
cp
f
grestore
gsave
571.981 460.774 mo
571.981 460.774 564.923 441.274 560.731 435.774 cv
554.063 427.024 539.063 415.774 539.063 415.774 cv
539.063 415.774 552.384 419.173 559.353 417.817 cv
566.317 416.466 582.313 415.157 582.313 415.157 cv
582.313 415.157 585.985 434.985 585.704 442.794 cv
585.431 450.603 584.091 448.88 578.649 452.438 cv
573.204 455.997 571.981 460.774 571.981 460.774 cv
cp
clp
539.728 416.216 mo
539.728 416.216 555.142 422.388 573.04 417.192 cv
573.04 417.192 551.157 428.923 539.728 416.216 cv
cp
.27451 .207843 .145098 rgb
f
544.548 422.091 mo
544.548 422.091 559.958 428.267 577.864 423.067 cv
577.864 423.067 555.978 434.802 544.548 422.091 cv
cp
f
545.618 427.173 mo
545.618 427.173 561.028 433.353 578.935 428.157 cv
578.935 428.157 557.048 439.884 545.618 427.173 cv
cp
f
545.649 432.228 mo
545.649 432.228 561.056 438.399 578.962 433.204 cv
578.962 433.204 557.079 444.935 545.649 432.228 cv
cp
f
546.091 437.29 mo
546.091 437.29 561.501 443.47 579.407 438.274 cv
579.407 438.274 557.524 450.001 546.091 437.29 cv
cp
f
548.099 442.407 mo
548.099 442.407 563.509 448.587 581.415 443.392 cv
581.415 443.392 559.528 455.118 548.099 442.407 cv
cp
f
549.794 447.521 mo
549.794 447.521 565.204 453.692 583.11 448.497 cv
583.11 448.497 561.224 460.228 549.794 447.521 cv
cp
f
549.61 452.56 mo
549.61 452.56 565.024 458.735 582.931 453.536 cv
582.931 453.536 561.048 465.271 549.61 452.56 cv
cp
f
grestore
gsave
651.981 488.688 mo
651.981 488.688 650.521 471.646 644.481 468.274 cv
626.563 458.274 611.563 448.688 611.563 448.688 cv
611.563 448.688 632.384 447.087 639.353 445.735 cv
646.317 444.38 662.313 443.071 662.313 443.071 cv
662.313 443.071 665.985 462.903 665.704 470.708 cv
665.431 478.517 664.091 476.794 658.649 480.353 cv
653.204 483.911 651.981 488.688 651.981 488.688 cv
cp
clp
611.931 449.368 mo
611.931 449.368 628.142 452.95 644.954 444.915 cv
644.954 444.915 625.271 460.044 611.931 449.368 cv
cp
.27451 .207843 .145098 rgb
f
618.427 454.235 mo
618.427 454.235 634.599 457.985 651.501 450.118 cv
651.501 450.118 631.657 465.056 618.427 454.235 cv
cp
f
625.313 458.161 mo
625.313 458.161 641.591 461.427 658.251 453.052 cv
658.251 453.052 638.868 468.575 625.313 458.161 cv
cp
f
625.649 460.142 mo
625.649 460.142 641.056 466.313 658.962 461.118 cv
658.962 461.118 637.079 472.849 625.649 460.142 cv
cp
f
626.091 465.208 mo
626.091 465.208 641.501 471.384 659.407 466.188 cv
659.407 466.188 637.524 477.915 626.091 465.208 cv
cp
f
628.099 470.325 mo
628.099 470.325 643.509 476.501 661.415 471.306 cv
661.415 471.306 639.528 483.032 628.099 470.325 cv
cp
f
629.794 475.435 mo
629.794 475.435 645.204 481.606 663.11 476.411 cv
663.11 476.411 641.224 488.142 629.794 475.435 cv
cp
f
629.61 480.474 mo
629.61 480.474 645.024 486.653 662.931 481.45 cv
662.931 481.45 641.048 493.185 629.61 480.474 cv
cp
f
grestore
gsave
704.481 516.606 mo
704.481 516.606 708.747 507.017 695.622 494.517 cv
682.497 482.017 671.981 478.274 671.981 478.274 cv
671.981 478.274 685.544 476.157 692.458 474.556 cv
699.372 472.954 715.31 471.079 715.31 471.079 cv
715.31 471.079 719.685 490.767 719.685 498.579 cv
719.685 506.392 716.462 507.024 711.149 510.774 cv
705.837 514.524 704.481 516.606 704.481 516.606 cv
cp
clp
669.485 475.138 mo
669.485 475.138 685.106 480.763 702.813 474.935 cv
702.813 474.935 681.36 487.435 669.485 475.138 cv
cp
.27451 .207843 .145098 rgb
f
677.813 479.353 mo
677.813 479.353 693.435 484.978 711.146 479.146 cv
711.146 479.146 689.688 491.646 677.813 479.353 cv
cp
f
679.063 484.396 mo
679.063 484.396 694.685 490.021 712.396 484.192 cv
712.396 484.192 690.938 496.692 679.063 484.396 cv
cp
f
679.274 489.438 mo
679.274 489.438 694.896 495.063 712.606 489.235 cv
712.606 489.235 691.149 501.735 679.274 489.438 cv
cp
f
679.899 494.489 mo
679.899 494.489 695.521 500.114 713.231 494.282 cv
713.231 494.282 691.774 506.782 679.899 494.489 cv
cp
f
682.087 499.532 mo
682.087 499.532 697.708 505.157 715.419 499.329 cv
715.419 499.329 693.962 511.829 682.087 499.532 cv
cp
f
683.962 504.575 mo
683.962 504.575 699.583 510.2 717.294 504.372 cv
717.294 504.372 695.837 516.872 683.962 504.575 cv
cp
f
683.962 509.622 mo
683.962 509.622 699.583 515.247 717.294 509.415 cv
717.294 509.415 695.837 521.915 683.962 509.622 cv
cp
f
grestore
423.649 504.938 mo
423.649 504.938 435.313 475.774 454.899 468.274 cv
469.567 462.657 467.399 467.024 477.399 472.438 cv
487.399 477.853 499.899 489.524 503.649 499.524 cv
503.649 499.524 489.271 486.603 478.021 481.603 cv
466.771 476.603 458.646 471.392 444.896 482.228 cv
431.146 493.063 423.649 504.938 423.649 504.938 cv
cp
1 1 .607843 rgb
f
gsave
398.333 612.431 mo
398.333 612.431 400.845 604.415 393.021 588.056 cv
386.146 573.685 382.396 568.685 382.396 568.685 cv
382.396 568.685 381.981 569.517 389.856 568.099 cv
403.626 565.61 421.771 571.497 421.771 571.497 cv
421.771 571.497 417.083 584.306 417.083 592.118 cv
417.083 599.931 414.583 604.931 409.271 608.681 cv
403.958 612.431 398.333 612.431 398.333 612.431 cv
cp
clp
373.728 567.708 mo
373.728 567.708 389.188 573.755 407.048 568.415 cv
407.048 568.415 385.263 580.321 373.728 567.708 cv
cp
.27451 .207843 .145098 rgb
f
375.212 572.892 mo
375.212 572.892 390.833 578.517 408.544 572.688 cv
408.544 572.688 387.087 585.185 375.212 572.892 cv
cp
f
376.462 577.938 mo
376.462 577.938 392.083 583.563 409.794 577.731 cv
409.794 577.731 388.337 590.235 376.462 577.938 cv
cp
f
376.673 582.978 mo
376.673 582.978 392.294 588.603 410.001 582.774 cv
410.001 582.774 388.548 595.274 376.673 582.978 cv
cp
f
377.298 588.024 mo
377.298 588.024 392.919 593.649 410.626 587.821 cv
410.626 587.821 389.173 600.321 377.298 588.024 cv
cp
f
379.485 593.075 mo
379.485 593.075 395.106 598.7 412.813 592.868 cv
412.813 592.868 391.36 605.368 379.485 593.075 cv
cp
f
381.36 598.114 mo
381.36 598.114 396.981 603.739 414.688 597.907 cv
414.688 597.907 393.235 610.407 381.36 598.114 cv
cp
f
381.36 603.165 mo
381.36 603.165 396.981 608.79 414.688 602.958 cv
414.688 602.958 393.235 615.458 381.36 603.165 cv
cp
f
grestore
gsave
504.896 853.282 mo
504.896 853.282 509.478 836.618 502.903 828.095 cv
491.833 813.751 479.06 808.7 479.06 808.7 cv
479.06 808.7 494.56 811.493 501.524 810.146 cv
508.489 808.79 524.485 807.478 524.485 807.478 cv
524.485 807.478 528.157 827.313 527.88 835.118 cv
527.606 842.931 524.923 847.829 519.485 851.396 cv
514.04 854.95 504.896 853.282 504.896 853.282 cv
cp
clp
484.403 808.544 mo
484.403 808.544 499.813 814.716 517.712 809.521 cv
517.712 809.521 495.829 821.251 484.403 808.544 cv
cp
.27451 .207843 .145098 rgb
f
486.72 814.415 mo
486.72 814.415 502.134 820.595 520.036 815.392 cv
520.036 815.392 498.153 827.126 486.72 814.415 cv
cp
f
487.79 819.501 mo
487.79 819.501 503.2 825.673 521.106 820.478 cv
521.106 820.478 499.22 832.204 487.79 819.501 cv
cp
f
487.821 824.548 mo
487.821 824.548 503.231 830.72 521.134 825.524 cv
521.134 825.524 499.251 837.255 487.821 824.548 cv
cp
f
488.267 829.618 mo
488.267 829.618 503.673 835.79 521.579 830.595 cv
521.579 830.595 499.696 842.321 488.267 829.618 cv
cp
f
490.271 834.735 mo
490.271 834.735 505.681 840.907 523.587 835.712 cv
523.587 835.712 501.704 847.438 490.271 834.735 cv
cp
f
491.966 839.845 mo
491.966 839.845 507.376 846.017 525.282 840.821 cv
525.282 840.821 503.396 852.548 491.966 839.845 cv
cp
f
491.786 844.884 mo
491.786 844.884 507.196 851.063 525.106 845.86 cv
525.106 845.86 503.22 857.595 491.786 844.884 cv
cp
f
grestore
658.646 769.54 mo
658.646 769.54 659.481 780.79 655.731 788.29 cv
651.981 795.79 643.212 812.86 643.212 812.86 cv
643.212 812.86 644.063 797.868 648.231 793.29 cv
652.396 788.7 656.981 779.118 658.646 769.54 cv
cp
.27451 .207843 .145098 rgb
f
670.31 769.95 mo
670.31 769.95 681.513 785.407 687.786 789.97 cv
687.786 789.97 688.231 784.118 684.896 781.618 cv
681.56 779.118 670.31 769.95 670.31 769.95 cv
cp
f
717.81 720.79 mo
717.81 720.79 715.731 726.2 718.231 733.7 cv
720.731 741.2 720.31 749.118 720.31 749.118 cv
720.31 749.118 725.31 733.29 717.81 720.79 cv
cp
f
492.396 612.45 mo
492.396 612.45 497.81 620.79 501.146 626.618 cv
504.481 632.45 508.157 634.821 508.157 634.821 cv
508.157 634.821 502.81 622.45 492.396 612.45 cv
cp
f
477.81 615.79 mo
477.81 615.79 474.478 622.032 472.81 629.95 cv
471.146 637.868 461.669 651.603 461.669 651.603 cv
461.669 651.603 463.649 641.618 466.981 635.368 cv
470.31 629.118 477.81 615.79 477.81 615.79 cv
cp
f
346.146 579.118 mo
346.146 579.118 346.56 559.118 356.56 558.704 cv
366.56 558.286 375.728 573.704 381.56 579.54 cv
381.56 579.54 376.56 574.544 367.396 567.872 cv
358.231 561.204 351.146 553.294 346.146 579.118 cv
cp
f
459.896 581.603 mo
459.896 581.603 465.911 558.138 491.771 564.86 cv
491.771 564.86 472.071 564.021 470.521 581.603 cv
470.028 587.188 466.771 583.478 462.396 599.103 cv
461.837 601.083 456.771 595.353 459.896 581.603 cv
cp
1 1 1 rgb
f
474.896 487.228 mo
474.896 487.228 455.521 470.353 436.771 504.103 cv
436.771 504.103 433.829 519.876 436.771 514.728 cv
441.771 505.978 449.896 503.478 453.021 496.603 cv
456.146 489.728 456.146 482.228 474.896 487.228 cv
cp
f
529.896 635.978 mo
529.896 635.978 533.646 607.228 566.771 604.103 cv
566.771 604.103 554.271 607.228 553.021 612.853 cv
551.771 618.478 549.896 620.353 544.896 622.853 cv
539.896 625.353 533.646 627.228 529.896 635.978 cv
cp
f
519.271 540.353 mo
519.271 540.353 522.188 525.794 533.231 522.446 cv
544.271 519.103 551.771 502.228 574.271 522.228 cv
574.271 522.228 550.521 516.603 544.896 523.478 cv
539.271 530.353 538.021 528.478 532.396 530.353 cv
526.771 532.228 521.771 533.478 519.271 540.353 cv
cp
f
486.146 460.978 mo
486.146 460.978 482.396 450.978 492.396 441.603 cv
502.396 432.228 509.556 418.927 526.599 419.329 cv
543.646 419.728 542.396 425.353 550.521 430.353 cv
558.646 435.353 561.146 442.228 561.146 442.228 cv
561.146 442.228 546.36 427.56 532.396 427.024 cv
516.146 426.399 518.646 429.103 509.271 434.103 cv
499.896 439.103 488.646 445.353 486.146 460.978 cv
cp
1 1 .607843 rgb
f
574.271 254.728 mo
574.271 254.728 583.021 235.978 598.646 228.478 cv
598.646 228.478 583.646 239.517 577.396 255.978 cv
573.79 257.087 li
574.271 254.728 li
cp
.27451 .207843 .145098 rgb
f
563.021 480.978 mo
563.021 480.978 567.396 472.228 571.146 466.603 cv
574.896 460.978 583.454 439.724 604.704 445.974 cv
625.954 452.224 625.423 456.505 632.657 463.118 cv
632.657 463.118 612.396 452.853 604.896 452.228 cv
597.396 451.603 591.771 452.853 585.521 460.353 cv
579.271 467.853 569.896 479.728 563.021 480.978 cv
cp
1 1 .607843 rgb
f
568.646 483.478 mo
568.646 483.478 578.333 475.978 583.958 467.228 cv
589.583 458.478 596.146 451.603 608.646 454.728 cv
621.146 457.853 627.396 462.853 627.396 462.853 cv
627.396 462.853 614.821 446.653 597.396 452.228 cv
589.583 454.728 586.771 460.978 579.271 469.103 cv
571.771 477.228 568.646 483.478 568.646 483.478 cv
cp
.27451 .207843 .145098 rgb
f
572.708 483.165 mo
572.708 483.165 579.896 472.853 583.958 467.228 cv
588.021 461.603 597.083 450.04 612.396 456.603 cv
612.396 456.603 598.021 458.79 594.583 463.478 cv
591.146 468.165 592.708 472.228 587.083 474.103 cv
581.458 475.978 572.708 483.165 572.708 483.165 cv
cp
1 1 1 rgb
f
589.896 580.04 mo
589.896 580.04 591.458 576.915 597.708 571.603 cv
603.958 566.29 607.083 562.228 609.583 559.103 cv
612.083 555.978 618.021 550.978 632.396 556.603 cv
632.396 556.603 618.021 555.04 613.958 560.665 cv
609.896 566.29 609.896 568.478 603.646 570.665 cv
597.396 572.853 589.896 580.04 589.896 580.04 cv
cp
f
578.021 590.04 mo
578.021 590.04 573.958 580.665 583.333 568.79 cv
592.708 556.915 603.646 535.978 623.333 540.978 cv
643.021 545.978 652.04 553.38 652.04 553.38 cv
652.04 553.38 650.208 554.415 643.958 553.165 cv
637.708 551.915 643.333 554.728 634.896 552.853 cv
626.458 550.978 614.896 545.353 605.521 555.04 cv
596.146 564.728 591.146 570.665 585.521 574.728 cv
579.896 578.79 578.021 590.04 578.021 590.04 cv
cp
1 1 .607843 rgb
f
580.938 254.31 mo
580.938 254.31 589.688 235.56 605.313 228.06 cv
605.313 228.06 590.313 239.099 584.063 255.56 cv
580.462 256.665 li
580.938 254.31 li
cp
.27451 .207843 .145098 rgb
f
588.024 252.642 mo
588.024 252.642 596.774 233.892 612.399 226.392 cv
612.399 226.392 597.399 237.435 591.149 253.892 cv
587.548 255.001 li
588.024 252.642 li
cp
f
569.274 253.478 mo
569.274 253.478 578.024 234.728 593.649 227.228 cv
593.649 227.228 578.649 238.267 572.399 254.728 cv
568.798 255.837 li
569.274 253.478 li
cp
f
594.696 251.813 mo
594.696 251.813 603.446 233.063 619.071 225.563 cv
619.071 225.563 604.071 236.603 597.821 253.063 cv
594.216 254.173 li
594.696 251.813 li
cp
f
601.774 251.392 mo
601.774 251.392 610.524 232.642 626.149 225.142 cv
626.149 225.142 611.149 236.185 604.899 252.642 cv
601.298 253.751 li
601.774 251.392 li
cp
f
541.146 395.349 mo
541.146 395.349 543.231 387.853 549.481 385.767 cv
555.731 383.685 562.392 378.267 566.56 374.935 cv
570.731 371.599 579.896 370.349 579.896 370.349 cv
579.896 370.349 571.56 365.767 565.31 372.435 cv
559.06 379.099 556.56 379.517 551.146 382.017 cv
545.731 384.517 541.146 388.263 541.146 395.349 cv
cp
f
660.31 370.767 mo
660.31 370.767 659.892 367.849 659.06 362.849 cv
658.231 357.849 656.56 346.599 668.646 354.099 cv
668.646 354.099 663.642 352.017 661.56 354.935 cv
659.481 357.849 660.31 370.767 660.31 370.767 cv
cp
f
gsave
682.396 434.938 mo
682.396 434.938 677.212 417.427 671.146 414.095 cv
654.481 404.927 650.731 392.427 650.731 392.427 cv
650.731 392.427 662.802 393.337 669.767 391.985 cv
676.731 390.63 692.728 389.321 692.728 389.321 cv
692.728 389.321 696.399 409.153 696.122 416.958 cv
695.849 424.767 694.505 423.044 689.063 426.603 cv
683.622 430.161 682.396 434.938 682.396 434.938 cv
cp
clp
646.81 391.212 mo
646.81 391.212 662.22 397.384 680.118 392.188 cv
680.118 392.188 658.235 403.919 646.81 391.212 cv
cp
f
651.63 396.673 mo
651.63 396.673 667.04 402.849 684.946 397.649 cv
684.946 397.649 663.06 409.38 651.63 396.673 cv
cp
f
656.032 401.341 mo
656.032 401.341 671.442 407.517 689.349 402.321 cv
689.349 402.321 667.462 414.048 656.032 401.341 cv
cp
f
656.063 406.392 mo
656.063 406.392 671.474 412.563 689.376 407.368 cv
689.376 407.368 667.493 419.099 656.063 406.392 cv
cp
f
656.509 411.458 mo
656.509 411.458 671.915 417.634 689.821 412.438 cv
689.821 412.438 667.938 424.165 656.509 411.458 cv
cp
f
658.513 416.575 mo
658.513 416.575 673.923 422.751 691.829 417.556 cv
691.829 417.556 669.946 429.282 658.513 416.575 cv
cp
f
660.208 421.685 mo
660.208 421.685 675.618 427.856 693.524 422.661 cv
693.524 422.661 671.638 434.392 660.208 421.685 cv
cp
f
660.028 426.724 mo
660.028 426.724 675.438 432.903 693.349 427.7 cv
693.349 427.7 671.462 439.435 660.028 426.724 cv
cp
f
grestore
gsave
721.981 599.521 mo
721.981 599.521 728.349 584.11 714.481 572.442 cv
700.61 560.774 689.06 564.524 689.06 564.524 cv
689.06 564.524 700.251 560.665 707.048 558.646 cv
713.853 556.614 729.646 553.767 729.646 553.767 cv
729.646 553.767 735.224 573.146 735.7 580.946 cv
736.185 588.739 733.997 593.884 728.923 597.958 cv
723.856 602.021 721.981 599.521 721.981 599.521 cv
cp
clp
692.419 559.298 mo
692.419 559.298 708.353 563.946 725.677 557.036 cv
725.677 557.036 705.028 570.837 692.419 559.298 cv
cp
f
692.731 564.329 mo
692.731 564.329 708.669 568.981 725.985 562.075 cv
725.985 562.075 705.341 575.872 692.731 564.329 cv
cp
f
694.286 569.282 mo
694.286 569.282 710.228 573.938 727.54 567.032 cv
727.54 567.032 706.899 580.829 694.286 569.282 cv
cp
f
694.806 574.31 mo
694.806 574.31 710.739 578.962 728.063 572.052 cv
728.063 572.052 707.419 585.849 694.806 574.31 cv
cp
f
695.743 579.306 mo
695.743 579.306 711.677 583.962 728.993 577.052 cv
728.993 577.052 708.349 590.849 695.743 579.306 cv
cp
f
698.235 584.208 mo
698.235 584.208 714.173 588.868 731.493 581.954 cv
731.493 581.954 710.845 595.751 698.235 584.208 cv
cp
f
700.419 589.13 mo
700.419 589.13 716.356 593.778 733.673 586.876 cv
733.673 586.876 713.032 600.665 700.419 589.13 cv
cp
f
700.731 594.157 mo
700.731 594.157 716.665 598.817 733.981 591.903 cv
733.981 591.903 713.337 605.704 700.731 594.157 cv
cp
f
grestore
461.146 680.38 mo
461.146 680.38 461.142 655.798 475.31 645.38 cv
489.481 634.97 495.81 635.509 504.31 640.446 cv
512.81 645.38 526.149 652.048 533.231 670.798 cv
540.31 689.548 528.231 654.548 506.56 648.72 cv
491.63 644.696 479.481 644.13 469.896 661.22 cv
464.153 671.454 461.146 680.38 461.146 680.38 cv
cp
1 1 .607843 rgb
f
595.731 667.88 mo
595.731 667.88 601.806 643.126 611.892 635.29 cv
621.981 627.47 629.478 621.642 639.06 624.548 cv
648.646 627.47 664.532 634.11 671.591 655.587 cv
671.591 655.587 653.231 631.642 636.981 633.298 cv
620.731 634.97 603.649 647.462 595.731 667.88 cv
cp
f
380.731 445.774 mo
380.731 445.774 391.56 429.938 404.06 427.024 cv
416.56 424.106 421.56 432.438 424.06 439.938 cv
426.56 447.438 432.813 450.774 435.731 458.274 cv
435.731 458.274 429.481 453.688 424.896 450.774 cv
420.31 447.856 419.478 445.353 415.31 438.688 cv
411.146 432.024 401.981 426.606 380.731 445.774 cv
cp
f
541.56 435.774 mo
541.56 435.774 524.892 426.603 514.06 437.438 cv
503.231 448.274 498.231 449.528 499.481 457.856 cv
499.481 457.856 502.81 453.692 507.396 451.606 cv
511.981 449.524 513.231 447.442 515.731 442.856 cv
518.231 438.274 527.392 432.024 541.56 435.774 cv
cp
1 1 1 rgb
f
381.981 555.364 mo
381.981 555.364 390.173 544.009 391.493 540.728 cv
392.81 537.446 398.228 520.782 409.06 527.032 cv
419.896 533.282 425.31 537.446 429.06 539.946 cv
432.81 542.446 439.899 549.118 440.731 554.532 cv
440.731 554.532 431.142 544.946 425.31 543.696 cv
419.481 542.446 411.239 537.321 409.06 535.782 cv
401.981 530.782 399.06 535.782 396.146 542.446 cv
393.231 549.114 381.981 555.364 381.981 555.364 cv
cp
1 1 .607843 rgb
f
397.224 639.208 mo
397.224 639.208 404.481 630.79 407.396 623.7 cv
410.31 616.618 421.563 608.282 429.481 612.032 cv
437.396 615.782 451.56 618.282 456.56 632.032 cv
456.56 632.032 448.649 624.95 443.231 625.368 cv
437.81 625.782 435.731 622.45 429.481 621.2 cv
423.231 619.95 414.06 624.11 411.146 628.282 cv
408.231 632.45 399.97 638.466 397.224 639.208 cv
cp
f
534.896 725.368 mo
534.896 725.368 534.88 698.009 550.72 690.642 cv
566.56 683.282 580.731 679.95 594.896 690.782 cv
594.896 690.782 577.813 685.782 568.231 690.782 cv
558.646 695.782 553.228 694.11 547.81 702.032 cv
542.396 709.95 534.896 725.368 534.896 725.368 cv
cp
f
673.31 707.079 mo
673.31 707.079 673.228 671.618 700.31 664.118 cv
700.31 664.118 707.665 661.708 714.821 665.626 cv
721.981 669.532 730.731 675.782 731.146 686.618 cv
731.146 686.618 721.981 673.29 714.896 672.45 cv
707.81 671.618 709.06 672.032 699.06 672.032 cv
689.06 672.032 677.97 686.708 673.31 707.079 cv
cp
f
654.485 610.478 mo
654.485 610.478 656.56 585.368 672.396 575.368 cv
688.231 565.368 700.728 565.372 706.56 568.704 cv
712.396 572.032 718.646 580.368 718.646 580.368 cv
718.646 580.368 706.36 571.829 699.896 572.032 cv
686.56 572.454 684.481 577.454 676.56 579.95 cv
668.642 582.45 657.411 599.755 654.485 610.478 cv
cp
f
471.981 679.118 mo
471.981 679.118 473.435 672.216 474.583 665.665 cv
475.731 659.118 485.313 649.118 498.231 651.618 cv
511.146 654.118 515.31 663.7 515.31 663.7 cv
515.31 663.7 504.06 654.118 496.146 657.45 cv
488.231 660.782 489.06 662.868 482.81 664.118 cv
476.56 665.368 471.981 679.118 471.981 679.118 cv
cp
1 1 1 rgb
f
466.771 687.228 mo
466.771 687.228 474.583 674.415 474.583 665.665 cv
474.583 656.915 483.021 653.478 490.833 650.978 cv
498.646 648.478 504.896 650.978 509.583 655.04 cv
514.271 659.103 520.833 668.165 520.833 668.165 cv
520.833 668.165 515.833 655.04 506.146 651.603 cv
496.458 648.165 492.708 647.853 488.021 650.04 cv
483.333 652.228 476.146 652.54 474.271 659.103 cv
472.396 665.665 471.146 680.353 466.771 687.228 cv
cp
.27451 .207843 .145098 rgb
f
548.231 725.368 mo
548.231 725.368 552.392 716.2 554.06 709.118 cv
555.731 702.032 569.06 689.54 585.31 696.2 cv
585.31 696.2 572.396 694.95 568.231 702.45 cv
566.239 706.044 564.481 712.032 561.146 712.868 cv
557.81 713.7 549.481 721.618 548.231 725.368 cv
cp
1 1 1 rgb
f
609.481 667.032 mo
609.481 667.032 614.899 645.368 630.731 642.45 cv
646.56 639.532 651.563 639.95 656.981 647.45 cv
656.981 647.45 641.563 643.7 636.981 647.032 cv
632.396 650.368 621.149 647.032 609.481 667.032 cv
cp
f
520.731 194.927 mo
520.731 194.927 520.31 184.099 524.06 177.013 cv
524.06 177.013 521.708 187.767 524.481 195.345 cv
520.731 194.927 li
cp
.27451 .207843 .145098 rgb
f
526.169 195.345 mo
526.169 195.345 525.751 184.513 529.501 177.427 cv
529.501 177.427 527.146 188.181 529.919 195.759 cv
526.169 195.345 li
cp
f
531.61 194.923 mo
531.61 194.923 531.188 184.095 534.938 177.009 cv
534.938 177.009 532.587 187.759 535.36 195.337 cv
531.61 194.923 li
cp
f
537.044 195.337 mo
537.044 195.337 536.626 184.509 540.376 177.423 cv
540.376 177.423 538.021 188.177 540.794 195.755 cv
537.044 195.337 li
cp
f
542.728 197.849 mo
542.728 197.849 541.899 184.509 545.649 177.423 cv
545.649 177.423 543.282 192.771 546.056 200.349 cv
542.728 197.849 li
cp
f
547.958 199.517 mo
547.958 199.517 547.126 186.177 550.876 179.095 cv
550.876 179.095 548.935 197.774 551.708 205.353 cv
547.958 199.517 li
cp
f
553.04 209.103 mo
553.04 209.103 551.794 187.427 555.544 180.345 cv
555.544 180.345 553.454 205.353 557.626 215.353 cv
553.04 209.103 li
cp
f
558.478 212.438 mo
558.478 212.438 557.228 190.763 560.978 183.677 cv
560.978 183.677 558.892 208.688 563.06 218.688 cv
558.478 212.438 li
cp
f
563.646 224.103 mo
563.646 224.103 562.821 194.099 566.571 187.013 cv
566.571 187.013 564.481 212.024 568.649 222.024 cv
563.646 224.103 li
cp
f
gsave
691.474 767.626 mo
691.474 767.626 696.052 750.954 689.481 742.438 cv
678.411 728.087 672.813 724.938 672.813 724.938 cv
672.813 724.938 681.134 725.837 688.103 724.481 cv
695.067 723.134 711.063 721.825 711.063 721.825 cv
711.063 721.825 714.735 741.649 714.454 749.462 cv
714.181 757.267 710.341 756.798 704.899 760.353 cv
699.454 763.915 691.474 767.626 691.474 767.626 cv
cp
clp
668.896 723.72 mo
668.896 723.72 684.306 729.892 702.204 724.696 cv
702.204 724.696 680.321 736.423 668.896 723.72 cv
cp
f
673.298 728.759 mo
673.298 728.759 688.708 734.931 706.614 729.735 cv
706.614 729.735 684.728 741.462 673.298 728.759 cv
cp
f
674.368 733.837 mo
674.368 733.837 689.778 740.017 707.685 734.821 cv
707.685 734.821 685.798 746.552 674.368 733.837 cv
cp
f
674.399 738.896 mo
674.399 738.896 689.806 745.067 707.712 739.872 cv
707.712 739.872 685.829 751.603 674.399 738.896 cv
cp
f
674.841 743.954 mo
674.841 743.954 690.251 750.134 708.157 744.938 cv
708.157 744.938 686.274 756.669 674.841 743.954 cv
cp
f
676.849 749.071 mo
676.849 749.071 692.259 755.251 710.165 750.056 cv
710.165 750.056 688.278 761.786 676.849 749.071 cv
cp
f
678.544 754.188 mo
678.544 754.188 693.954 760.36 711.86 755.165 cv
711.86 755.165 689.974 766.892 678.544 754.188 cv
cp
f
678.36 759.228 mo
678.36 759.228 693.774 765.399 711.681 760.204 cv
711.681 760.204 689.798 771.931 678.36 759.228 cv
cp
f
grestore
491.149 786.188 mo
490.603 787.868 492.813 771.603 505.313 765.771 cv
517.813 759.938 534.071 757.021 544.899 772.438 cv
544.899 772.438 536.146 762.021 523.231 762.853 cv
510.313 763.688 496.985 768.271 491.149 786.188 cv
cp
f
632.813 765.771 mo
632.813 765.771 632.821 745.771 641.149 743.271 cv
649.481 740.771 652.821 738.271 654.899 736.188 cv
656.981 734.103 671.149 735.353 676.563 740.353 cv
676.563 740.353 670.313 734.521 662.813 733.688 cv
655.313 732.853 653.649 735.36 647.399 738.688 cv
641.149 742.021 631.563 741.181 632.813 765.771 cv
cp
f
640.54 524.099 mo
640.54 524.099 639.29 500.974 648.665 491.599 cv
658.04 482.224 667.415 475.349 683.665 485.974 cv
683.665 485.974 667.415 479.724 656.165 490.349 cv
644.915 500.974 650.54 522.849 640.54 524.099 cv
cp
1 1 .607843 rgb
f
504.915 539.099 mo
504.915 539.099 504.915 525.974 511.165 519.724 cv
517.415 513.474 526.165 512.224 531.79 508.474 cv
537.415 504.724 550.54 492.224 571.79 510.349 cv
571.79 510.349 555.298 508.091 546.981 510.782 cv
538.665 513.474 536.165 517.224 525.54 519.099 cv
514.915 520.974 508.04 529.724 504.915 539.099 cv
cp
f
654.915 405.349 mo
654.915 405.349 642.556 386.224 628.665 392.224 cv
601.165 404.099 609.915 434.099 609.915 434.099 cv
609.915 434.099 609.915 430.349 613.665 427.224 cv
617.415 424.099 618.54 418.157 619.915 413.474 cv
623.04 402.849 636.165 388.474 654.915 405.349 cv
cp
f
334.559 865.312 mo
334.426 865.214 331.864 863.253 328.567 861.776 cv
327.184 861.159 325.872 860.722 324.668 860.468 cv
323.489 860.214 322.118 859.737 320.477 859.011 cv
317.778 857.8 314.645 856.042 311.34 854.19 cv
307.797 852.206 304.149 850.144 300.833 848.671 cv
299.317 847.995 297.961 847.479 296.825 847.159 cv
293.461 846.198 289.836 844.87 286.336 843.3 cv
282.598 841.64 275.879 838.3 272.918 834.687 cv
272.629 834.347 272.45 834.269 272.375 834.229 cv
272.028 834.081 271.391 834.003 270.637 833.917 cv
269.211 833.761 267.262 833.534 264.981 832.519 cv
263.743 831.964 262.559 831.261 261.356 830.339 cv
258.965 828.503 256.243 826.026 253.368 823.386 cv
249.192 819.569 244.461 815.245 241.184 813.526 cv
240.856 813.358 240.543 813.214 240.231 813.065 cv
237.727 811.94 236.723 812.315 236.708 812.323 cv
236.715 812.315 236.879 812.245 237.176 811.979 cv
231.84 812.968 li
232.274 812.401 232.391 803.769 229.333 800.456 cv
227.352 798.3 224.36 795.39 220.891 792.011 cv
213.133 784.464 203.485 775.05 198.641 767.851 cv
193.731 760.558 191.508 753.917 191.911 747.655 cv
190.606 747.644 189.098 747.433 187.504 746.729 cv
185.661 745.909 184.02 744.53 182.614 742.667 cv
179.622 738.671 178.348 733.612 177.012 728.261 cv
175.747 723.19 174.438 717.968 171.594 713.964 cv
167.379 708.019 166.766 701.667 169.75 696.378 cv
167.61 694.491 164.735 691.12 162.965 685.011 cv
159.926 674.425 160.012 667.558 163.254 663.378 cv
164.715 661.511 167.547 659.308 172.731 659.472 cv
174.879 659.542 178.071 659.394 181.766 659.237 cv
192.122 658.761 203.856 658.229 210.192 661.054 cv
215.372 663.37 215.622 667.362 215.489 668.964 cv
214.887 676.21 229.793 716.054 237.508 731.354 cv
243.926 744.062 263.411 765.401 275.063 778.163 cv
280.649 784.284 284.11 789.948 287.458 795.429 cv
291.606 802.206 295.516 808.604 302.977 814.675 cv
309.012 819.569 324.633 827.8 345.809 837.253 cv
345.817 837.253 li
361.614 844.308 373.836 849.042 376.243 849.608 cv
378.129 850.065 379.825 850.624 381.286 851.269 cv
385.051 852.956 386.364 854.87 386.743 855.612 cv
389.071 860.116 li
384.11 861.159 li
379.321 862.159 355.083 867.03 347.942 864.862 cv
343.137 863.397 340.239 864.511 339.774 864.862 cv
337.391 867.901 li
334.559 865.312 li
cp
.27451 .207843 .145098 rgb
f
383.317 857.382 mo
383.317 857.382 355.614 863.163 349.067 861.171 cv
342.508 859.179 338.028 860.897 336.934 862.276 cv
336.934 862.276 331.418 857.956 325.465 856.69 cv
319.516 855.44 306.543 845.925 297.875 843.456 cv
289.215 840.976 278.911 835.917 275.895 832.253 cv
272.883 828.573 271.864 834.323 262.684 828.839 cv
256.309 825.026 249.004 813.269 242.973 810.104 cv
236.934 806.952 234.559 809.151 234.559 809.151 cv
234.559 809.151 238.747 804.972 232.161 797.839 cv
225.571 790.714 208.942 778.788 202.231 768.827 cv
195.516 758.847 195.219 749.245 196.176 745.026 cv
197.129 740.8 189.34 748.175 184.086 741.171 cv
178.836 734.19 181.024 720.585 174.739 711.737 cv
168.458 702.878 173.895 696.933 174.801 695.948 cv
175.715 694.948 169.59 694.081 166.672 683.933 cv
163.747 673.788 162.512 663.007 172.614 663.319 cv
182.715 663.644 212.391 659.675 211.649 668.644 cv
210.903 677.616 227.403 719.882 234.059 733.097 cv
240.735 746.3 260.122 767.511 272.301 780.87 cv
284.497 794.206 286.543 806.288 300.555 817.655 cv
314.551 829.022 368.622 851.769 375.34 853.358 cv
382.067 854.972 383.317 857.382 383.317 857.382 cv
cp
.721569 .411765 .0196078 rgb
f
309.965 850.753 mo
306.536 849.218 298.973 844.726 296.247 834.112 cv
293.934 834.62 290.958 834.987 287.883 834.647 cv
284.989 834.308 li
284.52 831.444 li
283.786 827.003 281.481 819.687 278.864 818.058 cv
277.731 817.354 276.418 816.667 274.747 815.925 cv
273.989 815.585 271.254 814.44 270.672 814.179 cv
270.668 814.167 270.668 814.167 270.649 814.167 cv
268.774 813.331 265.661 811.933 265.141 808.854 cv
264.981 807.89 265.075 806.991 265.165 806.198 cv
265.379 804.323 265.493 803.28 262.118 801.62 cv
256.973 799.112 255.813 796.12 255.333 793.261 cv
255.301 793.112 255.286 792.956 255.262 792.812 cv
255.2 792.948 li
254.657 792.745 254.161 792.55 253.704 792.343 cv
248.747 790.136 247.325 787.331 246.532 783.261 cv
245.442 777.604 244.145 776.776 243.895 776.659 cv
238.157 777.315 235.176 776.483 234.633 776.308 cv
232.274 775.558 li
231.977 773.097 li
231.926 772.667 231.629 769.831 232.286 766.3 cv
230.942 766.12 229.614 765.937 228.836 765.831 cv
227.211 765.604 225.809 765.214 224.543 764.647 cv
219.778 762.526 217.883 758.3 215.254 752.448 cv
214.879 751.62 214.477 750.729 214.043 749.784 cv
211.868 748.37 210.036 745.37 208.497 740.644 cv
207.372 737.198 207.176 734.491 207.016 732.315 cv
206.801 729.315 206.708 727.94 204.575 725.69 cv
201.668 722.604 201.204 719.854 200.829 717.644 cv
200.418 715.253 200.047 712.987 195.375 708.651 cv
187.598 701.425 185.2 687.487 186.887 678.046 cv
187.157 676.534 187.536 675.175 188 673.964 cv
187.458 673.866 186.872 673.683 186.239 673.409 cv
185.223 672.948 184.231 672.315 183.184 671.64 cv
182.215 671.015 181.219 670.362 180.333 669.972 cv
179.59 669.647 179.293 669.647 179.293 669.647 cv
177.184 670.925 174.735 671.12 172.543 670.144 cv
169.286 668.683 167.809 665.206 167.547 664.519 cv
165.911 660.956 li
243.356 650.792 li
243.364 650.78 250.301 649.44 256.184 649.464 cv
257.782 649.464 259.204 648.925 261.004 648.241 cv
264.032 647.089 267.805 645.651 273.583 646.483 cv
277.067 646.972 280.653 646.151 284.458 645.261 cv
288.461 644.335 292.586 643.378 296.973 643.917 cv
300.481 644.335 304.325 643.097 307.727 641.972 cv
311.129 640.87 313.825 639.979 316.348 640.644 cv
319.34 641.433 321 641.698 322.922 641.261 cv
323.301 641.171 323.497 641.073 323.887 640.87 cv
325.965 639.745 327.766 639.323 331.856 640.155 cv
332.911 640.378 333.266 640.323 333.266 640.323 cv
335.227 639.308 336.95 638.886 340.192 639.53 cv
341.333 639.776 343.079 639.218 345.286 638.503 cv
349.239 637.226 354.653 635.487 362.356 636.472 cv
368.993 637.331 373.106 636.237 377.473 635.089 cv
380.247 634.347 383.094 633.581 386.543 633.331 cv
389.708 633.104 393.817 632.409 397.797 631.745 cv
404.446 630.636 410.739 629.597 414.817 630.116 cv
420.071 630.8 433.489 630.272 445.024 627.538 cv
451.313 626.034 455.879 625.597 459.911 625.183 cv
463.645 624.815 467.168 624.464 471.668 623.331 cv
479.09 621.464 482.215 621.573 485.536 621.679 cv
486.786 621.718 488.122 621.769 489.872 621.69 cv
492.137 621.589 493.208 621.171 494.555 620.651 cv
496.497 619.901 498.7 619.042 503.145 619.354 cv
508.16 619.714 525.051 616.769 531.141 615.612 cv
534.074 615.05 li
535.348 617.745 li
535.633 618.347 538.105 623.8 536.828 629.999 cv
536.207 633.065 536.824 636.261 537.602 640.3 cv
537.895 641.823 538.207 643.437 538.473 645.175 cv
538.59 645.847 540.531 658.565 536.926 665.729 cv
537.82 666.628 538.617 667.745 539.074 669.112 cv
539.551 670.597 539.809 672.948 538.23 675.69 cv
537.793 676.522 537.977 679.909 538.113 682.636 cv
538.523 690.429 539.145 702.198 532.961 716.034 cv
532.137 717.901 li
530.137 718.269 li
530.141 718.261 li
530.148 718.261 529.367 718.476 529.043 719.14 cv
528.813 719.597 528.426 721.003 529.809 724.257 cv
532.602 730.8 li
525.605 729.558 li
524.488 729.374 523.105 729.354 522.219 729.472 cv
523.004 733.729 521.984 736.269 520.957 737.812 cv
521.746 738.972 522.559 740.636 522.133 742.655 cv
521.762 744.433 520.578 745.886 518.613 746.933 cv
516.27 748.214 515.969 748.995 514.719 754.53 cv
514.344 756.183 514.188 757.499 514.012 758.854 cv
513.469 763.229 512.844 768.183 508.406 775.917 cv
504.816 782.147 501.273 786.925 497.528 791.972 cv
495.375 794.882 493.145 797.89 490.84 801.276 cv
484.567 810.487 481.153 814.542 476.762 817.956 cv
475.372 819.034 473.758 820.487 471.903 822.175 cv
468.989 824.815 465.356 828.104 460.7 831.62 cv
458.133 833.554 457.04 834.823 456.313 835.663 cv
453.758 838.581 451.965 838.659 447.872 838.136 cv
446.34 837.929 444.981 837.667 443.754 837.401 cv
442.782 837.206 441.493 836.94 440.872 836.933 cv
440.844 836.991 440.813 837.05 440.778 837.128 cv
438.817 841.534 436.786 846.081 430.364 846.933 cv
429.153 847.097 428.184 847.128 427.309 847.159 cv
425.438 847.206 424.735 847.237 421.688 849.726 cv
420.434 850.761 419.418 851.913 418.43 853.026 cv
415.559 856.315 411.977 860.39 403.645 858.222 cv
400.36 857.37 398.293 858.839 395.192 861.315 cv
393.211 862.89 391.161 864.53 388.547 864.87 cv
386.418 865.155 385.02 865.136 383.782 865.116 cv
382.301 865.089 380.895 865.065 377.809 865.585 cv
371.067 866.737 365.579 866.862 358.25 866.054 cv
357.723 865.964 355.864 865.585 353.43 864.491 cv
350.911 863.37 347.469 861.347 344.696 857.929 cv
341.274 857.187 337.805 856.718 336.844 856.874 cv
333.809 858.058 329.829 857.526 323.325 854.999 cv
322.333 854.608 321.512 854.257 320.805 853.944 cv
320.024 853.593 319.395 853.28 318.852 853.026 cv
317.926 852.589 li
317.375 852.343 317.094 852.226 315.872 852.226 cv
314.211 852.237 312.122 851.706 309.965 850.753 cv
cp
.27451 .207843 .145098 rgb
f
171.141 663.136 mo
243.809 654.628 li
243.809 654.628 250.598 653.308 256.18 653.319 cv
261.754 653.331 264.864 649.128 273.036 650.292 cv
281.204 651.456 288.856 646.808 296.504 647.745 cv
304.153 648.671 312.043 643.503 315.379 644.374 cv
318.719 645.245 321.012 645.644 323.774 645.019 cv
326.532 644.394 325.965 642.89 331.083 643.944 cv
336.2 644.979 334.305 642.276 339.418 643.319 cv
344.543 644.362 350.129 638.788 361.86 640.3 cv
373.59 641.815 378.489 637.8 386.829 637.175 cv
395.176 636.562 408.461 633.183 414.329 633.944 cv
420.192 634.698 434.125 634.089 445.911 631.288 cv
457.708 628.487 462.833 629.519 472.61 627.069 cv
482.391 624.608 483.719 625.819 490.036 625.546 cv
496.364 625.261 496.254 622.733 502.871 623.202 cv
509.484 623.683 531.871 619.394 531.871 619.394 cv
531.871 619.394 534.098 624.112 533.055 629.229 cv
532.02 634.354 533.613 639.089 534.672 645.769 cv
535.723 652.44 535.77 664.862 531.012 666.464 cv
531.012 666.464 537.715 668.847 534.887 673.776 cv
532.059 678.722 544.449 692.159 529.445 714.472 cv
529.445 714.472 522.027 715.808 526.27 725.769 cv
526.27 725.769 517.063 724.151 518.328 729.659 cv
519.578 735.183 516.961 736.19 516.387 737.487 cv
515.809 738.776 520.863 741.347 516.777 743.554 cv
512.691 745.769 512.168 748.319 510.902 753.956 cv
509.629 759.589 512.258 765.495 506.727 775.116 cv
501.191 784.745 493.965 789.831 487.645 799.12 cv
481.333 808.397 478.192 811.952 474.395 814.901 cv
470.583 817.862 465.868 822.89 458.383 828.554 cv
450.895 834.198 454.227 835.065 448.364 834.315 cv
442.504 833.554 439.114 831.425 437.258 835.565 cv
435.415 839.706 434.145 842.55 429.856 843.112 cv
425.575 843.683 424.622 842.331 419.231 846.745 cv
413.848 851.171 412.954 856.659 404.618 854.503 cv
396.286 852.323 392.329 860.487 388.04 861.054 cv
383.754 861.628 383.211 860.761 377.172 861.784 cv
371.125 862.812 366.067 863.034 358.676 862.226 cv
358.676 862.226 349.696 862.003 345.372 855.729 cv
345.372 855.729 337.958 852.343 335.708 853.202 cv
333.469 854.062 330.27 853.573 324.723 851.405 cv
319.188 849.237 319.278 848.347 315.848 848.37 cv
312.426 848.386 295.34 842.706 299.286 829.19 cv
299.286 829.19 293.926 831.456 288.325 830.819 cv
288.325 830.819 286.243 818.097 280.891 814.784 cv
275.555 811.464 269.29 810.222 268.942 808.202 cv
268.602 806.19 271.2 801.769 263.809 798.163 cv
256.43 794.558 261.352 791.171 256.571 789.354 cv
251.805 787.526 250.973 785.917 250.317 782.519 cv
249.657 779.128 248.09 772.226 243.168 772.823 cv
238.25 773.417 236.883 771.952 236.883 771.952 cv
236.883 771.952 234.579 769.296 237.286 763.058 cv
237.286 763.058 231.426 762.304 229.383 762.011 cv
222.348 761.015 221.543 756.651 216.922 746.847 cv
216.922 746.847 214.645 747.069 212.157 739.44 cv
209.668 731.815 212.442 728.397 207.379 723.034 cv
202.325 717.675 207.641 714.784 198 705.831 cv
188.348 696.862 188.239 674.179 194.715 671.472 cv
194.715 671.472 191.903 668.058 189.833 669.921 cv
187.758 671.784 181.692 663.808 177.493 666.276 cv
173.29 668.749 171.141 663.136 171.141 663.136 cv
cp
1 .854902 .152941 rgb
f
404.446 854.882 mo
404.446 854.882 410.258 857.167 414.723 852.03 cv
419.172 846.894 420.852 844.519 426.805 844.394 cv
432.758 844.269 434.602 842.909 437.34 838.854 cv
440.083 834.815 442.274 832.683 451.469 834.315 cv
451.469 834.315 449.004 832.901 444.778 831.94 cv
440.555 830.987 438.528 831.327 437.747 833.776 cv
436.973 836.21 436 834.229 434.524 838.229 cv
433.055 842.214 431.536 842.159 427.875 842.706 cv
424.215 843.241 422.676 839.765 419.7 844.323 cv
416.743 848.894 412.551 854.765 404.618 854.503 cv
404.446 854.882 li
cp
1 1 1 rgb
f
211.747 705.597 mo
211.747 705.597 212.083 698.612 212.602 693.269 cv
213.129 687.909 209.54 684.151 214.372 681.651 cv
219.215 679.159 220.168 674.933 222.84 675.194 cv
225.512 675.456 231.243 673.046 231.243 673.046 cv
218.942 681.823 li
218.942 681.823 225.684 679.245 230.856 675.976 cv
236.043 672.714 230.262 671.065 239.489 673.319 cv
248.731 675.573 245.536 672.292 255.805 672.214 cv
266.067 672.147 288.067 666.3 281.52 668.808 cv
272.918 672.097 260.461 674.296 260.461 674.296 cv
260.461 674.296 290.411 671.847 297.133 669.257 cv
303.879 666.69 303.954 668.581 314.223 668.515 cv
324.489 668.437 335.708 664.14 335.708 664.14 cv
304.043 676.378 li
304.043 676.378 309.293 677.479 305.579 679.542 cv
301.864 681.612 316.625 679.823 310.317 683.526 cv
307.141 685.378 306.122 686.776 304.93 687.94 cv
301.649 691.132 328.887 673.19 328.887 673.19 cv
328.887 673.19 291.442 707.05 274.004 716.933 cv
256.559 726.835 254.364 728.964 249.774 731.261 cv
245.184 733.554 238.618 739.921 226.817 730.925 cv
215.004 721.94 207.247 715.69 211.747 705.597 cv
cp
1 .854902 .152941 rgb
f
198.536 661.55 mo
198.536 661.55 170.864 663.8 179.915 662.253 cv
188.981 660.722 247.583 653.815 256.465 652.667 cv
260.7 652.108 264.047 651.015 267.512 650.155 cv
271.333 649.206 273.934 649.714 282.184 649.257 cv
297.926 648.37 309.551 642.851 319.903 644.687 cv
322.415 645.128 326.336 643.581 329.473 643.37 cv
339.239 642.722 349.719 641.269 354.59 640.624 cv
361.012 639.776 377.809 638.261 385.711 636.198 cv
393.614 634.151 409.528 631.495 420.833 633.269 cv
432.141 635.058 462.407 627.003 469.215 626.315 cv
476.043 625.644 488.836 624.073 498.848 622.487 cv
508.859 620.909 532.426 618.854 532.426 618.854 cv
532.426 618.854 505.824 627.003 504.402 629.159 cv
502.977 631.315 499.047 628.62 494.356 629.784 cv
489.645 630.937 485.375 629.042 482.786 630.675 cv
480.188 632.315 478.122 632.784 475.7 634.034 cv
473.286 635.272 462.762 633.839 458.965 634.003 cv
455.168 634.167 453.657 638.612 446.583 637.784 cv
439.504 636.952 443.161 642.304 436.473 641.651 cv
429.79 640.995 434.485 644.022 425.344 643.659 cv
416.2 643.3 405.364 643.593 407.7 644.628 cv
410.028 645.675 411.79 646.925 411.79 646.925 cv
411.79 646.925 411.317 649.034 408.993 647.987 cv
406.661 646.952 404.497 649.714 407.254 651.874 cv
410.02 654.034 409.793 657.655 408.45 657.526 cv
407.122 657.401 407.801 660.026 406.637 659.503 cv
405.477 658.995 403.145 662.136 403.145 662.136 cv
403.145 662.136 398.743 661.573 399.602 663.808 cv
400.465 666.054 415.418 677.37 415.418 677.37 cv
415.418 677.37 395.192 667.433 392.551 672.304 cv
389.918 677.167 387.989 672.128 384.696 675.3 cv
381.418 678.495 381.512 672.03 377.106 675.644 cv
372.704 679.269 374.047 671.026 368.356 675.456 cv
362.645 679.894 357.09 678.808 356.786 676.347 cv
356.489 673.886 356.27 677.628 353.993 673.241 cv
348.325 662.323 343.25 671.229 340.879 669.245 cv
338.508 667.253 342.059 661.394 334.856 657.714 cv
327.665 654.042 313.629 659.413 310.739 658.593 cv
307.848 657.772 309.137 661.132 303.754 659.659 cv
298.356 658.183 295.028 660.417 292.231 661.495 cv
289.411 662.565 291.844 661.327 284.68 658.593 cv
277.524 655.858 280.231 661.261 274.364 661.901 cv
268.504 662.538 270.086 668.358 263.661 665.038 cv
257.247 661.698 259.708 661.405 254.825 662.948 cv
249.95 664.491 249.567 660.136 242.407 661.589 cv
235.243 663.046 237.575 659.901 232.309 661.276 cv
227.04 662.644 227.297 664.159 220.997 663.683 cv
214.708 663.19 217.723 666.854 213.106 665.729 cv
208.497 664.597 198.879 660.769 198.536 661.55 cv
cp
.996078 .968627 .709804 rgb
f
234.559 809.151 mo
234.559 809.151 239.227 802.862 226.391 792.011 cv
226.391 792.011 235.102 795.429 235.778 798.065 cv
236.465 800.702 238.715 799.831 238.239 801.94 cv
237.754 804.062 240.18 802.812 239.481 804.362 cv
238.793 805.917 237.844 805.956 241.672 806.737 cv
245.52 807.526 252.067 813.698 252.067 813.698 cv
252.067 813.698 244.524 806.62 234.559 809.151 cv
cp
f
357.52 681.315 mo
357.52 681.315 329.5 721.862 328.278 728.761 cv
327.067 735.663 318.168 740.987 313.665 751.081 cv
309.168 761.171 308.989 765.753 305.36 769.706 cv
301.723 773.671 296.012 782.284 293.942 786.952 cv
291.864 791.601 291.254 795.05 294.446 798.339 cv
297.625 801.62 298.848 794.714 297.625 801.62 cv
296.403 808.526 306.063 811.901 306.063 811.901 cv
306.063 811.901 319.84 831.073 333.813 837.315 cv
347.782 843.542 352.782 844.831 352.782 844.831 cv
354.458 842.487 li
354.458 842.487 362.547 833.386 367.129 833.554 cv
371.7 833.737 376.141 818.222 376.176 817.46 cv
376.204 816.69 377.543 798.058 375.735 781.589 cv
373.942 765.128 372.883 730.987 372.989 724.511 cv
373.075 718.046 373.036 693.827 373.036 693.827 cv
373.036 693.827 369.958 725.026 368.739 731.933 cv
367.524 738.815 368.301 739.167 367.938 748.319 cv
367.583 757.46 362.762 754.073 362.567 748.554 cv
362.254 740.194 354.305 737.878 354.747 730.636 cv
354.872 728.565 350.489 724.354 351.012 720.925 cv
352.313 712.354 359.223 691.394 349.879 709.55 cv
347.286 714.589 343.129 719.815 340.829 722.901 cv
327.665 740.573 357.52 681.315 357.52 681.315 cv
cp
1 .854902 .152941 rgb
f
234.93 732.538 mo
234.93 732.538 194.211 723.683 215.145 693.476 cv
215.145 693.476 228.29 702.589 231.868 701.862 cv
235.45 701.144 234.633 699.843 238.52 697.394 cv
242.407 694.933 241.809 690.019 241.809 690.019 cv
241.809 690.019 243.958 695.624 240.93 700.323 cv
237.903 705.026 237.692 704.464 238.2 711.667 cv
238.696 718.878 230.844 721.874 234.93 732.538 cv
cp
.27451 .207843 .145098 rgb
f
323.821 832.237 mo
323.821 832.237 329.926 849.843 345.02 851.464 cv
360.114 853.085 364.364 841.483 364.364 841.483 cv
364.364 841.483 352.508 835.729 353.161 829.042 cv
353.825 822.354 353.997 817.784 357.25 813.644 cv
357.25 813.644 354.477 815.675 351.661 820.925 cv
348.856 826.183 346.567 826.093 345.239 825.964 cv
343.895 825.839 340.614 824.843 335.262 828.495 cv
329.911 832.159 323.821 832.237 323.821 832.237 cv
cp
f
370.247 828.292 mo
370.247 828.292 369.868 823.933 373.579 826.054 cv
377.278 828.175 378.184 827.187 376.512 823.644 cv
374.833 820.104 377.375 821.706 378.172 813.683 cv
378.954 805.651 377.719 800.448 378.625 795.272 cv
379.543 790.097 378.25 785.331 378.348 778.854 cv
378.446 772.394 374.329 752.409 374.379 749.179 cv
374.418 745.948 373.239 705.87 373.239 705.87 cv
373.239 705.87 370.325 747.831 372.215 756.112 cv
374.098 764.401 375.458 778.034 375.493 783.183 cv
375.532 788.308 375.02 802.655 374.84 807.226 cv
374.661 811.808 375.833 816.823 372.547 820.011 cv
369.266 823.19 368.403 825.144 370.247 828.292 cv
cp
f
246.215 741.308 mo
246.215 741.308 238.563 733.097 242.352 731.198 cv
243.969 730.401 246.708 730.819 249.774 731.261 cv
252.836 731.698 251.895 727.55 259.192 724.753 cv
266.481 721.964 263.122 719.073 270.766 715.507 cv
278.411 711.925 281.391 710.468 294.774 699.229 cv
308.168 687.987 343.446 664.179 343.446 664.179 cv
343.446 664.179 300.208 697.46 294.555 702.851 cv
288.891 708.241 276.114 716.026 270.622 721.026 cv
265.137 726.015 262.333 727.097 258.665 730.104 cv
254.989 733.124 248.43 735.3 247.43 738.593 cv
246.434 741.862 246.215 741.308 246.215 741.308 cv
cp
f
281.141 787.136 mo
281.141 787.136 284.512 785.839 284.676 789.636 cv
284.84 793.437 290.489 796.417 290.489 796.417 cv
290.489 796.417 287.731 790.077 290.973 785.937 cv
294.215 781.808 303.551 766.112 303.551 766.112 cv
303.551 766.112 293.227 780.897 288.739 782.604 cv
284.247 784.335 282.485 783.073 281.141 787.136 cv
cp
f
466.411 800.479 mo
466.411 800.479 465.161 796.425 466.7 792.409 cv
470.161 783.378 468.684 770.683 469.086 773.292 cv
470.336 781.612 481.793 778.503 484.25 778.202 cv
486.715 777.909 488.793 777.433 488.793 777.433 cv
488.793 777.433 486.27 785.155 483.852 790.585 cv
481.418 796.015 474.559 799.933 466.411 800.479 cv
cp
f
359.223 724.737 mo
359.223 724.737 356.543 737.03 355.801 737.636 cv
355.067 738.241 357.528 737.929 358.43 741.12 cv
359.329 744.315 362.528 743.425 362.567 748.554 cv
362.59 753.69 364.317 758.175 362.153 760.937 cv
359.993 763.69 359.293 769.433 358.731 773.827 cv
358.157 778.229 360.387 785.729 360.387 785.729 cv
360.387 785.729 353.801 778.612 353.758 773.476 cv
353.731 768.339 350.84 771.698 352.051 764.804 cv
353.27 757.901 352.801 755.831 351.508 752.472 cv
350.223 749.101 352.766 750.702 351.559 745.05 cv
350.372 739.386 354.614 727.784 359.223 724.737 cv
cp
1 .854902 .152941 rgb
f
529.434 654.745 mo
529.434 654.745 523.48 653.261 506.621 650.925 cv
492.016 648.917 481.118 650.409 471.856 648.917 cv
465.09 647.823 411.665 646.862 411.665 646.862 cv
411.665 646.862 462.063 645.468 469.485 645.526 cv
476.911 645.573 483.77 645.839 488.856 644.862 cv
493.954 643.878 499.731 645.526 502.836 646.913 cv
505.934 648.3 511.473 648.749 515.059 648.026 cv
516.844 647.667 518.699 653.065 524.891 649.628 cv
527.949 647.917 529.434 654.745 529.434 654.745 cv
cp
.27451 .207843 .145098 rgb
f
346.375 727.839 mo
346.375 727.839 332.977 772.097 329.215 773.222 cv
325.465 774.335 326.536 777.147 323.809 784.308 cv
321.079 791.456 320.688 795.468 319.946 800.261 cv
319.204 805.05 322.872 806.222 320.579 810.312 cv
318.286 814.401 317.458 817.292 321.125 818.464 cv
324.793 819.636 329.739 824.179 329.739 824.179 cv
329.739 824.179 326.219 817.479 324.247 815.663 cv
322.254 813.847 323.68 811.698 323.903 808.073 cv
324.125 804.452 326.2 803.983 325.165 797.929 cv
324.137 791.894 326.047 787.628 327.692 781.847 cv
329.344 776.073 328.958 775.897 330.77 773.917 cv
332.586 771.933 344.286 740.858 346.375 727.839 cv
cp
f
229.551 726.886 mo
229.551 726.886 221.129 723.651 218.301 717.675 cv
216.629 714.14 211.399 712.276 211.399 712.276 cv
211.399 712.276 213.692 712.362 214.043 707.401 cv
214.395 702.448 218.329 696.745 218.329 696.745 cv
218.329 696.745 215.997 704.089 218.524 709.87 cv
221.063 715.651 216.793 713.749 220.973 717.929 cv
225.153 722.128 225.45 724.589 229.551 726.886 cv
cp
1 .847059 .117647 rgb
f
196.219 741.784 mo
196.219 741.784 200.512 734.089 189.969 717.058 cv
183.95 707.323 176.911 700.604 177.223 694.698 cv
177.528 688.788 173.668 674.503 171.27 671.562 cv
168.856 668.62 179.418 671.015 181.165 680.636 cv
182.918 690.261 183.598 701.261 186.098 706.093 cv
188.586 710.925 203.567 731.581 196.219 741.784 cv
cp
.996078 .968627 .709804 rgb
f
195.825 747.89 mo
195.825 747.89 193.395 743.241 202.145 747.616 cv
210.903 751.991 211.004 755.597 214.098 756.979 cv
217.208 758.358 232.286 764.55 233.129 775.167 cv
233.129 775.167 223.583 764.933 216.848 763.331 cv
210.129 761.729 208.356 760.468 203.915 758.956 cv
201.985 758.292 198.696 753.292 195.989 758.827 cv
194.114 762.655 191.219 748.202 195.825 747.89 cv
cp
.27451 .207843 .145098 rgb
f
278.891 818.229 mo
286.286 827.968 261.864 831.718 274.364 834.972 cv
274.364 834.972 284.583 842.315 294.122 842.862 cv
294.122 842.862 286.399 836.159 286.102 833.698 cv
285.809 831.237 287.297 823.378 278.891 818.229 cv
cp
f
420.286 649.776 mo
420.286 649.776 446.825 653.554 451.614 654.296 cv
456.403 655.038 453.254 652.714 459.208 653.964 cv
465.161 655.222 462.063 649.659 468.485 652.979 cv
474.915 656.315 507.453 662.304 507.453 662.304 cv
507.453 662.304 475.723 657.604 469.383 656.171 cv
463.043 654.745 460.75 658.839 458.637 658.358 cv
456.528 657.89 462.391 661.433 450.829 658.136 cv
439.27 654.843 420.286 649.776 420.286 649.776 cv
cp
f
194.715 671.472 mo
194.715 671.472 187.411 673.8 189.497 686.835 cv
191.59 699.862 191.372 701.394 196.047 706.042 cv
200.723 710.683 203.184 712.479 202.938 715.624 cv
202.692 718.776 202.965 722.851 206.114 725.194 cv
209.25 727.519 209.684 732.831 210.282 737.753 cv
210.872 742.667 213.266 747.226 216.411 747.472 cv
219.563 747.706 216.922 746.847 216.922 746.847 cv
216.922 746.847 217.801 757.382 224.993 761.065 cv
232.2 764.753 237.286 763.058 237.286 763.058 cv
237.286 763.058 230.969 762.792 225.477 758.956 cv
219.981 755.097 218.176 748.722 220.219 743.104 cv
220.219 743.104 217.575 745.897 214.907 743.534 cv
212.235 741.183 211.333 737.987 211.083 732.284 cv
210.84 726.601 209.27 724.198 207.379 723.034 cv
205.493 721.886 204.657 715.937 204.481 714.229 cv
204.321 712.519 201.7 709.022 198.465 704.792 cv
195.231 700.558 191.786 691.104 190.883 683.729 cv
189.989 676.347 194.715 671.472 194.715 671.472 cv
cp
1 1 1 rgb
f
244.551 773.046 mo
244.551 773.046 247.965 775.272 248.864 780.558 cv
249.762 785.847 252.196 787.167 255.516 789.112 cv
258.836 791.054 258.172 790.995 259.071 794.179 cv
259.969 797.382 261.247 796.093 263.809 798.163 cv
266.375 800.233 268.875 802.979 268.442 806.042 cv
268.004 809.101 266.77 809.245 272.762 811.464 cv
278.758 813.671 286.801 817.03 287.493 830.597 cv
287.493 830.597 293.5 833.28 298.965 829.901 cv
298.965 829.901 296.575 838.378 304.942 844.659 cv
313.305 850.948 318.418 848.347 318.418 848.347 cv
318.418 848.347 321.84 852.667 327.684 853.651 cv
333.528 854.628 338.344 851.667 345.372 855.729 cv
345.372 855.729 342.938 852.315 337.801 852.354 cv
332.665 852.382 336.922 850.507 332.012 851.104 cv
327.083 851.69 321.235 851.933 318.497 846.065 cv
318.497 846.065 315.004 848.69 309.188 846.093 cv
303.364 843.495 297.836 834.519 300.684 825.534 cv
300.684 825.534 296.586 832.089 288.309 829.792 cv
288.309 829.792 289.708 820.417 280.848 813.683 cv
271.997 806.925 269.79 810.831 269.989 806.729 cv
270.184 802.636 267.911 798.358 263.641 796.456 cv
259.372 794.558 259.895 793.378 259.774 790.534 cv
259.645 787.694 257.075 787.714 253.239 784.831 cv
249.403 781.964 254.551 775.644 244.551 773.046 cv
cp
f
328.293 835.78 mo
328.293 835.78 335.926 847.878 344.321 848.526 cv
352.715 849.159 361.239 841.183 361.239 841.183 cv
361.239 841.183 357.215 841.862 354.458 842.487 cv
351.7 843.112 348.004 840.233 345.825 842.362 cv
344.54 843.612 344.5 846.737 340.59 844.374 cv
336.676 842.003 338.176 841.425 336.286 838.729 cv
334.387 836.015 331.801 834.862 328.293 835.78 cv
cp
1 .847059 .117647 rgb
f
531.012 666.464 mo
531.012 666.464 536.117 667.03 535.785 670.378 cv
535.457 673.722 534.207 675.487 535.965 680.925 cv
537.73 686.366 539.48 700.495 529.445 714.472 cv
529.445 714.472 521.629 718.269 527.406 726.183 cv
527.406 726.183 520.129 723.183 519.543 729.198 cv
519.543 729.198 518.066 727.831 519.121 725.976 cv
520.176 724.128 523.582 723.788 523.582 723.788 cv
523.582 723.788 520.23 718.8 524.746 715.456 cv
529.254 712.128 528.418 712.448 531.379 708.425 cv
534.34 704.394 538.031 688.827 535.621 683.8 cv
533.207 678.761 533.066 675.448 533.891 672.558 cv
534.715 669.667 531.012 666.464 531.012 666.464 cv
cp
.996078 .968627 .709804 rgb
f
467.911 798.515 mo
467.911 798.515 470.161 795.565 472.938 796.104 cv
475.723 796.651 474.77 796.69 477.926 794.843 cv
481.079 792.987 481.36 788.69 481.36 788.69 cv
481.36 788.69 480.688 790.714 482.098 788.097 cv
483.504 785.468 486.286 779.737 486.286 779.737 cv
486.286 779.737 482.43 782.655 481.395 784.987 cv
480.348 787.323 478.875 790.612 477.239 790.116 cv
475.606 789.608 473.942 786.55 473.942 786.55 cv
473.942 786.55 473.895 787.694 474.086 789.862 cv
474.282 792.05 476.739 793.847 473.524 794.276 cv
470.309 794.706 470.227 792.792 467.911 798.515 cv
cp
1 .847059 .117647 rgb
f
197.274 710.077 mo
197.274 710.077 187.403 701.952 186.231 694.687 cv
185.047 687.401 184.551 673.925 175.934 670.312 cv
175.934 670.312 179.45 666.065 183.676 669.112 cv
187.911 672.159 191.872 671.612 191.872 671.612 cv
191.872 671.612 188.395 674.706 188.083 680.612 cv
187.77 686.522 187.782 695.37 191.856 701.378 cv
195.918 707.37 197.274 710.077 197.274 710.077 cv
cp
.27451 .207843 .145098 rgb
f
214.833 748.378 mo
214.833 748.378 211.782 756.796 217.129 761.511 cv
222.465 766.222 223.762 765.401 225.114 770.194 cv
226.465 774.979 237.012 778.983 242.989 776.542 cv
248.965 774.081 242.184 775.714 242.184 775.714 cv
242.184 775.714 231.528 777.706 234.79 765.206 cv
234.79 765.206 229.907 766.737 223.094 761.151 cv
216.293 755.546 215.008 750.222 214.833 748.378 cv
cp
f
200.2 753.026 mo
200.2 753.026 197.09 757.917 204.254 767.394 cv
211.434 776.886 217.59 782.878 217.59 782.878 cv
217.59 782.878 203.004 764.979 202.551 756.628 cv
202.551 756.628 201.504 752.206 200.2 753.026 cv
cp
f
206.196 757.323 mo
206.196 757.323 206.653 765.683 218.02 779.815 cv
218.02 779.815 211.551 766.698 209.946 760.39 cv
208.333 754.101 206.196 757.323 206.196 757.323 cv
cp
f
261.958 656.354 mo
261.958 656.354 267.055 651.19 279.333 653.565 cv
279.333 653.565 268.145 652.909 261.958 656.354 cv
cp
f
gsave
244.524 730.155 mo
244.524 730.155 246.18 735.604 251.313 732.753 cv
256.434 729.882 282.325 710.104 284.192 709.394 cv
286.067 708.683 345.297 662.831 345.297 662.831 cv
345.297 662.831 331.375 663.448 307.547 669.569 cv
283.731 675.683 236.708 687.901 233.028 693.386 cv
229.333 698.866 241.083 726.757 244.524 730.155 cv
cp
clp
236.008 701.562 mo
236.008 701.562 238.051 720.558 251.313 732.753 cv
254.333 731.718 li
254.333 731.718 242.497 722.433 236.008 701.562 cv
cp
f
240.989 697.304 mo
240.989 697.304 243.071 716.288 256.352 728.456 cv
259.395 727.421 li
259.395 727.421 247.52 718.151 240.989 697.304 cv
cp
f
247.211 695.858 mo
247.211 695.858 249.79 714.776 263.407 726.581 cv
266.403 725.468 li
266.403 725.468 254.293 716.522 247.211 695.858 cv
cp
f
253.356 694.394 mo
253.356 694.394 256.086 713.292 269.79 724.987 cv
272.782 723.847 li
272.782 723.847 260.61 714.987 253.356 694.394 cv
cp
f
259.032 690.722 mo
259.032 690.722 261.77 709.62 275.473 721.315 cv
278.45 720.167 li
278.45 720.167 266.274 711.327 259.032 690.722 cv
cp
f
264.411 686.3 mo
264.411 686.3 267.153 705.194 280.848 716.894 cv
283.84 715.753 li
283.84 715.753 271.668 706.901 264.411 686.3 cv
cp
f
270.168 685.065 mo
270.168 685.065 273.524 703.866 287.606 715.104 cv
290.555 713.854 li
290.555 713.854 278.09 705.417 270.168 685.065 cv
cp
f
276.27 681.972 mo
276.27 681.972 279.008 700.878 292.704 712.565 cv
295.692 711.417 li
295.692 711.417 283.508 702.577 276.27 681.972 cv
cp
f
282.028 680.741 mo
282.028 680.741 285.383 699.542 299.461 710.78 cv
302.411 709.542 li
302.411 709.542 289.95 701.093 282.028 680.741 cv
cp
f
287.122 677.812 mo
287.122 677.812 289.852 696.718 303.551 708.417 cv
306.543 707.265 li
306.543 707.265 294.364 698.417 287.122 677.812 cv
cp
f
292.879 676.581 mo
292.879 676.581 296.239 695.378 310.301 706.628 cv
313.262 705.39 li
313.262 705.39 300.793 696.94 292.879 676.581 cv
cp
f
298.485 673.894 mo
298.485 673.894 301.215 692.784 314.918 704.491 cv
317.911 703.347 li
317.911 703.347 305.731 694.503 298.485 673.894 cv
cp
f
304.247 672.655 mo
304.247 672.655 307.598 691.456 321.672 702.706 cv
324.629 701.456 li
324.629 701.456 312.168 693.019 304.247 672.655 cv
cp
f
309.754 670.858 mo
309.754 670.858 312.497 689.765 326.2 701.456 cv
329.192 700.312 li
329.192 700.312 317.012 691.464 309.754 670.858 cv
cp
f
315.52 669.62 mo
315.52 669.62 318.875 688.425 332.95 699.675 cv
335.903 698.425 li
335.903 698.425 323.434 689.987 315.52 669.62 cv
cp
f
320.715 666.972 mo
320.715 666.972 324.262 685.729 338.45 696.835 cv
341.387 695.558 li
341.387 695.558 328.84 687.237 320.715 666.972 cv
cp
f
326.415 665.487 mo
326.415 665.487 330.571 684.128 345.122 694.753 cv
348.016 693.386 li
348.016 693.386 335.204 685.487 326.415 665.487 cv
cp
f
331.333 662.362 mo
331.333 662.362 335.137 681.073 349.481 691.972 cv
352.403 690.663 li
352.403 690.663 339.747 682.519 331.333 662.362 cv
cp
f
337.016 660.792 mo
337.016 660.792 341.426 679.386 356.125 689.804 cv
359.004 688.397 li
359.004 688.397 346.075 680.683 337.016 660.792 cv
cp
f
grestore
219.778 683.448 mo
219.778 683.448 224.5 681.21 229.247 679.597 cv
234.004 677.987 231.981 678.347 238.133 677.058 cv
244.293 675.769 245.106 673.964 248.895 673.8 cv
252.7 673.632 259.083 671.823 266.161 671.261 cv
273.239 670.702 296.282 664.237 296.282 664.237 cv
296.282 664.237 278.04 670.362 264.34 673.241 cv
250.653 676.132 240.411 679.62 236.614 679.784 cv
232.821 679.96 219.778 683.448 219.778 683.448 cv
cp
f
gsave
367.364 821.159 mo
367.364 821.159 374.606 821.034 375.325 815.194 cv
376.036 809.362 375.77 778.8 376.301 776.862 cv
376.547 775.948 374.383 760.507 373.391 742.37 cv
372.313 722.628 374.231 698.073 374.231 698.073 cv
374.231 698.073 364.661 711.69 355.559 734.542 cv
346.469 757.394 328.614 802.565 330.883 808.776 cv
333.133 814.987 362.583 821.94 367.364 821.159 cv
cp
clp
339.247 811.183 mo
339.247 811.183 357.731 820.612 375.399 817.097 cv
375.75 813.526 li
375.75 813.526 359.918 818.253 339.247 811.183 cv
cp
f
338.743 804.659 mo
338.743 804.659 357.704 813.815 375.356 810.253 cv
375.848 807.05 li
375.848 807.05 359.434 811.667 338.743 804.659 cv
cp
f
341.239 798.788 mo
341.239 798.788 358.051 807.851 375.61 803.808 cv
376.465 800.729 li
376.465 800.729 362.102 805.233 341.239 798.788 cv
cp
f
343.68 792.948 mo
343.68 792.948 360.555 801.874 378.075 797.706 cv
378.915 794.62 li
378.915 794.62 364.594 799.245 343.68 792.948 cv
cp
f
344.051 786.21 mo
344.051 786.21 360.93 795.136 378.458 790.956 cv
379.286 787.87 li
379.286 787.87 364.965 792.499 344.051 786.21 cv
cp
f
343.653 779.245 mo
343.653 779.245 360.536 788.183 378.059 784.003 cv
378.895 780.917 li
378.895 780.917 364.575 785.534 343.653 779.245 cv
cp
f
346.051 773.866 mo
346.051 773.866 363.215 782.245 380.594 777.487 cv
381.333 774.374 li
381.333 774.374 367.168 779.472 346.051 773.866 cv
cp
f
347.145 767.12 mo
347.145 767.12 364.02 776.054 381.551 771.886 cv
382.395 768.788 li
382.395 768.788 368.067 773.409 347.145 767.12 cv
cp
f
349.543 761.737 mo
349.543 761.737 366.708 770.116 384.09 765.37 cv
384.825 762.253 li
384.825 762.253 370.657 767.354 349.543 761.737 cv
cp
f
350.184 755.909 mo
350.184 755.909 367.067 764.843 384.594 760.663 cv
385.426 757.577 li
385.426 757.577 371.102 762.198 350.184 755.909 cv
cp
f
352.583 750.526 mo
352.583 750.526 369.754 758.894 387.122 754.159 cv
387.86 751.042 li
387.86 751.042 373.696 756.144 352.583 750.526 cv
cp
f
353.715 744.413 mo
353.715 744.413 370.594 753.347 388.118 749.167 cv
388.954 746.081 li
388.954 746.081 374.633 750.714 353.715 744.413 cv
cp
f
356.114 739.034 mo
356.114 739.034 373.278 747.401 390.657 742.667 cv
391.391 739.542 li
391.391 739.542 377.223 744.636 356.114 739.034 cv
cp
f
357.903 733.515 mo
357.903 733.515 374.797 742.44 392.317 738.269 cv
393.153 735.183 li
393.153 735.183 378.821 739.804 357.903 733.515 cv
cp
f
360.309 728.136 mo
360.309 728.136 377.473 736.503 394.856 731.769 cv
395.59 728.651 li
395.59 728.651 381.426 733.737 360.309 728.136 cv
cp
f
361.223 722.37 mo
361.223 722.37 378.473 730.565 395.801 725.644 cv
396.508 722.519 li
396.508 722.519 382.395 727.761 361.223 722.37 cv
cp
f
363.395 716.886 mo
363.395 716.886 380.891 724.519 398.055 719.034 cv
398.657 715.886 li
398.657 715.886 384.723 721.589 363.395 716.886 cv
cp
f
363.758 711.081 mo
363.758 711.081 381.118 719.034 398.379 713.866 cv
399.043 710.729 li
399.043 710.729 384.997 716.171 363.758 711.081 cv
cp
f
365.848 705.573 mo
365.848 705.573 383.461 712.956 400.543 707.226 cv
401.102 704.073 li
401.102 704.073 387.25 709.96 365.848 705.573 cv
cp
f
grestore
454.723 715.089 mo
454.723 715.089 464.606 723.534 468.977 730.44 cv
473.329 737.343 475.344 739.804 479.817 743.651 cv
484.305 747.519 487.122 748.151 488.84 752.636 cv
490.555 757.128 491.309 756.847 494.239 760.011 cv
497.161 763.183 499.993 763.815 501.141 761.237 cv
501.141 761.237 503.434 767.214 499.575 766.112 cv
495.727 765.019 495.028 772.147 495.028 772.147 cv
495.028 772.147 495.266 766.054 490.958 760.409 cv
486.649 754.776 430.086 691.065 430.086 691.065 cv
454.723 715.089 li
cp
f
491.465 773.854 mo
491.465 773.854 498.071 768.339 494.895 763.409 cv
491.715 758.476 470.868 735.886 470.047 734.073 cv
469.645 733.19 458.797 721.925 446.454 708.604 cv
433.016 694.101 417.625 678.683 417.625 678.683 cv
417.625 678.683 419.473 691.339 427.059 714.726 cv
434.657 738.136 449.77 784.284 455.473 787.636 cv
461.18 790.976 488.278 777.511 491.465 773.854 cv
cp
1 .854902 .152941 rgb
f
gsave
491.465 773.854 mo
491.465 773.854 498.071 768.339 494.895 763.409 cv
491.715 758.476 470.868 735.886 470.047 734.073 cv
469.645 733.19 458.797 721.925 446.454 708.604 cv
433.016 694.101 417.625 678.683 417.625 678.683 cv
417.625 678.683 419.473 691.339 427.059 714.726 cv
434.657 738.136 449.77 784.284 455.473 787.636 cv
461.18 790.976 488.278 777.511 491.465 773.854 cv
cp
clp
463.45 784.14 mo
463.45 784.14 483.704 779.589 495.051 765.597 cv
493.04 762.628 li
493.04 762.628 483.875 776.354 463.45 784.14 cv
cp
.27451 .207843 .145098 rgb
f
458.895 779.433 mo
458.895 779.433 479.329 774.374 490.645 760.351 cv
488.981 757.589 li
488.981 757.589 479.293 771.62 458.895 779.433 cv
cp
f
457.059 773.308 mo
457.059 773.308 475.786 769.558 486.723 755.245 cv
485.411 752.323 li
485.411 752.323 477.247 764.96 457.059 773.308 cv
cp
f
455.215 767.276 mo
455.215 767.276 473.911 763.37 484.735 748.964 cv
483.403 746.054 li
483.403 746.054 475.333 758.761 455.215 767.276 cv
cp
f
451.192 761.835 mo
451.192 761.835 469.879 757.94 480.711 743.534 cv
479.383 740.624 li
479.383 740.624 471.309 753.331 451.192 761.835 cv
cp
f
446.45 756.745 mo
446.45 756.745 465.141 752.831 475.965 738.425 cv
474.629 735.526 li
474.629 735.526 466.559 748.229 446.45 756.745 cv
cp
f
444.852 751.073 mo
444.852 751.073 463.407 746.562 473.754 731.796 cv
472.336 728.933 li
472.336 728.933 464.68 741.901 444.852 751.073 cv
cp
f
441.391 745.183 mo
441.391 745.183 460.086 741.276 470.903 726.874 cv
469.579 723.964 li
469.579 723.964 461.504 736.667 441.391 745.183 cv
cp
f
439.801 739.511 mo
439.801 739.511 458.356 734.987 468.7 720.245 cv
467.278 717.37 li
467.278 717.37 459.629 730.339 439.801 739.511 cv
cp
f
436.567 734.608 mo
436.567 734.608 455.262 730.702 466.083 716.3 cv
464.754 713.386 li
464.754 713.386 456.684 726.104 436.567 734.608 cv
cp
f
434.981 728.933 mo
434.981 728.933 453.536 724.413 463.879 709.667 cv
462.454 706.808 li
462.454 706.808 454.809 719.776 434.981 728.933 cv
cp
f
431.942 723.503 mo
431.942 723.503 450.645 719.597 461.458 705.194 cv
460.125 702.292 li
460.125 702.292 452.059 714.987 431.942 723.503 cv
cp
f
430.356 717.831 mo
430.356 717.831 448.911 713.319 459.25 698.573 cv
457.836 695.714 li
457.836 695.714 450.184 708.671 430.356 717.831 cv
cp
f
428.211 712.448 mo
428.211 712.448 446.907 708.534 457.731 694.128 cv
456.399 691.222 li
456.399 691.222 448.329 703.933 428.211 712.448 cv
cp
f
426.622 706.769 mo
426.622 706.769 445.18 702.253 455.528 687.511 cv
454.098 684.636 li
454.098 684.636 446.454 697.597 426.622 706.769 cv
cp
f
423.653 701.757 mo
423.653 701.757 442.161 697.042 452.348 682.187 cv
450.895 679.347 li
450.895 679.347 443.368 692.382 423.653 701.757 cv
cp
f
421.817 696.151 mo
421.817 696.151 440.161 690.839 449.868 675.663 cv
448.313 672.862 li
448.313 672.862 441.231 686.132 421.817 696.151 cv
cp
f
418.391 691.456 mo
418.391 691.456 436.829 686.483 446.809 671.483 cv
445.325 668.651 li
445.325 668.651 437.989 681.808 418.391 691.456 cv
cp
f
416.489 685.878 mo
416.489 685.878 434.747 680.312 444.239 664.979 cv
442.653 662.206 li
442.653 662.206 435.75 675.585 416.489 685.878 cv
cp
f
grestore
357.688 639.218 mo
357.688 639.218 362.325 640.651 364.286 641.847 cv
366.231 643.026 367.958 641.933 368.934 641.12 cv
369.915 640.331 370.227 644.491 373.395 641.562 cv
376.559 638.651 377.625 639.726 380.247 638.729 cv
382.864 637.733 385.801 635.323 387.668 634.597 cv
389.54 633.886 357.688 639.218 357.688 639.218 cv
cp
.27451 .207843 .145098 rgb
f
360.383 645.683 mo
360.383 645.683 364.836 651.706 373.239 646.776 cv
373.239 646.776 366.708 648.202 360.383 645.683 cv
cp
f
gsave
529.406 661.327 mo
529.406 661.327 530.121 652.753 524.363 651.55 cv
518.617 650.339 487.911 649.354 486.024 648.659 cv
485.129 648.331 469.485 648.151 451.336 647.604 cv
431.567 647.011 409.786 647.159 409.786 647.159 cv
409.786 647.159 420.102 654.714 442.094 665.722 cv
464.083 676.737 507.586 698.347 513.969 696.628 cv
520.348 694.909 529.773 666.159 529.406 661.327 cv
cp
clp
517.082 688.503 mo
517.082 688.503 528.051 670.878 526.035 652.968 cv
522.508 652.315 li
522.508 652.315 525.871 668.495 517.082 688.503 cv
cp
f
510.535 688.448 mo
510.535 688.448 521.262 670.331 519.211 652.44 cv
516.074 651.679 li
516.074 651.679 519.281 668.425 510.535 688.448 cv
cp
f
504.879 685.456 mo
504.879 685.456 515.344 669.479 512.82 651.64 cv
509.824 650.519 li
509.824 650.519 513.082 665.214 504.879 685.456 cv
cp
f
499.286 682.538 mo
499.286 682.538 509.617 666.464 506.945 648.651 cv
503.941 647.558 li
503.941 647.558 507.328 662.226 499.286 682.538 cv
cp
f
492.59 681.581 mo
492.59 681.581 502.922 665.526 500.262 647.714 cv
497.247 646.612 li
497.247 646.612 500.645 661.276 492.59 681.581 cv
cp
f
485.629 681.394 mo
485.629 681.394 495.961 665.323 493.293 647.519 cv
490.282 646.425 li
490.282 646.425 493.668 661.093 485.629 681.394 cv
cp
f
480.461 678.542 mo
480.461 678.542 490.27 662.147 487.012 644.44 cv
483.981 643.437 li
483.981 643.437 487.84 657.987 480.461 678.542 cv
cp
f
473.84 676.874 mo
473.84 676.874 484.168 660.819 481.508 642.995 cv
478.5 641.901 li
478.5 641.901 481.883 656.573 473.84 676.874 cv
cp
f
468.68 674.034 mo
468.68 674.034 478.481 657.644 475.231 639.921 cv
472.196 638.925 li
472.196 638.925 476.059 653.476 468.68 674.034 cv
cp
f
462.922 672.89 mo
462.922 672.89 473.262 656.835 470.594 639.022 cv
467.583 637.917 li
467.583 637.917 470.981 652.589 462.922 672.89 cv
cp
f
457.766 670.058 mo
457.766 670.058 467.567 653.659 464.325 635.948 cv
461.286 634.948 li
461.286 634.948 465.145 649.491 457.766 670.058 cv
cp
f
451.778 668.409 mo
451.778 668.409 462.106 652.343 459.434 634.53 cv
456.43 633.437 li
456.43 633.437 459.817 648.104 451.778 668.409 cv
cp
f
446.614 665.558 mo
446.614 665.558 456.418 649.167 453.168 631.456 cv
450.125 630.448 li
450.125 630.448 453.993 645.011 446.614 665.558 cv
cp
f
441.274 663.308 mo
441.274 663.308 451.606 647.237 448.938 629.425 cv
445.934 628.319 li
445.934 628.319 449.317 642.987 441.274 663.308 cv
cp
f
436.114 660.448 mo
436.114 660.448 445.911 644.062 442.665 626.339 cv
439.629 625.339 li
439.629 625.339 443.489 639.894 436.114 660.448 cv
cp
f
430.454 659.05 mo
430.454 659.05 440.086 642.558 436.661 624.87 cv
433.602 623.905 li
433.602 623.905 437.614 638.417 430.454 659.05 cv
cp
f
425.176 656.425 mo
425.176 656.425 434.262 639.628 430.258 622.058 cv
427.176 621.198 li
427.176 621.198 431.661 635.565 425.176 656.425 cv
cp
f
419.411 655.558 mo
419.411 655.558 428.817 638.944 425.137 621.308 cv
422.067 620.378 li
422.067 620.378 426.293 634.831 419.411 655.558 cv
cp
f
414.098 653.019 mo
414.098 653.019 422.958 636.093 418.704 618.581 cv
415.606 617.761 li
415.606 617.761 420.301 632.069 414.098 653.019 cv
cp
f
grestore
428.77 689.854 mo
428.77 689.854 424.833 686.862 422.715 684.667 cv
420.59 682.479 422.02 683.425 417.313 680.089 cv
412.598 676.745 408.661 673.749 407.575 672.019 cv
406.477 670.292 399.602 663.808 399.602 663.808 cv
399.602 663.808 407.692 668.983 410.102 671.913 cv
412.512 674.843 412.997 673.526 415.735 675.976 cv
421.278 680.925 427.192 688.526 428.77 689.854 cv
cp
f
361.286 674.94 mo
361.286 674.94 366.336 671.3 365.063 674.14 cv
363.782 677.003 355.965 679.987 353.715 684.276 cv
351.61 688.308 350.934 689.726 348.524 693.124 cv
345.184 697.839 342.063 704.823 338.809 708.651 cv
335.559 712.472 316.215 739.815 314.711 743.183 cv
313.211 746.534 291.36 780.214 291.36 780.214 cv
291.36 780.214 303.387 759.53 307.77 752.487 cv
312.145 745.448 308.458 750.937 312.645 742.253 cv
316.833 733.573 319.708 729.894 321.817 725.878 cv
323.918 721.854 324.442 719.296 321.907 722.198 cv
319.372 725.097 314.989 732.136 314.989 732.136 cv
314.989 732.136 319.551 723.308 325.61 713.917 cv
331.661 704.519 336.352 698.866 334.684 698.425 cv
333.016 697.995 338.29 693.827 340.829 688.144 cv
343.364 682.448 347.708 676.237 348.981 674.726 cv
354.879 667.753 343.793 666.198 347.301 665.292 cv
350.809 664.362 364.344 672.276 361.286 674.94 cv
cp
.996078 .968627 .709804 rgb
f
350.852 688.269 mo
350.852 688.269 340.727 704.687 340.032 706.237 cv
339.344 707.792 337.352 710.167 331.473 719.167 cv
325.594 728.183 319.059 739.687 317.629 741.835 cv
316.208 743.995 296.547 776.952 296.547 776.952 cv
296.547 776.952 328.266 728.437 332.547 721.979 cv
336.825 715.507 347.598 696.589 349.758 693.827 cv
351.922 691.073 351.754 687.284 350.852 688.269 cv
cp
.27451 .207843 .145098 rgb
f
395.672 669.503 mo
395.672 669.503 391.348 670.839 392.598 677.433 cv
393.836 684.034 396.727 684.854 398.098 690.128 cv
399.465 695.378 402.575 692.589 402.833 698.28 cv
403.079 703.983 415.649 721.69 415.649 721.69 cv
415.649 721.69 400.317 705.886 397.333 696.472 cv
394.348 687.05 404.668 709.804 405.907 716.417 cv
407.145 723.007 410.778 723.229 414.989 732.558 cv
419.204 741.886 423.602 742.448 426.352 748.788 cv
429.098 755.144 459.348 811.444 459.348 811.444 cv
459.348 811.444 451.469 796.757 446.739 792.784 cv
441.997 788.808 438.512 778.878 433.481 772.448 cv
428.446 766.003 428.192 760.312 422.977 754.269 cv
417.766 748.222 419.215 746.679 414.723 739.413 cv
400.383 716.269 405.282 732.409 400.247 721.796 cv
396.825 714.542 393.836 710.097 391.34 705.253 cv
388.852 700.417 392.598 703.495 387.61 693.815 cv
382.614 684.151 382.676 676.729 379.305 678.019 cv
375.942 679.308 376.454 682.323 377.352 689.706 cv
378.235 697.089 377.446 709.296 377.446 709.296 cv
376.946 728.144 li
376.946 728.144 376.633 699.62 375.7 695.487 cv
374.758 691.339 374.59 687.538 374.211 683.183 cv
373.825 678.827 373.579 673.136 371.629 672.265 cv
369.692 671.405 370.047 670.624 367.758 670.534 cv
365.465 670.448 366.821 662.206 375.442 663.729 cv
384.071 665.253 395.672 669.503 395.672 669.503 cv
cp
.996078 .968627 .709804 rgb
f
397.333 696.472 mo
397.333 696.472 408.758 718.565 413.254 725.597 cv
413.536 726.042 413.817 726.483 414.086 726.913 cv
418.122 733.331 419.309 733.339 421.192 738.308 cv
424.106 746.003 456.899 804.765 456.899 804.765 cv
456.899 804.765 418.344 737.003 413.602 731.483 cv
408.864 725.956 407.336 720.722 404.215 717.839 cv
401.09 714.972 404.985 714.503 402.094 710.116 cv
399.208 705.722 397.333 696.472 397.333 696.472 cv
cp
.27451 .207843 .145098 rgb
f
408.993 647.987 mo
408.993 647.987 402.95 649.011 407.254 651.874 cv
411.567 654.726 412.215 652.226 414.461 655.546 cv
416.7 658.878 418.426 654.999 424.368 660.44 cv
430.309 665.886 432.43 666.366 440.883 668.269 cv
449.333 670.183 449.946 670.917 454.329 675.663 cv
458.731 680.417 482.137 689.472 482.137 689.472 cv
510.934 704.179 li
510.934 704.179 493.563 698.292 468.68 686.261 cv
443.809 674.229 475.579 691.667 457.942 684.269 cv
440.309 676.854 447.598 682.433 440.95 678.542 cv
434.317 674.647 429.618 671.62 432.375 673.776 cv
435.125 675.948 450.086 687.265 450.086 687.265 cv
450.086 687.265 452.239 688.698 457.153 692.284 cv
462.063 695.858 461.817 694.362 466.934 698.515 cv
472.063 702.655 501.75 724.745 501.75 724.745 cv
501.75 724.745 480.165 709.542 456.887 694.96 cv
433.622 680.378 437.575 684.011 425.778 675.026 cv
413.969 666.026 409.403 661.659 403.754 658.683 cv
398.11 655.702 396.161 654.831 396.161 654.831 cv
396.161 654.831 405.106 646.269 408.993 647.987 cv
cp
.996078 .968627 .709804 rgb
f
430.465 670.761 mo
430.465 670.761 465.965 692.343 471.61 695.323 cv
477.258 698.308 485.02 701.776 486.653 704.362 cv
488.29 706.952 497.954 709.167 499.797 710.69 cv
507.039 716.718 519.895 717.8 519.895 717.8 cv
519.895 717.8 506.492 712.745 499.809 707.909 cv
493.129 703.065 488.083 702.206 482.004 698.104 cv
475.926 693.995 455.985 683.073 430.465 670.761 cv
cp
.27451 .207843 .145098 rgb
f
256.661 755.116 mo
256.661 755.116 258.458 749.706 264.403 749.581 cv
270.348 749.433 272.77 749.597 276.141 745.507 cv
279.516 741.425 281.02 740.847 285.536 736.972 cv
290.059 733.097 306.817 716.386 306.817 716.386 cv
306.817 716.386 284.645 734.101 281.86 736.894 cv
279.059 739.675 275.137 745.675 271.739 746.339 cv
268.348 746.991 256.817 744.323 256.661 755.116 cv
cp
.996078 .968627 .709804 rgb
f
261.571 760.089 mo
261.571 760.089 262.27 755.761 258.059 755.429 cv
256.375 755.3 260.086 749.511 264.403 749.581 cv
268.719 749.636 272.512 749.472 276.141 745.507 cv
279.778 741.542 291.52 731.894 291.52 731.894 cv
291.52 731.894 276.258 748.046 273.372 751.718 cv
270.489 755.401 268.133 759.308 261.571 760.089 cv
cp
.27451 .207843 .145098 rgb
f
306.817 716.386 mo
306.817 716.386 314.368 709.206 316.727 705.3 cv
319.098 701.394 320.098 701.222 322.196 699.987 cv
324.305 698.761 324.067 699.276 326.723 696.112 cv
329.372 692.956 331.36 691.972 334.043 689.452 cv
336.715 686.933 349.622 671.901 349.622 671.901 cv
349.622 671.901 316.747 708.729 306.817 716.386 cv
cp
f
398.016 760.183 mo
398.016 760.183 396.801 758.722 394.282 753.241 cv
391.754 747.784 394.829 748.534 391.997 744.472 cv
389.149 740.417 391.43 737.401 389.477 733.425 cv
387.528 729.452 387.247 725.917 385.786 721.542 cv
384.325 717.167 382.59 703.671 382.59 703.671 cv
398.016 760.183 li
cp
f
416.688 827.46 mo
416.688 827.46 413.383 821.64 414.887 818.269 cv
416.391 814.901 415.868 817.46 413.497 809.581 cv
411.125 801.698 404.188 782.472 404.188 782.472 cv
404.188 782.472 411.282 808.28 409.204 812.94 cv
407.122 817.597 407.391 826.729 416.688 827.46 cv
cp
.996078 .968627 .709804 rgb
f
416.688 827.46 mo
416.688 827.46 418.586 821.784 422.02 821.769 cv
425.438 821.745 425.817 821.589 427.684 820.886 cv
429.551 820.167 432.915 821.659 429.637 819.276 cv
426.364 816.894 427.168 817.862 419.129 810.87 cv
411.083 803.866 409.485 793.534 407.801 789.675 cv
406.114 785.831 398.723 767.628 398.723 767.628 cv
398.723 767.628 407.278 792.245 408.879 796.979 cv
410.489 801.729 412.719 809.245 413.778 813.124 cv
414.833 817.011 415.786 815.565 414.887 818.269 cv
413.989 820.976 416.688 827.46 416.688 827.46 cv
cp
.27451 .207843 .145098 rgb
f
214.149 760.878 mo
214.149 760.878 214.993 769.401 219.497 776.522 cv
219.497 776.522 216.231 767.159 217.817 762.05 cv
219.395 756.933 214.149 760.878 214.149 760.878 cv
cp
f
221.063 762.565 mo
221.063 762.565 219.286 771.784 224.836 779.14 cv
224.836 779.14 223.196 769.792 224.942 766.394 cv
226.7 762.987 221.063 762.565 221.063 762.565 cv
cp
f
282.872 827.37 mo
282.872 827.37 277.547 829.413 270.887 825.05 cv
264.227 820.683 255.071 813.565 255.071 813.565 cv
255.071 813.565 267.981 821.659 272.719 823.542 cv
277.465 825.429 280.536 823.769 280.536 823.769 cv
280.536 823.769 284.981 825.284 282.872 827.37 cv
cp
f
280.594 829.386 mo
280.594 829.386 273.84 829.159 266.532 825.429 cv
259.137 821.659 251.532 815.245 251.532 815.245 cv
251.532 815.245 259.997 823.917 267.715 828.515 cv
275.426 833.124 278.231 832.05 278.231 832.05 cv
280.594 829.386 li
cp
f
280.024 818.651 mo
280.024 818.651 275.989 819.882 260.575 811.144 cv
260.575 811.144 268.641 819.159 281.208 821.737 cv
281.208 821.737 281.594 819.823 280.024 818.651 cv
cp
f
181.622 721.698 mo
181.622 721.698 182.168 742.878 189.129 745.526 cv
191.692 745.507 li
191.692 745.507 182.731 734.296 181.622 721.698 cv
cp
f
184.333 722.917 mo
184.333 722.917 185.75 737.979 195.536 746.276 cv
205.309 754.608 204.606 751.503 204.606 751.503 cv
204.606 751.503 189.696 743.214 183.731 717.995 cv
184.333 722.917 li
cp
f
227.958 770.065 mo
227.958 770.065 225.54 775.495 228.575 783.827 cv
228.575 783.827 228.641 776.874 230.325 772.05 cv
232.02 767.226 227.958 770.065 227.958 770.065 cv
cp
f
234.122 773.983 mo
234.122 773.983 231.684 778.944 231.168 786.854 cv
231.168 786.854 234.098 777.694 236.75 775.378 cv
239.411 773.085 234.122 773.983 234.122 773.983 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 13.0.0
%%For: (\700\753\745\752\761\745\751 \717\756\757\756\742) ()
%%Title: (vintage_pineapple.eps)
%%CreationDate: 3/12/2016 12:52 AM
%AI9_DataStream
%Gb"-6Bj2Os[Pn&4hUf18K,d\>JDB_r`'sjGfO-Dk3AqXN"#?=H_$U"Vo@r.[<HS\&e=>0R7!*Hm!_%7`[)RHp>(-F"^=@.&CX(=U
%l`ZS4ko'd+b>SB:msjc_IpUlj\nO2@>EsX^CA.?^X\.+1(0^B3Vn8*@>a1_GSan6-V4@>mea'>%1\l@-EXpFV[bRWUXWEa2SOU/V
%nZi?Vg.1f)Rk?f,0>O3VIB-MMpT)[_4<IS4)Y!JRrP_!q?Oif:%qZ-CRQ.)@c$XOe.iF!==no?GS^tBc::XGA2*X=BY.6-F#<dms
%Ac;eE%,M*d/AN>``TX,QYP39"RCF(2fR&k!="Is,gXsrNV`Yg;UjigKLOV)^h4XaM2Y$h-DHD>)T<4'CEHn"e]crJFE<jh23%k-^
%OpB2]"(9:R9bR3i0P[u\j^(>fBc2YfFYdVHL@Cgdhc+eZ+$Ol*Yd1\X#&s9bQo1CmAVGTao*cJjZ&EM_aWiMd6pGG6T.?>m;7RTf
%jM5i-hEgOYE3Q3jFCZ5Cr*d?IO#h3J[@WmqDCad(fkFH]\n[uVPj2gBjlAVQ^SStZ\T8\^J8STa4s%g<-IAO#l8Q/p(D2h-/VEDu
%UZQ"N/PXcJV&Q;p!EfY&`dm/r5&?$dA4"V!:XAbJB<#9tn%lK3p\V[c#IXl%\_F*Ses\+(MZ2"8VcJf!e[I:7s,32*%2/[Kec00g
%YkDBVC9%4dXeWa.r$FD=SHBjSUKK1U)L)\3,5:[onkJ%sHL"Q0)ZN-RK3.^"Z4Lb1HI[TPC/'*GJ,f+trtZUAebejVbtb=shJ/Xh
%rqi=A>d\\oAbO9[1LTRJ=m\Dq8/qStiCBP`]CnTLB$7UUUG8r7\7ckklEtLs^G+?8InoU8_bR`DlcAE6Iu>elYRAkjs)cVkoqF:H
%g;E=H1j>G%i_I78Q8rchl?\WA62mYr%qNl09[+]ko<88RO44!s6FgF+ST`0CZW^qmqhP)T%s6(&BncfBlU:94kZ@QJ$2uju6!*:"
%L<Xu4:O7ht:JAegGYfcq-:me<0i#CQX[X7hL!7A9\W+kdZ]s[AB)\H>_'2Fs#.8>*Imis14)k83V$mI?.sK^H=K>bGQ9,u\K75aN
%VS+`U]1^S0g>^_q7j'gUP&YbmXNWL1ro:iL9e^a:W!K$ZT//"eg\[Q/=.nU;k@1QF.]_@8)"XZUbed_HH5$:f$tn1k*VXmmLu'HA
%R-Sk:Qhsb-C@u<hC/PQmo4/5pWrInTl<W=n_&jJPqi<L.%cETp0F,2e.+e@EkMhp_c#SG`^sEl[RqZ0F?R_<1fAr4tQ;NN.r)p)o
%c;H2]qG$]ncD'%W=YIa/<6%Q^VaY2c_CHP>[M*+o12g)BE1ls$<gh]'b156ZjWejEnnQ\hX27V)l"3%p19oI"*.rahX@2+CJtEsn
%)uAY0=\uGId&Zghf?'&kEk9a2rP17S44&=PMmLF,WnD=W<dNjLW>:cc4>E+e2;I`F3\GWO;CD=t#?"9kUG);4eDcS'`\4J.Fo1hg
%qE]6t.;Z/VZT2dGj!B.r3)4-4judtQ-ZUVK"clk5=PoZiYLQ3a-umj1;;"79hl0#5m/*X+C"KJ:5c6K;SSMublbqc?3in20$TX8R
%E[Oeib:f:f=^L,9n-#92bj*uKRu/N9?+FZRbhSJQ:05`/]5f9i1>)0j=05YMm``q+1RE](B@*&>JZ6kA\[a@PpZ:POgt\6cqf8p0
%Aa:+VF6OGpmJ`VsS,BfrMjYH4%Qp;0oHU@XS<^.W5Ne`@<;(CB="Qm+C6[,5at6/-T<&2]DXB%&s2Xg3Fdd'"XldlK^Y>lUS,)AO
%2r/Xu\mq.Sl=ul[FJI]K;tuh=2Q_S5R`6>I:=(%SZ\C<f;"_#KoD1)efM$=2*GlS9k,ZitJNqJ`pKIj/k!_EB2CSO$>I.#:#j\po
%b&75?qO0kKPp2cog[CYs/($YZS;u#%\kgPF8?jd,b^R7\.C>Q"?FcKd[&uSJZ1T"!(V'!:]@DjX[(uI!)0Ip)nPW/?4dpPm_G.Fq
%.E<p(X`T?g^D+ldho'Aj]iM8ggJ.uB/H*.o*!iT_Mqp(N7aJ1E$)G!@k-iQ"^7lQu27GBa0l7Prgo9tl)Gr.^!,\SY5me"l4:R.<
%>LU7i43\]1afQ_?h/Ro"3X=5D:A5[06ZE=]i(R>NhO\,#^"/s:RC>^QhS=C3f."aCFFnF_\DMts-@)7G;<KdQSX`8e-b[m:S`fN9
%B/.a'q,qr:WcX3!LX&f!@EO-We!qf]>dp.n-i*[U/o;;+Xa7\p7K6!mNkFb)9[t&I/\>jj75i+johN&$l_bn1eT%mDk&!]39!O,=
%EA,e2a%r!C^WbPNFkUJ1].SdL1kfhg>`;Cj(qU6olPEjCRb"mjL"FhE`7/itMTEraYf?6N8:jQW,.#/E1RnV1^DK1>(ZSHTO3Z\&
%p_8JDN*_H=-0D(2H_rOiB170E=j3rqSf'1XE*Xqd;FIG-JtHlUqs@e_'^%24Cn>)j2du=BPuTcc%@P9mp/;(u$YSR51TDNbor+#`
%!PA3LUt1l*&\PgQqQ<";@;SrEFkc[+*rNgp::WNO.]6-uf;/`nc@i)/J*n\*j[XCMa70P7+4GHCWoI%dp8M-$.3P/6;7.&c0_h\Z
%*.N?NP`V8Mq3L.ajt%;I84@#ech/a6S(Zcs'T9Nhkp[u/dr\?"om41XV"t4rM<hNu&qu6=;fS5tS((?YofpV9.@(&ue15`@EZ=bC
%e<8T$bGh?f\AQ!,[YtotG:S[3h4!+;;Wubs:90M3iMkS-f$T>qSK#>4Ej]*:eUF<6LuPS$>#hoZ9XCNeV;LKtaN>B&<2/u[Q;t+G
%UN26=-'`MaJfdc_Z)kJ$U_]64'MY0e)Z1=%@f3J?p7J9r;/Xr'WJGEU=3]Y]'P=r\5!\41AYK=:+;6'GM9H<S1!`7U-@GMfB;23$
%Lc'ga.(Au(H`7/(eEbH8P`(]:0sdU#AipkUKdAN"\L=q>c#6N58t*^mI4e,A=Z+MoRHL=B,MHb$M_\kXcBna!gR3t_9!D+)WkD-;
%-tsGQ.i.e?(ZgNc4VbLUWG$,5\c+MKU81r9XDn-aN7,pZ:/.ap]E*4NngnFcG[@BYYPCc6??(kU3J_$'Mb24P<n/kID&j@j_TgJ(
%#.eDDJ)/7N5AAKs=fM&b$O^H?<3Y5\b04+nh*eDkF1HHEj][O_S]eFO>e>E)D5.1bF*$_5$P@9p/X'pjCMb]Srl%cPDQMYdWA_69
%k#1SR.FjRnTq_q4\#4(9;Ja2,N@W=S!-$4Q2eO@bc:07k@*V5_2B&6VJ'CK.p1f(Got>\IiohcI%\-5C"XE')aLgNXhbTM`RHQ`-
%nui]a>1_=^Qks\/fMZTqnJ3q*n]X8k(,KI'>"6MRiSR*/rjN5!_gbbH&"-Xdf3N/mUQ\mQqTme(OC:4#pPPp[0@=uA9:H`GRA$?.
%h):RI)8EDD.f(pGb4lcRI$lnAkT=aQ-O@?@Q>[KZVu"d8bTu_V>L'u<NIO8Qcn1.tV51;/kP@fOd;F*C1u7PspoOG<E;tnB@Q1i3
%5"S%:;!0^";P;gEp!+IQ0?op/PVbo3l^apsZ1A:Q1.\a+lZ.O\emM9k%4P],oBXsfYQf0[f5P$BEaT@%XJhDPdZV)=io1D1R"(Zi
%SAdb3%;BrsP(DaSrT<Y-foQ14j:Zn4q!YT:niZnubt@-ghg,-DKH.f6Y[so5PUZ3kml]b0CK>RNA%oGC6QboeDen'hhKd=h(3$C$
%b]f"q237RY6_r8da[n_A=%$YT:K"B0lCj#lW*XE@3IW.Eg?D`N3\4@:$>PGe?%-0j^0Y!K4%T0-JUuZV]IKW&6E:FLFu'S/?$Tmg
%IVfGHVr'K8+"HZO%<bOHQ_mItbRq-@6M=3sQWs$/>?5[CVk#5NY(AYKXk&rkg1b?q8$,dPHE3U8]%ZG6S(GZUk0Vd$3h&KLF6G0[
%W"b!U*']q&Z"+%fU*8XueJeDCFWZ8V3#:%c;KV)u=ADhNhbp2"M7sXXBo4cg2n"jR-CUE%AH-:H3.*'prg#f=h0)`umFAaQ8bHJ.
%hI`SF+)os^PV/&,@7%1WJ6T0?1=[a"ZebDW%G'g(()T7k#@?Q.b8bd&2ZPK4ZS:km-k,&fF5UU>]Zbqn3Ued/?KT&H9E6a=&\,b1
%7Jc0IP%L+h23@u\G\.j[\oi]RDM0=\Og/'1$N8T4UR`3jpnnK&9RF%$1i&KP@M<G_B$?0-r);&<Q[JdA67.%tY?\[TURjmXR6KYU
%XrQWIEF+K9p6F[N'%:qNa7RMbB(Y)"Wk`^Dn,?[l*+q"_IKMX%='qCt?^_[srbJMe*LrCqXZq=/Vfu`M18Up528>D@EBE@8h9)@c
%$CP76T+:.$SXaes*hG\GWhs<pR5(U<I*ApcibPjLBq!XmSZX#9_d=)?q-B`&J"mPDJ)R]fkmU8?akYI.A^<NH>N_\3S*p7F'UhL`
%9i.CW>=9B`p=J@@@6-l87Jp;hVFh2[IM5qESRsTh;7_E;h/Qm.mCs(MprOhXB@4<]juC?hGa`[n@k%rG3K>im3(@ipE/ZVhR,]#^
%Y%d&Y`jCWn3K>i70kLR/q"K#H]lL-3b1l?VSTN#>?Fg'8<D/PIbKl1(&,l>2h6fH1eU!MHi10np'Dig$lDZE7&+lICimO'IC%`LX
%E2Z!!XX`"L;N!<9.I+biQb-+o'7K=>bt8n,qGR>bXf_/XF3>o:L_ND2b]mr<(3A6LriIY,F:5/@glgYZ7Q/6;AU:I8-:M^me^I*f
%eO[S,e88)6RF_n:f+"2#%JiMO8n4On$d/bQ.cBKoh`:,V@BX;W'YJS=:K!V2e*cGDbCf^RNkJFXBpu]).8T\1Z\3$gp+gMaZ<+'F
%b`f^QTYj`^&n45hkdmhoruu!Q2pNtDLD,uN-_-8Bo4&!"$-)?A-Qmcl^.c5N0/m1N>WO@(HZPD0QFSq5pZCVpgt\BgHZQsQRnI0Y
%hKEgTSfTdor`k><">f8fV-):'SX[64F*DNicHY1U\N@:)Cu,5K0&7_Kh5,12P=q6W0lr\!g0D45X]G,%;bj+=DnA6#_NLMLEX]G?
%_\0_e+N"mHk@ZU.Y;4bmFX<o;8T&ZVM0XNn.s3-b87]2"Gl=-6)3Y)rlX7g(=*[l-lfH:bC5/3]m;f&S]3%XY'R"g>oe\))oU?QN
%V>U,XbfI,Tl^8JG.O!cq,T#8tF>GL[c-;YJIQ`H9+r5XA&=Al\\ugMT[)od]inU@/%cbchJFm37S9FW+o.8E$lFMA6I<h'39!7FL
%"-ZnqlHcmZ<6D1Vl%.\i]IG)P6EAf,Q*:-!hgfKgq2%\F/k*'D\)01p=/*'W2V:0h:7=(X@+m%fVYn24URs";V0bu&Qq9^Dj8q6'
%.1DcAOB#88hbqH;&q)-D4r%iY$F\E;!LJ8s6qB4QMcQ6MEt`YFDY!>ERBbsn],gMSkgX=SKG;8Z^_FBVaMcYr6FWoHDZ&%&25;*B
%0RdPM'MXWc1q/>(2UV;V*!d)$Zr(r2+T*1->CCDUc*OV:?oKP!:9A`kLf0KnT.,VY65,rg+gH*(]%:n,`L)36fMh/eS6sl\?k)7?
%T>Pf.,6M_#-7sXa:P*Aqf%V_,Y'%?g;*h(?Dp=R->WMduTfh_b1!LW6>recZ/9Bo4:!."L(T6%/rYOk>=[\A7*ug_NUZ^7M_V$r1
%?TO+5Ukj:*T@p7'F"9KFG+39QhQCe5O"K3E02+2O8_tl5lV`s]QjFXJAdnKJfMB(ir+bK:1icE8S-@3,H82Z2:No<>4jC3qTNb#M
%UNgXe`Ph-rno7n+m'"1f2b>'Zq&1-c%bmAlEcuBmjjN6)^;\S<b?4bceM8JnrA.\hin!5Bh7ujVH7=T943FeF?WK(/Aq]cj0MjMB
%2`8k#T4cTB^)8`OP\`m16#pj>ch5ZBU:'_C;5[CZ9G%5k[M/(oO40We9V@SM-:JW'(Ap'Br&E&M_U>70DcZRE;N0BX,0Tg#,BMV]
%Ci`?`P9r*Wp'\5)7$C!Z`PF(@LRiIlH]mMa$<'Le[gr8ER@,rH<[YpQI\#:T)jadkd)S@j/<o^kX4QMUcMs.3k:)_3-H5Nlc/=<u
%6+W]C16&&gAlX<hM:u3N3dT=km_N,+N6SZ8kG-L01\mC;ro[;Ys85R3J'2t\#?\";$\\)Vg%r$H^EL!9I"I3@J_rZ/RU3i.M3ncf
%NHRJ5SW(cFr_)A1i'6\RfWl%fb'IK(fO4u5n/^-!s4X/XHLQRUR&5p/R'pqD0)f7HXr#LsXqPF(kO:&QUZ_RZrq6DBq?CedAt7(?
%k0mrf;uJBID')O``i[,M.!Z\S2n@0VDGO`8j*,=C>`X3ELmPPoN,.sSd'.14JRd/4I)?Bpp`VK<cr2`+pp:Pbkk7%?cbe8l,2W>1
%[r_$Ls8C8M"oajLVkXL1fu\*K9*\5XlC,9,s,g-.8El0?(QIHU*FJL>-&M@olZFGnUl2?I^B'X<Z.oF:\UX6>2'=X4Y61L9)A7(:
%aIfZ&HI,g<]mo<)5A?AJ`7+[[Om;'-dDCNJpZP,Xdp3up>G*eO@B?Z0B@@n!Flp05#nC%*?)k@`kL%r)5;X&(F_N<@G[,%DLUkE;
%5XJhNR=hI4MH5pMTul^eP:6G0VMs$_pQ*a>71I(i<1K*5UaJnC2\ufO5LPGnloQ3jO6`n>]=h6T$H1gT-..uq)3$?"TtlHJ.J9=k
%RtL6f49+r#DAOgI:]?jcqOR^ZhQ>BZ[muCHY$kk4lpp16LaA*V;PXV(9Sp\_[A:&VM`cQ)=d"nV8ZBF*99Y1H=?@a#9DA*_RRQ65
%[8X<>b`dFT2/6^CXWCR[gX/T2[o5@/O3H!^Y!+["7Kc:Q"s`@O^=-LZJ9%-:Gr27%\I.KL:RFiN[jQ7+.Mt`,RS3;8a$8rZeQT_M
%foN_HH='JtrM&)5BkB1-"4gAbSLN*?/>Hh,am=/EDUciT>eMZ#BmWH%[*)J2r>LQc)WgD_AKL0G>J85Yb4V4_!#t#.D-=8Pb=\NS
%9pJbm'<a:&Q-&]GXiu7)gP\,#s$`8]S(e9+m;a.Hd]GD'of-M<-5,ZCmduNDj\@ZH<t$0q$#GaXe]`:Ph#(3fQT=H?qX)[YCTuj\
%?BbIPPaq8GnYn[hd<D>QR9fqh0l^799o0tFmJ#<gKeX*`Y%tZ$/i."S]JPmVM1.Sr6at5Z]GD%#XAr^'o\PUVl"MNn`:$li'jTYL
%9$Ug\h]'8=UQLqK'99\n"33sNht[jq%\pdbR>ks`=$Ee;CV>Z$d,h**=_PG&4RJJ2UWd&FXf96=8%;]?*LH*h;7g3(%T&rBh8l+"
%-EP^4D3ulcI"/tC:Z2W!.t5.8JO_ah(s>.<8e73nA!Q<4kf@2dC:UGg;5]E;D0H8.H\j,mc!Dt(S6K#7h*=p'?IZg64h]R1BG2fX
%#aO>f?bM+t1;0cO9kK]]kI+"]H<oq!>Bg6$(&g8nmJCQi%(tH,AsL0Boia/oo\`CraVH-3&UcX2fDRHGG%Ni4&_4qgSU,(\f4ger
%])7F!0rWk<UAFJ%&(\AKWg)ftA@p?"\1+(t_doOf<cOdNo'_@tpYsP7d[hK3HAuZd$g$N3Eq^\glrDir8ukmMW^EYUH1Iuc)uP&'
%1TV#+ia(5kK7R;^Y3U6J+$hH:V9:8"1c$(t#@lU7I4i9Hgl`@E5Ded5-f8+J=V);raKOgobPg/1nfU%jUJ!DSgol'2CEEXWSj+,V
%D?jjYduA=$SM@=DFdD@dPhhQ<m#GA8lBto/WYU^6DL9blhJ/Xh1.dp-C>`\SQ785*P@U*B25E'+LaY`\-!+cbJ3pRb6?E01Th0Z8
%NBVX2dP=$8/X*c7]5Ml8eJa>AEjI7<H_e78Vm_^iEuf^e1s2)]d[4c?enI'pH]Qg9X.>$PE,s"/?huA7r\r[iIOrI8,pe0_X5UbG
%?Vqin`(?b=o)Hl1eYl\6D3bFIjG>4q<ncq9p.To(HVD1=0DE(61A50:HNZiKV^f`8Q')R3XDJCcQ\J37$@u]!_eXT/\E=7=kQFYT
%RQ8+''K_t0PA(MnT1la>,M&KSaGAYG:1Dj&;(j\+a,7.<BjH-c]p!<?WhX4`WFfA*e*Q:T9.(Gj0o]t\d<uf/[]pj&N1)s'C=asP
%,H-;X<LVa+>7-pI@-23BALMPi2U8Z!-dG5(!`LAENpB[/[+ZbeIF@InX7a<X);;(E5LsVVLCMhZed&=f@9nn/-mD.*\XRG*Ve*5!
%8,'$jRQZNaO6T\';'2*N=2j*oNqa4IW"UJ1pX!ekPr>E*("o/Ep/a>&`@2YT$!iT(Z\KU(G,7(!7sEGm:lf?USI3%%i#&$iRg$6q
%hlMbN%b.Q7ChcdU7(9E&\^F#@ObGaIK5B[UF:A!^bf=J\O+i41]6f#ib5AKH=V\TBh.`G0lB`O_9:`k_MJCl"):hA`HcLa,NDsrJ
%1HFmENof\KXk+t^U(-J4SN9,;p/(PmliO2`L\T5pl!d_2:P'<e).c7C3(DAl4DkAMo*":UXO[,Rm'%#f7b6lbErZH"=k:d`'FI2g
%NY:k-.AJ4NGL_h?as**!20#34qSH,&C;'E'Z^*[P[U<IH2UF_%Uq_[\(;6C[3!SF>FV9ON@oW\a2TOoSGLVquRKq%f&G[[u%C3h,
%]iI4CkK]`K19N^Z!u*A1D?!)9F5FSeo+\muRA]8=S9^"["#I\erDr7Oc:P&sP'KVL2Gb`Ba.,%9]Vp$GRDmhJ,u)as,%Sb&):nI;
%PrqCpa5X%A'jqm8OhmZ0qIktCLFR;p>N4^d]-@M-D8EG^V/\4f%`UY9]sEi7_B@+s]+I#&H2Mg7\\^6I*(XaNCc`-f&._cbXa3,S
%YADR@^%2/?YHBu.P5BP/_r$C.V-h)1(t#fu7D2uFVOp;(ZkUN_/;3&T_aO^<0XV+@b41'UpP`7'[(jYpPIs*5lf7sHbWZ=*jAc.)
%f^jRn_WcX=EjqAKG\O4'"iUj&^T:^YC?%J9pE,WL6p#?5[<=^U?,F!+`,QYM5%n^&AK3D^%A<o0lX$i<KQRS.Ys<Y=CK<sPO*Z[u
%";Y3k2E?sOn^M^(=$:i]WASia._eWf`ks5:OXGO0K11JpZW\:\s13)F6YA?(TOQF<eJK][2;0fe"77h$idq[#R&K,,g2Yh./@'XW
%&F^XiIgkg2H8UkgJ!!jU0V:+l(-6HCJI%Au<*cIN%_u;.H6lCTqm^:<(69i,DXGqZOM\n'5]?9n,JuUp4@?aRVAmok*[[S5OYhf&
%J5^Q7eo)NebI.0p4ZA&2p0..C8@1_n7&k%72A0e,IGrD4(<7tn8Jd'6<c$QOk'!%$+IbiWpONY6P;7C4Q5oP>bpj"3'N8&<A#/KS
%\8;<dl.S,tIC7fS@@dM^c,\uDW,:#2)eD\_Sq-p+!A_rN"d9N]S,j\JHR@RmT4_"Wdk1SbN\37H>P3=B&NrXu7B;V<D^\QPiZE6l
%ehQBa@S$gjZPaloHnkQ2bKgX1pnH<b[-R3pX-nf@P/8V,%=[PU\^o!SRf"-7/V>Ze?srqb-L>HDf>8>(U.gQ@+luD2bg0R&=omt8
%&2m&N]D]ki:3`gB,Rc__)36?/_%D9aQ>)o.'<612rT6,skK7+@GpQRmd]'Xp\[)BKES)2kq.npkgAP<!r3dC>RJP2*$*A@[D)a@f
%0hJdDRFq)Ss2F+?l2t`m,d>#4Bf1Eps(li''7>puFppR'0!Sn#CD4#gaLUM@Q?Y=gat>+FpcF7j'!$523_SbSSQ<'3Rfcl.,Nb"j
%5=QO5ku/G=Wqt]*eW!7oXXZ#LmA(N04X8Q?B`;72X18hA,UqHQL*91@(kl\uH0A!pnj9?r#FBe4@9&1YY0q#)Q[@KKMl8Em'Jju#
%R**eBm4mOeUrP4>=?2!CNeUKPc&Ut+AE6&$<bAklXFQO,Bmblc&%U@edoZaj>`qBN\0ekM5,iAJaRRXdoc?SDh'MV6*Zr,DcrXO.
%1_t,<e>[4Tj;NVFD5Jd`8gptS2DY^%2CG*H2!'6d%aV?r05,Kod[`8$r_U`>'=lueA`5jc('J5.iQ#L-d1=lr*\an^Qm&QS:Q1c?
%\_aC:4&3BT[WJurp3(5i3@0#"nool:ADG_Vf"-LL>aegM9#h#S<Ifo^4!9]U"51cIc"pYSrT]irRru2=XkQa@BZaUQRec"?-9"0T
%%0]Rlh/>\n`m)TK\k6QZVJ]aIAsufU2^9@+1?fK*b0@25@uQ>A-KgY!KJO=C)VEBul,\rqEX=[u)=%WBNTA`]Yb?2R0?5Zm*a%L5
%hWEoO8OJOfRFJa7fJ@D7A(IKu$k#*DHf%(\hW3bBS$8$'C!Pa6a1;l!%T&F&\IVQNhYM:Edokq'cFgMM_f3]X]TRJ.eZA<]-m(5o
%4#na.m,jlJHp2EFL4NXZ*d[YD\d'o*?u-$;E_e>O0[,Zh4J?;/mC4G]=-bu&<\U\80NPmCCl=7q.iq2P2giAcq>I)!hRrB=RPuK9
%lgbBP1P9i1$!C=V1kLN5XhGQ>.T3_*4O7D$S7IH"pO*3e:dXZ0eo>;g5dtVXJ`T,<f9Fs[4"+o^"`=oGpF;G7]'hc9IILrjmG74A
%=3L'!?J#d3Qh0O6c,SGZC%KW.d[d4gLP8nlgV)d`H+r7n?!2Z`q/jZ&[^,kP_k$Hq^Z(S<XI\:`kr<krUKdXs4C'`1Xfm2q5$hT#
%C3S:A0<HTUbkgVuSW<".U6e)mrd&p>c%uo;[GRTWMV7@6djnpF=$OKNI^+!E`W*I$.t7AcG<RW4jVk8gDJnd5GII:r]A"tRSU9hr
%hs(a0_(`hAj2LQ8\)$Yn'E@Ic:OhF8$e`#@O.,FEnp,ZN]_$JtV42<Q(74I`9+.6>',ZJtX7R.^Zf9*iGCI9??@T_1P!A7IcMWac
%^lEej:op&=hq-JO4ab:'Jk:.o?V\ACi26h;Md+`648J!rgV)CYo%bWgidJAkLLJ&<$]C:0MYh^nE98.BY3#*+%i4c?QG+uS(EU:>
%'r(]fVf,qt4^5$fb3/OuD/nTHqi$:gN@/;P;nMdHV=s">2.+,um,;ttnW/-:qr#;7>em--eJDjV%-+J(rOe_;<ZX.7J)=CWi]$l3
%^#o2f\gM[(;qWoBcW<g=b"D1mpFYa%s"O$$fg^+\<d7Ms6T0.;?W^Wlno]Gc_/&hMI=Jr7[<D<#`_u#0IB;GZ-h$J%^X2h_\G!B-
%BuN-IqjH=<[!<aZo[J58(Q[[ApWe-A`3"?S5C_`G$\?$oDB%a$]0!tZjg>>i4,Y1B3/iWBpd/nm/hi6(r7dN)^FVQ#XiX@Sml"Km
%s2*4(=+6Y3_:eqtIW$c$ICc[o'q_&r/h_PFqq>fXgT)uLRX3!C^>6H&L4N\,(O?F\j!g?'^[G[9aItNd:;1s@gKfcLcQ)DKpT9T?
%/:LeSSih;oIA:%rGVAM+^Ngjfh1,GO[p-rB'i,<Shq,Vm?9*^Jo$3$.,Mpe.?M3?uOh(6Fn%@!6QAXSV*>N>H]I0a-NVfWM_T?:$
%p@.<JhqtWGiW4[amu<[Eh<i699>sEOQb5CpYF,QU"FBJ%lc!LTbMRS::VEF6^3\H//U-uaf>"o,9:MF'$$@*R4*T2T%Y01T$Wnoq
%j(%c]WV(E$=j\YrZ#13qXF4A)'nJgq0.l<jiKqaN27U3=_c;K.jR_`>gS]J:eKhWh`V*p3k_2TMZaSLmrE<AaH'unpCPO"68,'a!
%nOs.2`9ZlI;/+uTqbc=rgHXRtgs23pH3HM-clun>YYdhU>mKe44FkE,I8i0hgZ\L7PrJS#s.f8Tni?&"YJ2*&q/;`Ab=fn7Y[\!c
%UR)-$-?lsu>m+U-1b@du5F`7R06L"]g\g!%!:t#/L:-:4>U?$!?KojDIC3$r5?`t@2nrfZ[<QDiY0'=MUZhQ"DgD(/ae#U0r9Y,V
%>(#nKrAahZ=)I$ac*sh1iS"*Tn;`inq??8GV:I/toO-APPhSD_HO,[\IZX:>\'IHa4t<-dI."gu>A#K"2r;8uXs?&enFH1E?!9Jk
%rB8=#YJk#7ls9&(rCV:<hh0_`iMV"kXhMG;dOj#X3)&,$otjhST.dQeV6s$=+X-,8mQW<O[fpkH6?J^:EIVKWp[@Q[c#`-Q8C.`-
%rtHds*F.h?HsL"5lCNP(Y2"0kB#"<oGOY8o62heb^94Y&04^d"f=)k5[NFSTO8Yj/63#;gs%8hZVEmjb]i/'Z^dj]$e0c?hT'[;^
%^AkKdf6G^?Zu3N]BPbK!Wd3X$=j?J400]:T_GBWm6<e^ufk-i<km8=VfsNA,^0EWLW$f?r:QN@UIRkM],OgWdD=%u.HaXGLI4K=S
%l.hS5oE;F#njPB/UNlSTM<X=R?CY)T1*)r"cAp`_PFu?/V=[BMet`-D\&mB<>r2sRIX.:PUb@e?]dC>nn)MrGHBrgR7;mAZHG+S.
%s8%sQmO!q.n7>mBjP&q<-Ld=MI/$=Ij\%5_>T@AF["b4A9b6:48]8MKG;e!#_,R92Vl+:1#'P[s`P41U&Gb82=!r"DC=4(0Xatt"
%YEZd3r/.jIB6+N-N1c/kGIE_$MWs6fIaK6NQsom2bGEH[4-E]'Frn5u6m.=db9"ZmG'W'9O:8)F0fY^,\+5,84WP@ShoDM+J'*-P
%+5,T"o(M#m\NaoM0U<<r`5drMP,(][I?V"R%QE53Ys^skrgjpmTJV)nnO(N]VhP-a1"*>JJpGh$VfD?!hQH^3Q@oY)[6FLucmF.1
%4+-q2=^$:l*J,AP@O:\;Qtq<I4P_W<h>+9Q](7n>C<_Qp<ruq6/DgPVVKfiSmd?Rn6LDtDqF9TEqZGDd#ogeLm9T2K,]/[_GNA1b
%[l3I?cr>q$bE&7"9t7\*k`8j1%JXGQh=\5f(W+$lJ,a$Kjid,gjHB((;/X-Ogg*/>dQ'eW[_CTP#DZG-f4*j,;*S5gr`X&Brp,d*
%*dn)[okf&NZ?5jemk%\c$.mVL+.j=D`uE?7PD]jJ(]?&E)mR]f#^-m<?.-"YrtQR4Y[2(8Yh=3]"n*IVCq94LBE+#4:(.R[YiX]%
%J&ch+iOP$Nof&G.'V:4<#;r2-j5S^r*q59+SAu[E:sX<Vb;m5GIkG?^q\OO`E9"'X?ZkZS&+[2pa7]@kilf"/&4UndS:A6Ol#H^q
%rQdV^Q&QTLVE\UlP-,-hs&8At[^c"T0?6/0NX'Hn*'pb'gj`Pc50WE.GmS!lCs"RQcf@-ZK=CKPk<7CDYaM\AVk;$hJ72p]i9F::
%h;[Smr<W2bobt[h(&2LB\(UcJ3"-U)SQCI4h7gma=aMR6Ai"X-?XJK,:VWBarF`anqO9R?\?gsO,M92@B+-b-I6>8K3;_a]$I&;/
%8<L^N/1`c=;BUJ'ZNuT6hMJ!FAHi$e0DT\TpH.me1sHsieOJB1UO"ZQ8UL9]g;Y4;r>*0?jn%NEV2](/g!dMS2?KbZV0c!%"b(%[
%7K2u:qO[BD6fXG*[K#37me*W5\*0!U5J6l*b;QgN)#eg\GgG#[BBu&Ch5GC/BZ6R07fV./__@N79C&.ofc+R8kM7p4@F]V2q@t$d
%JoMD=[Lt7ND<IPSSUTELQeliQ%%P550=c&pjg+m'U%:EObH\ObZ*`B`mD\\Fj$u`PLots[!%h3?TW[u]V5$P)c>]oZqV(J+k5)^A
%M[rk6((Y/Q%E!*PmKm$E"mU?H>^XqEr)G04.c&n5Gfj;L-P*jA*?/3hmK':T_JI53Z5qtiUY.U]'4bVB(0`/?>.<W+r36)*N/EV`
%KhJUCJHdCVqt^dNF2c/-\QO/[V_0K3E9@s.JO^gUHF]@abUT7Hmk8$JMq(;,Ue#I`2fRrP)9'Ja]<%Ng>BcZN)),I*mG77!9(_dB
%,[9qhmn(6bh)F;h#>MKm?l0sVeXPLg`mL.MT4%MnGLjOl^FX%5G,D5LA?^:H5&<]uKf\F>j7pa:g7W"Eo(s*2pnGX7:XO^`hsIc]
%#5(!#p"/PiB]I;(nI\kSX!i<i*c4jlNB_I/6MMHeiOaX-!u^"1]>""*c%G"VU\6/*^3uWu]mdV<RbL&3/0Wp+hu)j(ccp2PBu$s)
%q>Em)ldPQ;Zp=>a$cqV@K434>%NjIf-lq,ln=b(.>F)GtpQg[i(*5&haV.;J1+uDkT*&YX^TF*_4#e07WWR!Y^UpcGfK2[i4$9_?
%;?"c8gO$W**dSccq=K^!gFf0uR!0(Ib6*6@GfSJ5[(.OPcmkB$h48I3-S)T[YBRe5>KW4g+.b\<[^^m;mNN(GqRQ:`O&<UI55&>`
%<d-3>=cL-X3[`^"jjiU1D.BR<d0)2gR^iO0oQddjHi+HPIFH'q$8(*$Jo97%A+SiNpO9I<Wpo`8,m'4]8*A/F0WDhU_b%%]:RI.4
%.O,<_r!pJ]5k1$]kE#j:IHc$lQbG[k/(V2cfKbaTr,VO,n`8VDX&/]\SdY2Xm,ja4[p$ZTM9Z<>Dmr_\LH?kZbhVX/`ln&*Hol&.
%bM:YaeiV&`+!pQ*cMq-t<BLT&52#]Joc@AlddUK(i??hT?U!OSB=j4EdfrB5>>b%Y+7\u3>0jViV"4/%cQ5P%iH]>$0^"5gA5=6]
%:L86B8[Hp.q*)Pt.c`dcQ3urUqp4a0DJnRQ-g/&!?#l"@XhR$S.[S_D]u5"X0&QVEIH=aV\fS4?7g*B5).pd4oU*o3BPHodm983B
%)goi_AppS^pse2KNr%o8a41^sZtthm)dS-l?NZ:8Ha*MCjKP8$q,?`N^R3i\0!DIkqKAI7gu2UqhJ]6&5sdN!DnkHd$q94rTFV9f
%i*lT+=nLgVg@!$Rm`>"UIe!6#DR[,t>hW;,FRT2JTZ@Z$o8VS(mT$!,r>V]Ao8dEIXdTV?oUPed_]:oiSfDph+#H_2$!,jHIf?p(
%^NAZ#HKX^_?LaiAaUY$!&G52N,7G'q0,76RfeFEprrt%Z+5pE^]h8%UJ#aHQH[]#NI!S!Y]-Hqb\ZNOCf[]Fr/M1d=hk:/K#>0pK
%`G"WH3YMD1fLOG",5^oIUVQ8u^&qkZo36+abhM'85<E4ZHeQ3'A4gDR_,&T/M2a@'9-:jFDk)fW]DV4WM@=RI0[u#XqP@^C%TQEA
%Q+!/$'t4K:04u@9frp/ks'V`-kO;n5f?0X8>VcfTrla62G:\8AAXopi/D?b$%j0Ru`NfTq05#>H")-KHkQ*ae2KOWGXRmE%l`79f
%q9X,>ld+>C<Tg1o)L<H'e)lGY3e\Z@ag(X<MiTM()['p>F2%(Gh]koa!hp`*-N(o4'HR'$b9q'G^"+H0Z1ImUOg!Bk?SD6N#tdjh
%o&G^>A*m^Q^6_oIr.eOj*+;P$/d?Z]gjX%N='XJX?<%3ZH!a?o5i9pB%lPoPH(Vq%\^N!E"T-Lu>9Mgqmr+CO]mA+On,U,uDdI6(
%%C$7`5^mW^l+h;+&Ve<j]8aecLPrBl?^=4THb'=Wq!oI7?-3Wr)MZY7^KY'GQQ@F^oZM/7\=N_`QbO>CD1l7f_(7e;ILK^PM4tYb
%p%uVl7j$*1H1dtVG@aKb?.Gut<.EnY_"?pXrqk0(>d2oK@3C!/[.%Q#D8CVKkcRB*%iV\;rC=u'T71^?GtAYF=X=t#Sc)f4gceGG
%#SOlo?^IC;&_Jj>:\mrOZ64$J/j;ihTju;73J_^'2o>_O`Xb\<oi!",KDo;%4;iM,):M?RQ`pQKoZdL_ASif=Yd=mQF8EC,0FZ@m
%7]$.>;(btrre@;EGDXC+5;f4KF'btpDr5qk)u._dcO4BXWkY58p=oGtC\pcpjib'hFPQ]_@q_d*aq$D]=$OG#Mq!6iBNRpb.j4IK
%Sq@qFC$53Um^iL^>^jHEIJ!NJil`,r;#f@!HVhm>UM*`F_p(LeRKSrNo_[Yb`CchO?@6");Rn!d[-5q99+.gc#*KAf55L%Amrm&&
%Hb@)h`VA_H2nCjdk1b2?8778)hLif)EuS-;pqtn!ii2PF*0.&.ScCOVbO39o)p=g[!tk;&2o\ISgtGl0<\&qUYJ)"N94'pXcRA[a
%](HWrf,nCHICPb200]<BnZd-4EQBY7E!4LR9=b!_*D+EkGV@586]dq001]KjImpE%3WRj:-FWC<IC,XHp?h,9c,1cFNg2\#48jW'
%r3a3DLXoZ!hgAQh:`q1Rf/kcq?T&ER56cm]:tU38pYdgaY!2hk=t<UaUN^&e:fitYHD-*.Z0&aQX$-RHIBtcoie'j*0&?1]YFe$(
%(\cmp#7)QHJOSpjJ`^>.'L.)jjtHB<G!U`g6hqfg(/)KmO2G>m]faKQcJA*_::KK`raEE"*:EMW07>IEjEl<,H]o`EqN&7bKpVTX
%\,5ad4&"/'!=_3Y>oGEZ83EB*I-9H7"eL+hQ^8YfipfP)\p#-tYJ/cqUWQ\b?[QkV`#&L2?\A$W;gM!KBBf5(Ye.=%W\$acr[YB0
%9;f><@eXlZ>6;4`5Ss1bi6Yo3OLK(MA/KI.[P'!I3)"%7gT1nMZ&Q/fIdsqTE-Q$3Ioe`05YM1cA,/JS_9Mkma<VY9GM-V@cL+YW
%225+6mh\dgrc+!+ot5PA!bGQSXZ1TE]ol)Bf8i&/n`=)0(!OjFKffX;qjh-hj./][ajK\)PFXqP]-rhL3*iEcB'/9s9/)pgbHUWB
%IA$Db`VZNJItE0(GW(I!4,Y8LjnWi1T'\`*Kh$(]hpXOcD_S`)86+G*'fNeub;X(<n55,@>qS()I)TJFK1%"rXAG>&9CfX0W[EG4
%YXnSO:9-a"js3,lGj.S@p[M1/=9ITuM9kkBFZ]TtTdcU+1c&1P%l<uP7JMq+ENsN\pqQi33%e:XZ",lO`nG<.Z=0ob)to\`2d=8F
%8nQu^hHAkESp7"<Fl7(sn.UZNWQ+[^i_4B0ohEO&K8u7-S$ihl\GARLfg'sSd<Ah?`31T#qu_F31@99-/c:8-I7L(6U[)9qjVLR=
%Z*+#!\t/cn5MM#j0[bskIM;6@Rr"H@2tuMhgGgreDeu%pMtbf1nc.g*R]s3pKC8u87@T7.gr'_'>4Tp4bJ:g2%r8&q@FMaaC!G#q
%ZF8fg)9_[>X:^gHD0BT]fcUFoL1:_"=CaR)L5)2j%0uUIFMb+tg0s+KFu>ekl+,H('6UsH)2)<SZib-NrN$_n(A/(;Hn<4@Cc`"T
%nY'`+B3i]#T[!%9-<:+`I[Gfqi'=0%%4rsK<:FlL3`mO`)d_*8/Mg>'AdcWAhH9_'^peVUeo5#Kd+-7TP\>;+!6W5+)1FJc@+Q%;
%)PIZUlil1nF5\9$JEFYn)P67[=4dc$2df@7mq"Y?RUC+^Fn:"Y$ED>!F^`=<$_-Ob)$Ul&e$WRY86L]1AT8,rFon%iBCebiHq@UM
%@QJ`6\i4_bI0i7,$@fH';mt4rZ2nbj1rE+t8[GgW/8Uo1D+<*b@>W>H_CIuiZXBPEGU6'#NlV;e!1I?*S^=49DUtIZ0jt"igTYrK
%gWDR%Y%ELEjkCPpF_tN6BYtcnQCYRZXp,ONXP^uM_]i5cDuc2>@2nPp&f&(p8C5DJ"k!\G$`nT'((aJRq"RktVIt/O<X[Jqg%8;Y
%2EA\^=KooWh=.qtgWaXoZUSU.3JB^,^(oW36CSnupp^R9$5CRFZ43=1#fl1bDTKG!+lQW"<Yr3r2!)*g&7cXi(,Q9C+V5QNQf-kH
%#9hF:oC+,8KreeJeH-Nho43[MJ0&6-*hF/:*RGa3kY=mgZs_*SL^Q+qQk9$&B\`@,bWqZ8S+Yf><thOKZ]ZQLi;g8'1f5J*"@^N?
%<"f=Ccq%aK*"a;X_?g8]i^d/*kZCM\$.:N@_1UR*?&;p)_7@,5^`.ZgSuXg\h@LmO!MombZY7\j)n:&,p/G]*[`J!$"p3E"#+d4/
%AHA>E_a$#>Z!lW1j#5hId*\Y_Rr+A"Sgb%Y'DrR8&R5`@&Wcu@4boYL%%NV*b'*_[Urb9?h'OVS&+G,\/E;F0FYk'5+T6[0`a\AA
%ZbTYHc+Y!+"&PCJD_K&"ojM38b@FYp80R[0!@C-3T=42S)mHfaeB>FpNFR6!a0>N1R,^m_8DXC#-XG]tJ9IV("V'jfYEnJ3gdj93
%Y[t73D=E_q_KA--JJnh0$,cS+^j4:=+^G:I6K4Ft:kIl_np&r+TMY<$RNPCnffdu$b>VjiM3LJ]N<,/8,69[5JXpK6StOI>F0Hn;
%-d!/7j9flgN"\fBp`hIPPCI8!TP]cd]`9r#G;(j>/^OM!M8K?3-o=13GS\R:Pa7<I8.SpLXros&fnE]ZnH*e9dK/M?!f?SLL`7>f
%e7R[*e&.i,%$IQnTeJ:X^^umP-IE.2=@a4(A`t;VH#P)7C_/f@X7cr4a*-t=9p_]Q6&4S_+A>UH+<?.Z8qVY_>u3+:8u2N1COe(G
%Pifp)XUnGJ1r>WWceXuDo\f@2fKotf_ugW-*8KB^2P7J16.ng\#\jN$a@8nc!On5DTf,fHoLd^ZPm!ur>.=YUkXjB7kmX!f<3Yce
%4E1oeW$d.s9O>2SjTTf2S`l`p9Ql,<%<5`;fRFO91ah/`mHH_&9L8WpS)BA@Ws!<+S&>[Ij5?.qi-HK[D&t>N$kh3/GoY<^nd8.6
%[.2?'2SHq=(4rt+30E(_TuFmg("cJ6@Z^V(k5uY4-"P_[p<H%9b6#b:ha@]p@*&SF%&#0W%GEpHRU_5;kP.5`!]c1uJ0kfFl_00o
%!V+f5fG4a%TP'u.7G/g?*4@>IHOQ4gpp>aLOk18XD!jS.(lP3(Hna.0=.^gRJP+j3qB3dP<8c-c^q$,,^c&JU0;pCkZ&/&"#C11?
%0NF2=TLV><,`8c_*AmYf4a`?bL5.)g[LjOT0QTM,5a0*O.Yp6b@[]E:.oJo%E#,]i*Lfp9"^WTt'?)E-\T/NpO(W;OLmgeg1BNu*
%Dh)[7*7)[.^'F]mcXBJ.^4@qFa%=!s+`'/4aqdg.8:B,r$geXA"4^/!#DU&E#26k=,@6(j_-qnE7?<'E,>&ROVs3-=>9;MjXL(7A
%U#MsZ9tXIo0=1`^GY%H&EEWt^*nK,$b==m;%>Z-'eJZFcciuo!P9L0&7-`hnq4dIWJV9t/TFJB#lloC]E1G8Z6D$tBTOugp=&&nb
%CU-m4)0XR7[6\XtTVs80@p6+9Cljjqi1m'c:[=@aC%uA86(>]F1D"]M;P-tr^Gl_fFIY(K1X04T3!`#`=aD'P1M[=5da7-4ab+b=
%B[@7*d"Xti+LI8qV1,L]6aV5/840_els%iuNfUhe!H7O3KO@_?8;YH;Nh+rL[@e)pe7S!qWsS/qX!\B%"Q"+El;)TB\,(Q@,T8La
%D;[629,h/a1daP\!O^;rJac-YP]_t_%XC0%6F(0loW`3#+@08r"qW(f$nq`")Ba1)J;N,m0*iE25[DBFEnE:)B%3(kE7>#`c!jCe
%+nMVB6F/=;"\0a[#]4P#W"PK]_8c"=FO9OPUasMH-bp%=&98bPIE_7'X"Vg\Sd7h4?%;o_G%fOJ.n*+!XVtes&HpI>7[mu[e"2U2
%)5)2%gh2ph^fMkre5j2Bh?;.GSJ\`6GtNmuY^6[;_^F_HEfo,'/uLY6Df5>pGbu#tOBcI\e*;_T/ANbfepa7sd=It.;h>JTq$9g<
%P2ZoO^#:/o5`^9YK;'0Am(c9Bo+-5f,s]ERP!8^#XCj+-=+ik1Z\#"toOtM+7i4K^l[_cL#o!A;F(m;T^%DYD5j&Wj0ih5WKg6W6
%<;8!u5YHZe#`8P3C03$L+-'eOg&t5[]*^,;KHK+uY_?c_&c84p"Hd,uefKRE<!\?_!]GT\49TFn)eBj)&g=jVK\2s>*uYFQQnC91
%Q3.A11-e0LKn[i3aK.,(@3j)_Ma2iejfn-lZA[Gh`$>2raqX>Z<0L]DLm<`B`&9KBKTK$2$*2[[4t0c`"YlkT"to4X*1lm;NNuA3
%Xb8roH,(;BiF#a>Cr<^7L,(>)>LR'KN(nund*nej>ZV+GUC[Hn:aY7d\jr:-ES2Cu[Yi_*@`9V(>)>-B&!@%rd0?ujp[[>K@lCtE
%#$Ll^N3G]?RkP+=OF`DWMTKbA=%ae@JdcH)Z"UOYF%p@WX<Rk]n!J!eW?Sc2/!sjC6^/6YLV.i`ENs)KM+k2V&Z^(Tcq-]r"PQ,n
%=Ch:PE93joMuoOJ0&=O.")3pZXd]oF%2"t;b7e\<gQ,QenIABKPIhGW2[c':1b6'FR#p'="6b\u!XFRt5+8HHSmU\+P/u]%Yk<YX
%.>l4<&-le9.R[6rH[;RaF/ZiU4aDju&Tee_&P+N5Rb(0#J4aq%OnLn\Gu5T?pB2.^PG0rh:^o2I;)X/`URf'56N\'m)>O\<4BZKR
%HRqtVEUhKj2E*I^N3Rr]D6OcU+_%bhLGnXj>_GBSFqn?hNgb&4m2N&X_NE1\pVDs2ZNq+Q+D:lU>@M#SKCR'c$>fsKKGLULBG4rW
%TVl4ZfdfFYoEhaQ2Q"brSKp'IF[-ld)*\Rp(=5HX(:;+E,tiF27q3<3!,BOP+WCPIrd[[=BQ@cej;]jcLi()^f]L'=nQ=.Sq]U*9
%]iP>oR$*.mLi4G_%]i7(Uh,\!&Vi%X@._f`66jsgOnC;ic-;?_E?DU"jdQ<gpqkfM3GD7(d"WR8=@*^TK`E$rls>3C+LI&u#0k5@
%g.,f),:h80\V'P6UBCqG.YcQbN6*1]aKm4o*:d2;=!L,S-E9G'7fc3`f93IL,D8@PA0XRaOH@BGTf/AMBs>kT&R<\"$5a8oUe>mM
%h%"+?>DO&-`:c7#O[:_B_HBM.^nfnBnQ?t]_1%ZMQj*d&)%Z?3B%dT!!&"sueJJ#07PFjGOaJRDTK=+GP8l!<&unksfKpP=O,l]n
%4#/$bd2.U/K$@t$n@U`Gf\*&6Z9n*3&D@S]'.c7o.qEI^*)_)51p_B+U4Z;8D1Up'd7+8c_I/@@Al%K.ZYN`nU6u6E?!`J?B5pk;
%KW8$&OHn&r+#NME@W6kMKA'H#&4rU0@NmN]FsL07Tk)o0Ik)lT<P9ucK^t*C6Wa20`g"UD7lSTN:^'tE5%/[!Y_A*n9S@L*\j-HH
%GCX+.dM5%j2Ej8Vo1,V$'Ua_^=Y16DLVd1iMB,oSpC%*unM#25K_L(L-87U8'<9.1X(GE6a)D@q].N4RT[_q[,,<IlE\9mNKH:<W
%L$\\R_0dhTr^0Ul+#Qb>8jrIq%R?^<9u%``%X#q8GDI/kAGt9"N^.4mWGhG)aGs^PfHb8GcI?IIf^_HOLP/GPM2=DBa)5^MF)9%i
%b=^/46=WP<_0%af!inb_?S0)%kTq?9"4*,VTE.f-(5pj!Na8:aN;f6&WN]BQE2F@B:Y(M=#C)idCLSeP"EeDYlc[r`kO@nJ1WrWp
%ee7iLfob;H+i1>9eDlma[q/L+Fq\f0/`E8kI>&Ub%m'W5a:bp*U-n&M*YPN#6J&'Y"keMUJ^D!<_<;o7"i18^&;c"KC#VfQJ_8B.
%o+=dIbmZ6jF!1#jB2.OlZ:jBd&M9X7JVF<LPVODWMJR$)A*C\#D%;:e.#9dhKcDGX=I'oL:3IRR[A&/cXdX55e/YJX@=Ic'(kE/:
%=,d]:U"Vip+CYU4#ZW:h<.RroR#$r'm$)YrRR/<0cs9-DJimX^2kq-8R#:f\c_BesbhT#18T/\>aH[%?J[h'nQ7pql-DHOMQ(j+O
%6C?cr)4o"q7Q!9ka&$hnL3Uim1m$'I&oJb"b38K_=eXqmOin8IP]BpZ0]F[<,;iUnq>l?STIj!Y%rJ,e_"0DrK^MKL#eIlR+fWkR
%d"BAP,kMk]T:6i&kK/(JJ?EYK9e[#23Op"1#FaT/=1\mGO=_:lBMPKaHb_%L8cDSWT,^=\W-IZ!6F4,miVaOi"<\$'/94,.&'mHO
%!J]!gJ7o\1BVBtgfb,Tg"jWt8cYSMN,.3OR7ZX=>Bp,NW.OF_@O!khOD'2D:4u"1+IQRn(d)fceQc(e%9uq]*dm)jtPQIMI_8S,G
%\;'h&2F/;Q0&[SMFb,o^Q=V6;Al7uJcU\5Ui=pC/n:?4X&"t$a\gN_01*QuJViV.]3=,DRO;Po1*43Qh2E*W@!QiA='_Di8O@pWP
%\>:@?*Pk*V+CH.)P>+:P6:LthDoanP78S2:o0?_=!Fmhg7c%Ce;aD1PBYQp(`I)#8]Ej`c3ePp5==4FsSdr+6M@XR"g'N?LG[,AK
%`N;qMdS)o&_W7`!,$5^[IA3Y,.gZk+*"s7+_u_N!T\31p"09S4gDXZl@$pIhZn'Q$VoVc/@P-7!ER"lBdC/H38B`doe4I0cFqrG[
%J<]:)!/:M[1uh-f#gS52,WR-%h9t=-#Jjao`NDZH3UD(9YM9k`)+#2C9H^&-0LW@tHrR2#cdrJ*Yp=<^-Vt'pOM+)q6>[Rfi'VRN
%YbYlp9M.KXPI:s-04;.3DD\:,M3TjeB_eBR*2!HEVD;>1!3bA1g'NEU\-5SaS1urG'SC6D)\p_70ssA!bQ;X@D1SG'J-oRWgt3Be
%R):9W\PP8S3\()H.GPQ`%>'oP7DU#,TeL&50Hd`Ed#mJ"MYDYK>fostQDfhBH:/_ibXDe??4\l.:2M/"))rDZ83n;0T/38[#ijsB
%Z="5CB7ST4;:lG@)(cj5m6N?AKPR7la07:u4\ekjL]`hXl9*1,+[)YCjtJ_`0utC]Cn=@60WcbI9Ha\H,ZS&;68G)"E2i/2)^5*m
%K'X+U0o^^f'%?tHTq^1/=_AEKM+%\.F*<KoaXQ"7FG!^8k_F1WaO,@_O"/-pjr?E^-4aSo<!YS3)-8X`3?Bta,YCLDfO$qRJZLKh
%C3n%_E&_G6D.5.;ki,d>*hC31Tj]AJi[am?&KhCGq?!Z)Y+qb5!R"&TU,YnA#=OsuBVpliU4/9T"+TtTCb3X6Ogg<AEYOttQ;a\p
%/#KXM9Uo<MEJ/Ei]p=:]JI\Yh)b9X-ai>i$jN<geI3n-*6)YBG&[WX(dp[k]%S:.eLgmZW%7Cs?c&oIPhkuja&U9`A,>UaAaDrEl
%*E=Z^)NI@^lMq[47BGpWA0su!oRtV/[6VW$1:j:n"[`O>d"E\b-nkdWU,JF%@3g*G's!)[Ld]d')acmsnZgNYBE6*/6h1.Xj8%\I
%qP^GT$A^;ZA[il$@WV;X">?UXpu)!VdS!"32gab-*1T#\Eh?$?BOa#f"?Bs2R(l&*H)3>7s7\ZrECjRnAL#nt7Okh!S100&7*$n_
%;-55i#X,LFfh>'i,p/JJqcZDB)D":m,r%)TggPltK\UE5$&IFae=4]J.DgQ]T+Dm-"APR\^lUcLS-5+P4=k?mH#,GQb",A]KI]$1
%$F*pGLFdk6VF^E4b)7BS6^T\%.1<r`<9fk8W(=@29=?%A<?sn8L;K+i^iLqm@q'U"6i3Q/iI2HBFUihQJed8.AuJaec'j&8VBl86
%;!(QuR"3-V&4BsJpbFQoasG\&O;()r1K?b:?o+7q\L'A6-'7HrBQGGTJSCY\r'HUH@K:(h.J!eAU*<\&5*9uH=Y>kqjK&1l'6Os9
%'9NY<aP`YIZ"&q*A_TP@_<)9)acI<6/qsdenT16Kj!l`&?I&o[-HI"LV,.rEbT'VN;amDn:)jR-(IsX,&m[)sR4*\ZE+>BrF&YI3
%O\Q51B+Aq?Jd$"c'PisDjDp'FRLtkX3Cr:P=t_iL/k<7INAL^DJIQ"U@A8_c6d6<aNfln-35$$T_Bj;Y[P:8mW#=ZRaj&$Uk[lU&
%9!KjLQk;B9@%O?L`s1P3,dWY>is;?3\u8?/f[*mN!Cec`<0e8qXANA.iYZ[b&#3L*$K]5-6ChMHk__E_(_8uPPh&/j[&9X^'Z;,t
%&CCPW]/mAl&Q>JHBdB??$u;,4-K3[ZOkkTlMZ<)R!)Osb.s,gN&?TcIpb$28KI.^SZ6L]!,1&ijE1!+7P,iN2U&YYF:SftnpSF)j
%"(Wm4r'50Y70I='.9XLY(_g@^#e(-u$XX2Gaf-KN'H.$,Qn<HJSjG;rgaP4@Uh"`2P,$rYaU8?:j4@E?kK!c\MIm=sSP`a-Z;_`n
%a-f;ZJnO;KH]3'W%'=b(h#Rd:<!bCG"3B+f+NP9pK>kP1c52P/\iKm3'=G(f\p=u*IjZ1#`BW"o7[(&"c/R[IoF$9k5XR:B"2gIA
%!4ga4JS:=.KI:R,%>$8FV\&%9mM>4*q[a%hK`lQ!!K](>81F]$N@%c<(<K@bTYTD3VI0[6@=C?dka6P1YX+>8d69sP9UiA",Qj@d
%..Y;I)Vr.n!hr@Gk$M2Ga;=</E`M<eK4t]?7t:Ypl_mO0a0Z'e:WOl:NJ'cE4\8GXP4/ecGHu%Z.&&LoaF'6U<c"GF8cT>'#`+m'
%mUDWJ]Kf^i9.n<7#'mied/[1#_IgZ?P$Pq4%=>o7gK4WIF[07io!"p'KT>W]V5J)$D;';PjkL/,co?g,&fa@H3=QhZn1k6do`VZ0
%."TlASfF?0V%=\VS#[h1o>DJXeFC-_CdJ5laP@Nk5aQ!5KKs6$n.0eMP&O$\!bLC/FFAs9Bc'JU^W<gR^`b\\E7@X(_[e'IA[TsE
%g^9B,O3X,)jmucO:sp)He-!jZ,f!IR$otM\WQ+&qH[JPBV3JoJBKTKX1JWP-8PTaaQ;ER8F_nBO@2)*8'nKMN<Cp[)VVm4V>A]\K
%Lr)&:WgVj`Kc<m^J\%T+afmgpD5\-t&_ZY1R&*O_3C.UH8$7,C86<@`KLcH<g^./-RH%BVg[*i2+sjco=/k4ua]>eJps^9E=sc*9
%Ek6:@K(t&/#TmKehJ`pX=SZi$\m\p892e5\T0Na";e^B/GUWj5Uk)&d=.'j1Bem2Qc);kd9u8^97^TA,Y\mr.m-nS_A63fdS\`>]
%*^P.VSI3fkb*957Naams&Q,jYPpA`Q`dkV?Jf,LRcHV=W\3i&b.jJC>%#l3lj:r?318gL#+b;B^%ET3XlS5aN_L"fjdM3q6&k.d!
%qO/?\dmY*k2FYm2ns+9@%@,Z\\+.pU6BlLlj:=9Acr(2EW%0<g6"Gp.)+f3JXu=8gU3qI7l=#"Y/4dYc#@<3H%giufD/n3/U$X5"
%"n@$O&pZ*bk@kKJ)p$U93'tl5\4u=A\PaSfD]#K5H3W8F,dlW(Y,\j/7#._aN,_o.G%7#sM@b8gL*;M+KpF7:'H5f%D>-1N3bXmG
%[/20+qhZf@bHe&W=i*&7C65Y5VKfE!7?fr3B1"#L\eW'bJL79Kqc*sI1<L5Qe[FVE[L46ii[loHq,5AsM>j/"85'$V&OF@B";JC?
%;M7/qeV-6`Ts-'gb`@=k1uN#nh''p`-8,&B'psNTB@(WqqUi%B7ET69nUqkmpHO:"1($tX!RJ`ZS)=dJ(&lSk_)T?%i1ZYMhL:3]
%6\j^Js&)H:4&Q2A@jJ3#$'^tL!=Aka6,[OU._c":*@MWt7Zf3FR6j;S.:b]siT*O.e=Lb'?#o&jIN\DB&ZR9^2I;;P&(G^RQ_5k-
%j;GpS&[hH2@9]X<KN]ofP&s0mWI2em/RXFk(ei!pf*obi$[)/!;Q.Ma_!;P)/$QrlVmK/%YT^iE:o8UDT9Ke:^t]Xm)qkI[@>:IP
%-g"64,oaYiP067+cY4,MU<@R.8c6tQoX#p]5M>_p=TZE]J(jR=+W-CrK@:i%965f`m^%Q^hH_DueoK8_'Jc4RiDqopajQk*['/8,
%JrOmlF[[g?Ji%IC,m"@A-d1g"afI21+]sCa_(_fQkq)I!bj=87't/u$U01#8(hKp\7,gOZ>(#UWhj'.NQkGoC^58Z))?jgVb,<:L
%+p9WU:*:Z4h'co:;/L-@W`sq/Y2Zk,fTJ*WXrUjV`B]Rr-DO]j;$k4-amJ^'m(<n9L2YVYDK&QdTM7%rr#"ec.b#G0;6JU14[(5)
%cVtBqJ@I<k&8_eWP,5c/&lnua`UbH4k%e\`VCl(OTTO;3A)8mS4HDQWrmOkNXSa)#'I3C+*b*+l3OK<1<`b"q%OR=fP*,98"m,IQ
%8oE"?9p;\6;r9W[KXMNhqKRuc<4f,4+-R"ZZ2V"9J@^JG$FSk.!.urR4/UF@R*Oi65+5Gg.*0n<lC,QKBNm2Ab7qVOlnYmO9"O&:
%(7'[<N,t/LC9*0.`mAFo/)F^s0UcLpM.%#K(F[(WHC.@HQFS:J\"RRebQI6G?G3C.54"W4A#-gh5r^^\3Ee_mlB::1QXGVJl*=?q
%:!pBB$`)HRNXnUu3M;6)6YmQ!$H5H:,(l;'7s0G@U^1r'Z3N_l0uTEK_8+HFY%$<F\5ElcNm(?u%k:)*Hs<!=H8DER)C\mA#Y,^c
%+[;c^jbLn?i]pRP77qPA:"j03n0nqacR?LTibQ5f7n93Z)CM7c*.@L5&0L=Ql0KV&B]MpXmY]#N\u4Sn<_&u.Z>*8TZiYrCJ>[?!
%&Rq]A9[dSb8:uZ#A7f<;dMM3j-+'Cm=7//E\#sgdTZh;-]l;hke-f^>Q\@H^#1<BHar'*T1`Z`\qN>WOmXM/`!Md#t1CSD=)2%t5
%/VK7Db:H`\Ue,RA?n:-.jr@HFJT6K&qPbmNXPAp8G"+99V=Dc[P:[)EV*#q/\W\,\qE^tOe"'&gjAl$_V^g>:-J;)rGsrd?QodnE
%LI_X.$"c/nE%V:R'Z5tUUs?c70R$&<G"8G?A'+crT=1SL"^^\+d_<<dMAZ9]A3Gi('Ch&8Zid9Fgd'"R:?l<G@I3B:i+%q%K(lr]
%[ZMo79."lc`\8^l-oRp$N>^DGi`]',Z\8J7<(uf.n/BG;l)G@rL<TZa<YkFQ"-*XF"K)NQR[U8h!+dY#`lO4WW@:7fk,PO9_t#P%
%D-6H8D,<,giauQn?(S/<!_b>g5hUhs6Oq]+,pC890]p>uIYG"N$hP<5fT/B]<u.gE+<Cu^E:Pd7(=6%jd_GoQi9mjGN$V&)+3dbF
%]9meP3,ZTWFL=>n?DJ]ZG3n@Q].51\UkVb[`cH"%iA$E<a]?IoY.,AsV+-YT+T622'#%ee%Kf*?-Z1-29&]qkf*%7jJ9@V(RR]6]
%[t.8tMkC2NZpt1To!g#RojV\E/IN'&)Jk)2&'#M\4:ld@JZ>rI&m3Q/;LqS5AMmn"QQk?aQ%u"?b/rJ8(.7(E=&/.$=a34\EEJ_<
%L#s?6Vc.VoDC(^S-B19d.H\8''d@%_dUhVp0ggp;Cg\4,%96d@'9N!\,mIHG\FEmp/uaDjR\G.BQ78'6:m`,t=L%[\(^&ed(go\&
%>,blF@NFhb@!nSf8L`31&u87k7oW*p<+015>,NLKpCMWXl#[pP).I3_8[*n*<>=Am0j<k`V8-2PR8W\[0ke^,+IY3Rfj\+p#7,&'
%'PPLRQ-VPY.+$.*Q-DR]m3OLhi"qdnKh!TY@q-"/-e'fC+H5o5GQP!M<@WPTK^kcEEJ0!'d156bn^&]X8f7d`$V]5r!r%d:3Q?hd
%!lKOj"AING6W"[0X`ihT1`dW.J#!W+9*<'JT+-EoJg)CZ8BF%$r_'Ku,_*LKL4nXOnc:+5n=c8&7!t9TJ"?t?;*,5d1^4%PkaZY^
%PB';%/66%Z!gpQdJ<CWc5=n$[#(6(qhAG)PK.k^dgF553<IA:IjW`!ik!Wl=&P0igkGe]_$HEa%k7X"rWGD6JUkU!?Q)B?C*F(%S
%6MhP]k"ELZX:C<WZ,Q6RrB*U?)2CXFf9*'M(]^iYh,VmiU?P#BELRFPi?EDF3/1#$^&UW$\RH#fkkT3$_Ps+5ne6c["s:lYLRNNX
%aLdJh3gW.n$fN*tmZ-1^2$Xun;M+b#,'<N'1qom\(7?dScB-`_/b,Vp6"TP*9X3QP"DAJ7))H'U*G<WLM`/PZUH:&L+po5C(cA*\
%RJQW<)mB?7.0c;MK3een%?(=e$n%%F`0h7.:lLk/&dB&fQHG@5/OF^h(W1Nrrcb`<\n=]3--h9*&HQcmH=3A`@LHHF:Vt[e>S80p
%4V$S&QRWD5EBiu80l\q48/bik%d@l:\4_uu)iD1(&1QPUc)aoAIo4eA@%/E#X1!n=%Lbgf&mZe`Q$5!F9*A-e7HNCkRBu(8W%Qij
%J\%;1&sK^,Stk@hX1!m*3EO+U]996-S2j?)1&8Buf.c\6Z.-#I!@p6r<m6;Qf#Ln8P7ucV(]mnI(d:j&Ih%ARU+dG3`\n<^UVfDY
%RlH9nJhTncBA(,%p]_.a$Vk<R8."+X,s.19e2UVIZC^Y-*N0HJ69c3C$@EG8*3PsXVJ(FO7$E.d-+O9b&TfY_I^;_Z>>;YEQEB's
%(=B)/pd,Gt?>[]T9XIpC,Q(=rJgf<+jfte:QDVOETM=jNnDh5.4qZ^B(([iFN#pAVYseaAG#l8UfFD*@iWW0.c4](ZQV\*]/r>Cm
%:V<@Spi0Sm-.+SHd2Ske:80L'LQm^D"qp>]a\qlOPidrM%:VjG:q$C#^o8.T`qIp)1"V0I+N(%g#S`Ab<6F3gCeln>q7[W,Q!E]#
%o-@l6B"/Iaa(hmo!iE8BAGD<n`?\t2](@,5@#@Z1<P8eK4#$5!)<7Nsn@FgVd6>b)K(9Wn7eABudMM!jke&:W4me<c'iAh\l%-E]
%&U1W^=U?RH7%#i&-/c^$,'kPe$.5S8:CI5)/o#@Zmo@d3dgRXgW\6%XKm[16+nEP4nu5aVPmqDk)@Te!?g1)O%9sC#R8[6M0jKgI
%6Kkk9,jHl&7bfTId4\M]S4pb2L.kSL$]a]iSfD`k6VpgHbiE>-DAhHJ*4p@4rD@i,Cr`#eZ[f0%T.<u>MD45FP>ObgDA*D<`,RJ<
%MBI83!mXJ^P7DZ"\H8<3NR?QM<Q'kB4BLi+krMW`JOmMqM=[Np>#`=l7AF0"4cWY[S:F,>0U'1#%KeI!>uIH'.\--eX?`ou4\iJ-
%R,=b2%^j\iFeW)td8P<\KHQ-IdEIen5+8P5_W\/8TgD#obW9.Q1&\5-*R#\cMjAT@*TIAE1q%KAT;u_D?t('ZXfgAc]J2h\M/K@b
%4W90Na'F+A(@`>,PlsKlWe:`IZ/kU]OrDF'CaaR^A?8:m&7(7(7%jBO@W7BHe%/5,FLlj:%]r[8^"GdtV2q?L_-;:AN0iTr#rT;]
%/nneu+O]L`l5K+&L(>S!N4IZMKoQEKUuFf/Y9V/79Nu16P9XYMaUl$,PpD0>,f^eq(tfL#[F/JS`a_[Ebo:h0q!h1F%<<EFJ]+!R
%FMiemOHS6*;s+Of2AMs\MFYdkG_0rNfO,c[$\b*YN+%l/Qt3.rZuMNC8pn?.N4:$@6O8@,07oCKnI&$ljbi6(\q!*A#jGJs45]Hl
%O[<^_Jqc<D$#d`eioipB+5O<"6n+)FckS[6HV)Gb/sDD[,O+QpHA-HXT!&-(Tc&E2%4)PO\3pa6[HuNhC&5L,(m^AKluH$eoY9ag
%C+B_U_!RcVfqSn:'G[)jV3"AP3?@HtRuY8k,3Ms0fafN`,mRhXEo2+cP7sk8cLdogTd0l4G+pmZc9XhQa<4a52l5)qP('4`KY8oa
%;1oaBK:*Kl!NNn0Ku@,:?tjS<eJJ%<_MkqJ#!>HccJ6<ITm`a@iRJf@-F+(\?5IjSC78)H17+#p._L-Z*H*NdELToV2I2PT#Kh5.
%@,aNIW:0PF!#\YJTaJ&-3i?>L#6Q;`rhC<nb\tC\lcgb^&Q@opR-DgTr/Lt:Z//*gll]/:E_@"VisY@:'L3e]T2XdW3[5q\C.T+8
%$3>8Epjh]YE@of1dr!;j[\WF@]"5U88I.aUG,An$fj]"_+dMSjEnigW6:n_Y%dQ6g(OF33d-9Noh'Y)A?@kSkD-_J'OSu,6-C*!u
%JZT"R_c)ps:Pb.'9$Z,)b!nVpQHn%6\X69KG+%>^ENrL=:N7UqJSe]D7d/BC%7]t2KXcgn6V0ZU<I&@0El-E8%'@OWdR>@B9C5.9
%EY>5`MkWNglF)R%T6ihS+@S!2cSI[^X%b=LY_WUNj<soM"G\F$MUhO&4.^Y40R/U9"QW<-g%'Mf_NKR)C6HnB=MBe9F5W&.OVOg(
%Fe7AF-'jhui#&I=PZ#!\i1[aOP3<gA3[%L999[RIi/>k&g@30s[<tt_cjplc>/%F+/La5bgF=CQfe#sBof;u&g-dnFqQ$fO.#`[l
%DbulTc,lauFsp]FT[e!AUQG%iI;''uMK)VW$l!\di%S,%k1Gr=pOlCQl/KBiJM>0$%u[Q?:^0jq/L<<RNU+RqJ;t1L7C8ZA;8TCo
%#4BjM-5[SJ>R<e;.[Lu@Tdb\?poQYQ[*gr&#,>6090>(O=7$0F'b*aj_#,7>-'#$8Z^@-&((ohY%NZfn_%n4`,7Muod*1'm/TiBg
%nH8)S"edoi+hK5$e9W78JC>q\;H2@"'!@RAX)V4Bk!H<lXhZn%`29f19V->PZ]M6,8CiWm\Bi_4Q$C'u;\0)NBaaLA\5[^TL^(_r
%e&##jC*H$#DZsQt'a:6LA7dn)EJs3qks@2'enPJmE0XQ^Oh"n7\-Kc&^kY5+f_CXcL5Lds.<A,hV>*)=hGS6\DWWi0L,%%%n@*/m
%_56":Z7Fc_P&`!(QgG\<Z%!O65X(F4dh/lgfT9"AU9QC&"/?daQ-htlI>AshH<$pUMm3Ae-cuH-1^h6rn\p_KaQsD%a5V,+%L5F6
%]ug=@-sU^m/7ZVB!rO`L>ScdE0aJWKOtUP6P0's9`B.R?@UVZGM"Q:k0]/bG.oR]fYQV_rH^*RqcKWa5%MiV!PCd\A;WJ$,\3`6J
%V%gVCej+d`3tAab,QL?ohE3.&,?U(*P..W"O\rYiKW<MT`7L_'(tp2[CX-T\RE;k*nae)fqYGfC.*n(3Jmjo5[p49=Huc:u9/n/p
%ck+#FFeVklfrtnKi5hW`!Ze>ZbPH6,NLJPb-?MT(PG`;7:grWc1;dZXk[*S<]Q=76>RrA3_!26N01JZA%A$tI/l@2jK:,bW'l8"=
%<JH&H:S##JrYT;/PQl'A]=*s2n3WCGB6YmN_H2G<%!$K(NL7^.af&_g$>"s^KhNPo<!]4F8;>2G7I#V^LhLF<WM?9$g/>2?g6;bV
%MqI4)3\%VSNc.5ZP,2cG\jW!f+sE>\/5J?T'[13m_V0F/*e\g$*8^0Oaa$sA1\dQ4](^sQ4<kCSmLh#jX1<6<O/XP`PL&Er6891H
%H*3<@Qs.BDCH[)[bm@>X#]KW4`dm-_X/$)0QrIW9"fc;X?CPN!^^HtY'ugq>.1&9VHOL'FZ5;RmKj@G_Q7E8^qjgh5d!*5USX4jC
%E"1rA%Hf80)9->S:HS@:;B%+UJ/rmKMSYXA>ufVsJL;4R[`t-%&+LNk5]'.d42m4f6?6cn&6V!<#fR^XbXdc.hPILqBeP<V08.&.
%c;A;#aoTih-7):L90TfT@.[iKPcWas'Yu3uY+a<T4C-^'Zkp?eFK-%]7Uh\sBpd.u<p%@I)6IfuHB&?$>Ch0mLYaJ"E:c2Z_VI3H
%ip*fR;C<6fV?2hS;f[7ie$.=B)24P9eE85u>N+Og08H]#dj@mW?BfB*-2%\.)4.O+Wn($IQi`fhMg7B`2M/Y=,[VjTrI6HB,phHV
%;E)PH@>$"%Pb/X[9*6C1aTgL`l<$s#cLS@AO!,QsC):pTn]NcdpXGSP[u]3275(L2RQ8bg51i@@MTVem&PaRb\qaCQLAO>>k5keg
%@:?Gsht4:_*l3at+rFRNEid4O"_LEA@n;=4))(ZNr]$&c6.d;4bo*Np4Gt6/OH4XjK4_%i/mJjN?%:VeCp8NDKp(,`Re]m46KZBJ
%M1_fdV12KNdC?6\^87Oh:EnK6`t'VeaVI,Po-'LL/R>P#Y;[BbOoa01V/X,CC*7b)'c<N7+&^?o5YCZ2Q;Em8ODgEdLoKr)3=&`j
%7>-fL2^h3^8`hEI7N0DlQ;A[`4g$BG?O/T!F2o))=RLFm^.:+Fq)4$qVaWJsJif1!@:tTa"sK=P4Ls=LgK4LRWha=&X"H/CgK^eM
%A=b(5%A7NN!OH3kd[_!Upj4E_A.^jPX\hZ5T.a@t2(1'dk2Gl2#>E0K,98qh:fP$+05Di]&m`5*9R";5o!YT@-jCK4-S\?DF7cpb
%Ul6?Y/G;'C\4!Jm`BS)N[Hs>3O\3%O[Y9QO^=(rRE^U?/5o5/;.qOP?G4j*aWjAVGprX<`nspa4be.oM/?2Y`WmX].aLV"+V2q#'
%^.W2R,3SM;&#o;WN1^Pe&VMW*Z$$2"PtMU\9)TbShL8d?T4OuORnBaO/LV?,9A0MMo`'t<mge:m\Y*K6YN3WNdoDm1Eii'o-p&9L
%.3hC%k(C5H:HjHMT!$<;a5p\dV+S[/n-Vo;"Xk.k$=Fg;7H.JHNWC@Rg&[+-2n#Cag;8O;(L&f&$"I`p[)Mb<+dRI_\70F^>V6$.
%aD>;\qG*WW4=dgC`<%N-:eI-'*FdK,4+5bI<+N>p"&fkH#^+3YC[mmsN_fb'32RF?e-YkDA\S$+:,^u%AK!=G'baLi=i=I-l;A5(
%Rfk4QPQEOlq@^$"5o4"haAmGlL*R(o[f/1%P)+7<du]9hj[&Pb<Gbm\$K=i<qoY*.9t'QUP9d0LJJ>=31We&n0rG!1];]J@`/RGh
%J_kYD*4<ZUW'DN][ee9(k*o8C-/G2&:eG56Pi*p?>o!!0km<k!&P()nQ(=dn#0?&k;UfA0L.Z**;C6stca1:6nKBB$_fs63_)82c
%OBa60Gb(kaX$/dAf6YAJQ@Ll1&R+V"g11PS%,:Ql@16%-:`(0*&)6AJg\?mbetf=6dX4G+@2jXQ25JD5JSNZ+O[1k@W"51LoB;)g
%GjR@"W.;Wtj/Hu03oGR:6H7Hp+=<E$G8%2TZCs!!T1;@uT:%9iZXW/3S#SC)d\ipd?tfs-GDUKD5]lpkVkK&0+=\+K2-::V<B6'o
%dO->Tl72Oo@QUG72K0YH1\j[3FELC!+nhXkRC]DiJSsN3X:E=j>s3<<#2@4OV`"j8>*ABNaNEHZKe,Ed8`Jri,L]/+ORBZ01X=AS
%1f4IWO;1@rRX1V8<oc?!ih0H!q(m[j.t4_aaJc7s6n[O%&f1RX+\P6:15&>aK2GGNP\irC,aB%=9!otEmg>cf4A::bH\'[k+bYZ*
%R3?_&kn8qJFuX*KZgtor](0"i=E#F(,RHO.1O6]0;K3E-lmK,dn8=nR_%94282A?TAZru@FY,!lOf*mE.0CuL/jYPuMfiha);E*X
%P,O1f9hk2Mat^_b&rDSR&Hgr.,aGRa-B\Fn>qJW<_(9TCSS16pe><"GoPK+H=%\c*7adm1C/Q+DWb%uQlF_tl@>$+;$.6J<&#@<Y
%!<`V;:1+L=X1Fq.qgSo=f1?,PW>ij-SYre&q)e*4-[LN!:D'<[jE;a/iZu5;"CBA.bY[,op,-A4-\mg/c]H19,iU2PFf\O-.r?<s
%Kl#W+"DF(Anj!;B^2&FhKe;\]#gVAlqEL?0TK_h)<6Lst8p%MO]XFlIWC)+4JZ;k2$"R9*XgV39,C!3@9bMYhnr>VI8Ss8B)n0NE
%O2,?I?,q()VVJ#2G`8Kf/R]D@I5_=h%g?R7qHKdq#_UM./8[$^3=A7aBp-(X(+Of(eY8\S(+rc<8/W[anG<@b+NV9j2Kc4HjTltl
%/mnRq9-Ug#I63[H"LPp\%QPcDaof2*Ht\Ad,qE34G7gjM[BtVgFA8>7Ij\L2cetu@d:_DXAdJ@G1[6?8@]9l\j8/mD`GLa)JH?N>
%eg.fZ,V]Jsoqa,?;,>9cP&G<,J2K4Abu8JE_9IqN3i9Krkt@-jrYVN7-DZh4*VDE#K.?<[B?sj\J_9+k?'[bOSOC]@#uk4k`X*28
%i=[4VZ$fB-,9@LY9%PfI2u;;h889TUm`%Oj7m>95WnN\,o(tQ%.R=CkaCRH7*%a1V:f0C[o5##JGY*V.]h4=&<JFs,qasuN-Lo,$
%A&2t-fEObt-U>^8;-6K0d8kQGn5N+`5H`U.aJdnboNfc:@lTeK#^)jp@QdclL8<>j2qu:ip(YF^.(SJeEW[AF8d:^J921_J^g[;%
%6XgnP#u0M1nU4)<nc:_X<5)HRh^[\l+C3dMin1M2r5WQGXQ&`=ZA+7%)F4cDb'GaeT"a#K?mNJu:YB;t:>6_jS+oA\L83F+<8[3k
%HS(KY<u+k$AC\NqW_Kn8$^+8[U,/BuH=LY:\Z@C?7&2phf2`4?EP<ScIp"<L\uNBAP[d!'*l$CdWeX:l(=[Jc3WB&[]tJ=N3jUF5
%"Qpf>p]_NI-';0nFJmq[a%jqfgVA.4T&["&Du0NoCM+#[R\#r\=Y*U5T-8Lt(QN^P_^l<)CK-L`5"I\#G_9^bj`;[;3M6g9+MWi7
%^R#a'=&XT1aitp2?_]bcEjNd4iPZi:pj=O[p:K]BgnM/gW5=[3FmsT)%/eeAhQ/jM^_pq9=`O/=2\GeRiT%"V!$GO[k%#[KV8r>>
%+Q1O,1UN4e&sPua1OX\\@o3_jc@;Hr1Bq[Q4M#`<%TX>O'm&^HJ"2:#C'!B5:d78hSuQUT3!+EfXlo9JYC?9DY$%F.;]q,c%YVmn
%Lf0gF\M+#SQ^''HEQ%tu+R#&aIG=qG("@&L49m:G8#PS@*l+u+$O<WYIrW$+()Du(iU"p!dg?P2e_(a%.\ZabDB.TC'b9^_?]EZV
%WqchtjCW:GdfU0X-oO1?]olrhCo^=LfB;t)XQXX_B<bu\6=Q5>%.e,4\:jFuXumD71&o$Ae/ZB_T$sp.)d/Q6-MV.o*QneE[aJaC
%M8^>:``6[^Zo8+-UV"("N=i7.`f_6N?E?d5X>/;LqfgG4@KOLR/m]TRg"KMeKcMK?oH!t8/&ejD]LRDJEb1J#4P,mF=9,7[NL[\j
%o)^)<RWotO(r*R.3OjAY.dnigF\@U%/4/MnG>o]2]JD1CnbG=sIHA3[ZE)V[jZZG;Ajq,f%fs?AD\nlEh^e'iA'D)Y+9/oo`aO3Y
%,=h0Eq"I\ro\1l,$T`Z[R\i4.gNoANLd>#h7kMooe@Sh^cUD1d.G3pa;7JhE:NYMLe/^e(3F^jmlmOd.#;<bg8_RDVg8rpQbuc5[
%YH+O?]')n[c;c3n`0j5l.`^E?]XN+j,,sYcK"H,.^.Hp$T6=MQ]>7-5Bm6'I-^rIL9UUp1Xd@?4X?!k@[b$(N>ja,;k+@OKbUEni
%!\RtXFUF^Ol^[tR](#*.bG':_>Tbe2,OS(lZsl-iN':VkiBe]Zmb0,)0JKf"XD3[rPc!T2VIb>U5J6eV,I2D3F$?LDK)4Y#)W4WR
%erQG3%g%I=GSp:gN.+Z9L>2I>KQ6kgafm%bOlL1cPgq'SOqm#dCk:@7W.1JQ0#7*km4$:ZCZnN1:AjmgU@'S%eGFD1`;1h(4Hje(
%WK+8R.B?d?O*B@Hk2QrP5W>pIN/npfgFiC#iqGG%(m+a::Y-Dj[A*)^[<Ym3r6mS0KCR"k_1^\R&arANeV4jRBJXle#+tVpk@UdW
%8%8@SQIKZ?*,MUK=t[g\LYf^!)qnO5md"(h$>(tbfD^1L@[OOO%)G-6S*[Ihffecsqoi#.GpEQKc*dsBR4!.j',IcNb8t/Rhc\qV
%hUO+<>&K@bhX/Z!P+uV#C2XUHmEE^]=Sp..NFJ)LVJWDCP7(RXQ7YRW=H@9eb0[7?q($*qr>kD9)2'^VK\d_.$uoF,9#f_Y`gP'A
%\9'pg#X12<ANbnN&SH>0]0s+2&l[oeZY0L*E4QmW;B\2(p<32Z]&p]4F(kM,(!IQPPUN0O;o'<?AT."N39T&ld\W9\%`%K`M,2aP
%"o\Mh>Qm86i,1Wc8F=tJV;["lgBufOQS/JsD3qK=BnSupma.O]hL=Y_RBb!#PebnI3AR61/IuH(np7Yo93Wj5X2ipN35DR+[\(O,
%g9Sdle\X]ME+,BiKiO>.>B1'mT-^rE9K)VX=.%NXg68^'DLC^HA5#j2VZ-M'F9LQZhl&$W<^6del*p$2>PYmml?(`Ad"#3)"9Gu?
%W&2-fAY0Z:BIUFrX%UP>jpqu\A"*4BZh=6&ZAG0d+N1HBcZD6s,F:.R,Lp"CUhQr`qhC9ma/?[;aap5_W8d:I@Z1@/M'1'4d"60@
%f#<>g1P0&pH=sc'kPfdjR^!!%N?Dr"kDF'^B?H!J?_nmP:fXjS$;q($"81rorcl=*^gf1ai1-P@9>.$gLK10qk*)BS-ktY`,,'^Y
%Hjgu&?+S(q!:*tN[ejOLbU$PT\8PR)CYjt69Udj.`V,H_UTe657EFiT`rT*ZZ,!dPe*E+!\i*rr&i$(Fe)^p,NaT%^2ra4fV@q.E
%'jacoGn+[;I_#UiX0V@4iXb8)cDXYXq62o:]1af&C0r([:LKp('=.J*F*,.8]o4&9dusFS^eg.*V.AC@)K(.,NiQ'*iB#b^*7:m&
%iId65,Z?rn%aROg&dJ#D>>ebN-@Peo51Ceq0uML-O79JgqN'r'lsbp=[([Z1Ej+Id$*S\Tc'B1nAqab^<[f)C5h[5DJ]#a<=kl27
%T93TM`@Ojo&jg_e60eD1pcbYO41[$oN=@6bYHe)*HkSrfWL(&H_nhg,mW'sTCSb:_C90icm5gtn#d&aC&EC%KPl[.b.rjuc(-p*3
%YO:^uq)-g\,>+b]qWD5'QVla9H;mW<Zs:tMf3p;>cm=u)5c+]"CFmG%9tN8f)PO+T\i]*WWTKECT!!hg+3LWV-:5jYZ):dW'!C^>
%^J!Wd1U#;k;I4db^DTXM640Q*HKc[Z2BY/@&Lph?"u(1ZWpLC:6e0UFe-aPcjuC/cVE3&]k7%Gq"1">?N4DIXRX6V<QBYr<UQ'e0
%hi1s.9"erMs)g/@T@Sb"O8/RMC@a+44"jNc#+eSM+A#/egJ6(SAel+[@GVPVoL9=G_6MH<>AP#V)KSQk><i?b3sct1TMZgs>3k-)
%]]C;(#_Xnj7uUeI@dCkj/EC?1F^VQ:+YcO\Jso6/*!+Xif<NH2a#*"jiMEY32/BQ1N^?j'(.'de]l/)S$*fM6$%,tcZVAh&<Si@1
%phk*NB\U)aE+0TE/[)YnDMGAB?FA4?*D$O^C-.L`Q7\[,<6QKrpNECd&4h0_[\h5fgXFH/Cgk6="+k(f>#5MR541HYDb5&s#O@5L
%O.479o&Z_oRpJ&oim(rOm%&4*LV`7k<tCY$77VO`]<A.MnYiD=EODVc_m>nJX"?)/5S0sU$:SXi2m"Pa<t!AP.V/MRAgNaD'$eeH
%f%?mnq%t/M91(_r[S[5UO\5$F2',S8aD[l(I4=`+Mct'eHQaTYMaoI+Ed[K<3<To8YSP`E^R'K%)!_@h.\CX*m@FJIReioI!V.-D
%ZX`*@/iGm^F5-cQ6j9Ccd&l5NDMcS$TD##s--e^We_"DD$mqk%K^ZQog7+`3@k:2^^ddY<&`ubJd+gt#=7lf<*`:_&*7,k9h(LFi
%*hPMr+e(%1>JUjgn.dm.?rm/<O"Fm'%%l&d4Vr_f_e)m@.&l[qqVO_r]JJP=e5^+-o4L4GH5N'+b;USh:ai/Tp-&hd_!EY2'Sf&(
%o@9&]+n*i+HUSEuaco];lZsBcdKX-i,q5rR4<\K0T!>?82ALV("Wd7*43N])Pmh6V_%d5!"!nCi$<g4a];b;pk0;5mjqa!g4<t0U
%kgeVJ?!E"DQt9fT!@(G*Q$kJ1X5tfA41Fb`A<q9M0CJ6)E;aQ]9*k"kh4\qt[Xr412h;6Xmf`oc4?CFi/bU;TlV*'g`9'[ISUISX
%at`PE+89pd*/(nYHW`NRM?+e*(WnC,>F.M!Oe;(5?U*fRf6tg`\I\qKG,NMn'Q:]5qT\E4LN5`OkKKC?iU=M#HCcFO9oS6/P7gq9
%?:,<2D&ho4TQR`g4f)VTroJhk)BQp/b)]<JT@0$j*k%Xbo[f`2qj(Ot6o&V19a)t.b1;I4OAj/7lj?]=]ANoI4js;/l./+(13h'G
%V:W&@WK&6Hs4=S^k6-TL\N3gt!l1b"<X//q]Jap)d[9foCA0Kl:Zhd8]rWXo;dGk$dXn1\W.UZ]A,jTN\fs@8SGN$4)93GWm?GjK
%=?"r1Q-t>>7,a4i#G7q,JX+*\UL;d=`5_VST`h7SL9<b+rk?+oT1DcF1U9*\le[tn8nV"^YkATu-VeMhe=`Xsm]9>9NM6'ZFp!q=
%Tu=.:BR$A(c:IOEI+[QA3&Bfe?P*@TnOI3m<$D\)lL"U8+$fP3[f<tr3-<tUMa:RuGeBHr#S'PC*^fCFMh1*Rb-n./.@gW:p<.^/
%0&58%VtrquLoAI%##K0?'?dT_E%:nhjV,]MCTW7c\u.%0&*tQ@L:SS)gD7aCBc7Wtb`lZ>_>K8d6j&,$#p^Ices<ATmC:I-/AEk[
%57)11h)eT$.(7K!TeNCe2=B)K(5kgN?t8\``UD[jBa$0h4[=0a3!qh81O<=ap?&pMck@.gDl2k#rEJ#6hhj!iX=V=m\U3&^%c$c@
%r;IBZTbnMr&GMO"c%>"_Z$cTbhe7VUAmX4m)K2nr-^78ch$Cq0cSIcfC)LMuY4&N6l8LpTokdd$#s)kls/%cUpo,feE/aotgt4sr
%Cc'_&F^?G]dcD`(o++L*3QFms5Ut,2>MMj,q0jU=0jhP0[o:6^BuS(Y)0r30J<9-]nG*ojg9R+p93<(ijbSd<Y9Zh=YZ<-o4k=JK
%>Il)c`_99(ji>8he1ur$NFtgJXSkO6*cY\jM@AIVoRq\]B&!-cQ<41gd&2*4I?+hG30GB`qQ%4hVVF,P4;@s[Kr8'#>hDZlm:(6m
%-h8u++V6>%InkOSQorbu5K^55>#@@92W4S=#)T>7m'7PYS$nRo!M+I`?E08Y(c@djY=jq^jRR^_a"fT]BPNoKbT-XcX+S+@bH;6^
%pW[PbRIFW`Z)J)+5jkmTa.3Jp^r9RDG,L!&pIDK/MI7ccLm7p<lQk&8]9i*`=Z1l_;IkdE@c3U*G,r,AOCG3:U(PC.J,i@ol[<'V
%5:Tjqe>r>jC_$3[$['P_%GCn6deBZSUe>C2/NGflS@e'97gpZG,J*ngYfdFX"V0Y<B>juJWJt`U+H\&t>^,j5HH[XSkh#Y.\Ek9a
%pO\c'R,7@HcPN;(ZA2FqrH5dNF0k0WIh2:FUW:'P\,,kONITWCptk`^T4TWKLO)+onmDts#&`/hU7]K2lCsi8Z]PcpH=NnEak3cb
%E?V""A31lC<IU'mjLUQ\ilgb0Ru[4T^LRm_m1QX-pH=gcR]9kY*Y#.2MHb$)d>I?m.B["'WVn#Rr[Z31GZecg)*NFt!6R_?(QjsD
%!CH^$5(cds*Ei(Q[:ACL6RU><IFDV[+9AZG?,O.pAHq_^4tLeUPEpiD'es7($n#GbkK)dW-Y<<?nnDHU%Sp+%0QnP(=B,nRG>,-:
%_onN:G`sudN2bo95rOFUWQPAE^;oehJ\kUdP2r,W2)TgX4JQYBD*r**\n]K`FnoT;X-q;TH.Ej3'Kf>E6813^cQDl:`:0>O2gT1L
%@l3RQ66=E$O,J@Cr_^\BK=#mB4Y@cF66/SmZ+t-iXULhjhOLk6ddGihCWh\,n;.*CgKNFp?&kDePQb2%:#q*1?sVGj\3mpKSf?$d
%pbHWQkCldi[M3Ys53;HY3j.Z&Rp85)Wg^b@6ahteR8;()[\oEqaBP8D7n:8cd03r*36SGfYJL1h3h,"dG0;=NMZF&D"`d(=$^h?o
%&_`[Di\\aB1<>1OQ/*NX2iQ.l[V</Zf^K<XJ0;Cn8B@[D(Q,6Xj/&kMhF*TW#s5R+/'>O\`WGAWmh@NJlAIk#n%G_7DGB^#V6><3
%D=o?\"[hCFLP4+9'j%Qfr!6+sFfq!.1k!^0"`bo7JnU/=^u&=ls.:Y='Zgr%Ep-1FT;e-X4MuPTp.urL,*Z]/d/d4S]<9=%\/$HC
%be)X.S'iA3@L&31Z^H!=nd@\c;Y3#mVOX)[ngWF*LN$=(HVVO052L-Lf#B<U2\(@Qol2COg8X[E7?hT_W4`IW4drM]bL3gS7)(N8
%JB6cQB1OK+CC]WoZ*'#s#SXr6+aBF"*!')_qkWn.`?OD`&j$Ig5mA(m*"7fVJH,\Ug#R:B;9P7iGh/*k"(+uN\UeokNCb#8,A4'+
%5##CP"-U#AfCTn%p+cXNXG]],nl!sGBPBi]&XJpBG!?`U34a-/02WVZCTW:ioC&0JqMX=6j`Is@ELF?GAu+NBNMYEP+#tNjnS4nl
%:.8Y?9u)kR4)fl<e)FLYF/'ga)J@5e'jqaKA9VNrbQ*f"qi'k`>4?0d>;6Eu$M\^IeB`%Boc!*F^1P4p$u*_>''h,&D]NeW9)AU"
%>!?#1E^AA_LRA`-^ZLOSn)oe%@/0XDhr]]T4kVO7e:-#I_1U+k$mAS6T^.^DT=$\^B8QVq<^/iWeF_CsEi7g@7u?4Dfp^Oe+Ji'B
%!iIc3$+sZq$g5b%:@%4Y!*_ujr+\mCKD.79=8OouT0QVJn"Sr#6g$l%e:=/YEd+^l^?Whj%t>$ql*glHn@G5Z9mck>JD/?Uje[.%
%gakID2OLeHGkc<o"j9C.#;Ebq+bJFZ%%4i4R.h\Rp/K)l_q4uE(1qKcLN*LiYt].2F)F!=KMh7XqrIT4*O\Q.Ong]Z:*"CH\^7P/
%ZN7bt1@^g&&DQdr[KIEm1<R=:B4.Il%\hK0VEM!j($ebb0IRoZ@=86-Vq;;#T@2E3r>sJ*JOoA]1Y<;[2.6EJ%=ic`CuFP"\(U#$
%8HPT9!Xd(9&PfZe^s#47N"oO94+1C,[.e9:[&l;ras@krc!.bCDCK`u\YCeM:FC;O1ml4Zo">cXPf(eAd;DiH*7Qe[*r#MS`kZK;
%"tQTihG,[DH/V2Jbl/[oT.u'')SV-CE2@g34R9r*e7f)Ufob;!O?-S3]3.jc?8eNrks-=RkGQ"Y"Mcd%jj,;aNE([j8g.jaa\rfR
%fh/mMrNS_]2+.,2acHSF[^1"qW&WC*P0H]%\h:XU=NmoA'0cJJlZ$Zeo;>m8h*rPXX=l+KP;YLqWq7QV#0R(Dq(g9e5dT4Zp.Rno
%679sbj[O,D^]fA4RZU>YF3I%Sdg\)cImYGgQ`*0:Z(QV(Oe.m\p*-"ONruDK/6cRsGu6L6d5^Jg"4P2@r?OYG#kZGolh?R*#U(u%
%k:6K&Go0g*7C=EISAURJT9$!E:9Ca3n&0nM&5#/&7nc$T^q#,I,m[BM%OkC!6.ACBc:lr(IRuAET&15uQ/qI'B0KpfmFcR</]gA]
%R@"]bpe`\u9(Sb_TGp4?c8iS$Q44Qf2ng(kOHFr&73!0mI=9=(&uP!3#/%ZY4N)7m405MlOe.t8@sX&+7m.!pPY$(j.h&2@PlT&a
%&PSmqj5&dP<%r9?Wi/61XV`^icFQ&EO<'7"R0RX"YS)"*^B_47N'?$YE!Bt&.D?3OSMdab<=_RaQPk.2%#F'.\s-Fnn>.J4cT4Oc
%j2(OY78!<'=t`[?>+0E.h%f":ZU[a[mc@;Rld<&>AO`EKI8uisMMNnK^tN+7J=">93J3[;*1)EpG+MlgOWQ2==L:2d)[Dh')C!q1
%n5.0RVb&kOlC54fRfO-inV9r"<1/8XFaM2GX)9ge0hK&N-I.\*ojo2YI60N?$h_GdeI@,;KK^i#Y.?'kgU,(_LH\0Q,*u4(PKaLp
%3iN+dBE;R*8)TVkS(IuS$i6)(!D#m.'X&C`FL0F,H\ukISadEWLpefAf7qX?8RATscm@U4P);1k_PW=6(h3:J`:ZAhoCp8']jtB7
%1!#Y-3e"9L"4c+1]B=QR+MccOe(/(i1mL_`-%'K'QqbNZYA`f@ZCL%*NJaO67^ss/e]TX>50iC^WQ5*oY-\BJD^5R+VMhQkr0&``
%^&'mS&ZltlGH:Bdk,$ATpDI<X*%gPihGkKQ*I5PKm5S=rb@ttnf_4N#U66tP#47,TZ(ct#eGeU/n8:;#?gTb>ENl)K5[,\:6?(DB
%^U#cO\8Oe4]a/GU/0+q#Qs>Nt?3u]HVBjmfa1j:p:U+nTF,hB^Buui9ND=,q.%URl0`)73A4_l35K4cDWFqOWlPC!8ku-+9N%f#D
%#3kJ$c>-%5ka\tYEa*WF2XG!iMK=h.ORT"OZ?4jp9Wm'Vs3!Ju'bD4gBd;n+rO"@$YIs%79KQW4,uoSCc/GkTrO:3>S[5=X'<u03
%8;BgcJN#-FOL9oE^#"*X_U*;4G5"Nc.BXs@EXt?HQ;(n@puJ6#nblQ10u,In7@EJCiEQ(+5""A@q1@>Ci*68o8*gE,>Ll(\XV!BX
%5-2UhCboF7P\'=Mo!-)7p<<R59dj5Elsm]L1WtaucP#XCKHXLL.Pb"crq4m)/-5&gksU)&b&)8YP<PSSs3]tYHlS..P,W!i@XNhh
%[8KK$q.0DcjScu3fDBG(-dNS<Q-1V;d&"[l^?dk(deWZ_lHu[S$cB%2FhIp%X],$%!5r,m%m$p9dYk;p5+L_a^J=\KPa;+9SJ\)^
%O,:etFB7Ye4E>28""4*"Jg@8M@l^4hY^a.;Os<@RRZmjZc?/S!]IV3*XkAUcm?4&)!Li%Me=u%tO4eOJac^!W)p5Q3m4!cB-19S1
%24ST_m&!(iFu-TX0Y\nY;eNa9]n&V3?MeeBg"E)#2>$ln-a!hk`mGbBoD6)-.(,11$1Y6<12kU`-\i#R*4#tQNLe+2/B=,C!pW[j
%3#)C41=[i;EcYeUV),;"h1qD`s4rbgWgKb+/T)pDEe/mDFE]Q_S3bY%(0h_?*^Zj'O!.TNZDHV='3clMgO6pj(MtmeH2Bt!ii9RS
%:;(u2^#__'^m.#N[ne9uUqP9D^hU7C^71[`@dT19NV-5T<+Yi:,>NZ5jIsmO&pr:$'jT.6f+c)F;ObqR]uFfef;4"#GlA1KU3WS?
%$Fg;WNQuH*Xg;G"4jS&qH=)'anYrM\%'9g20T^6<D;:-tV;0uC\=0&H]-2Ec.Vtk"_RCkH#ksK6qDn:eCo;5-:/!>J"6k[HC<JCW
%g33<<:HohA,58$@bWAr\O]-U#J(ukC+)A>H;P\HM*W_l<(d!Vt)<P1meWAo:l+9deHg/[QrEY59hE?RRSi$_FK`W:kZ<B9EiXm9h
%L<b;;,>jh5!4o!]^9Dd;%N`>ZX/;uB,\XaP0Eqch,m(4`,Uq5e5Nt=7OI!?0-WoNp`-p'cgaBOCh*MjS?9.*b;78HQmrPSLT6uJ!
%a(YQ<mFRPR]4^,roefkUPCs4YW,O@Kfb8%uXZ[\J'GgE)MMiN3Y)F+M&rU:+<lo2"al@0rcq\_j;<g5C!CWi>Olqjl<@;LAk;s%q
%lei8kY*NeuX@jgD`H?V)R#/=4.[1EF<6CVOplI^Q1:;X-r]6WqT1^^'q=/P.jbD>SAlub#BE!Z$0<lQ@':P@`iurpJ)HL&JV/M26
%<TWm.FA!lh4X1`0?Eo.4"9)$WCXI-7A'n,7350n=At#JC6cQa2q$ME"11[Au,RY/QX:PeOFHJ+^,[[uQ^qtlD_[RbS<r]%WV%+j*
%3m(Z<$,AlV81M7upHMLgAtu3F)m?M@W3X2<oanBX%JQeV7kPlXerg):CAT!ZHl%n-HL-G(es??A=FZQ2p1u4Bi/NQUoJ;J`l\lB:
%kcsuDf8+TO\#KT6_Q&dm5QfXK[N!*N<\0?p<j4\8T;$jDY-g#`=28%^SR,cFEm/Z)UbUXPC@'bb9<\)0Bs1Yrc]f;o$G;07.hs-!
%>%3G1+_R2.,TS*Yr1K"m6PTt),tQ'UcljmE@A"lm#'r3I=4L!*7sP6jV35o`WK-=$:,9:73od8GNPi_YUp+.&)0D;^L.AXSpI*69
%V0.['AMZ1R#GcC,QM'e3W;;M"asdWk3gOu_8e2W_PJZN'L9P)X>O<Ap>&JnI&`hU.gT=c!Q@P`%mLq6?Wf]hH*@(8#NE,OI^O0<H
%ZZQ<G-%E,#g2a[="RiLq\@7&0=iF"K//^k/TTJ[iU0,/e"cbG4b1iK)[eYY#Rc`m@nH$1i!Wc3e?rg-/;`ausn]7r,29/*oV9,L0
%HH$R;'u:uYmTn$^5%*($ieYN>U&o9BcI)OF/=<s#n*H##k*@>=`a%BW2XSJ%NiX_Di-Rjh_u8BIN!9-+QtN+0=nleOEG7jMD>![/
%3^7#0We/mIgZ^oY<RRqV.m[EqdoK3F*%oc_\1>"!m+l4XV^@HtX2BZH.9<2.]'E",jlP0g'up;;57Qj8p8$<+rACbW?7Rlc.^-U8
%C]4;/4H0/#AIFZ%._:I*%meN3.6_D9@5]lt`=+6i[(Dc2A_SdsoCr92\BbKk-_oDKPO2gB=nl4:<](5&56^;!C2os6,WsW[kd/C4
%?*KMXFXB/`RO(M629/N96?q+ZHlFtuXjX/>YKuH'Nih-gHETQr2(Wg_i?!"KP@`o[:Z8OqMBJp5?n?bRUfZm!bIdg+<un=10K,?S
%,&Pi,er@4d9.JpMHDQ9"r11:W@8%4J\g$#g6pfeuAe]ln8-LP^HNOmZL3)9*BN,f9>-qQ9;mqhOI9"0/-n=fZcd-+iIV8qkY=nb`
%Aiq2L/P:l:-HG=JJ>-Rs8.%$?HFI&3q-d&m$Hag4#@$;qWX*45MDTRnDHYs5YI&&X`NLrm(Y<W]!s*8650+gYTt>p")5qPOYa&C@
%Hid'eX/A8aI4\76@I?XR;KIR];[3((!aaobM1%ro;J*Q1m1DsZFt3EM=dkI`TaP^naXGLShRu$:F##!i5B4,uGCc>8c_6PBF*bOp
%Ld8W_8XJe,f3^cKIG@lRF.2Pb26`lhDNr*dqtb]EHsSk)R""gk$<Y'YLR=)1IYal\<':.(%HHK*3l7/t>GDQ96/u$0%mM:`\`m1E
%HCQePX2fj"OY<%nKTWfMKek<8PX3la?ULK\OZTe/OH@J_$j(ej,$8Ru&uVZR!+W\7^IAD(/-D?8BMI\q&Vl)@c-/L_^Itil27u/8
%Kuu;mKH8msh*0*dVH&)dW:fK+6fPP59(&LAS("PO:LgTh[Uh'3G-ToeYs#S/gGlo=U>Bu>gM7(pKT:TA#>GnGY6rc22$'A*"PH<:
%b)9r#](4+Wrk\,`M?LqXVO6kn_sAbbL23KT[262h&nq]S++9OJaWGS+E:GeJ6Yp1(p!>5\NYMl]f@WscnhS;70ct@`P0*NA'r6Au
%=!A#+[ONo-*?Xr"'Dh5E2^PSFb95dSiMc.K.o1[/Zh2LNO".Zn75_L"A(Igd(sp%Q7Sk'T,qbefQ0/b7/6`$U?QLXV4<Y`M0NS$<
%o).M(H3O'Ma0/W%_p]@hU9_Q+8LR+VU@@3k/*@6^ckN:[gMFe!WgG]O;q!P:]\#4+^j4b@A&e)h[r`R.l/Oo3gKl\'Y"-Wr>Cmjp
%31&>LRK[iQE9nfkp\C@i511hLi(r\*5)b9@LP8mHiSS^_LWd\h^k`ee:F]2D.#:bc;LUrdSEp?:Bce1u5$bBLf,W]GiQDIc>^,;^
%eE`h$0TiSBZ'M6tO*[+X-N1t.b)mYI&CJ22VM<"KnW)aD-Jh->fg-QCSZKk))r7,U3HoYY.X7(C$nDsho^+b'fkpII_ed;ZQdfi+
%Eb6^;[3*fV8o(eR8bqJl=b#tAg'WU8TtiA"jX_rHR*[,/@P!3W9A@+)U[lEcN(&X0F]WGNlf0tDX*Bj`D,k"\4YJrsQ+^EijlRfW
%fk"WZ5!@[7_;\n6`^\%umm2]eioQ+tA#*nQKndQ%%)5?Z#jq_"jHW*Oi.Iqk;<LrD.#8G)!">Xf_.e"hrBG!'6W!cIeT^AG,/@.O
%L:FiPqNfSBqeL8F53YG@`]NIVk:m<hRPCqDk48-(;ToG9G+:j?r;X>1rE^,\`H++=n^s`Qe]aOM>?_W-bCU*6%!9Gd&"b)*aZcRJ
%U%'Y3iUj_I4)5-n&,e91GW[?_U&On&G&,OPjY=8cP/!Vf?LWr/&#,)^J76&1_hbs*StWIsm`;BVA#rR7BR=&;#G_._!'2OLIsk"?
%D1TE!V<`LK8Wi,+=]N'OMj:+#G-uS*<6u[Nmtsm>n9Um;^F,'7?ZW_Ak*rk5<XaUL2Of5>n&"b=9gf:h*FuA]f*OeoB9Bslrj,"@
%,IbqmIX^:'i?/t*^L^NTY=p>3-,7&1=%bc%*Od)q/ed']jFei2`JJ1=T[HN%&H+`[cT3JXoQ<4]QM*!>HRcOSK^k`l#$(T99p:&p
%P!)<-6I.RphAsdP)'l'$)=q0)@OR?%8aPUB"FO:aA$;ZYC*b$I*r`N)3Mol?ZUOU^`OtMoX9336>1`,qO^\BtM0aLH/E+NJGoit+
%icMOM%&RGR,ZV@Q]'pde8ZO;S/j-UBU5"]O1@.n0!!mNsg@V5i"KQB@<(.ddY$t.dh#]$m4-`Q<JO^G\Us9bI]W@BK\RX/CN[_%'
%I_bo<qEJ60c25^L*YoA/_lWKX1L.M>:;?#jU3f&Z,t.Z\kg+s:LcB,>#SnS/Ocq,1OnWhCJ4W]C/-<Al6ns(B2rbX\k1eLEq.i(:
%@V:\g@tQ+VnqVemO#<7W\+7Q+\+#g"51jrc;pQ1o^pun&KX$1W,foFuMP`i4?P25nKe9#@d8X4AKPE'i#-PR_:-J#fZCp's[=sZ]
%]+_t\:dH80Kj7s&g;c.[0Eq!PUK),h'eZgsf7V#Q6G.-!Zq[uB,*qX-:B%rfJ;Sr:UT&V@MS4rC?qFnuR8b.dT'UD]YdJN;jA)_X
%.Y(X+j>^%o>!_B"/`i4=rXR%7Kq*sSY(OKFYq<ZSWb"<lC2QYDhRCHek0`3bYs&X&-F*-9+2/(%]W(R*>;<c_Z2sEB*hTF?D#_G\
%@S_,l0/`$hqVoDjLq4o,<3K@rgce.!MP%N8IQo6o,m/_o*Hdk6ZkI68T`uV+ZGB:0[g8&)FTX3>ae..V*)MRHC3tr5d\)$VDCK#o
%ae=Yr)HK^B):3EZ6L5BEA:QPaB<QNTk1o0qLte7,H)%!/fD-==IT"2e]3,g8't@4NbbiR;KmUK*dU8]m/8<=u1iP65dZ![lZu8^M
%AA-hfMt"kiFULIVousl0RNg--DY\HdrGJUF1@J,,^"j8265lLd+,ns__`A+>;s:0?@I5LO*>*t@0n4PN0X3bHM48X`SlaKODD+^:
%1q;j)/h/2oUa1B6idi<+M)E4FOh2$IVjE.dAs]-N5<Oi8g]P^?1L_KW$2W+\K2RG6IU*7;HrX$NIo0[<V!.*^86O%?H@_nCdO"*Z
%&uBB/$\0lTl>6nm+(HUm8S^9Hd!L]C8#mO\R]Y#(C6=4f=F%(i7uj:q3#!NsQDu^)9ZS:0O0%L^g9<ctP&%NOEiP(5b'21q-K.`M
%KgpG?V3iLPjk477J^h-#545!TKfc;!bPR8k&MuM)]u09r9^epm*^XSh)*1M/L6?(f\fNA4GKoK(Oo];B5\X$\iCD;fcGkU5W/bGf
%7,n9`^P^a;N]H$08R;RPEn\5n"guC%:H6C"[29<j3YWQ8D%5If@CpJH5d=C/m<D7@6'^$U`GO_MZO5.99'?"aYA,[)ldJ@p?*&0`
%D7<IODCJ5K=,OM70/BZ"<aCle3<p^:`?VJK+a8a-;/QGtC]=jqSoMbDm,:8Z<jKCb+s^,tg?V)EI9_Z(Uf)+^HJ@c@8I.T'[l5E'
%("^'tInadi4e&G^BHncnN%pXhS`?n/);7uHjJM5>Cf)Sd[toCjOq[%F:l`0NMkD-3U@brg0Wq<uNd^INSMBIP/AR6jVITi9KJ3!a
%925SfCg]abp,kf)%l%hX5`@FB?n@mQ2)\])d1<u3q/E;CGu2[]*lb<dddB7Z(H%M&XonU^d`W!\qBimIWW6bf+8e,ZWi=]-!"YCA
%cOi=U5o%2[(6JRMBRfI^;%b25,<$Rd4Yl.])s$Tg@gkT7GBeTO'(Sus_OL%%kOlYE*KaH,H2UH1X&KIElZJFEce$on\S,W68GJ^M
%:sB>bqDP9]ad9te1aV\_nL<SGYEB<WpdS)N^g-^$=<BDZ1C',=A/09;c%k>HnO4sLNP>FEX%H-afG,/;>Fn[W!U*93b<5l7V6E_>
%:-C)EFoVD!pLj[^n[(j*`3i+X2='SodgM$O;n*"3c&!`*)Yl1:g)K."c"FFQmcVHj]X=V3.33b!r;H7>9+p0P\";Sbi<@54m$fgL
%:A78u<Uede]2jg-HPXC%HTEI)"qa*O=$ji0E"`r7<UDoP[']OTGm'iImBV&=?Jo'+;?Tp$<qjV><?*ZG]SQlq*3s<I8<rQGp[peT
%1iPJn)L,429<<F>QD5WYP&DZ-W(#hOMH^]'ZC[Tij:nDgi>-6-+W8:F\56OllZ"6fqW;YmW-/$l-+0S/l_00MOf6(u:kmZ?e/Q:a
%]BFV^(18#H$,EY7JIg%bCS5mMjtAb14J$YaODA1h3n_#*PfE=aJ^.ei,MXd:5AYm9ZrWG-C0LpSJQDHH!mFMiecKAueUg*IV<T/!
%Mn6#q@R'G%Hbi*YUT'<,`$6C$`mQh&P&4J3[:b'"FuNS.ZVVDn<h0g[+f;(17ur1_=oubI/>To&lt?(_:uU0sas>CJ_E:o!AB[,u
%O1Y5dSBu,`Kj>JA`Y,s!MA`HTGt/lW$7].*hD]qr@asH*hDUATgi/Hl7/(4s/p+%]E1"-q@RqmT%O(lp;t0*hrN1MF8HqbZLl.$D
%Fi`XfriJh!#Pf1PV-TcbU/<-P@sS37&44<ecfq<`$V=mE5M6]&oo<]`"7,4ig3l!q?=HQ-ko/H0<:3qD&V7&NQ'P.2fCuW?"5JV<
%:sc/g`-ibE[`?%aD]6+2Tb"0CTVY'o:IR&\e+gWF*rV-&)=CJVYX4^or/%G2Jk1X<m26P?gRRVn)W9W,k0rpk$/8ocZ",@/k>d?(
%I4LVXSZE\2S5hePh'e`L6Flj(YW,kZ(j^c)g*)1KG>fg;Chr;[&3B0d,i4_A7ReQ%YEndm6rhb%8s_rW,Us>!_b38`>tKp/hTamJ
%+lB&J:qIeRPc:Hd[c0;P$Ud_UPM7!WM5%HDEh*BljIpYii7n\A!Ac;LM0m/O?s9>u\EDY,fdf`?JG+at15Y#\QZ$S%CpKmec%$X9
%#UGFC`a%F-rb+q:KMbe&N@j(S`ru6"f7#@sJbZ0#,o"BaAjM5->9R,H:KANU*269na![0UXhc=Q_EGjXN3<WYh)'.jB>N&R!NKjs
%#XI+53WoPj<L/nuIf"PMdY6L]2,lh][G6X]2B[]ZjIgcY?+>mL+kK)NDI#h)^,5QRP4-g]5R3HBK=SOSo,MgC]L6;12keRKT+hXj
%8]D)g;-Xg[pp>2$/PBS5c=(D8PO\@8d%nWQR&an-.I]Pdh?q0mofC@ER<[3s/*&T-g:&\;TZp3!X_'LeNiIn8pLdd"pWDU`1Ap1G
%EY59ojnC5T4-==L(7mT^g0RA=P\AR:&i`XoX)u8YqGOR4Z)asj;0bC7&!jpnS8bLpp\Mn&L5qP&h?cAB=6:Jf7f<=tmli$@/WhAC
%aa1\n?@FTh4faTpRb=k>EMdDh?BH`7\p/^dVfOks"MhBohIb]j"P<_kNEaotRG9qNDK<++<^eJsC:99`c6k_MlS$?IQN>"*(OAEZ
%YL%0NZ:?1_n8?*Cm<LO=/G8L6V&!!>q-qkn+.&/IQR"mV!u?lR6m,&A.^!bnD,LcYR9m3/6O.2RMJ[s=Z^A4U7Dl@_fi[f_gKH+n
%i?B?sF7>/eO$#F@If#QGl4g&[8nsdTdKl;0%jHGuq-2>gE)KcO&9K\J$uU\hYfhV<G.kVtn1BJC;qKloRj+CBXCj7+[$RgFd#J[\
%mqIb[N&f#7[aY_Sg1U9HGojIk[59QQ&9c?1>>DYP)OGRt,jqDP2S'^c&ts!fEs2)9moC9t<f>48Pq\tS,QRKYW>fXWh<`iQ/$@tl
%7B2iWL\L%s%1!YoAXlhZSJ3Fjk@8=^LAh$lBmY;mA`;%F5*T?5<<>[YK2dhMX3?X'Uj%H*-,@^/Vk/ETU/H:o[99U)"Oq-iiLQ'V
%VV+IZ!0G%:',QuB@)-&S^qCuK?Q9ZI8!M<Z0Xq+Q";N]EJFr-qfaM"r%7e&cplbI5k6!OHr>,V`l6-'rKH]_"XQAplTE(c@$$hms
%%\Yu7"JAE)66AY#pq%D:&W6T1kP7.o]k3$%#$`be"@/>rP5[=\ra(HdfReat,sK]u9ANFM!]+&>r*iN7+-s91Ap/\9XEnJM3<PAm
%YYHHg@<_M?)r93hRDrKrq=ESH5`1Du*G9<-B.:SE"p1SSW?2<%P0Y18<Y2_#SK4gZbI<DYY!-Su)M7r6H\$9r,3V.E\0I;%N#t9&
%PHsMZ&K\!#VCHG4q+\C#m-H!`nhf\?=uuI$r(SC@4=IF)EX$j'*kRSGI=5fofp]`d-,+e\TDjU)F8p17Fi5p%G[5H^#,b'l=3D<K
%2<HC7;;(lkCODs49c]oF+h(V4:iq@As,"5C(<C>(O&ug.-^i\hlO5XSm8n?8d`GuFL0/YDd[Co5H&Dkl*_V!Mn2_AY&OWE-QgVDh
%@GHg1oCdF!O"VToHoMP;+g&qA3ckQcdNa1A&cQT+^)cX]Z5Eh.(_k2BkD/#?>U,rM>S.Hrn"m4'$8>Xk8(sD%STSmX</nJ7f4+Wm
%FEN8NP()*e9gM(d48[m`T5O@OV<jF>5PnRpId0\1rR&5?A0&(H2`K_E7[8)NPUl1q>PaeU6qRR//8u_;e+1]SIJ\1cs.3mRfepF!
%*'c`HVH1-D3J-BrcR-KK,Oc.76f"&9E?.*VK2&?0;e`EJ03]JeTgC54@1(#-#/>,Hk$g3/!5[9o7.JV-F4lM)+K`UF]$82%Xb4![
%X^Xp)Mn*O_Oj5`,_Qi@RC=,JBcGB^P3k9BYNEF]d+`tm\?=S79qY1seIdqoJ[Y:4Y&RS3QHmO)"nM9+-<gR`)+n2O4g0o-UD*AGf
%UP5_Ml6^RONc:QZ'G4PJ#mJD.qdm3JBB+*,A^"XG:;k;6cl+fJR'Xap@EKJZ:dNM3_?S#I^/5SW&!8eXc^!`G$p:=Drj>1i;f'"'
%h+kq)<dm!,IrsHJqFDJN<Qs!Zi@f:&K,mqVQCD<L8:l4uK.r*Sk@aJ=WSjGD+.d?Q+X@E>Y*Co"REV>DZu##\rO>g9$M\\*nA8/r
%j$jnIEblTLgpH?]T5miA@i"olGdY]E0DA6ZN(P_aq+W"f!hr1.47#Oj%ZR_cGuS0J?@pmu.aI*h'qdjHgURZ$fUoj\oPP*@$q`U'
%p(^_i(bmmU[)Z:F=[kTV95gT3`f+ldF3H0/bo^#^(9@)og=-IMaY\H'0.0Qo3f]EDmn@+(U8@@PM&H[9N#BMdK+Q.D\35$#q7Ltc
%";L%)0m7'e8o?GXWT/FIXq-eT*#>hFo2mp+oHeQ3r+4Ysfeup>Xi@^cO+M;Q92k:'r^A2<3-f=DS\9RK6l9U*9\9-NNcWFT,8/X0
%Fk">>DPh5*mk0i,Y&9S(0M<l.c,&PF?T=Xr%X<^fK$@tgmP1=NrJL5*h3V:!lA$R#_O<k,:uefC'L34u(mfY1^5ElD>)F(cZ/:im
%QN0u"IZX^%LLI=MU#J=c:$_A9BB2&G#cg6#LeA+L+!'75+>tW6=r#^s<P,WXOk1+&#H]/5RO/*pUU2uXQEhf"\DN+:3eEu:jr?q9
%WuW1nK%qQ(#n4^</_Fp^:p7lVJuio!Q]JEme""beP$toip=j$i@ZH/%emX(Xio-T&%n>3uPCgpEoWujbiMii8j&3bG^O'BRJdDEq
%bS*RG#4c>[3I'ln:"6DCagmIU-=G7@5-.'%mp^";i5ZK1/'3dHl\H,!@%3Y+2+2:u8@sp)n",]fC79ug.f!cZi_8\K5nh[f!6&(M
%[6&iN(hQ'5T%;,2@8eE0E2lA6X0LmhTj!g,_jlcI4L7MN'Cfl<$T_bC"Q5/bG/[_!!nH&"8@,>@V/>`03n`m`QL]pK[#[k@b9jQo
%8mC<:ZnBZaFVNkkcha+R43?dqV.8>-ManF\*SJ$W>J]V*`,XYAQ"!+A,$;S^U=s;(X4M1r!g\#&J]$OdF4-*Y9NM8sqH[BU9RJ1\
%S5jPbhi9\nEEJL"dUoEapt]3R7;uU"Im@k^i[8*k.I8[B>i#i0<ZI!Xs8$8L[b*hK:E.fb\SMV^:bSe\4BsZCR5+42lV5&sZa7"\
%O^n'/N+(DN8lhI=2-)<EO&'%.jA]HI?iOl6@eDdd<DfGU:pI$@oG/a0eO1=&l*muSlVt':1]8KH]YLO9kttWC+_EAE(;@mUKMR**
%qGW#m)kU\)l<XRC/=Oa!DEI/1<t9bB.Za#(6iqrMOnmgM#/%NHK[>5IWuq/OJ(%Es(rU3-aXG#9\[+*L8b_O:N<)_o'Um"k;7D`A
%bD$8;_ki`c:b]!5]1U%ZMe>Y,e?9r3-g>+<imY$kfNnugG#Y_&5a^0U=X^5f%Vo_^$J:ukpDRgm=2bDZ/Hu2timN$hflu]>%(9Go
%$'<`dLh/)!M-UG/I+JmI.>s01\GYfo6U1(/5@'>h(UN#ta"Q4<T2EVt@">QPL=r)d$1f7BqhUOKR?fI^NZoPe3FMq/0%.b<[,a,>
%i8$=,@!kls:%"nnV=l]_OgD"dkqDYWo6s4@Qk=X+'1UYMX/g(`lZ=\1X4M;F3nL3TX%TXbCk[-tcJ!ad+K+3^T_?AeDfEL361$@E
%[%UYNI?FJ3+K#G7Ljm_eEKUN09Qqk>H"98]m7]4:<3Wcr$Vf,rNU-gW&%NKTdciD[Cft88Q)a,UcH@gQT#GX_5,B"p5Ab$6@t?_P
%6@DNT1%$sic?o(8?L5;gp3SkC`SEOeO"RbO:?=R#mL.saY?l%>m>'l\je$.0j!2K:S$?=SD@DV\:Z.0kh1OfZKdPr9UKfO7aMHo8
%29Qu&7]l%O6,>uXE<+q)BB(U]<a4`YdV8:B4Vhe-SY6cT$-")8[3e/d>0#JA7'_E^&$.?@c5+QM+?5:s%<XD'>dp(n>&QQKhfe.K
%Isi+tMGhL+nY(r,Y86G.]1RgGIeZ(m1[GT$39g&kQ\$.^&"`>O4NgD9fJ!8lUo>P-E*GKOVa^/IP0s"d[_liDG[j]g@d7Lf"_>2k
%>EgXp3f`Wn5U+gZ,8FfV]G1P;7.(bml0^@YkkC6__Z'!TD<uhk?<&Tp7sKL7$pH23dWajW7RrEa,(MN:qXgN=L1X:mn'2,B?X/qX
%-pWc*]"b,cOX=#a+1+"B2tCTf_8fs-!/InjRFi-P,!9\Xbf>!a%#%W4?TV#$RY7dJ7#r"bOuftpMhh[9NGeAG6_jlT%\)>DRU);:
%!fLUUmJH_ThnKrX?qS`>e\Q":N;V`3UP[^&$&ehN?brlN%c<aD8C"G^E;8kH$Fa7u*tG\koR_':2T5HnF4PMh9_\Co"Cg<q4F25\
%BN?Rg76O3!h(%-ppQ\[W>YX\lp.0*%at:%G?e0[P4^\Nd)7loA\W,I[e?#%f@`m?8+.hnB?&<S9\W3W[QsPjI,9(ec=O1/HW-RmB
%I4"=a7GE)/>c,_$$T<!$5\XD;BiN(615q"'Lr-fo/*+sYX^o&"cQ\I0.NI^RS.X/e+qrs]5T9]1s5p_5\R*d=gA/e0KLFc:Vq4e%
%q[c;DV^[&e#Ie_AR/D5D&+;.\d+;A3pE7o[g_ZL0*qk3GAum!6gi>YGC8MKp\Lm^T4/eC]d#3DO-QS4de.tigdQQr']Uq:&^12@$
%IWLP/;VC40dGGqc9>ep"QsO(<QljPN[m)P%e'2L5`/mbD2l7S%6G1"E7MT=hGcKjoK-`_-XbXhX,)8=ilS4_rGd_+'N=jXZ1eROt
%:PrDM0QO5L0pXsLBT"q1U>hl#&/nY`)Th3#p(t3L5)kZN1:iF.mIQ94o6Io5<H3kl""iLNHi$![rUZ4hTTAG<d$@")oZ+^#]1%Oo
%V1l`7(b>J6VV@J,+Y9PT0n;o^_`NnIC0BJBOm5sqKpZaaWN/'HNr3.9'\?RsMMESD9'BPbFBqt%eANsTTDL/p/p(oTPXU!M)uN[+
%\H@Ia)qoU-Y'WC`/Jd@gJ/#-5gpr`RS&8>nfsV9MQ4!1q7ArKV4\pA8IM"![2<bXT1]IJD%d+)Goen@BDE&^JOY.iZ5Iu;?Whe@m
%eOV^pA^g`e[8X,J=[.o=OS6H7U\A-M[:]Mj:g6"U8ShV@j]JbD,HJdd;rZh9>2<h.`\V6dbR*`/_p.X6m_r6o86>&Tj#Ec3:Hd8=
%2[bc(HZhc8[J5`_L!u_6XL3-gGLKt',`s+Wee">(iKOpT"S)gAcS8*,pkROKn(-1llUgM2/G(&R3aNo#No+#8&P;1C&H8b=K;]P@
%G/]$W'`*#lZ-GeioEPM&(uZHj^3aockt=8NapeWfr)Ps=SF7A^5SmY0GXP;XiN02"$t_#QLc7P,JXcLl!\9k'H;JjNdq%F\SN0B2
%-+O*7ji\P#m:4.09ff]qPVQ&S!:?K>;ILd_huF<j5^t4!kLd(1kRNa6<4F&go?B@q#o?h9N:0$6&Aan"e6^s0aaDE@c$^HgDMC+:
%drs"DPFf-TR.k"#.L$g#AVLT:/(_RDq2E+qGX.R&8)D.sT[.KN9H\EIWrVNcWG#'l[F6%N>=f?G"(R9r>#M'5p!K'.OoeH%Q-NW3
%([QQ6.VdT'_[,CZMP]KA/#m:<8Imh^E9D/scb\MU9!Q;KOG&`K%!5#%a:Xh<PXo)iI/W6!8i4[k#.h2&&br-(6oWlj4KmLPUb>S`
%e(Fq`<Hr#<a-:FKLXr1hdEAANh=M!g]nQiUf`"jEC<4XJ%oIaHAX'[th0l]Q3(paZe,E)QSt9cHGd,fhC&GiZ-`dJiLu@GE]j>ZE
%j'2ab<8C6r:=o;E1.I[gN`*C]Ud0tfnLM/3!Y>hX$Bh$9=Hn']V6`VU_maoB70\7%V7HQL4SVe+`3X(dcZD&3>Rii./SUP5b!.kG
%H4-,k,MO:fRMj_(9ET2L1OBu4!9^WVri>k(P]"Y&n511:S&OhMX/5i>(Hgbll9;oY8E44>+gfGYI9"\T(hWHJ%;DY(#?*('VEgr$
%Oij[JhmS=AO#'NeW7ec]FY:cM]Pdbjdr1"O/hEQe`4i[ES-7.CFW8<fd"bLe_K>=r4/5T/%ZFO?k:%UQ5$js2BCqW6SWU7V.LrFT
%/Y7$>POc^^?FfkLFi2cS%aKjOC_FQ,H"U@"EQ/*QJtp_I@,`@q];s:b8,Hm09]j)Eb^d,CH?:qKSn:1trZD<BTXbgr)2<Lg>cGui
%@&-Te7brCWF<CsolsH*"pqQDj<KSgJIk+A3N1DqMo%oqriimGFl[?kMNCRTDp(7X1feSL[YLoi$@i6tD-u7^<A3r-$V)WT1L[r\&
%rk2M8P2Ap7rf;9u1fr'4A?Br+Y(rXmLKC5eBkj;GNpU2Z)3)pRLG=!=:-YLlp!^0d8b,;SL.u'Yg1Gs$;/i5\E9p1)huC3ne3P-!
%\^V2`nPKSgLrSIQWKPjlATtQ#_7ItHRr:CIr,qJMm6(Mu1oEemhbc6.f9T]ZaiEgUmK8i*Y+V@Z!f=0Q^_RR\n,GL.d_cKe^RlH+
%lQ!B/OUIGtoM[#\'[ok.aM1K4+136DlK)(MQL`)jka6uIW#DMr30c*aWa&!@HGE;OEroo!U6@g\jXg%ZI)P>>&[C!FRqI)0%kU\^
%1BMJ3Zgc["FiJ'Xop'u.c/iqVJ+T%4gjfZc\jKtImB@?%gcl2dAX4SV*/qEO!eciIb`$*dN'L)i`U\!S"T6%ur[]i%$bgm:$n;mA
%$1]2#YYg5*r&,jB](D"^(`$JGS\#BZebI\D]T",uQjUWQ1aaskCod6SGu+<</Gi%#pCs7gFKr*c\ug/EV5qHmCYm=<UB/6:qbT**
%$>mUN17#YX'8CWY&4WN2DRI(dZVj8U=D]df^-!`(=Nl][,7.H<Y/Y'L+6rIb(=<srC;Q@'ME&#NhreFD^\R<HKB)!WI'+3U4T[0^
%)F7Xme/-Ju5:Wk`'Lo+Hc2+qkSGTm<Ih-\u'tjPo]G_rE,E"tVXOgM11iY_W(X@`U'd&P5;Y3*^@:q%0\=8c?_OR:oM[>a,h-Q:i
%7c.^^8/3;*C.uq=+eLHhRgd8<3<[g7dNI(E0&DMYGWmhQpBjo51Hb@:'B?=GhKP%E#6t@Aco]"UFLpTJ5@P@-_k\;u&HDq[22o57
%05;WGn+2Cf0,+Ej0?e9m8;!!*j?3:M/"ttC?0UaZbNVePSV3os*B^fel?l%VcOn@>aS\2CGk_B/gYG5c7RB<`FqC&F'Y'&#4$uY%
%j-GESnoc.@+Y/0R]j!;4X1p8T77imZ6J4i%\13^#(=Ot%@#]NDV?%;b>6G6^--/5U$2jJc4%7am?'7!WHcUS*$gmI&^V95F>JHho
%R!GC"_B2^8AlSi#a@p9#F!gt#EGT4h?"VLD#UD%]=j3AY]Qg]Il4f<q+^%I+ZBif9#aIf?s0V-dCr1<!3N\>pO#S63QEQg;0_Ll5
%(AR_VJ"g3O#*dGc]=6HXk'T-kb:krd?>Q"g,1*"@XHI?Tp@[5P81W_CkRDfZUlBR*OtB;)%`(O>he(bNp:'1_>\dAQ+G#=i,(>?k
%##q0SkGJ]7S37b'0,Yitl'6PW3HXD/&"D'>BA95=LLcQL#aBCr#g`&=DBR>lK,o0WCpR[#%\miRlgAi=@AT$oHsEZ(&QOl`o#U;L
%f#2.H(_hR!cF@(BIVGk$@&%',>_nbnM-o07Y8uZ]<^d'U2\I7UIVs1bj`_P"$-n]-Z\b+SXNKmiktE#tD?0`+6li:Om]u8AJhVlH
%7*u"o'/,%PGBnQ>AcehsR((Z+GY/]a4k%)"NG=T7W'c$cbRf#tV[j'aSuRb2(/o&`rQ*((F]`e]H2R!ErQ#P9<UP4tcS5adH_?9$
%^Gj%c#@f$q/IIF>og.EWYtE<K[oB92gO_eSICFdVquQsH70;*%q.=r\?D4j'QT/#=1TJgV4K=RL4_2)G.]g+hDt`q*a8q>/?rj5Q
%Bach18dSs'Y?jqsF<@u+ZSFF'ai@Q-'K*3PIDgD-;0b*PR<-O"XD4%LU$2990u<Y55C[!c-1\^gL72h'D=>)^@@C/>@#b&&#Q.-W
%Imj3;4XK+r`hP\KoLo=EgR>f>3qbXk0X+5=LHtXedpg*>I>SH_j?cWnSP#3=L831Ogg)r.rHp:HTRW^Xd$e$8&Y&Nmq=f$3r`V!b
%2,tRPEOSih2F)>Vr5dbtPuH$q_]WGlbn>)Ag,TNW%][5G`dp>*aW!Xb6=7.P[gLeX,,)f`1fk<2:@_:7HX1I8q9c7]HtFi<N<X<@
%&h!I0AY(FK;WYXhph#n9m1S"3X]o#3gqLLJ7R)_l3&OoT*S]b]&iJ"fI.O_5COBf".L*sDU_qC_[.FSm3@WoXW><YJ/PJYZkU8uo
%(O1GaIj=BY9o%]l(M7dsOoVT#*6$KPKQ]cjL(NY(Tk&cQJ)S>l&G5It-269sSREbW`\[_-_=Wd]W<2t];GIT!m(6mp_RsieE,KC=
%>Z%\r_adI^/U)MQ/?Ao#*W@G(&nDma._j+C!:l5OMBH]@<FT1W\T6Ujj,qd`1;l66EVdp2pq9!Kd"VP]e":JH)B*9V&h@Ku,-;t=
%.$UoGr/ap<Xb_'kTpnU6]KGZ6Q)+;q^4fYVJ>R?#D>L$j^(;pL@ou&6FsptCK]:(46+eD?n7%E`OjE6bBK66-?k8W!XN_c([Xb2>
%"`"ajF7t)"cutW1(I8&dR)1;?#LIT>a1=IZUq;0>]BYqR6<YYkSHj-sp=%@uTWU@LZ#GP"q=ZMj:t"Q=(2'QZ_3r=:S-JM'b[;/X
%#,t7E9'&m_EEhMFb=m9<f.k*9%aA;9aWV-%N0*^i63[caMJYe>gG?t"Dn\#sJpFCU]KZub!'+aKYfCe<M</*.;:4ubrP/BqL-.u'
%!ZHQ&^XGASSlXu$\0SB$19rCiY'KeNPelRd:arFW]6G8SUhsGnhg*b9S;P@*:8ph5j06*kOBH1P9;$JJVY6J3#Ig3sCncJ;h[(lc
%iu#2/p%l@$h1&a@RbF5hf#OU(b?DI9$PP68^-#"W0o+GNn<nmV=JA=RBW(jp)3i-a5/stZZ*6-i6'(9-V@I=d97\YJ14.5W+p\-3
%]a0q:HWLtnUV9Z.Eatt``MJuF/%%:6D:gG;O\Ht,T--:Ym#!$SFp,JUbJ.VkMDbOb'oP0$8)aflZ!\C8Oi%o8L]bLC]m;U>3.t)]
%qkn[Xg9[,U3Euo`<+1C/09IJ36$8f<K%!53f$.K:nK>Bfg68=sm808I6/ZufTU%.,RHRRh6(b*+k0l[R)sc9c06S1o\G:"j\YlK`
%o\l[Yf&OWrDub=2G'f*ibs:2#@\ucY)o)0(P9%1?]#W:#PWR!lNQ5-2WoR_R05^ERP-pOVQG,a"mDAnhs8&9a)`<(H@)OCB'A/q4
%k"lLb%7Lse'Ki-k1u6s$_'o&?j\aYsiR#/%1MD.c<E&c!.P_X.J0)W4dOcu2Lr)j<;5&*6P.YdsLlY*6Q#$usT[13O0W"QF[qb@s
%^aicESi2P#?FS\urh3T%>mjf1'g$71:Ad/L@?Be8S[?/GBc<%!RD,4,I0fEdE\(qdA]p]!Hp<?'"2B3T5>j.i6ODj/5fQS'*ndup
%I5O^K.e-SY#X]ZaO\tTBL*j>4ni8731PYSXQK/HI^f%ULPA0e`hZe+@(AY4f^i@Ei<.'q^SQf9$\Zt;E[9a$Dfi1GN&Xk,L0WDQ;
%3-I_S$8b9!\%D?[Q=<"<+O!5bI+2SqpJZJi7lGp(D\PX1c:J\3B4>t#/0K2h,(K\-72@U)OpL4)=<`[8H1B7tQ-L/j0']92#'U@_
%&dhHFn!5H0U!)KEiAq,&/smtWXj,JbC$&'cMYTC&ko<Q\;,n8oPGoM5+oZSuQJg5Ok+`o2\sLG&%:7':goTM@(W37%V`hI5n#]br
%X?*!\iYKBKIPdNkdN:JZc\;TW;`DGLQ)6ngL&\Gn4Lp4i<I>]C7\]atB"@jnbM^tTkUIu-0`:Gd]f!bfSWY&5IQk-k4KPcA8rqKG
%mdu]\5c-JCrQLd^5K0JlE=aEkHAJ5$cSOJW8icZ=s8!<e!nO34p**2Bri0k9q<mSGmoO+sl7H?2-09kEP5'9#_/N8EaCQ%sA\1nF
%RiBe#!OamGU,.<Y\lrX"cZ#BfQ:/AP3-tiu4u2pe6J^"o/#7.@eir2l+)XO$nHh,"^4@e4Hb`N]b7/#mH*Q/$q$Km-A1V`AgS.$A
%<GC^3]QWe9>d=B'*r?@m9",1,2\jcMrh!!&J(*X5ZD2G!_Xim63->:&C]M]+\mPK+G!BclVU@t;/VN!ecakZmh^t6HH'$f+Eco=b
%nkSEo*8,`'3NK#rc_u/.q'h]./4mte97lrJD)C-4\(SdM/6*e:$+;D!fYj9,!4^.M[m1`j+mP@<2L&ZSMElEn9HbNZVUb`j4dN;.
%/57I)0HZ:$7B*PsJZTF8CEo*c<fL[SaZ$=pe"XjS4LN/aOXJ/XDcWUj"&ZGBXHelc4X4j+MVZYh]%Lj6h11DBd:9Z".eaBq3\c3\
%.iBe4#D7.q)r+_Z0K4o-N%J9+i,G0/=lDd2oKCnq#mp<[Cu!iGGNHSsn;^8SYQrF\;@dGjnNlJdfr^htAg1/>hEc5J15eN=9SDW%
%okL`e,lM^]W`i1J3(Jpi!VkfE,<9N,,Z7MnCM0_EcdY=&p:$$Dp!$>O]HbaM,R)0"^N[H`Ik@n^l\kMY4@$6I`;DVHKba0XRUpe^
%e1r9]b)h62P\_P*`CWkqN#FAb*(t[CWfZLO7_+Q!6X-F4l9spf?FsjBF#(,R$!bHU\pR<4qJ`$*\+]Aq;:#ki64YU,+pp%Z@0;nQ
%T)+@[;$T5/OMV<b*ko:0n!OCHd\sn#'%TRGYT)m8m*LZVj"7T+[9M*F6F'bV9A'/rJ1<oK^36sej8uVFH2bL>lk]JR1i2HX$"WSe
%R3JeQM-*R8doYGCd,@jN%oo3MdWE7Z/,Csp^p>lKjgn*MMbetbq&<6%?$>?G=-]`1Sh7(MGWP2]G6t]]Ab[qtlFT(RnIqE[04`Vl
%>us\W8d>Jj`=/W[7;WUFeeHU9*_.q83<b7\^g>4$&"fL)8_?"?bq!g]K\a0!2_1OgMmN>oE\tM5(e0/7J&pWJ,`hAg<:eZ1;+Ke-
%.u-pF&T'>!S7;V@@_:`Ki4%J#l));iX`Ygu4gn`*7QE0dJ@b[-pgC1;I<V5_"b;`e`#\Mbb)K'W(g[I[Wi"LJ\j%A"n7d/ShT`[T
%S.QgZ*Zc=J:+Qb[7IPb&:`)\d2uR]gM^@YPZ+r2t7(t9*X\`R:M,i-+JcnjUdpcJ&JG5(R#+gEXL'Rq4l*=j;!RQL59%I?f7KMbq
%iR)BUh,0]_IVM<FHa1kf@f>Uj<518JmXc7`E_"/5m^kFW]r[Ga32I>rI\j`T]/ra`iu5P$D]LirP2'-icZ>GD=>u<6]3^e0>JpR6
%gdRCE0XD@F%L0VQjp^/$mBKt1op%D,%L3F$IM9a?qm+Ls%j"?2`l"C8mO0l"+McpClAt.)*[tT:Q[Zi-%h?O[ZjjTl>I9s#ocQMQ
%Nm,<lF6m48YiucF5VWD:l1Oc.2?Xk._V,Lc,*J@l-b/In7S&PiKekjVool1>c3cMKmEUmb4bZ5!aJ@pbD`^A%`fAt&2d<tu0hko*
%kb"35<fEfg#t:<_qC/J5<l<fWq4I!WpZBabIg`_)^<"R4oJOk7874R#mRU+EnB1VYCSMb?8W*OnZQ)__Bg-R.1;.A<6d[[NW1)7M
%dX@uQQ'>"JW=X=!2s-hJpp#g.&r6N=iHKphM!:bGVY:.r&bLGHp=QB`:Vg'O+@U,?f4[@JlkX58S4;$$<97\\_UtrpS-[VLHX:Hl
%@u\$ZFmD/nYqdBQXbfGQcIe9gYosBN+tJ2o;I[HjJ@f%%6"^5,>4F[5SH4>0k@9Z"b%/JC)S;tMnYjq'I*6q@-/XUg&nce`a0D=C
%;=h!AR@ko"iO\nN):k;Y6Z&#&'Mequo0?.&VJ[7:=opiN;#%OE!gK_O;^2qfp4V?8A9S5;*pIgsN;[@/ruStZP[GkLdq4Q,LD^JA
%'")R[38;[E>e8jX[i*q&%\ZC\6T\c+p=$V1:tR@p?4^FSbT(sqG41Dj87b(fXu_3>0tBdr\]hEO(IP546HGL;n-)3B_`bh2BZ41T
%;3]o_6[6206M`cY*RL!EIU]9!=ZFMqCBS8>)!f4OVE]g=*nB#2C+k`97ZtNY+8obTmVcE0`Cdo#s.J<FHFl7k,i3^rgX]#p66&E)
%F'!b4-$N(>$rI2_3Ql_RH;G[f+<#<"f'-l<-8i#@h\Q/'lrQ>*.2rAld_OUj.Cek*-a7KqlRcs6IW+@,aN[:4j=Xs"Y<V7Lf)R8H
%VpeT'EOd"]]9!0tbEIV^>_S1V2u=8TmG%A[E^9L^&Cl\-%@QZCgW\i!dP$R`%$%kV&$J);gk6L%_>Z(UXDdOVo!@5HEV[JFDeGKO
%kQiB"DPa7$KqbZ8V%#jUoP5$QW6oEI#qDG3[lk]LWGEuC6+D[,Mrd/&k]On"NQ?KunZB>#@E>H?he/1DLk54X\JkAagIhUlhkX@O
%3`b("<C4Mo%a_Lj]Z^rQa<SG=aXidj7B&[O3^/a12rMqLaL!#M]90\Efe5p+BW)9F*4P^p;V=cGLe=of:p=.sRhrgo/h;_I8QEM&
%,T92^M.jrqB1"l(XMu/G$W[UI2G"2lab90i27"SL1?XgEb>Nir@SHu!;4D\q)j(SH<5j1M^\Q\g$\%Gm;&HcAo&HU6Ags)oG8pd@
%>"VVpj`(rEck^r[!h9$T4j)<WFoiHKG9_VE*V_><`a7UM-+-b)&P1rA)\+!]i[pf?B]dof`^Jd"c/@#cq+f4BZZS3D&&Y=C:f.SP
%UjcVofIX%!&.Cl1Rh5r<8f.)lcNk>7',>tL8r!JFGR)Ub#D2kL<iN/Mn:1WgHG+%9ho1P;-Q,d=l/ELqpJo^c#_HbR1R$jWKR=+]
%0cSMK(:0ZS5J^(D12/*0GXk8$99Kp#i7\$o*a/E(E59T@RK[C'$d]md/e!TCauio+eFVqR#bHQho'0+0Hp`;74;8MQ#.N;4WG*SG
%oHR8p,OD8-]W2G3:OZOD7#X:W+Pl11)Uk/=dii1"?j4b`1Qi#(\j["ISl\CN.VXlC%L6Q\0h`0fb.<!HPJOK*J2&C3MfI9#0+E,=
%7GI$p^Kf!b;BamFM5;WcZ328(V],pf(1?&<>J,M!V1jp"8tofcjV=K>6J-Z<@@59^YI@#5SZDp%r-MBX2j,pfg>WajVQcFU4b?sq
%eohE-h0+-9ViE.:jU/=.moKhV?(\hTabU?sVCWUcaDA`i](?II4C:LLP';tfA9l7!R%[)4S_/kg#"&Rrg!BkaF4F=A2G&@D(>1X*
%5rjP+>DVMqNFn-SC@UGIHU1u7>"RH&mVR?80(3-5q=?%F$ehK6PP63:E2a!CB,%@P@oaI.b.EJ)2TRoPa-@F!DMaY2:ojcNXL@fa
%kN5"_i]dHcQs&;um]b>S9U3rV])djsVKF?YBYUm:0*1jrCf_=<_EJ"S=Dg(Bc]_;N],AadPSaD=1Km7hU$IeqX*>0;$]B.:h+3uI
%AV?gH+a0osA<e[0m1D0Bro57,P^RuUf3RA0%]cgrPH74FSAKo!-FL;HPnuoslJlq0L0!68Y[WW7Ub*EJ1,dR\'X_L?maX50C[:HW
%(\04KJ_^MCq05#h/7usr*G!Q0\LcWh>sgAPB1tou9)CXWlD3o?!LkrXhu-trTI$$#c%CpO`E*Aj5>F50Q'XTMP",%LA&7]oBr-5?
%Sp/$ga-a%aj?slTFrBiaAQGPMU`'-EW9=3\dk3//`js&B2FUoZ\^6pLV&UU4T52c,Fsi)Bd"WKC`!<OP:o)S9%pQT5brh(#a`n<[
%^U",5X!T#icLOHXj)p.b't`_9Q+g4Wnf@6(DJ<#,;XR+u[5,T*^s[9@8;&%Li,2r\ar[pGI8hIWSa=K*)W+K4Hf0:!HJO!%s6eS=
%rO#i+<R"M8`ldK^/9Kogd\FZ")^_o!1+@JX7fnMq,e5]TB+p**`>OiK;Lo*N:"b.GIAK6"WT`3^[1d(q6$.W^(7$#L&BtMK,4eP=
%n0DZ!B7?,,0R;<pbrbGX46(@+;s1]N:LcPI1ghs4)78:d@rgBeT:B7;'XXYnYf?CI3XX2A,G@)oK+M@h3amP9?EUM<W>T2X#ErX@
%0$\;#G\hc^D="m$q;8><lrG<l^^m^Q7[0[po<T`)Nn"267uo-]d@.A1fm$]qqH%0TP?o[9J<p+ZZrB&%?1J9fZ64q/S$\$TeEL0T
%0goMN"^e;7)(W>=hZ$6sIoKp&>Zu/u/0()d#HLtBEV-S1\]sJ0(.+a/[Jln%`&F$rRtp/.2"B^-QIuZni5m@BY!(lk/Ga=U99P0D
%5P?n4@7*'Nf/IS?#.E%>=L#80:37K-?O\TLqpK94qUX0!&qL@UZHOgj.k/U01!*.`b^`gj@f]qde0J7E2UPNTX@TX,&2CF_s7M'I
%fjc2[-3_&,0)XI%F<>sV`YS]]+k=.:'>(.idpKj8GluZ*GWdF*NteebBtNH0<23F+AE6@5eQ?ecB%$YYb"$"hj2Y"IZMbI)3i0dd
%+b:tp"q9^k\$T(9K[6o)[$9X<)N">'%9f9G`aS<fc"dS&2nm1A^_IMo=A1Ou;f,;>Pc$n2]LZ/'ECaYfllmF-0>1=le^WT:h^BCI
%\))K4I'1SMBjGQ7=[+NmG22^F^\oNac;:$]e#EouB'"aTcq8^jBKfP4Z/=e["s+;D&r,5m"j!j;U?-_#_u50JnC.NiP.(.Feg(]E
%=it,B8SW_>*Wb'9;J_SunCuK(f4XUZs22"Inp?=?24oXbYEZP+HGTYj_g#(%3E`l-c+jLj8Y'361,d/[1Bf9hfL[M_HMG^Y8)QPB
%gZ\5$C<UL0JD]-KK7$pIBYAE,X.:Ub/f?M-JT?)2H9^2c5Ac-FFY!\md#b?d3%>'&:J[i2n#&sJc85PdNA2UMQt;lbnVo7/&7i>4
%2'X2E%oIPML1^=Y4k]`OTi/uKgVSnY=']:$J3VrXKcmfChYt0P1=+CYgbVS8a]eGqWoH.'R*ELOS3kL8DGOU,*C>r4iKS$2f@]Y0
%kIJNBouD#hqr8XeRl\"E$8A@M=;R"d_],!%$@n3\FFCXM0nb&4f-Jj[I:@?5%V_!l5r"ln&q9c16]5'_JnA4oI_]=&-B9G*+Xe:_
%0f.@68XI^630;O2)&]C!'iFa8(-)a6hb?am]otNP1K\%cHE[PZH-SBknj7j$Em%-oV+`DC:L>o9$fFn`o3)L;On%D(3e$^2I1=KS
%r/ogBgrJkQ^UAP3b+j4U1P/GWG3W\ng`J=I`8$"fWkfli'(GOHap?o.T;C5f'\h_\Nq]VB'l^97I>\ANLWTT*]aU.74Ha\9>V+H^
%BL..PMOl]or6S%m*nX;fYL-;jh/:\sDHgFs4HZJG*9KPfd/Em-Cg=<+lqdm#5_.esCXojB6r+m2*%h0I./[h3kA^i,3/&73[`=9U
%K%VV?*TCDs;Vr.&A)1,!:7<prdaJ@,6FVnNC.5h)VfOlj&[/DZZ4S/.OV2EQq<b:pQ;>t6l+'q0DaqU,CGQmV$UcMXbRof8PMXp?
%@ZL+?Y]tl>/fF#pWKCW[/ptGY+>R\R:*kcY.:5*;dC=/'gpM&>V(PfiH?9-qqX2t^Q';V&E7UDnW2R3cj9T@N_ct_3JjQ]!'t`.B
%gb"-;_MQVeQ+V:6e$T:c*iJA.X6g-0VZb<[&Vaq+3/4I4TnX3,dZo"NS=0BG?a%^e/eI^KaA,H]Jdo,b5D6N=\j8*a37h"nEf#r=
%/lG&D:Mj#HOOuM,=;8XF@M+H=mb*r@MmU@nd':sY/e;B\lcN_d>jWlGCA&G\&p=6VCdB":cscX<]7qs:`P)gAi&7'1\Z6JjKH/BC
%PY?(7HV/3YTO]&e1\U6=Pe4"i&]XL&>1`a[JW)\Ci=q/&NOBVF7.9BN:VhgGN/6F@342a-XqtY,TDC^LTp;)#5(^YW5T<?'8in\'
%`o$?,8p0(P&s7e^S*suXp^AMeiQPW%,gBRH7it%Upagseh:3_@iHlF+mfrt:c?%ZbL#Yj7hTK6oB:=I'33iOK_4):'Xakg]$tD.V
%9a)h<-o^YC4YJrFm-^5!IgkQN/p$uF6BLTNOP_d'U[r]p&VSXo'??MhlI&o8"GRC@Ro"5g]eSlM3\7G)c2iu!YFlXc[QDEt8qo%\
%UCSe,"t8nnIKS50o*4A-@:WR^_!ZQ&KJ1UQ2e51VKeM5.Z+[@1:\W4b:q\s@@?>l;Lp"*p;N['\,8cNhU,]GKH]72X`e*i.ko&hM
%$<H_<08.eK=0\&o3)a4S>?:_D.l-/t?I<,4k-#qrMeU=:c]IoLfQ?Ya+FL&4+N2cooYH8$lWm_&"Oib9HeCi.B*2SqD%r*J[%-iI
%2d^L=am`hbZOj.GnpH2HRq4iuj=",sPRigHa\i01)MUIp1(5?fcFLo:(Ij4f-MI!5pCXh,lh;c$5H<h%9t7QFETg@0-#Era`5>Km
%8#;k1N28<%0MP&sU8pmRKW?#`6]`<k5"0(3Nj\Ej=Z.@_r^He9:RA5FQaGUl4@n[$hA^WWH]C;0qBaY,?T/2EE)*0`N<.5$pUqQr
%\D@Zb0PH::A9HT_KUr^=1m>Q'4fQ+WW[`Hu2ft#[%d#*BImB7%1WZsFI8$/?[^mRPpS_=hn-Rf3WuFmLX6Y?/^cW"lo]`sKS&0f>
%>AA.`i<dQOVEB0ZX]#]f_6W<]<m'YbBON0nol<'cn\>_.af*JoN\H2Afb]uf(i-aY(V?1+KbI+$)XlU@d>aJQ9Y,f?Y*;TAAq2OA
%VDXNDiR%LWYD_NjR3^Xl&S@gK+)0>d?m[Y1BdBOoD:BQ^U<j7_.LM0j%8I^+fFqk#6*@n5qltDP-7/3nD1^[QQed:44(SO@)$E61
%:g6kbM>`j[d^$h\_D4%S.;`O6h65S8@jt[p.)(*J$\3ZlEG3IjGHc'8Y">U]5"!cD?@?ug:qOhaT5!F%n7Aj4JrcT)32Ur;AseK3
%/jlO7-&rk_1eQ"jh+\h.9oDYC4(-[A2YH0*pMjG-;Wu$)bZBSGfbh&#HnT5!rj4`[Cm]o(IP-9B;b3d8*4jpa5,/R.Q4Zj+l7g^t
%`R:*b]5CWA%lR:-:SX/la$[MoQm7Ql3EIF"Z%D$'\&(bKRW@7"Uoo<`E?SGJr\?HpCXRH]CK/?\r+XOh[G83Fq*;+2,JWZ`*>u8\
%0a6$A\`[tbd&u[k6h2if,)t8g<'ZBp\CuSJhBP(=(N7\$G%#T1m(7&do6rHj:R?P!j2sGF$YBB7+?'>3S$/;-EfRkc2c5dD8""`j
%Bo6ZU2jHtp50>U/GWJED?F`E"S]l"QBSR#h%.eo(_#m!sBQCMT-_VDF>IWiqY$TCf8%rd@b@8T8_qb]*fL((t=$X><gqQ`Q+@^_Q
%e/`[BZQGtS;p)[U;-h%Ld]fNM7V]dDo&5t<7e_[G7t4/&qF\D>^0J_oeng8>mX1se'W<d6(&Qjr%:AZ)ldkQ@q=<NHIl<$0D&#GM
%H@e6^X"(+D8H*B!Sst<B$Ms=YTV/kM<mM1^8^g$D<6''u)XZilZX*t6Q9sRb7nZ_KC^H$qUYeYtMj$Ag,grGa"QK-^:(Zs"QT#Qj
%^`u:1j69f#7?/#Xil!q&Wfr-2G1-+\ViO?n]%rM0mqVWGpF]>gm[ma0%a,irr[n%#b18W6?=B??Y5H2)#"*g47BT8q^[E;PHk0jm
%B_:EVl`=;p6IX%`)ABh!(.Pcq2/@%(09j!Aj$qA#C*:'(G:ENkoE9YDWU"+Y9'3'9p4%K9H!"/HKPN*a/UkKbpoHWSf>BYnrCjY5
%n6Qt.hh;R^&k5:IJNh7aXc047CSB[i`oK-0plB>S8"T%uqtDaRKh<'Ua:Y6%fJXPQXXOHI.\V]F>NK.ja]L]M-8XOYRo?.WVjtFj
%l/I.cA(4U\28FlGTKNp$=mOMP-U3G;5;`TslW(2\-aSg`DX_3!9!&79Yit'E>bWu(=,2`ialR[;W2K1;?Y"oI@:h\::Xe"D[GIs(
%;IUr-I?VBl`]qnE47$<7@j_/p72cP(B36ED7Ql4*7@;TgJg/0N$"ON]CW%[Z?&q'5R#VfVl&Vc'!M:@;oR.\17J.34DmlGikan^W
%_6/m`n)4DK6o8aWass``-bKeflu7iW_(*-Od&73_53nf>2Q[CBQBjr*8`99oBc(oN]t5M$H'!15Z+,]l&3M/2L'^BNJ5-gW!S)3n
%m0LrIG:qPh6o@-"q)lrm1";>#d]IYlg`)`8%mtJa`:OKrJ@iD67jL8JUIQ`]Xn)t:Z#UnY#"e_Kn8YY;ZUGkm/7B5h`ssGNR-#$f
%3LmUoI6.[`:B58='hh,0e[,t+k)@_'k)9%r_Z;if?WK_>.6oOW.N4XJmf,fAKb7rGaHK^\@sq96V@RV((3:@i__K$V_;"r5^6%6:
%SRiga,O2++m1hdC]`NO@Oj7Rt(Bra.LEkQ-KYK>ZWA)8/s2i_SiSElJD0hQkekl2=@/bJC>BT"3@Uj&1>m2<PKQ^*DmpUQsKXrV<
%g%DFBF(&%N?6VBSh1NC_DpJ%GHIJ34^pL3/d[o&WTrTEk(dJ#O)j&-Ko;YGf9`Q/;lTlUM"4,1!.Z4&M)EZQ1[V*>G8bg>LA`ZI%
%HD^\D]Rj)G=;aAlTX@X]4V%@d<jJqR`jY,Rq=jIiCioheVr*QR,*'q9GB7P\Up>^Lq$KlZ[:CYG+a(OE!=SUS_CTXq"eLFdLP,hl
%apPVFaA3$!,H<i\$]mGWF",qFoRU'h0Em0KB&3\C41McQ>2XKM8m>f)pRGl1>tW70[M.h,P&t\XGq>e=e/LSQI?pUjX;\36Z"9r,
%a[g9F\Rl[>DMh`WGHZ9YDKu25"CNPH\BS/(`!1T&f]&;ri(m-<&j!h(X60)$`2\o.D0cQpgdfiW=Ea%IU<-0mH0H%Q!*$:)@"GA]
%*#R!";3?BEMfl>"UILc]Sn1]D"l>AP!AJA+f;$ZJ*jK![39I2ZmJ2\,i+[Bt<:NPg&7pAuQ_+#:f8Mt,.lj?<Q*V"aX=A"-j&-Ht
%YuhqQC2>B]?rc$.l(cPdO?/c78i(EiJ:aAjkn`+fP$O'\])]rn_;e/;@X2"nF4X1-F-UXa8&uD&PUdi"5$XUO]HGX*<.r[t4+1(#
%"mh<^fneY0KdIA_oO/hT+m_(=TiN"4$&0aB3nZk:rM0#=[\?<c4slPIc289(q2qS8R_<Gr='R(\$0a[2k:`g7N9-_r[D"7VdYGZ2
%oP*Z-m/"DY8B\g`O2#]R]R97.Q6m8O^&piODQ%1XKl^Vao%JILa8Wh&i&].j2(>t(4qT/Uhn]6h15Sghc)?'alhs&nO$6_/BVtC]
%%.A=>$?e)Cc23pDe8b5_LTosU7eZjqmN1]<YEJ?Ta5-/&864fgk;Z-%,nC%#ra\H)mQ\JQLeRsiZp_n(Q[r$Y,T<s6r=NR3!ms_P
%OB!?:ne$0>^(FlII0A,p\KHFT*KbO[;_<[SI5jMcHstmW/J>,2)JI@Rd2/,<.HK=g`VFi[5Ct2HODam8`VV=mX3JFQSoPYd#,0U^
%D$QU)WFXOHb"])->L1fS\hT"n<r+F5Y!Ip3b;?7e%VFGtl%`8m4f:YT<[H9HgK;3@Ias3fn?nLl:GZte82[nFR6(c8rU^63[NkD%
%D6#8dFQK9-e#s[&4UhhgQGE@fN.6m5#/*)4#Q(D+er2D':W88]HA,sUQ`UVGbjO"oQ2ASgJpa1RRG"gi&oI#:/"oJ0#`g;Shjs50
%>0TgG$=G#Hd>^l`N'M%Qh:G"^@ojfW06)dnb0S/=c1-H@DMduYqg(dWYWRuK^]#]kDb@-$[K0gi<+k&g&go6")CaF^V*HH-i4<->
%8>%hcOLD&>6-Ii?Ne5$ZD'Ag!5#4_lAP]#1PlS\Klmf]P-R+*iPCst(`RHm?i4&QaQG\T*`.)-cOi8Q_^;10)irPeC;;l*Pf3H"\
%AUU#?!a6r-/k,?_>Y-h.CKMjJJd0]@5$!YG\iP/R.2%PnX,.*&o9+;a"Moe)]lcS*E$"5(UZm)BrLCE[`b1)+@%J7Ss&$JqO+nKa
%N'kFlB$>+:<)84%W^G5W^E9Zg$@q\"Y8/R3$IdF'O:>(4p+M?s#GGA3>6J+,Pk8J,[U;R,ULK'6X5^IJh<*rS*em:c?ooRNeB]FM
%2"S0G?GotoVgo-cenI;NR+0$oBNO8Mg)1rkI"B(2&@o-eZuBJ7rO=]F1lcP\jSDgl*T+008:^E!([&2:Y:^iP3bK%mh0T9;CQ+nB
%,'37`F?Aei\du_5FAlE^2jD!D'>p0FW+b'c]Z$7*iuJNp)LH\D;pFfWBt'$Q`[#2X8YlM,^V*AbpQZ3U$G%6f,3s5DW`rV8`Z.@k
%bY0"oEj5I`WDF?-PJUGZB8eUB+.*Rg)Z1t84MZ3'Jc6X0LY\rs_b<XK5;o=FUEHlo:K?#&B-:(`k7KP@1'G6Ur-I\?&ChH9T(,&`
%WDe=1fdpF)O%-r:gJ)[Mfi5qe0VW$B-:`$.<H\9h.E3hBKRmgQV>$)FX2:lD(agFO-Kt2UBq_k8NG/T"qRT-Vs.k^.5:<4$CjB>r
%pR2,9Di9D#,EFA[rM`:aneIh,C$?d_?Wjo9@>XEd'^%`:p@I75&@to%X_f]q[1Lj9C"O^+Y,,qJ><BfFbWWmV%`KAOIE-8P09*8<
%0T:FG:gfLmYV@bi%O.+JH>PE"VTu+YYg@rc((R!j\fhb`8tpt$g&/u[^UjY]KL^,TV0);@[,5NH4;dM!\_UJ#I%^JS$:RHJ>IRAj
%2nlVW]fU\t0_o_QaJ-_BF:Z^\T;3-hG34$'F^cg+b.cjYJ3+D2(.=0.:/)"L2t,=`_4'J9GF>JP>];CLUA(<@31^Im.$ru*%U+Ik
%GJj4C='*(hLf0LR&3qs+prtti!o+!VF_;$'kGIq@h<jru^C[N0Q@:X<QtN!KKDaQ7FN_rdQr']8-;Mj$3eaju0@BLCOCSH%\EAO8
%RuEGjJBFd#IJnVljmi#0hTaX/9Xa-CKciagohgQYnYH?J1T]j$OGtY(\WJYLUlY$l&oh_8?XrN-a\-YXS-9\[n[CX9q!,XfQ)<>#
%.pK?Gb!Y<o_p!.f>`&B]\5cc5RpL_.=>L>s-t.oF46q$Me75<1n2X]?f3B98l%:Afdo;X/$aZ"Oa4Lq_<?JF'&^*gNXD?8c/=2B=
%Z7k;acI7$I,`t77a&.<<?XD0AK]:#$C:L@ToZ*t=CGAD:M)ho/;OP8mb$2%q<?Y.ZD1ZFA8e;6O)P/F?L<F9B@i*DPnK:VO#-#kF
%DD"Z2V6W-uf0e_9_/EuR6Q(6WPg@+!4f01hR+--$W;A_1S^*^Oo*0:)p/&P1?Ck4t=Ogg`N$G=^Ch\mh"CfhY:epX2LXiTbpgu$H
%).@GNX3.JU`9eJGK/uZV(am>;nsOXbZkEM\QmblX9GUR:UXCgN>L.X8dk"gmP@e,]#IH^l[KE9?Gk5Q5;ttU=/9a1,FC6ODb&Pp.
%V_;>&H6ipAe?9I(1`UX$j-K+8S;Ap8/j-7Yg"5]/894)FIs':q.UPbH/_sFsi5k^cXCOkGfmXqB`icH:JcPb.8N`l/Hk3O-:qY)O
%YIJjKUrm<VX6mWL\(H/1jXgh/mVBBps2V$d=,t;AiO90)4f[EQG"HPYC,V;c<+5H>G/fBoC]7T8>Lcrr)q\,s\C*%t"A%qUU/Ya0
%Sp]0R6bZ%fF3W`9Z]R7p1g0U;FAJYqNq.uQhoo=#qEV@0EJcUE#@e;m94_,JYnbLK5L6%!4Wg<""=o7nX<ScZCb]ueMoL_p`(>H&
%'OiBJKW_(,86Ft_72M51#o,jjL)'FE7L6Qu,&DmG7oe:VART)m^?JL*&\61h.1/AN;2'c,m*:)b?:&JR:$9XM*F8(9"p=O,i=E@8
%YURQlp0WmO-[X7t920_g`%SBgZGH#Y*I6HF)trCO44#F7OG[`Yb5Fr#'rVH[/mpg-N]d[I9Z<W6pHoX6%C>\apU]#bCj5i3W^g>E
%$rdA:CMcZ9;+k3sd^../@5"J\#r_E*4<I2s!kL&Ea45kT:/O@lD*SCB6T@Nh.P4Hb,p,EBU,[XhPV5cnA[t6$JID4u+aApSoG66e
%.\tIr'8ui3&'#m5]tOoqL1ZX*0YUhR"-;'=*$JA.4aj1#:lS="KLf,b-/jGnO1KYn?fo=Gjl`g'd?.S<],!c%$NMh_/X:5ef+`Pf
%nh(!W_laj+@I\D)gQ^GF6n0b.IsQa+psO-d'?QV0PpIHGcqe8-M4,W+rW8Q$*SGVSr3cI??8$G^ePRrqoTC\>!7&R]n+gt!EmiT#
%C*?;Ue+$5f&8#+@O<7!AaD9Vg0s@kQCOF-YL=WAd%D]5Aqudugd0Or/Nt"\dqK0L%5N*DU$'h+eBm]>5OXWq6J!ad<)GA1gEa-e:
%^>a$\G"jk7Y6]EbY!T<ql_M4K[l@1Fp0Smp3Ia:WnW`g4H=9MLomDaQqDRTi#8OQLQY^+)6B]j9lWGMV,>/F2ldYf'nALPKecI@E
%5;JGK[(0D:Jg'o#;_]2.;ABWYV#[Ng@bo>KZ")R?KP5pWEbiZ]D26)+BEH:eM+?eTninA'bUY"KR.'T_`Ysrsf&Ig&4)2YO3bU_b
%)gU,iQP&DJ5nRIJrRLd"k'J:,MfUtX8\L#1\KZSBP1F'6ORN+/X5RjX&1I`t-mU'ul80r\JQip_V$22gp\EECbGlQ*>`b:5W^(c^
%B3otn@4#Kd^iI9nOF++FEW?4t?IEn-*!-*O,h%]^G4b,3D=r(LF"jYX_Gt==[5;M7L`OLfH;)MfG)OD;L\!-kjKuI,"^HYSoX5Hr
%gB)_TrP_e(c*bSbUg^_KfG(GN1P&lM7mc2`jZ"[C..WDZS.0E&nid^BghV#mMdC,%n$<7+5iYoD*kFdUbijR907KK!n_f5LiB5'I
%d#.'X<Y70%">E=0R8WdhFm7po*gXT`lP>^.%S:,O%Hen03A,LV)D/c2.VX+fIJDfH*X3ZT=X4'U_(3-o4MD11^UJ?W_9W-(&YpHa
%\@IY`9\EHK<+p_&d?:<8Qj?5Z&hb[fQV"*%=]-Hna&,Dd7T0>PWAH;[5X0>2pn-C742qY\('>6"':aV'a7mWD'`VW8@Yj>L!Q+Gh
%,NW]#1/;gijHVWqF>!:B%UcAD@ALq,q6?DoV=08F`a`O0rrB-s1KEqa$4?<+rJE3RRcB0/X?7@jiGuuVq>d#D*]nR;]!pepFrML%
%r@s!j";:[+&T=$Sr/A'S]-&]4/][2[PHBp2d`ZlBSUJKiVcMQ?OFDn55*'5^?YA.iR[WUlH#Dp3]A*_W2H-_5/;6*u>(!Z/7C2ZU
%'_>8ZBJ!X.PPXqL^Wg8YBC5\4mg^bT<Lc/!8:g::I49-)!q?\t31qVEH*/+n.tTbXGAm1e2u7&WGrfMR>KUiC#Km&XgNAb1l&gi9
%Z]W?=[(p*(A(**)f/WMorDS0oElnIKP("k4`Cq9Q@.VY_<'bRlA7UVFh^`-r*OR_10r"O4A@74B,ctspag_)UEti'tpWtu^/m[]E
%'GuX!Z*c.#Bofp1D9YB-33C:#rE.:<#sH&#jWl!<?pLU6Qi?LVf/<b+$tY17H\H:Ki_kJaD">[?BTZ`DE(Y*V/]8esb\e./N]A3F
%YTV`-Z!>,Yp+(Il14DC\;%[<&469RB(0]Z(0#RU$NnO/A8BD?^'Ae7oJQ$LdYWAW)Af)8&T%!/J7`Z3%,1G6Y=,qguQSg]a,,\>?
%&MktiYj4g4ICpj52MYVig4Sq`>%QNi;4Lh\`kj(g^URK!6keNQ%,(gB5[8?C,cDa./HKSRVlD2CY`XM$/TQa]7<\)6_iFLaN4qoa
%=?tH\(m-,bP#V;U#Xi$0eurrSH]^/\o'Fih&kEih3^KFKATC8[,d:K`KQZN1JjoD4f3!G@RQT9MpHhd##BKR8hD+Hppg$jf],)!3
%,r<5d]3n5Bc-4i"CcmGdW[[JfXcTXY,0)hF.Z$+<`jR6\8+f&Z_trEBHJ.biO0%7"o2kg0s*n=/F&jtW9T</pi.hBqo?4:%V/V#b
%2ZjYLaeO<"d3_Zh//B3mpj$P"mu+VR(pUa_'B\-fS.+E7@C"\aX'b&9&""KP)p/bCaY@:hp0('KT-**e>q?[13'?K3YsbPf->ZN;
%)Uco[S5=X#9Q<j"+(NGlT(@;5gDn_jI3Ms`hHSb?+(N\b5iu'9Kb-ZG$_B?hn&sW.[7L7f]3[O3WI'#$nCD.>S`W&TA=;4^.<?<+
%mg1+%n^&-lC:f^88+A:urkm(hBMb2<EP%[`ppA#[".+>RD`/W0W#J#'=tI.2g92JsaQ/T#@oMJ_A+m$sfbX'kH[.8G(uCCgU5tfW
%2HQXC6DQl*j_`=^O6OQk`!d\g,.oFIVr'B+M7kh1C"opmgW_R+^9r*MA'@IW=F-Z,C=\(KJ65`sAmJ\Hl.i)Q`G[[U-YIe_UplqN
%Mu\?*Lh/s?IXPH`(J?Y?7+_qFFLCKf+[T5Uc/qUm*gJaYPG9qN(,/"5l)S#CDfR;$Y#$jO&D>'_a+[qk8I.M`F`O>"oD_\^G-/2(
%fp14%T`2iS0h>]Q1EsU$-h[.r3QAQJ@i8cMZOO@eh.jN`G'!YrfD(esqrFd*]rlKWpSq&0.X%u9aS;8[kEo`Zl`NK$+u>[SZe_NT
%QMBc`Vt_sWOX[-3GkX0j^k'Q<*p@5)-PST#"mf6O]+>s[CJo)Egd]SEAkk#8h<AYccb7gQO/s-W>=F_d2C)G%a\*GOY>1(RZqipr
%9[t@o)X1?IrCT(SX9a\c>-LK/M4VkoZ)(S5D,;+o.dQ4JA_p(daG"<C,sB*Jmiur<T6g+TE`F=#5`>Rd&P)H3Ws/K"`L=cgMce8n
%ZabcH"-@/V"93&0G"hu.]<41n\)Wh92KBC(_D7b\;<SfR8_Fb"rt8Hlic_%/SQ_!7H&<Lt/A`1_E@tO9i6j#=fgEMDC;ibJ&$qq5
%UF;-2'?XXQ[$Qt6.XD4B;(a@#qa-+R,gVI52nU`D`Ti>fiA5Zr)NO$<6?^a*-nl2P<cd'$@T6[W[fimn1.FMP<'ID)5"hHBgr$]o
%?:XNDi%J@!RiR6^HZN5EfY:LeW?cSF!B'6he-;mPLbCQ!$C#[SgcJ'cn)A$gYR^j$=<#qrp/u1bS@TNJ.!7$lJ+U1;bDYZGN$8#A
%^(8EO:n3LI?"=mR]6?^W0:S.B/s/Q"!72XW,Q`L,EuhEIPKpN<J(N>38:hIf\JNf;ERm$JnbI7;IM.#9<Za@9/Eq`;_:B_YnXKK'
%'%]Mef&7k%Bf]mnm)"O=G4U"*Z)uam8h`Xs)_eKQ36u+\?[&@$d/Q*1-YB\D>oG*P%nZm(iHFKpn@26<Bqi<e,If?AF1?ad.G>4_
%i^=3`FN[s7kFHfe@hE_tbc&Zpo[QpN4IUL$b9W^$(4)'RU?,c"H1oCM'UbY_-*:HpV2>#G4j<99G$,#$9L`E5E7bZ]Z2<lt_\3&q
%>%nY;D=5[?^f!sIU1tbA4aS$eIh&$MV\(afX)jpp=G'paLbgGWK6XhHST%rfL-@Q.dR\ga(,,5\(n;/bQ/#e`^'DKdMLip2&)nTZ
%QmPSh,7iFn.:+G^*`5CpPJk(P%jW2YSe)#`"UWk`+JQr72I#T@ZhJ$^aA3.Z`'[e^)6)Ke6sCLqiDN`rJQ*?+,!P3?b#2$:5L24I
%a9Z!H[hJ,(q0r!#OgBqKJQlEON)eOpk>[a27S4=E]?*io1Tt84</EX)W[goh$?aTq&iE24n,P$@jC>;<S38s1%:tAC2qr-tH?0?k
%4K+SoHU,QkU6B!BPD0"Qj!Y-6Hp5YajnaiCCWkO_,a`HcLI3TS%?^nk_S1\6%Ms;UNo.L\_p-fVSB^/8O)*[ka(-$g.Lt6S-f"Id
%o3;*ES%:mFhL2::K`0QG&TEtYANbgtio1t^j.C%4"URN>^p78q`<-N13*DuGa\,&.6'A:g"(V`47cgN+SfX6?[9GkFP*HjBqDKOU
%[$0'4lc%M0Cs]F3XZjWLE<:T6oC=?aCVY9;GE^ihhsBqnR5GU5[,Arn\hg$D'(YV%Ya'UfXf^!3XKW2C0ZLN^6HM3W8`BL@%oS,(
%@6E9IDL:/$0I7R7i^ds,@%EFiTRL*Klu&/9>76!Zh/:441P_U]Y:"23=-.fKgC0/Q.L``smp3lAdUn498d,'BR*m/'eh0^N,48H^
%mm_IF*9@1";L.1t[[BLtJV(c0nA)5K"6&.:e9q'H"2]Wi*nlE%+(c7s[L#17^FO+pq(+!K[H.hp's*_*cM<XRdK,lE\jA5iK%`qo
%Jk!8_mac?S0MP8^\\V_GG##Vn^uaU:XZ,3RFVr)NOkOHBOPu.[GhB.Ys#b8XC#(Ct*]''ekW\0MN++"1GR=u`XS<2$H1Z![$jNNS
%I4#3/J;:R+!JH?[!,7\(l@S_diuY5lAR;_`M3$ZPI\d5fR?ZtGZoJiT`[EQR`G&1@<1HsXk0d/<%VKAl/ec*`)W\i&0eGW"641'X
%$`'4d0I8S":o;J@AY)(<HLopi*V&C9LpF9TM'!tj6+%d-e*.6MgMBCLJOqV<#hJEY`[iTcmLrmT#>?RF(5,MWO2Bj#5-5i\`?JS=
%#tYcC#;.![q=A9]!al*JngYI>WSjd;>u^r4:R)Vbc>J1X&M#jZlu(VAiM8)8jh87a`*65"M^8#@:@$GqcB@h:]_>mJ9Y]=UI9hd8
%THq+1Yg,ukd9h*^'Q`X&'gORp8jt"eJn*<BVIbS^psas6A\6']V'd<a9'l*W?a751GD30N;eKn[TIFgjDW;4`@bN!R)7T7qUr._O
%iW9g!FrBf0`O1AoRBc9P56NLU)*on`1(]7VqIXMqcqmIE:Jq0gq+@S]cB/Aa<QE9S0Iffgkpi#nLK)F&NmBkX%5R)e$L2ZenkDX(
%.q-h?J`7#I;)V?VefL6HOn[mMM79T=Q?NY!LP,^Ti34$D%fK>(,a>M^$YqFJO]=Fnrug@*41h=jC<(<^GV5]DG!q3D_Ih]<j3nb>
%pjHRh!TW+%`s(6!`3Zjh(kL>Q[7j>dYQEnNTJ]YXnhJcWR"*APE2q!-%K'?6b7U;Z?24cp?Ksr(YT$,r,!!is\K(_T[&nW^W[?RL
%[V"nsnD/*$XHp8lq"q5MEHTF@j"":MH.`Rqhbsi?U0f=<KUa,SD33dPbnaimi4?#-XBTZ\V1Js4/J?5p?cbNfXe&B<c8kU4Rbb+0
%M#G1pppOMO'Q%L`"]@Xib$q@FR(GKGjB.^.s(loY%EkJE6ju3<3I:S=K6QdhM/_^L<FuDIDDm1KCAUn5Etb=YC_@c.n=_8APuR*I
%(5m2ok"ebo`Ybpr<S$*eX/uebW5%r*d`[!<D/#=!R'rgW#Y<(:hr4;\,E8(>%U7h*s#]MtLHUVVW+HnUZfF)*k_I:(*`&A"q.:N5
%Z2D"(MrVm($BHJcp"<33[`KR4$/2q)UVhi-W"ko1D$u>tas0924.K(4&?JPIW#kT];Xik6\aH2ZQT7.n_)^P[)Q\LL]\D?a'Uaj;
%;]lAU&i,)p^<=g[E01d9%0U1)*'k9O*ZU#r9te8\%Mk?hWl*M4&TU_?OXbQWP`DM5F1R@cs/Fi1b$Ugt.,Z90f;7>H8ue?3B!!+b
%M!;EYS3l!-d4b;1E-Ro,[Zrt4h;*[o+:YWEhkG=</-GT+9bEH($+hSi(R#2;*elh0I><H)#p<Fi#]p<c.m(n(lkl@chsI>F1Oco,
%.@JYup8EPOS3$PM<WPptkJ6N6._#1Xh<3R+jrC=tO#>XU&k4rMmn8jDVr&@+,-6/./]//2HWK$PQ@#;nXH=XcG0G$]@22M>8H6!R
%#JHAAc<a60F,nlCG.4hrhiu-.n"]YbQFKOPHIQ.:Nfk5BW\s+4k>#.[8m4m^:"9^-P5.,W<7mp2f>_eI@8uM`&RWTG:#b$tWaJ0c
%/T"'`p<9?Iae6_rN<cqdbSE[57c*+GU"-i"NjTq!Q?;/MT_s'Q]^P^_c$[(b&OU+IRe3?#;"7_gg/AFb3$:'Z5`9'OD,")0-^7uF
%AhNX9A9IRmpo1@1XWHgd"XMttANf_?<mu:s1,<&h*7r@A>%TLsG#bOK"eH`qnocbQTI-V6Z5`3leL]R(26B?`:[&h`($TKF(jV-X
%lmVRjN2Z.'q2t0OqG'tL6q)E=kZdK8o+nN7?ruH2VH8e8!@gjBp+c>j)@36lg'/Y.O,_T'JZITkO"j;J<?57n03dL]8K[W(YY)Dp
%n6Cq5U)6>hVY%QjR/uUo91BCH\C?U7aIC22oNeJbH`7%l6[hbV9Rfp:/[1XL%DA35SC358NA'#Oj%&"oV0Y6-E_"'FE8Tgnh6n-E
%E,H*^Ge8'Y[A]]8JafG(^PTM!>H7tXVr#Jic\h%jL"M7S&#Tl\BI=m^#gF.Cb#pl_L22;e"6K^5E4?FX\r%"M]>f9)4[]^cTF0=/
%*#`"4(*[CoF5b!i7WM`7#YJM/F*NTYr#/=9Elffn^'7e/JLakF84M43_6b9H%uQX/"qS$2YOHV1U<osBLu'&I*D228K,qoTr]i2n
%k,V#"P*&#j.Ro;sD)I2Z7UE1j2%a%tG"UtH:LYSMN:GW[A+*WRHE(sDXH(_%Pubk_LWL].@qYOL1Ju+eTqK)@D<Kp\nj4sp6=])K
%V#.jtGHNGE=rUR0,=IFRY4un8Pb6bJ$7QVo#2Lbd]^!)1?V^^$9Kf=a"B'o$#=FZ:ieN`1!O`s2ohC)@7l37%A'7r(33#HbfY?I`
%ZghR3]Sqo%Bl/IrXd<]5&1j<6R2/:*\Hr\Y=lLGsL\S_oDG$l=T)lq@p=aMZp+.)72W?\a//Xj@-aC>qC>/K@Vp-AV*8<A'L2.Y9
%43@a6mY,JKD%4L.O2#<6oOrbQTCba7P1oHJ0=lkUIkPY":r.s)m>m&0mM36I6QW,SCjOK:DV8:hciCgLT16*$<g:@cZJt!dU,dY5
%kbHB;8fZhI]cM%9cQh8nGg4U$#,lXV8N]G^&^F%FXD\jcLgC8k1JLp-X3TtPlrfK)`FF0.&t5mF@qdmm9Uq_9,SgN>\C>`QT;9\/
%LYPDFk/nD4SnNlFR3J]#M/W[XBU)!kl/VB1a.QHb1+)c:Uk3l&Ws9m(+M?OZ!FT+&(X+b4;is?>RM"dKrk*(a*mbHP=/R%ukLBSV
%jES!jP91gXYR";Ab"J$3WtM3s@WKW;bHfdOX4gE!L^](c?([&jdQSC34\:";Z:SK#-fa`0C$;'MHmu+!MF<5H31*phU_u!<)\@-\
%kM4i)+UR#O0Uj2@-#ptR1BI-V(,u//h9d]ELP6:\4?6F!ma6s48MZ!JB6;cAKHH)R)j=f9nF)b7I4M>FPj-f#oS(&,eD*EuWYV@/
%6Pss2cRlC#QMZl-DoLJRZUXR*@Mdk(@^@=*kHm8YEoQFcNY#p1)UVG?UUP<U0OhI7"$Lk/k^]"$$@75$8>2]3LiK'Lb$ALbHnsIF
%//OaoG7r%efd]A+rmam>AleUXXj$>!T"N_8)CAWfH*M%0ZBi#mc."W#Mi_JJ3HK"ojba^M4U21dg:#<M,.AiWO<'K07Jg9Da!mEK
%;K`al93hUc]OS?!Uf><-"1j^`W!'0/A$*0K8PGS`;(LhDaF8HLp0K'eFOoOUT0#eW7$HHS-&m*rqi4^\CH1V?=N=H+:?"<ZNpG!"
%NCQXclH&c,`\$Y6B.`Og^78D;f,l9mgM"t^<P)+D*>!13BHI4g)E#.H8Qq+'ZR/<TK2:2'ip,8lT)S,&VuCLmHl1s?eQe?-:P-Lc
%9T<5HCaRhQZ#IXDT9B>eYZ<D\P;p72FBSer3r6#89c=@'R]](_TcZEN8i]CU)!km<.<YJ-8NQ_a1.Fo+<;ZP?oqeC&DaS6<*hB$k
%Ysti/3UR)Tm?c)`o'=h":Y-Db_jn6F.4irlKlsM=Fl$@>pgrBe3'O=L<2.P%4%_j0o(*6=KOhgho-((j>*QS?cC;kP<hjD#lK=n^
%XS-!><Bj8s)Ui9g9muAX^o+$t@j?S`ij9oP@8W49Zh3Y2;*r'sl7;q[;f%5!87-sbC0R48k9Q]LMD*2g&W]K*pbC-'Oeg=bd4)%r
%POjN3B%2"BSMWSXU'Kc\MY`trbmIBa"MBcFcP(OMIa?,2j3^I<3$qS6&^tBE&#^52[ZQX)o.ibgiM[alUH/9F>QRNDmV=+"nUFXL
%#&Z+u$cj=6rGPR.;&SMEbEjfgL;N9kEHS(d]AG=m0&&u!cFA$U]nOUnZqd+AH3s;]iH!Ake0D5LH!*hd9Q53YeZNFKQ3k/sr@j4"
%?V9h03S\Q@30M[1<qte<""9]^-GB:;I8L.,[+@KgH$$An!H-rsoLG>H(Z[Er=_l^n[$UtpF;X!k).*l9(k$[iqn-/L,%Y`djb*F;
%&IX$5*,%I``Q+"E4+$>!cUa!47H1EO8k'`4Etg?haGKrX+.Fin1T.^2D)rVGKs`K^><H*O=Y(d>hkDE<O^KH(?Y,f6A`t3=O"0D>
%PTjQOYf>=a#n/EqAZma3$WVLPVJh=p'fs?F7s"+Pr!;V6/e3Df'$MUIQ>EJr-e_dG4pE"0oc0r:fkj,,n$Vi7(;9:Q"!K3nrt'3@
%>V9JTdHNat0>lj]B^UT:'q1YQq.tO[&Fr'aiNJP#s5P27<nbG3+7o@U1-o,"OdUk*VZB5`4f*Bt0,"/qiZrN>drIa#YEJUjTp;]b
%&59Bb_]o)!E'keW\LI1!.Om2([)3/DYHV5hHi6i#.<"q?qP7q;LLeP7?63jCV$da)+Q/aF&,)`qO.Q%!UIkL3+9(PTrPN"@iue9c
%T-"<lQiH:rB(Y^4-=>%oe#_$Squ/SWLG,I\Ef+1e,TFlo/bHj.b279DocmeMnX&>]KfRupp,+l40CS5m`J\nb*rqtXA@U5pmk^,q
%'pJJon#NDj&K\6O9Y#N@d81B9lH&^^&Qne:>HO7d3R+d2'e\rJ''\Y>4`hL.rV1&gKV,18_KZ6jJD@ihHCp0-XWF-)jMJ4J)6\E7
%H]=&_@Y%%-]M=\;0SSnZ\CXpQgO`XsQ4"]jn/+c17*M3PQANtSVC0LRqr*Z\6K76'U1]bBlc.DOE&N#JUjAGV]4mrtq-<D7:m3!h
%#Gm2c5O$Zj]N=piA]nJM]Y"Z?7H.]-0@O)$rQDdc'_a*MZN'"sIs$59lbE8dpQ&na5@=CQIJGu&fAHUpQ`Y<I\bse2J&D<_+!1IY
%Iii8%jU66^0E:qL0n&l4rp]^C^S@Et9_aFgEV<GQ$-nFlX;,kX)aS7O)<M,\KPKfWd-IuVe=0@5ZZ!TC\rAXS'_$(^lHpQ8hu0JR
%/<%i3-J<.nXhL+HGm-hoAPT8EL!aR"aaK&(TZ-@g8eCs2$%(sI,7i6I<FE>d1^5N]dJ"-:L\%/<E$6DK,*MFsjiKQK6Ytu=X1l/i
%i0cuJbu@hUY,7imcQc8.ibX4K7mKZ@2hF\8k@>G'8PW^r%&lKW8BGRhT:ZN+g'*!gSRRCE!NWVFNh^Qc@VN/P(W/e%Q)'+FhPtf2
%bIF3Cj@Bu10/*"]HmoG>W,:ju-hj9!R>>_@3pg9/72.s*p;2Fna]d0;dm[FsJP;)F;ttDe?u=<[IQ($lD/K'_SLa6819i\1/Dho"
%GCEefG-'7HcR`8.6=9i"M*S+t@q#&EHao:s_3hRUQU&1q-k;V"\aYKop)lDXr/Ag-"9f;NjBOZ!\iV^+TI@gJfelU*1c"old8$VZ
%`a=fJB)Du^FR"$7PbP5^+Nu\pM2t#+pY5;cqY>8irCLI?8fpiX3A^43_roAsc2I2*L<JQ`[>-gZe!;C++9J,'F0G6]U60NF;AR07
%hd*l$1/*[nfiKaQ8Pi&Nm$^k7mq3R\FqXRam@J*r\3R#!q$sjC78SfAB>>[CQfKKo[faXa81/E2N6EPE!qjp.Z;$-+o6a41&0@5c
%HUsZa9IU^aSn&<IX2hIrG>,$Tm[Io5"W7YiVjM:G'E[Aj\7CKVhA/F8V*qDI@uO-E:&uq3c;ip[-fIG.X@=$s1V:J)(2lqq+uq:8
%)C_!&L14>HZqhPT@CIZdRP68S(19$SqtePj9?1ZO;D_3A)!;N3@mipJjqH_G#HZr5gK@!a+,>4O?Z#3CKuLD!+N:Cg)96COk]7'C
%(gGQX0ZZ7)\V^s[a^%LM1ssT.jeSW]R0-\5inOsSn2/-j%+0,k,gc#dE;[4JaiR?!m$qe&gW@s/ZShXXq<@_7aQBu7(OpH_58J76
%o<%QBNtb(MMHKH=dD8t@UYrDh4-I'![I!7t"\houM)Nl3Mk/CS_.Nlp\&mIh&l,KaDC3:-\sSV,3C_6kcF-M<J6;6.WBY_i*O_R;
%OlN)D+A6594Tq_G?-Ae0]6TE+IWnfu;RFXZQr.,IPWOCOT+\J>%+11A9g`V[F`U3u#RJA?l?Yje"0TiJe?bbDGh'M9Gq*FIEHg[(
%Fs5D3SjBVlUQCZlP405U\]s+EUJ.r$eHq5%8)$#QS#/1X3Z9Gji1f"MB?;7<\.-t5&O+oO42XANQeo[LnCYh5"SI:k,Lj;7@[XT`
%@G=qSbUJQPmU[ZkH5+3jSK60XmQm-&Nc/q3;,!=rU4[fK@J&p$5V%AoJ/]I_=L(=)*<9H=pAF4b&AVC*@k\3$$Kk=AHjP+8nZ/DW
%6<!9`0fsIeEiibnlALeKJUN5:pWNgN)Xd?N:WP#QR0Ct)!$G,Ba__p8qt@C"Z60(Hs7>.Gh1,F%s8F+srokO(j$3Nus8;9-IuCVI
%rbioUZq]l^2dcR/^]153r"&i&It.:[J,=0amd9D6huDM^r29RFL]?M[IuQtu48d]GifX<>e&9p.0)TUBLQW`l^hGq,P-d$_q$9;)
%\\(]#'$j.kP7N0Me*&c;o0/bZlK<_g<r-,eQXjS&c:q4A2N^CqiM'lJk_s@gk-Z;qF6r`QHh4D;rGOe*k9H>cgmr+KVl(#XH0#"R
%5tt>N4?3Z@.n^CAQQOQAo'Lm#e:i`T1Cii@@=U5"?8HsjEW^4a<mUBqe0;SWdW];2J(LpAnMlnu%(8t_Z;$a/.HB:4N9,/dRfpkU
%)$;9Fc2a)[SG4mFf?D?FBH?TW7j"@d"8V3GJ@oit6D]c/;B.FD1>WJJ:^5GYBGr`]dBC,]eKk'3#a\t^a1&l_fOljP4c0Ls;KP+X
%%7I`hM@74N5W9@ok@-N`\*<9ka3A@rS&ahq&Z!):eDlpoONq."\FZ$IFHjmtSDbP["1Z+?R/,>^-A(`&MKuHmn[VXC2r0liAN8<(
%AEqG?1J..W0hH4hE(2/H%m!FR*Xb)TRPG$*,@tu52U9O_.9sN\N'A[;n2>cFFB;P=8/\#3O4'T4oF!5snsJXBB<f-ka=h"'gJ[h"
%.HHmH$dT=RA%78ZT!Ujql=d:Q0VA`MA/Po,QC6&4#s>e!5L*aNMg]_&Sc1#Pkn-qNkRU)uq(P)-'/)TYdTp["WgL6aK!V$4J1,3u
%U<2[e/CT#Y5.>(G+Lb>7ShlDn6OC?[h*-JEJ<sT>KL(UZnc)<s,/(V3Paj[,@=?HfX:5PiG%%*@I7=ot;rWP[^h9rucW7ZBpN)or
%]N!Ti1kdoqR5$nLJ]hlE08lH/\&HQ,bN2&u7r-?ip41BMPjV`!:W<=2lk5A(5a\hVF&4G<Gl!;JknnE\Sc+?.:tTLCg+hmcq!f-G
%l^=Pobf7e25WU_<k<e?*`_Y@<dRIuu@8`mk.sEAWU.iiTb`^(>lU]R$PVK(m'%E$HY!g\u'I%ob;f?n#Q!S?M2gE8^.4M0-9?5<9
%b'qdZhd3a(c:Nh_@<7YaGh_d0.Air8HO@J2A^/msNrtS)qk"kPOQ1"$c):ou'lr6f">4Y"7k&A?o+J&i3n/RE9a\W(80rc]@pHI#
%L2rBjO$-ke/tNnGD=7l$CU711E!S"FYadn'&[g5>Z7t!&Pa&I?Q_g#q.M80rm<]Np.s3<O(X,a7g(Fe2<DIA8g"^#(auMADmX9(I
%Pr8qf\k/ijRu#Y`WM>4&a_&p9m0L<5Hub5eLFaDXH[PK8+ue@@2q,nmS]mt\(sDf\s7C[sr;=..K$#KYd>TGrl.u(U67O%IHg9lj
%*AjpY"l,'cBbOu6K'2["p%2o\/!CJ_rOaJ;gErc24D%E2Ae.@)rY<XA@S%9W4mXA]Mu2L*;dX_tVE>&`1[]V&rOb5_X@.E&LSnG9
%N(WWWME)i9_mrnfRn(l+E:u'+HD-AEC/5@^0R2['=?a<#[.s=WUN!KZ?KTG39J/]-N%U.mHm"T&)1jMAjqEK[BZcL(XFSSi>bOIK
%7iVGtm:r*[0A%RCXhkdM3"4W)\,sk-:7:PM<o1MR\gJVXpK5GHdQZiiWl[[g.1to$#Bhm`,$6EEd7b=mh:>uZ<ZAS6fp&:$20VS7
%p"4[kmPTOR8*!:/G^a;'DeiGHfjBFuVS_!A"@8Cc;&SbU[QFmkB)VDugj.jq!FB$nfjjR$bi!UE4,qf=5'kuF@@fF7_I108#up9h
%$nKQkX:5u?b\-hXIJ[H'.ucW,Lk_1eh0r[HF#K;]9n8[&Dmb_sLlU!o7P=n$atq4"c5+mlr^j:t`t3NXf*NX%n@M89fkM^q]oWF0
%$t%F]nocl^7WJfZ$[:mqQcE"PRK:9]\R3c\i*<.sS_O:K%c`d&2KN,@\:/N?c@ci#Tft$bN^;Jq2%%ruq[5H\\2Poq0TcT^m1,U6
%`JPn6f\E.#a\!Xdn3PL#J/]#[aspn*JM`Ni<KFT;THc?[@4:9'dr(\RbKlki/C'oKD2RS/%9[4^j;h)>Jb*#k+M:G(65cDcf>O/?
%&Hi=B<uA4I\O#.H8g<lK@)$[>Q-i-nZ.#q/"u()L?kfLPi+,$Eh7O7gZKN[F&Z+Qre'Wt3`-kNQoZu,Tr'JqkD>()?(!4X2K\E3Q
%2eK3ba*g^=K8OI(YZo=`KiD_H0Y]dNWg<n]VE0B$J-m22H'T$cOiCB;A5-.IYXZH0>*8KGibf"Q,'#<%q5`[,MXc;@Yt%qC:J_p5
%`ZEX8X^\OB7`UM9)OFRsgm1j6aknaAX.NWB`k]LGidPZ'Qa2,?j:"XbJ&q+u$q8[U)KNo%M%L?hEUBH!i$QcK\afO\U%ufOhlDOh
%2_XbMSc-^A5M<e<`R,s!P1@HOhPSpL[s20+[6K4W<3ilH!gC-/7ZDFGRVL[a;O1!WXRfkJS&d<n(\Hp`At+1rW7Oc"\oa+&'6dZ0
%nE*,?654#L+\8hAUQ.\&$]/fJhMXW'1FrA08PYG,<S</F!(+qm)$_si2\378ObG+8i?09T[1SR^AMN)sqCQuTP>l$\-\q/=s5XW&
%-!Pm*W2U+QdT7(@Q<of=rQJXup"76s3"_)q#JhRXDA#a%>odM=[G876;1WFlm\7&5hJT&cU*3,JJoOq%+HVUU@=T^IQ$YFLOUGdm
%JuBn=P;%%r"-JZ/ee+Z^1@e.\hI`&'6Gt*Kf,i)LEPtl[%3>s<C(c2QE?^_Lq[)LmQ$q2'HpN9clpo!o[W"3gmg<Dt0hW:Q@@q)8
%UXCc<fsY/.jH/"E0O0YOn&sXqq1Uh1%3bj<5W#`B/-dpfTa@ukeg4j2'^Fe>T?7]j1g;V,#P=;P#fL^7l8c58KU/jR&+UdtHhaMj
%SM[Yc$Uk^g>D*.N:]-BH!"P#'!f`Ca`*3O_&`KY$RO$TKY<-]BBjK#m8\R3BXV6Q"Ofi:]B8O_CM7ZKRH!s(jYooD[3X_ua/eZ+q
%.kr+E^P)-(mNM>NqW7biV<Ad-"p<kN>JO4nXn:$Sp'h%KoAqUH`-tZ5C,nlo[Fl?nUc:BOH6i0$8TW"DJZCkp,*%#Jm*3?MII6.D
%bq'\_,De$A*I-/0-it:/M\WP]T^tYcgEf;&K'p24<*?L_D9n85OaegE$d.&LfpQ=KA(c,eY;OZrSZ)\45c6mKE7,Z6E:%U+W3S?D
%AE4674GqeA,$iZ,3?mVf6dYF%FQct1$<$qL_kj4<lY0hR:47jVO64QXR5oj8J?c[gF%%'QTa9dH%&u&A'!>\Ms)d(7"=:24-SbI.
%Rk>#_h-&0r@"\NCi5_LtLFp.gfKTmIY,/eac_g*QN"e#l-lh,2StCC.ms.GgQ9T+:Y$gh""@J1=iOsu5XA)@kiN8rH+n:Cfa=3pT
%D8$k2!ag)922B^n_RM-V(1!6+R'YV)]>]=Dne^P2d?C+HGA?lWaQnIA0oM#pdV6c-"lu9bM_;KnS&)e%3;KN>cBrUX!2J2:&(;MH
%f:O](!a\]Ka$nFd;9kXIA!!V1pcH?03JV/8_l!7*./VdE<d)5;M;^@/LZQH%[a3,1l.fRkph0!jfsXj_?ITLgb7#e-kr%nlQFe](
%+6Ci7F8;_*Ve5;7;R^7g]G-Ed[JS5#?>WV_btE7k(r>8ISBpXT_J3.U]S<I(17en4^>&LY'IkbfP>CKi7s*bJA<O>.N/$q$5-Ihr
%E2%aQ6)P8)\q)TsYI8rIs-Tm'9Pt,Zr/AA@R62k$$/\78'p5&H`ujci1:4h]Vb8^+$R@E8O@FH,PeG`uaNs0LatM,21#(7$Qk^.'
%nfmCg'cKoUM0m(j"K3f?V`R#L3!W@Dd"%iad"\\[L'1A%?g8tL8.a<H[I2sVMT)WR@TtMT>7mWe%M`!(B^[p*gO90'iWc*o*"Us]
%s8%+DI!pSA%*QK^Q=DVQZrZ^r/`H-.E$2L'X<.q/kYcuJdS/=(mltjp6ks(1hnD+0]Qm=phjgWpaH/-g]'XZbXA1O?M$^"UN$+1#
%YM5^i,UQNIo3ca6I,t`%G\cFqVH^Z_nE_Qn%'/3TEr$Uj>h$,la&B4L:\=7:_/TjqPbfVgk^Lsd"e2A`YZt)7LXtJXd5f_P#gld:
%]rplR.kc9gNi".jBBb&%LM*LtOk!h!]S+N=A=Y*T_WW36Ab*q("0UgQ$jJ7RffAY??bN+Th/JO[]W&)148G.d]6La1]EtILc3Gk?
%dbV))Jgq%Jp+2GD>GBhl#$\qe.JIoe`sHZQOHcU[c\HZ7=b*1XPpLA_N_>C?fX#2'c:RU*@cS,]U".3V#]VOmKB>&*,4lmRUnAU3
%5Wh/nbHkYTRpndBiB&lc4BuLA.#uZ7_*iH^dcE$eE<W@ne*.^"l0olUGflpT7t*L1>;W?JXCp(D.FB6AG@TcTCu@P:Okpbr,:0tj
%'!q355<dg3F$X+"%K1Ofp5C+:nHrhIlLV=u=#'Z0]#isg,!Pa8)i6eC*-FL!jf#7!,dU$Z8eh)s_E5WN50X,bVMr,#!N<AB099u\
%K(lrX>c,Eq"gSaV%=/D)2^/>b*?-/ugp=hqgh/-Cpq-^`l='sBaN>+MO0Nc'#as<+J9UpE"P!uk_1oa5l6&<SV#b@(c4N>>j]E@j
%H11Koq)j0Ff5:p9"+G(7b`#JmP/>nNY0QA#*nn^oEb//BB&B_G\fShX$>DqX6^l^gS98-oh[6.QPH@]/TlGCr&,+Pm6>Va(;=G_q
%7CX\[YBJ?n#p:tk[`:"-5DQgS@?S&[:Ves@9cD[oP>m5_a1$W)h/X"5V9G^`\o5er>NY^8c<8VRd6=E&&EP?dQ">$.1<L)KF.Cb&
%Z%Km9Ub,0_kZUNnqSg$#p4&n)c!-h,rl_'`?2!4<(;i7VHYmW/X'ANSjLN=X^IFT>Gt.LjNLVgFD,Njk:VJp$;,C6-XT&'D7_LR1
%E#@mA.lB)u_fsptdW(Y+;lDe1rG#rDA)<D/M8p*dJL.T1;hGX*Fr;Dn2*5tQK!/Yqce)--6QPp<[ni^0&Q(pT>qY;e,f3_Q#,nGH
%R(AN+C1_G0?oH[Rb@Q(hO;A,7QOGt*'+o>7GHoIPLt.B8%,J(ulJu^jcQIj1U@&bHPSOmNm?2Q-#r^'%3->J*FqquaD$8O:15%3k
%Y8_tI`(&_Y](=2.8O&0uBQ!ZJQYI%^Da6AP,HGF2Dai;@d%79%b5bVl]U%O"@_=p>)+uFj6C@V=MVPA[.@j(MV94Jc[._W'8]I]Q
%s8!:1'V+c2c_Cg:UK;UB?nYDnj!De:iPYO$XVP1N;tcNjQPS!1ajp:p//+Uq:G*m7H8\onf8<97F/*du5o4etE!+kg:IVfqjk(Eh
%;B3?&!W/VG0$B32l3)1na1L0_F#-E`SH%C9B/gX*%u,.=QYg.JktfVQHZlM;)pso;CXKH(g4CjIp`^bgDd1iL8p2JjOc,3-R%-<7
%P)=5/%9MMUCur19)-78ldJ9>Kl>dgJg.cX*]6H-_!oRt<dXb'4$Pg`<:TQ^^S:+*B0>hQaJ@1brVl&%T,0uB8Ir]B9F?IO[_m'G;
%"MdO>TRX#o?C3R24>ZWY3c8#)']#,D46H=$g/@df7+;V!K:,CM$5Tk.?_9CUr[M8!g2,"K*&_$14<j-'iPM$]4F(&]a1aUc/`j`-
%R:Uo^:lkg'W+4J5a@E_uq`!UTF0&-:@KL(__cEbF\[9_W,)7ch`h:2(".Fr^9iD,)_!]C7+J4Pd7a/^t;gR?IiK?8PVBV,g@dkVr
%6sJa4GuJ&V;Jk9.T[Q5sY$@Io3+`FW10Z.6j>u[k9Sd>V'7l;C%&.mUH\',!b$f5k"j>L2)BEOa.9#+D\UBE,TdD4`%#u-t!$Eth
%%1BDf^`FmV+eoHFUY9%A#bk;]?(_\QGuG"0gOFP+-*LhDgs)rI3UUG#,@WT5BQ/.-D`&"C4R>1EafTF,/GKC3k=$.m_/Pe+!HKej
%D)q[$MP5QWfM8kGfpgsdZ!:O-4R#b):-qiPh:Qe!3U'IMInb!iSkr\51?<r4`A^SH1S3/W,,\$ccV:6n3/1A+aO_e8o*!:6M[VGM
%&ms9d(`o,rdH3bM%BhbC%CCnCXJ4rS+T^&V9rCVQ93Ef!`=Xba1/!,CUU'!3&CXd:%uu_sCo?fEDk4s1e9qfn4Oi/g$k^^*?Lcn=
%Gk%osE<8-bW=h],^19>qc<aht[T3;Hc0?`B7fkQVTs+0)RJd-Mct>R4ENMJfkEca/nXcWZSTAOIfp`N4EDuM)I?_-ti/F>E8%W0#
%cRH^,Xet]"'@_-loEp_P$"XH!_SGihfj%MSUt2>Wp%A./q]Ru:V^[G0N@odg4kA*'DK1]qe;B]Q8Eig.-LrZ*jgo0r;)ptaarke>
%;q+<?eW\HCO`*c,&GB^);/nkS;?75Kq]90>h>gccBbS*UXq%6O++*).m=iBMjJaS]^3g3U0cSoJJe$HIQj'q6.Eh$b]Kf5\@]Kd/
%.ZuVDe8n(/R;5,<mJstFh7NYdfg:as9k(7Q<fp\_mN_t41uanS"WCmI5ksMNSLcsFZ0a4`nrD\3gk-2omG=*>Z"ST,L-&Q30cH;+
%Ib(C*"BOoBL!E%YB%,BBJH$<h!mX\LAn&?!p^WZe30Y&u'PsP$pSJmraLo`.1+@>=k0.-nZBu^S4I0k;oE-s$NF26N-KB[FXUd[0
%n+Q;G;#>8Ak&`/jTq^K1aXNo'+U2!CpI>4qYQi'<!a)eC!B7qK!XuR?M,qUIa_1)BE.=)E0B.-0BG.Ap&',4>dl>t"`XnjXHlsQG
%aZ$XYYXnb?lYLa>FNK5RW7l?"Gh?*HK[R8??BZOTM+ap=fSSN`)@>m@,55K72Nm#A_bA)_\Bd#k6'DQ&8\7WHr%Ya+_rl+Y_b)[6
%kM@A#Y61U`::SA73[7Y%di'BB-Aup5_=_0(]rUfF78PYM%HT^5_$smJb:*K7D2'f<Z"Y;F?6bhbb%.@@7/JWuc>f%XKB=Y6'd-j!
%G$TKtI_GWq1K@6m`,^`q9G&S>W%KR]hFWH0`l,*u87g00UC:E:J.p:V@RC9Oi_C]i_%a.`=;b;E;i,TP3j(R[U]Af_LY^W5=u87)
%2ZO.d,&K!C)[qE<QgUXB3ilf`!'AQ]C*^GhIh`$Nbn]6Q7EFi57o/u#$J;[Om22o*TUkC[+l.LrJ8\q5n<nH6ROb(u[<10##dc%K
%V8VdG'#GTTh-Xf[p&1VWG@ZAX]lufprR+eLEji#;'CAq,.o>s>Q_9/#BaDWcDprD7NT2LSS#1?AAk2B#k`Eep`*VP@G$B,H$lPZ!
%as)X0+I:In@$Id9,liFTf'9mX\BV`,_3Io@Vp3@?6(4S<YE,a#HGl/-G`/`Hj9JM?-[\]t=n=Kgg%=:5_1B497`HDpqF0X\_LaY=
%ZdD)5^AKE"M6C#Nh%$QQYY6h+`>h9+0^^3BW64Fcqq&Be_G0iNSQ\?Xa&.*9*anm`JRM0'YF@]OLe9-N1WA<EE]ddo5V,l#7@1jh
%ODXJb9Y"!f<)_36!D+\sTfkXpU4I]7ed.`'C8OHNA$J-3)8HNc+"hJ$$A'm!(oUZb]`LD/iWR9Jg2tFT7K>qTGpG]k++q3W/]on,
%pIp[(Uma:K(&;8r_l$3P[t[5P0tC1m*IF1>E8i$ln0_QJD8o:[iLSqD_NdK4l#eI4[**Q6m8!5e4rWW1h]sj8AFl,R"OSS%qFnZd
%5ptmr*qg>SGuB\7/tQtO1RA9oA3KJQ.$I+IT:N<k*9AR:&Hbj[]&JGnITH0WE@0"CAE?\4DES@!V;`tkZ;39%'S@CC1O8M6^mM4k
%E46/E\eB3nb0DdJ8i#uH2Ei]p7<0#Hk?E$s5MTO&FH7`^2ak.jR`*abYUK74rHt@Arb"S,[*4uFgtoe!-!!f@St^#VF5mGl5QO4\
%ok'mPY5>"94<Bc][@>_N8IADti)sMBD9<K[EjYK0kZ$VM<TB7UK`#saB-ZXE.:>]e\9>b(8(`7`,sD;[4&b=ZrW1\JdrF&_Kr!>L
%iUrGS)6+sSc];gZ?]lTl()b;!+2F,I:tGe^$/mM2as_n@r;^T7:)m@N+W'!$0S#C!8SUpOO.IM%6j"(r$E4M`#dkVB,BL[(jBoUu
%'GlHn>m>:!5T]FNj)AusVbE67Pml6q-g1"k4ibn^9&Q:7@Kj^]oDDAG6"-LZ'>]dt,@u/)^MDlGiWUF`:S6ci/>01BkPZnO<hWN&
%VF1TriV2p[(GX>ra.3]*kt%I/P,!U_R\o1D+bHQPi$E<XmOHh%OQ)5-j)Zs./pkY2XQq.O*2PgAEDPEkY?sQ1pH"FsVTW:$T)g>B
%.$8aLKsdok2:bd?='juF/2%OmLC[\r7H)`1i*Zpi0U!!"VnI<<lXG$M_-o)K_YC;@dPU,[1-&L)%89_V4pj%%j0<@5"?rmZ:;q\\
%2j_&)#ksGt_VH>TP$<s%,AP`_H+hau@0#2?f:Wu"pF3"5Ms0l0lp>?9,B><f7mG_-XOYYoW:HZ&h>1B;L>iR@=ij=0X>Hr^EO^a#
%lSM!W9:b(DT3iOp=d/;*19kNE;qk1on5"B&c()pA5@BY]@rK#I]UL7pK^QkpReHO<8U4Qb>KS?c2^=L<<feJ)j^`dAMBGKt(b7?k
%3P?]L>J5f3H02FU*_aR8E8Ia.^?cY]ZFPY4Rg5?R5LI\=_bOPJ5BHAUcV*'+^.4nR.Q`#t-KRD!C<=!$@51Erk51/H9D,-R/m1n=
%l0+_,'Psmo8@h=k_pj[n1ER]>_V`P*ZF/3'(Uo\P<q<?T>!LmQ]&q?#1HBK=b/q1gAu@Yh]=OmY'9FtErR*>iL2dYSZ>!-FU^Ra3
%X\T$MfL[-OA]P)*S!G9tB.Y"tX(WrHIltp*qY=B-]uGBBM2_Jho.c*ChHDDtLVNQ=*'53n0f_K4HJ%[FLO&ZrZ._[lO(YNgXL?ql
%<Q+%mdJJ(/PVs\TnK,c7OKX[@pK$fbrNk%ImFMMG)N8d@H/<0Q6DBr6pYI=e)<Y77H+8TQ-f`<u5fspXct4mc-5uKH?IBO[OfLW4
%/MpbG>]O.P%2L5Cih407LNHDEaAoicj>B]-m+20F:DujXPpICSOt^O[eHV%J47f%'Ac71ZeQgVBAS&#9933PbS2iT)^)<\Ueb#ih
%%q0NW79e89+X3m1!?8%lOm)">V:kg]g#Sga&P/d"?0"q)>V8jJF=5J51alH+1@4CSi)(=AD@ju^\S#eco`I(8I+U+:*5l;SC,+:e
%9?'HUl3+]\-(H9T#4J\L?M@V:GWD)<Wpd5,F%qo"$F"MlK2Ojb8mQ\IgL55j0\c\G[P,rVr"qDe6Xj_"`s^d7"$AoFfn*@]:(pWI
%88u:tc/IG&;2@c?R.'I.f'>5fQrn>3naO+aFYgCJpjKqPk`kF4X4KqUp:r#L]A:0KbNh(.!+MYOe[i\W%M0m?B%SY@_uk7)>_tg!
%3M.PTVIu1FlOMa"=>'i<ot$=-fu$O87AM^NX(/rU(pB`O*[q8'C>N^Mqp'L+Fr"P$mp<AiK/ieQUsr*F`(0&Qpi'#F&ip.1V9sb$
%>+`I2NHK2c*tAcn/rfU2Hm4pOX_65$^"2)FAC=sYl?![np"b>YB_T7NgJmm$MqQ>Xb:I)m^]TI?I+lb.(%j>c`.@"/m)@2me2eTg
%FcU<^=iN2A0<K*uN82.cEV<]d%`61FAsFQJdiou]IBHX?hN'7U9AOG7Y,Weg7XT%0pnYCh+fC)V%k.^K\\jd*Pb:-j._I^hdA]=k
%8;U46mS_pof&BD>AY1PC)9^d3e5X83^j@H!i]81Oi*rfJZ>E,:b4>5tp$ji3@\j6UDpINE+4(j#Snfkdd!7*\iooK@+%AaOj<8_9
%N0oU'\Lq32P:X&,7mF["c%[l3Y,7uqahY*)?n"[>,<f2<1Cui[Y(!^XKh!r#iB142X\P]B)\S'%7_4P:C"V"c;C7S!+$!&152CSQ
%LWUs8Aq4MI"k"nRUr/`;eeZ_rZ0.$s$Fai]I`NoLc-#M@r:h'B%N]\#?D_)0E$15e%0>sTNZ_of]b4sn-]7+ZEdlrMKuZ]cG1$RL
%-?]OJ/'[U7h1hfBRBVo^GDu>@fePOC8[cei[t5U/1/j;'@IE&XV3ffU'YnQCW_@frWk,eganWTqBg8)2,d5r[;XG$cj&r5O\iIo^
%=F:+Tk]JV<^ki^1gh*fVYU+sXJs/W'\+2]=/$7D`"o@a*#@"Pc[+L^^M/.B[n=Paol-%m1/N$G70@+C7GLa$\2NF.Er3O*N5cB8_
%VT!@]I'ifib]fsAo>qIf@dIFePP7eq(A[rPMh*1@[nY*DrVWsR7%DGe-T1m4'B4-r`NQNj`lGraZL+KbA%ie+%WmK$A)ak9Ht:@;
%+_-f4/W&rj8hX!n>of6SM-b-1hRQDqAGD*gL9#iE*kSN9Yu=.UE?83?!OeYND?)@S^\lM0SXqiNd]0s]qOmKH5@I+*HN6:$]o_.m
%R%app+#(2#dW03]hHnI,:7.A`]+,qC4kK!WVuJkd>BND9Z7mtR270"-<om4@Qa?JdmV5aY9D3.>jUA!4ZW`W`EPM4tRN('ZIjiY$
%d6I;(HE`I5]"P^Z'a(gM]4rcn[@LeGk@N8j)AB8RDq-5C:RtM7U6"1-rpA5eT/k7JSW:(WN4iYOCc*s$?@-<&`^bqldh9R3c%Ghe
%S:8l_]YF6U&+N!0]!c"2`5q(Z.?D&6F];DXKF`.-kqi$+>a\>/::je5O=.5'kEL_o[XU%l?,<sM&3QPl[OoCT`W=L3h\KLA0PB%d
%D)n5j\o"iR#akpmBW*pZQMXPG)XiZ-o>+u'7dV*7AQP]3HY*L.1hl,hqk[0*,]JFFGhS"A9JC+g1Pm8uIq5'ldb!!LO)a&lj^R),
%MP]\4SSmMPFsdu%F!fXt66VmCE%X/ECpAI2[B,)nG0,?.L5.reg<Uol:1q<'fNE[l-*)I:"c-5"m;u9sUj0:+[CB?-c-H9-$#C0R
%4-JK3KWr*J+RM!4aWBZO\Z@l%eY5/I66@s5>.K'e[>'e-:^fQ4_1ioiGK#WKTI-)>&ZVs+"6Mbr24'&@]j4^iYUYi?'=Ii+)ltG\
%ONZmsNZ&IeW8$<0.cQ@JL1TV#C?m:;cXPu4<:%mS".We,q,Fd;;kiTHA=W&5T5.Q/?]gHsEEg?fWakILR+/tk*8G[@8W:lIo5&Pe
%<9lU<4JU#M/4r3jl?HD<Uks3gV=iPNPJUojMKdnJqYkEZS!=1Jc'firoO^^hTtmoeA^=tAYff9n(kpdC9PGbFV3EA^d#[t4G-]4]
%465o%UGh)p$=qi1kB=9!UYiI:OP??e,oBH6),$_-^.RLEU+BE^[2bq#K2dcFDt2YYE2XGpq<_pgdLEep4+D06%MT>C#RZZc=*GC`
%'+101YBZm#)?P\XTFtU@aUtZiSJ.eel/unO3UB5^X")pM!*d5;g[eHW67cpNA\$S98Qr/2q@HhsC@-_8BNbX9\W095,Ib*3^Ic[5
%dbIq1b>GD7bJ-2Y;_\nZ`RD-V3r*[:af&?Ko`TP&K9>Hrj`Uk'A/EK\V.gBpf@?UHhNY_U:2?tgFhn"Srbp,P<=N7Ua2d8$-Ym6P
%G.j1bm\IG'8q?>rYS1`([$UENFEKk!`+ms$YgbuC)jX;93M.U9s7X*&e_Ka_ED*KfT\PrKR1.0-(09eNAD"aJa2q^Wi8P0c:NKq`
%S\%AE'oDa@>5I@<T!p/N,upG?>.X&%[5K%f?mQJHOq9UI0LW68,J#>E<hHg(L14q,)b82MHCP9_S2LAk8Zk4[s7X**e_VK'6'17<
%+oGXkr0Rm9,hObHW2$_L5f0]CT_9RhQWS(Z)qHc(_#le+j-o)<:R/u\pO@PHXJ5/7?#<u#E?7RS`)X8Jd^Sj;G@mEbEL&;&ll>R:
%pr$sEat(h^2D\.d]a-OfqJX\a<UJW.0A#7ZY[SqVqWct52Um1Ynd+"7pO*ZX<tO/%DRTC7SKheCR&[^K_t`)e:a6r?V?'4LiZpps
%Z8$Vm/kU.7PDs;I@7NK'MCQ2XJ<)_h-ca;>_:LCIWcb2lK608S[OiWP=U*UubNqenS[*GZ_<g.-AAd75aloT\/hFq$)EUrB*K.J=
%9Y&sB$5X#+WDnV5I2pUO`Q.Qs"B_u*NQhAFb4aX`X7@&-fO18JAQ-H-8^1l]1=5rC%Ah/LX]J_ed(b,(rQXgKq5Xd&!A>&d8p3]K
%<`?DDDR$tfH?>4[$Z.2Tq7#OZ&@pQ(V\5ZUbQ^ab0cd;+_N:"1:V\"70PC=Wr:iPO@_KKY<%G6L*\QV9NC=,D^<:FA[AFshI2'<-
%4r8bUmfF3*F5J1X7(JARooj0f0A,0>]W4K<5CC96LD)osiitK=F\MYHQHei6r]F5[]ENc5Xm]`62&i(fnR-%iC\B.B/fsQkAu<jC
%QJ3,d6]3p:jtXLAn;gpggf]Fo)(6s=hEX.1:)^[-!QA.>hd2q:\%h_E-=2rn0':$<6e@&FA&bWrF?V@;:YG[EGD[Q;)S4PH0ATU<
%l1Z5n'(\s&gGaQG^lkpHp<;M2`+@+K%LmtW<P4*F%(quHn$Nt`CV=GmHpV&;\P'VM*OEhVK?0l>YeV44b`&;GO"Tap;.C@%AV;<N
%g2]YMVj]inR'5+;SSP6ZN12?I$)%%LH](rR3tVH`,]]/SW5)rZj`(o"jha.\Y]'kEOlV`\arL5XWV/8I$SE%ll66OB#c?a'+2cMo
%l@K.5pBjTF,,dS<[=E=QWa85/*_8d3bPdq$[FL7U',(QpXB:/eE0jWa:+u5GUhXBD[^g,QDHDn9H+,Q+5]PjpdF:^PVk+PR@;V*6
%p`LeqgTiepL7Pn)b1Fj31dGkrD5jWsASP2p0HP)_1=Io55<m>,aWNdMZJmE^YPTX&[i\Q@K9m#!IU:`Y>G.kGIMTeVi#"qRVDIRY
%[20iCJ_,\eT338V<'r@9%,SLh.(tYK*^(]L[:^MrR9-.@D/6pg36pTr?;:4g-nB&[21rT7ULX'nAGCV$r`5.D9634AC,RO"PMRhR
%AM31`ZBsn5Eiie!C,$)E*+;dKoeNeNOeP5G-MbQ2AN%;%h^4uq"FZ/]V_#Zn@Qd9bkc!OeDO2KU4a5T%Uu@+Ca0%UDc)Gj<Op#kJ
%ATkX^=EX8,Z(]=D/tt^,4dm%#e1u=r#2>?5MV36o[mR+,D\gc-=I#=8jDC*G0s1>L%pM3.e>#0K0_@6$%6_rf%q[A`pcr[hIO]DO
%`R5?F5#0<nh;*inFLe@7[WiE;%;9<*Y3p07bo7rJ8)r?JTC5&[H=']oHKnZ%I0ZN-$XL@s(UV(_kijZ]mYBWV1kgk1A.Lre//=t_
%cmYgNC>X%JgaP>fe<BZ)^cX1O`Hb_["e>](+I%\_VZI5.L:Ec-,[1;KNhkQ>b.rnH(m6sQ2^;"]>3W=nAIe_?$JgTeTor9QPFcpP
%%n4rbF\n[]5j!Us(VC1B2g4.?oJ,XZl"`X!K>4J[@sB-eQW[3Vhn9Pe+/X!ahmZ,fpA=Tl#ftn=XnS*?_Q<U4BcK!sa?10RCKj0a
%To"2JHS';7\J^8Sn4Ba-*uJ"2I5khE(%OPX/k?u=(;J1?-"I(I75*M,C?,(LV9aUkp$t<,8?dK!,5`kMo0-6%@[U1$_+!2nmKK@C
%@(FadH;a(LE6&lZZX;cM!K/h\B60fAKFj"3!RFL11`hAB!@CUZ4SMJ6FlR1O^q>";01&he?VnjXe)Ae#\d&,=TS%5rLq`UaiKI=X
%Pk=O@<?^GhHfg5Js73$&GQ.=oraH_gJ,3+=Q0!AfatWJo3QdeBDSsm]?_HM8KPhFK,)IXX[tP"L'HTfi.@3'-EjR!W-d'+7+\Id[
%l=^dXrIjscLsDiT5`nB&cJcE!<mq0t6"SMZrlkopZ;E?%6Ndm@![50SO@L-DZI[9[ULYUG]gIMe=gE&ScmMCR4A@888/-Q_PJ_\G
%[d*1lpT>J'+2S!A(gd(mL&\i4hepf+n-YOnflG;&)6ZeBj2jaVS3eY]Yg1Zd=KR,Nkk$[,rV'Lq,RX+op&\UZIIJu=87n0"/*-c3
%7u@/dWokG1m[AW>2VBU;kk*<<fD=cET;$"010r!qi]>YUj]6*VTS$=@qp>?GMn..A#YC,-ogt^XD`#T5KP1O-5T7no%<990gEbpU
%*!YI_:pYMG"*asVKA:6jEO-I^nd>=VR_<8J"0YnQAiN*5PL8`"S340VST8_Rp!q<q^R<I$$3budUZl"`rl/49jrgCNBBW"k^pYd0
%L$NOFWkYV-e]hE9LaU%ujesV9/'(:n4s1$T?SWF]+LcVoX7/<K"6!;Dle<CDcmgZS1jYq&@;dn;FY\2[+0mG6Z]WaV)CZp2?Kk*e
%rT[<g&tSS[,]?]tFc/e5k]L@)OCpk"OSU:'Ef"/q3%CnJTUHA&j*1Y88MXT@'Y`M#q>#@,[BFpBKY&tkFRL]]!C(d!8D\(+P@Ldq
%d8:,FbaaQW_BarT'<G`V@pQ.ZEB-@'PMAH-3+nUYL@LJaqk4l8o:?AlF!eTr]*0@#Q!p8R=dLL55;B/Me,WE8aJls[r)G0R[n?\]
%N;_9U$QO::gk#$BRF:FJr\"Dg>4*k.fcqMP:u8=O:jn;ll6+lG8jD=d3c-OF?4u>`F_a^8>s.9o=R:Fk/2jI<42@?p#b,HfI,KHT
%BjM$OMY$Z<$U+25g,H1"GfGnl_2N?fU3tdjTn7&HrjI0MQe+6[#pc.'2/mE\Sj)(NdV?V'VNfJVE+N^kW9UL^^qJ0B>q\_:/h.IH
%cK]cc!V2DsH`[BagKm@-;Tlmq_A0L-^36]fhH*JtXj/8Vr/Ym!@UD+,*BhQQ`M7'?nMPlmK@=FQf$8KIhV\(+310Y?n*;`ZYO@,<
%qhT(TGTZ2$g@=9-XhXYZp(thV(g]c/V7+ME0Q4Mc+Y0g]?#q#]Lb:la%k$q3-BXMPe;81K2>n"C)c1Y1Kbn@N\\_"l=h@S79\V#Q
%<81ZjH'0G?K10rD?02o/iF$u!\sICXht@&pdA-F?eG`m<0'_AlnEs$;W%4".e[gL,@PcJ9*Jhi="!C7\plN4r"(?"&#Y=7TlQ-E3
%gY4rI\"9D#UQ,m3kb?GPW_LY)it@qpfP&hY(8=l-!aW!Jf2h9V_:kqe[s)2fUJmql3qi;cp&t-X@T>sE0/PZSFI>&fL[3[-3)%CT
%JUn71cj"B<#((S.I!jLqbLXWb^Kauf!9UH7jA+^ACAPLI!I]3Ro8"WY]SQ&fZZ14Es7n!c&%^7dIeWR5#%/gfb]eqj;C6*N(TsW3
%K<PM.`]6$^[j0D+cb2XNdR,6i9`3(A>j*MsSAAg@&AVa-;l]k34_*H6mWP=-[q-H\9dSmL0#]\Ie)^G6=.)E(80tQSHsdTYhbJk_
%G%\Xr=Cb]nd%B=P7A;YRe.BKa%Sp!;BEf5gZg%Wh/GuH\(TQNmcMIc_(YCG5\h;`EaR?t_Yn=_I*'H-=KY^@of@VMR^=_r5kcENM
%908nUbA5+]3r_W1mT9&^?Qe'#36G<$=GR!3e91gU'&K]QRp$6q&rp=&/WDd=AkJ']?L,eh]h>I0n5&J73GP?JM/XF`@(CuIU(a0)
%/6Um/Y^V-;.D@pDncuO)[+5KhLHnc#UOiA,$3b7p\a)WF\j5pbgJc"Be5oF\r;l:LQG[ElF.&pcl,]C8+K%/^`Y1qjle9O4$R'jC
%Z/2eYmZkN!fr+'u`?r*KY^a&[#Si&e_"275C^raY$F.#oIjDd\:!=d,H`aJh2]t/^:fqd16IBT_XI4U@8NtD<(i"MXj$^13*%RVd
%kM0kO!UZ1J0JYlV#Y;Qr?&ELV<lu?'<TMtp>8&U-eaiCiFmcZO[b\.]^(b<q?`/eQ0le\SH)E\KJVI$NC-+9Mp,FpKNq6E^`(MXH
%Sc+VDNNd#7?hro8PkK-rpuj*4,QUq8,C/npgL<d3a[\QGV*uX"#p9+^eKNrBa[cB+p#cJq4o+;k'SiApRXF`l^42?`JRZ<=dlOF*
%(m<E>/VSYdpYPAunDAUiZe#lgjBrh#">Sm'Yd_7T4!DgF`n5.%mmk]8pg3-aQgEjUqXN-8I.1i-:]EqiWT-EG7lMO(,]#ha[_fjB
%)!pMb]3"k"B'Z7A]O7^0&Jl)ks$p"L\oS5&_6]aU_X%:\g1NY/;[e"9WUg?O=tm0DN*'f%:l9dI=e]g)l-D$9$<=J1oRAF#:%@=X
%[Jk]"o:UQF@1cu@h)I'ZrpV>fI\P;`T<aL5bbm]"#VmMbX7YMup,UA,.juXRRh`NkU$3jAh8uQZ5@nhI+$TS4Ms\sc\_$ZB<pr5K
%_8K\0OG(s$mC*0CA;M:urVVg4TQ!)chERKRS9q(sT\6[*!q<06>XJC&jOZE9rf`ClI`cJoJX1kQ,XbCOL;<5brjIl:-=Q%q?N^WA
%7Js#m)RE$q@Z^IPUPQNmAZu4R,C6t9.Bq#I_9-pD>9HKnJ>*Yn!W8s\^4>V#FpFu3L!$Yn%@!en!W6/bF'0r17=oK#k9Ie50X;Om
%,lp.*0c\<RV`T#A%$=3s,S1ub@#m&sXreF&2gfh]aO`aB6=7-=KqlA+hs]Li-Q5]H$%+F8;?D,^Fr;@Z!Sn3T&Q^0>GXGe.,'X<?
%#s5!kfonI(480&)5)t%-<4UFW)j0PD:\IUW!q2m%#Y]01^g$S*0j,VGp8l]/2qtA$j@758T?G?'`@8/@2-8#:!Odeq8ZMkPg1d.[
%(4La2l&TMdD7NeNZ>-iC\IiJNq?XK<->qGb=\@s`S)j\U11!Q9:F^d<Zb*RHB_>@@%+A=7[)&&i*G*KtiRmI\@C*q1\KbUIR)LG\
%^:`9[@p(M`Eqe`$,9-lh<GIU/+ga.U8s1fgbGEn!)u0*-b*P%*.N![d_sHE#n3&3^Mf%"$L_]ch[oo>#9$eCijWs3IH3#aMY4C\6
%?Bq]gUQ=?&1j[`WDn/6Di\>a!9pK4f28E>YNX-Yq7aGiJXWRMh![f!%6_ZnN63?4Y&ne<\kgM+l$6s6eqZ3Bp#]ql'kJ[<&.64uf
%O<HMb]3qSb%I9\BY)nZB8<Yr1lEaC,`J^Zq>387;[^QVt1`1`j)@;3\$(;@-!9;o)dEaE?=.=boi99/(QB`@E!RVeUb-e"-Iur$f
%/jB'rRKeACh+:VUcMLler.p:k3du+cBule9PF*HXN3+=pAD;h(Mo8*qCN%dB^"<)F"j;_8g7fR'20q#KUFmCCpO$*3#;6oho*6[%
%4EnAE4K7o5D15TI1Zo0a!m=^e9fXWa[W-A`i2Qj+plM4VD+$%]KhINopI]p'Ws-@CS[qnIQ<acf<[H(cg!!E(!d>8*fPJQ)Of:iN
%L1dp.]\Rpb.Z<a'C3LemUqG\f1.a]f?dcq`<^;hYXsWm(?f('HEiGd$Cn]s?>YYEE#>).ZCY2Wr"!34*Q[hh28<K:Ci*PZKRgh3^
%GhKo;3*?6<]OX@Z+f<5[5:4)OXFbD?kXlc4)mjm.fl-;drd]0q"F#GuCf%Q)N'&hG@agYV/Ii#h8N?L_^VP&c2;*oer*J]-r7mp-
%77if[1["a*D%0hI>On1"T@84f?^;'e:,G3ZCIP^DnJ1I"3FP?=";^!bcLN8"T?,&[khfXhkft)*CI%Fab&++gg#XW1(28HE/Ir`\
%Ouj4#ElYEFe/q"L4"a?(%/U(\musqL";^c,E)>ZG7p=E:)qG]>aHNe(4e2?oc."E[&S$^_eP'kA;WgO]:uUo`@!6(ndhei@5+[+l
%04(g*0:dCS>m;/k)D/bd%Xr'd'nHG680RT>fR4gC?KJ?lEk[<Omo,c1Dfe*K4+`8Pp9BRTV=uC/,&Bo:0P;c9Tp=/b329X_i__#+
%h(&@8X]@u'DBo0n.]%\:Ct#_raL?D+6%rEdP@ulQk`BA?HM5&#+40BAi2+))g9K/oEp8FfRZ1?_"[8`b00k"Hmau-B:=&3QH)m\o
%[?K-V#q8t4.KBCWb0N3CYm8^bM@Wj2l8*?_ZRHdPcRO?gZZg%/n*gtPe-A<oX-"k9Ze:.f3o-:9]fnQH*&Rd<W-4YWSNidtPZ=Lr
%>q)F=g63`lSKb&Z+3AuO[g^P6/-:Ed+iiaTk?dJhqO.AM5j*k8Q$@g'8?-b-W/,]>5hgarigq5k#BKeMUKf?"H\b4K&THFkT>+C%
%M*DO:&&G)+OSO'P1<M&<f+T"]+Oa1iL@;l)XLZ<S$Y*^)i<p7sp3ZoX5Ee#be,_UV$B<lY[=NBg:p$C1a,fb>2h#q"]G]Yin!n6N
%Ogj1Q1@IsD2CfVO5+CnmaSF4SiS:&QcR4/DU6+1kk>hWe`5r;iNJNL\U;6-9KKB_KB??S]?f%#M&F3!HOO)O#M'SdWSVatEod\Z5
%+X1l1GX2WVXkVQWW#GtP+5LV4(BS%\NrXgA!GP@AeqF03ru.?&b^H-JPbt`cA/L\bS`l>!gbS(,.d4San=uZRfkVM^HLH&c'N/)X
%nJ^OW)4<TR5Zf`k_:',$ReKH99Z;PG!>FPW<p-O$[aQ-jeNAV9h;T-[QPI^EF)K<HFMQ$$:ZY:?*d"ITjfRC0i.Jt].@:j?eFM`a
%rcJK.7R)1-#BE)'i$VS6_14)TlE/JVdHZuJ5bO[RJD5dCmV#g4hInfMJFG"?!sd)Jl3]E\K3RfPrd]0qkJ;"N^S'8A3\PtXo:?BW
%GOpT[@k11^.!UoF`,r3Rjc)Hem2%e2G9c5:c'c#u:kA%9*Z@5\+9O6J8^hB'?CcGF08HW(%fIP9]NG\J8#nOTM#&*%3eD'?]+s4d
%F<o-ZT>KcS*Tpbp%qp0.@n]RcG0?A-]po[:VtfJoBLT=@G\TKRhK81nrjJ@`k0@LplnZZL=PS2^8*1[f4>%hjb]L0#6=pF^'Z)jL
%jWR77QSO'8I%Ei-AThSMR#4C3C$H3eGF)Vg)rp,pS3Tb?0qi*kMY/1-\D,njEjSZOFnqlCEX&f$=i9=FDG@N"__R,,9N(MP^^X])
%F!V*`10JF,h)k'!E9boem6'PI<tOC9[`S5CQSSheG"YsJR1)\SUsDj4Jt>s<imiA%QK@qJDt*u[='@&R])`*U^Vh3!dka58YsP7N
%e#'i\qXRZ;$r6?7+B:-H'dmUb/Wm&0!'Qk#5)kg#K<-#.i+e:IH_!BqbmNrW>If@8lCpnH.nHeFN8_9u'\OZOCn7,#oq^$&2nS7C
%gfhPHR.om1D$Knp/*=!ron[.bXcB2.8K3(UkK@)CP]#P^,b"k4]L%`&VE4h5=ki7G^*%h>?(XV8OIk#!noh3+>;Phf?P'h@(2;hN
%\_#T'>,QBF=XGr)>Ma;dQ2Z;GgYcDHOj/Q9i1TG"b9N#OYK18dY\P+i704^4*TpbpDuIo;bAXVd('CJp^cp3>$oN6c&cnS&hMl"q
%s2pp+n53q%^o/j>k7YCBhY^k\H5+0nlC\-"noEm:T&ZFH"5Fd5HDb>)f?O[F;P[3D!Z2';m#Z8)#p?>]gCeomS9L9"!c)o[aDs8&
%&Yda'dpgiF[XV(Rb@9o'H[l#I$j$-0'u)bP>q':Y3@G#oN&OTnFSWlmKk,\K)GJ;uig\&R3a]RRf2e:X^%>]SX=4#l=\058GP[(4
%B4G1-r<#+59E4Rad[)mS?DH>XT'nB`Sc1>U5"5#[Vgh+]>E,5,2$[JBdm*8Crd[Hc;8YHZBseuWO%k0f<GZj,5M@6FA[@[$JKp.U
%UaNSLJ9F"Q")+O,IfRNRoFJQK8IM?dO6r+S7bVT)!A'<'GMBkpX7YMu?7Jsm9WQm6Vkeeb=]lOld*aoPA#c"88-h)BOIF2]O!f(a
%][[`->W4[JeEU*!+#^I8aVpl\_`d6+UhR(AIIW>=YOi&V4,FlX#gQs\CZLgY#b]jBs-S[T;Th<u'&eRN2rn2F^N!0P^*L`;RR7YT
%NhGV4%kNNqJRY6`&9WXejq5NK*q@C/9_dXGEXd08@>P)L`9\+0aB(&;'%-g\!'LK&)!3!'(rSKBNa4#cLb"X]<!I\D"0j2*&cOl0
%[ok9)WlOh4KFh$KGgCtj"op-I+OR*r_3WCQK-A!#BX*ceetKh`CB0AF-/@itE_/$"hnn*-dGO?1o?)f._j4h0GZWG]TZLE&0Rp.q
%j^,SGBhBN-.aL.e*!K4W>S+O:XS@r(K]iLI-X)oLnuU-'[lVf3`;M;f&Bt3d*@bHT8V_tk_hTK\6qfp^,)F\eZU+&FreP18/I1K>
%&jjgP_uOcF+k`RE"#i_"j!5WZmFJhu"rY@]esEjm1[icK5ES5gPL*`6E&\^:b5tr@8dJk32lQIjq(j2T=f!cip>_7$.G-hH6-Ns:
%fio9,;d'L=^-"S*>@t)2BBVMF9F&8_q=7RYFp_[X91F^c/@5FRNjXtc+t/=T3?]@Y?Qr0[s/aWjd-P$L.hLR`a(TYFaA7Ep@a:F4
%p7])ULrUWqbaac-[Jm"A,#`hnCGp#-O&P$mH][f;ipKHL!N=%[_GS]]'`Vo]#\:,d"f?="A'$#ldKmdSRT;QeF;5*@I/e,]BN:R@
%f]*AK.7,ZR+6+>IQhVe/4Z^4dXn9!/!`:f;EJRJu?uBZmM(<u`DEXK,(-'6F.q$jf&Xjm.H*q9g!f7dYPNaNnANPs+UFEFB=d.#M
%Lq[]@9P46MF*KBG<(N@Tddu;\\&%m!rkNBfH3:b]LP!.&cIlq1@RU>D6&Q0D[Fr1+:D'1Ke2kLr\;lsS"hDS;g#].5,_)`5$l6l5
%IS2&D;=LSPosgN[-E&F'KMP7_9KP`[hdhY+XYTG"'T;EB04>t;7rRA-.Rf,LWq\ir,,$OG-iat^f0+OHB5TS7R8b%&8alU!$pNHd
%4d,aV#6K*tC%9k0qj9MU!'&-nN]7Sr@+d+_giu?'ebSK7gU9M3VHq&(LTN]h,]fi&!%C!emheopI1)\%PcNrKb*TTjG1kmZX[F6F
%n.[_tVPLAUVl`+2#cG.8*G^_+1lF^khc9LtRSAK:-rb,hlDiO#c^?+7Wi=YcR`21$C8mXRMJ^G%n8e2tesEl#Fr@8B+umYebLeo&
%<N>.spIYlIE3>/5/B/a]:rlB+UsbSg4,+W].n]cSgB2=c7jK^DQtVA^LJM&I0-u'^RX8"6R>BJ+fD>&]a"i:Sd>.oG1&&aq,,)%d
%k2(Ai6U=5d4cmX%8j'0I#II]J/9O3.'Qh:M"%tSJ$Z,Ru,NB[L3f7SdWM&g$h.ut+qgZ]%);_dm,"[`8hG/5S\G7_/<#T&sE`#Mf
%-EDf<G!6ge7nFkhdP0H)#>Yud&Ni/u]Wu]rh%*d:ZJgs>'F@!kjEr'O]8Ko&dCQZkm:1?;L--3.0G%\n1clb:)-CHbP(]JTaq[cD
%$VZ'`jkEERCpE6BN1f!P(fI]Hg<Zl'Ig="Y)_33qo^Cfhj5Q15@:E8RK-c>eW;F--B[g7"@?EXQN0\g]01YUe9)`8jcKS$':ET:L
%h^Sp5I,u'<B(!^0C%_88;q<>KG#.W>hCAI9)'>*;`tF5i>T"X1XHClAQ.6E8#kM8p<Q/*'WK#XXT[^;OImgo8&A\R7W-7L>hb"o0
%O+KO/-,a_:[k..$SArliI<iH6/8=[V=0$Jt1Po;G9P:LA>J'#Qm1paU![H/5^T[1h/V]q=@8TJu;r=,\BhIBY_f[f!Wpi*YWH-f9
%[Z'>]1bZdaG-CQ"br.tK>C1(,@;TSJg`fsm=?\r\/HI_J0_X14"t.<p>(8fL2`1fmVNuh\q;HmC@9NanR?*;$QgqH;$Z]Rl[J$]Q
%htZFH,psd@c2$C_q/I_qafMUO(k%Vlk4q<kPTf2Rinfjr_P(SDP'jF]+1Sa+M68o<_$j]TL<%L&oV[-AKmC-gr;jcdq']^73rQn<
%.^GYJ:4LXcSeb5XlL=6oZ>a"grpWUt:8"2=pF##f>Bbc^9V0apMkZ'Fmeum,3;bKrT%!!^ng;1kk/2]%jko(%P@dE+p^qg1o2LQ1
%I:]nD/,b[<IffZ@nS<f@g*'W&SflD\+k,&C?#JmM86W@O6Y50]$d<,?DR*Cd^EHeU=f)-rWtE$OIsJ*lRVBs(j2a;*9W3f'+Oa'i
%+jb_?hDL)f(DIt8->]j_B9iHhX^3&qC\q,6p)9=cs%9>?nfnJbWe@cTI^F3=G+JO:qQ/1:^=W5@N?-c9f/'jHgP>-3:5=9(PY[SR
%+8te23c_Bu+7W#SADX>6H(4,e7`5LOH>7PmrK"(;,R_s%e'X6F35Z4bf?oX9(=<cOl[3uYl]COm"9I$;3r5<\S&tWiU]9j1lZ$$B
%D5j;F[IA%hC]+;$p*&6e3O$s"\DCg`IX'js7r*mA%;E;4rb6^QS^m-,Y1DM*dGLi%18l(<8p1)0Hpf":"=pND>h5i%9LHsVXB8Fq
%U!qn[Nn\LpP2D<j<se/4"q3tjKpO].%i3^SGq*TjgP4o&H?7Sko:AW]W3eJko$@E>h",;aX!%0c(4A,%69>e\ji]mK\*,E;Cf$`o
%#lN(!X!&YU!%iNhhL@afft)`n6tQoq4oia<]439Ya*H96s.a-OcHq?,%(0\=DteM+$6IN.e[-V/>:Q%O"S$o<eW/ipB6p:6D=sYo
%.HUgmob`QA,4DqjqoWCOA,oFbHJ``\@nGJLAh]6mqsd4-fnk!f$j'Q7qd/UMIEXgJX*rgXGb50&+6+kp)8'm/+&?Gl4<CW8Eg@")
%^"1C(XJl8FJ"+YSH!XM/.3%o(?O>N*S_g*PHBrUG=X)Mm>4XpSZ6,PB`<Wm0\QcWCZj2SkM]>l?K,[>'O`m\h-k5NiV=hEG)Xd9i
%1CP=JMXl@"SI@Qmm3QAZ8m:Pu*K_XK)VFdVT=bXFJc5NGFc1hqT3aHRK]'JOm1I4L=8DAZ[F,[spG2^LrlrJEDN(]-?#Nou^Rf@P
%/g:"4"D3M#o.!oflF/C6$('rqUX#[NiU'1(,c$FoUYbdeM=7`6*1i4?*5t(0RV0l*KU:fhS`Uc4PKWUi1Y2aLW`HMiPal1b+j&g7
%)X5XUO!`a\p5XZN9.eN!?W7p*g4KAYR3eALlb.5/j5,U%1F;BA[5!"EI)([F+'>%g"Y#^5"($a=-nKt*V>oARh'NS&#35qt=dP8L
%W7,4a7%<,=P,1UE]sSgtDBRZ)=nfnG+Ppk3l-OVu+pH&(c@SkAO^]#!=)G`MM?l)EPAS]F3S68AR_j3)0K4"NDf1V\+O`tZ3poM<
%NA@8)>%r'@D-i?ndodY)olY$F*pn,Y]+,(Gae.Im"";-NH_(22\b>@-7Zh:0nd/d^,*R5@ONEqKU]ud@/:7)S`@`eQeYr<cRU#SZ
%56bVSNLAWV&<=)0L28&)jX;X['2S=Z0cq\cN!G"k^K5`,S^ipn=UO^\DmjV?BFt=r1Kj@L=,u2Nfi/NPE4^EsBt\C[1pNHS+KpuB
%/c[#Y'+j5hWs>l"]jcrJXZk#b"`BUVlYI<@hU@5t=,LO<c`+-,/Q`t9]od,YL._5#K.)%DCYflNN"q\(iGho@-"o_<WBtF$B)U4P
%!np$rX#CdVinS=_]akhoMW43<p:!Z2cc^j9QkF&G]PDNdbcS`hI!#A1BP"I,4=98gY(pjBcB<%69A$"$iHGY927LH/B`UCE^*0q3
%J6?*tK"/@_97U0#;8BhC#X#J6mgaObQinjp[&N55/o.OIYf-0Q(Qq,tW1jaTc=3=G`ssQ&[VZoM',6A7@7(<3,@mN1./PFY@Gu!i
%<SLsmAO\-g\DpD!R,#$Nq]30rV6-P%";1^+7NTu36FcGAm-Y+r__;A+4)X4\@07SM#8;P.l^m0_cRO?#S<S'SaG3+Zf#)KiW=);j
%BSs?aGS(R(a+euLU8\1WC=VtDKMjt4oAtrIa2%t2o$bg:"kn3'Ok*PE8<7h55:aL9@j9e!D$pX=q^R(\MoF)NOTI;NKi:gFgNG(<
%:Q9PT0/?D*dBFWL`:[Y0gadeuZO`sUD>R:(2mT0'8ms76mV23lj$O%(((N&Sltt-mITGX4>CD7/I7&B8rcd-[7@:TIGHi7[o54;d
%,K,:71HYj\Qk6)iC41B>6e]-qG.r^@E3af@#+>U>YM_'2hB+p-eq<l,hE#jTLhE"PJ7^;lF<aLkQj[>8B^D)F^[8:"2TRDp@4oJR
%d"2BpY;#_F>5qKVoRB<l6HA^dT/Z^c,"HEgpGHsrOqlhQ7&#M6\->Nak5I^!]^5-IRI-k57]ahU;H!lL/-W_Y[Sc'U-S'25,1lnN
%>ljk-X5Do1.Mh#hE;%Yr\$j!Yk"RAq;-#-c0Z6Thk89$E2/bP\QMd[%7(!d?hiHV5TW9sK/]Pm#Vt0oP@WJsGF8:Be"l!&lOhLK<
%O01tomIdp</YN,fYU;4'qoes"2L*QSW-XI3T-Ib27kkXu^R_/$>S*qDVXjC$dD;X+B,\,$/7IF``2CnTRCp9u%GRoea2j_-q*_B<
%^#Z$a;=-1G'$fKL5ZW6;'O#T1(->W3cYdeQGZ:ER2Fq,VfbcTXGaT2@D_:qM]>QIP+Fa%?`L8XH;RtBE-u26]5]#g9<\>=_LibfK
%")"6O.(2@(1";82_0WT(>VKHd7)!<YKEF$'Etm3t+&Y,n.3otlI?BiOjP?^'5;Z4ZQ$CE@EFs1nJOsN!Q7U;QZ[=aR.4PrbaN?4:
%&B1Q1[.Y'YStB7u)#:>hHoKSK\]mM\g5-Lr@OespcJ:*.-lIn-k$_Jcbii?uf9!M+Hggr*Djd]EolaoF>Lrq7S>g&%MU+R5cI=_>
%i^DB2QTUj%ee5aE<,`"AKOo%m>B\T,Y&h74dp0$:LF"$R;QZS6loBIe8`!pSSsNl"`5A:Q[hdcP"';KW36k<iktAS9lHqGT4$f5j
%$'T?<R,gCQ-oYNu!tL:]djY;eVD+D*i['YGL@4a.q`!VP>?lXpregErkpp\i^).lCMS4tQ_3M%gP-7#9(3]L)m'LZJ?I/#VInRk=
%Vu/7SQs3pEmXrMM0O*)3<QE<R*41'8i*=H5]>/Zg?5%4W7LfB4o_tG)M78%Ck3(oMc1;BXkkN6EUS:i5R@/J(fm;'"_-,dWdF@Cp
%koatrA0'SU)$+e<K#96Ik.&_J0*7:0X3*.s#28BA7h+qa<f_.[Amb:j-3JOS(g>^s=$O9G^r#nAXa1/LH!s3I]kO[\1KEXH>;)Ju
%H"Om1IZuc5s*UqSm,%OU]g(-8*)jBAn,dU76uA[mXKFaXBj/iqr:$I6hActIp/q:DQ_AuT?:$3E08@^Lr4E1ts-gJi>\SdDk@Jk\
%a[u5*(2OHU4C@75fK%Esr2`=hYml,k/Wub7&0IOP/XFgi""RUFVTn=t76(T\A!D#\g^CEqeR:!H7kZ')KRD6GAOB8PXD`tVoI+J]
%2V$-9)W4UL?WY'Mo5O,CFK8!cCLQ%GoQ:gbWsRVe9,o,,W0i%M0`hEnci)8qLVfbgMg9M.COK0c5b?N0\aWm%(,(`G#?n<+%3m\_
%5csVWepqG:rP(R6e!_mO.Kh`.e><%t/L-e#UP7_F^@fp`5@V*A9A0^:)JOj?SB:-DXE`Tq'uQQ^S5P;?QuSj.`uH+s$+C';G-SCK
%>hg(cop@h]\s$%6UF<5cX7OD:qg.KJ5f<i.WL<;T(]1q$EJV/LRaRhs`pXd3ATW;Lgd&W3_'LoD_i@W,;Z_r">1f^jjHn$iU3#s7
%2EN*;I>6om'P(=J]Ct4VdD_Y^/NKTg``N&lWdUWf9;,(bPX(UdhnEC*%<HB"147\ThgXCY]2u&2dFER^hXkh`3<iR47#QD(jOjuo
%.u[N\B`lUlrGio_&=jPbm93;gS`'V)HAJ`dl<U[p36Qd499qDPWN_E$8+fuW'2.1dCDidMGL^`=<.Umq`#;"ulH,RQPgWg?j/Wck
%HeDY.```&F?JS\tm?_+[(:ODTSE'9V353(B^HR6;_XY:0aY"u,'FY+I8bc1L3BEE+-YILj;i8E[2%^7=,gQr)_GZH3ZVL:4k:j!C
%&FN9f3=Gg?d'85)0?@Jl0%!+K2f@20f+&!a8)NK&WlZ,T8DaIoRf\=je@JXjRbO$(X3bHhdes$U$#/01r"Q1,FOKsigDKcP:ATFq
%RO`H_D^-("^1/%)9HG$]#[l\k<;Q4X2PbJOjhg]eprdYSkabBfbH@%!QEoFB2"0qrR!4NJMMnt>EcC6h`;;mK`g=LBW(&STlf[GJ
%E9j0ulk*K]Q=9(Z7!%7rZagK-=sP/L9P1=k"E0o_X]'1-2-(fJ=a/aPNr&A=-D]snS7\^]\^p5!M!e76>k9S[fIP.IJZqo*OmPN3
%gc'dAbf-$e>"p6\K,o.Km7F#o[JlB&$>B(+'ibK&iO`dQ2]ER9@:#[BZiu'8LlY_0f%&iJeN-u+"3S,\lgk4DeI?ACe!`cs:Vd3/
%7-BcjM^LK1FSl9M24j2&*<W?Bi;:pQGq\Fm,oronbBUBX!OTrGXB+HuT[Na;mc^-OE$*%&!oBpZQR`&YXaqL2]!q\Q7Z3AGgjo\5
%:)^t.5Bo<KoSIQd5t:>XC!X1"QN2/KVFA`6W7n"?\O>qmd_QB9!XY/;V&OD3g;f?)UtB6n35o&i7'lGkZ08X+KIK)9^`:]cJsN$5
%fH5'L>l&ss0"f9ocC-+)Fe':[Vf#)63==?K?d0d".oe$9..^lgk'-du3sb^>!US1G!$M5r6oTc"&CI3n]/)GW9.k077jc8k`;grr
%'4cQ`eb\RtK%8i_4;I!hqGK1rd9c9uIk9TLk*O;-o[%T;jO1kLET5`dcBl"d'1oYQ(2M?1*Xdj/1pfK<0_^r\Z_lrsQ\G`0:f[kR
%hV,+.qd$<gU>8uXJb<*VG:&V<ljrE6UYX-]I=02a"\5mpqTt8hhbPa#!R5e"%q0FP[ne@F@**;Tg1Tj&a'N_*8Lt86%Z,g`rUQc,
%QacceCf+N1!dNc%,+m+4b!P+;l/_#_N5Q3>\VoJS8$V"<pI\fKlqM[B3D3P=PkJnT4P>UKGB`0cRJ)i?"Q=^KEH;(Yk/b6a+4+a9
%"+YB#haXpgNVcbUXq9%QOjQZ9PtSpWperJcghQeik:$!i9i'5/0CSBrOG`jEnG6\X:8R!d5[0cndZMsC#5L(A*'-4t1Rt#\o?E=/
%#o"2mUSQhd92c%QP)5nB9rEYb2Al9_+>J%5n$o>@`D&sJb^i(5/fG^7&e[IoF8.!]7jZm\;)VWOSYB7LmQ+:>LlqoCFQpqE6<]Z8
%$:'!84ILQbrIUeO'P>*B/be?Sru&rP1SVh09:OJr&.M%2&HK%48`6DU]2S<`XlVMkA:J10h.utQF8skcJo!YAQWM.6dVK*IiQ[cU
%^r0iW!Wl:6I6"=\;PjYtT/0mC[D'6*M`J\;QV`4dNi6[2he=r3R_Aa')JqN(20oX#?osPuFKb</N>D+D>Wh+T6)-jo$Ps>q2Ruuo
%ahbD^3Rq6bSdpg0_\Uq=elOeW[9s&d"jGRpZWh#rGQk,#dc(8trmL/epcuCQB&@?OFgE=+7AaDGL=gE=ma`r"rn)jl"X,=gB=_`9
%Ms1t-T9>3'I@[QY1\UBun)NMA.V?i$1r->f!\U932H^9+'J$`7>IN[qe)49ilPo61NdT<P+4]RLR2\lu=?782ZQCq*dV)8V@0rOL
%S\8,$dT6AoZf?r%'hYi;j=+&%.5P?E87?f3JVl`)@C,)!o@&<W=p9p"?q$-n9+0<;ikP'U;j[f@ljK&C=rE6"<[`+=GS(jUM$$M5
%8Hc,C=pekq6omKb"&a`NONXM/S,cV7Reb5'd-08e,+rO#K0KVK$Tmrt8mn&b9D*AITFkQAq+u+<5O6^MM9[7=.&Q:DVSc2V-GWnP
%WRGWo-+V&8!dH7p"DAL30>ZT\R+i4nA-k1:JR0j[EEp:1rqW=4#rNc.N'LLY,h:i"P:ii%>L`Fb]P0XgL*@L@G5fe2#_uT:SEj)0
%HIa1cN]r=HDdA5sO#])gM+qE8j`]k2rWOK#jI^S.4(i1+\nh`j0;Us?jsie+>X';Qla]p1QSTMSF.A<1gnUL^91MrObF=O/XAfha
%)-eNG`,!ka\\<YM7fNC!Q5n"OQbO"H>32GQ`?2<GX8Z7_r\6[0,2DUMj[*V$%hPjKq;'fh^-41$Prg,`P.E.@ai)=Q;StIa5Pa?M
%W.Y,_;I<.j+UE.^0_MP`-.7h/D[bL644?CN^L,jIW_jom@piCKn`nP8?1R<39UFPbA[sLpSl70?OQq\ZodgJY4U7Dd!'"h[^a=+%
%'IU:^be7QIVn/;`2DR-e.X&9]Fm1*@5,uQNp!9lc]M324ld9k$UN8ihca=mu9-'9sn]KUEf,`a/q+^O*.)(q98B^^RGuKW-3Z@9g
%NU`R/q8&>1>91DR9>mt0ktre\3U3$a]N&EIX)I"+Hlos#GL,)H;omkLXQ,V2'Cf$7?m`&_T?eX@>9.%j*'!I"L-Ah$;k6J"IMpS^
%OqF4OO0/NYU=K6g@>:`o<'Oa,\W(YSh!h_pn"6Q?#KXO61tV.Y5h`!,qf1SL0>`%@9^C*m*0M.=MKTr[EAq2k>3C0miuCs4#U3)#
%0;bfL4;pLt<Zlh:=1tN!=bDe]5%UQ5W53S:@ld,YXo`'ql_`]Z3pN(?[lu$p[M,OE-DcMTS(,1.IuKooX7E3`@<G7>odJ*l/ouh_
%l^.kfa>!R6%-kVT5)QC<pWrl**/HW=J#!*L6\WL.?T63"2R)B04G8W;$)Cu=]*KkD][SA$l_*7NmfLCORE^'J(oku7q:%S=lY/m0
%?%:^pVGKG37m6q-j-b4-H5T,!&%C#5.oZ*'aeMNPi0;$nE\^71laOeFf-IIRM)`?G2IQDZ7sJ!2\=C9<h!)k0f]Q+<5b)Q'M!ot&
%"'7KE'7`6rq?:r80Bg6,.X?M=m`2[\\[`M<aZ1Ibqf#Cp<`Gn$lnWZ#I>PG;VsKR=0[q*_pZ2&*P5EY".P#oHA6JeB^%]Rr#50bt
%/kH`7OX@UK8!*YZ"C@"a!Aeak-:$s*Q!H[nC9>s)U7L=&EJtbqNP0'uo$>hNL(o>WV6eZPQUdmMi1Kb4^.LYt8R)MsR$2S_ll:.`
%b%d.P7Vu)q&E1.le#P_pQct<H;`7#9G;o?<*uTVD)N[DC\tT'qALE/uiE-:,Mkf9KE\0CcAS9ViJpQ`'!sI.(WF.0RFO+/"']d'G
%1HpjAo+m`k]-`f57V#?sHo;h4po\*Yb*V$,ft'!#/k170b=JNJn(8r=Z/=:4k,]@@s6eBP.T<B)P5?*p$-U*SaZ^`0X!&ZdRoMZ*
%1ur,kl&p'OP5fPR0p(f0/1hUV2n`%bTcmp)dHYeuLK>L[W3Gu@*6>DkGAo)fU(>`.WJJT>pG;bQ?35M#*aYfJ1\:D:*$%g9,TH\]
%VG;NL64-0ML$f@do])HGpF?F(0["J^P&jRQhj3;L,W5/X>^Pa6O08;3bCt>W31'pP'N<>;l=&PL8"Y3n^@n1+"6k_Ni,S6*7.TbT
%h/)8_#6.WRneo0r@orSl3@5"McB"r@:f0%]+-eH)7K2XZ5uGJ/KP86tJQhT2\2]+QU54UBlB\kD)i/E0buWYL4S`+HmIZSf;.6"9
%MGPD@?^4*27?pi-C0p,3@JpbnW3.8P!GGLOY[gh*W>dm\U_.*D/2U\LBsg\"$Nt<1T"h@qJ`,=2?@JPZCug(C?cXjST5EK6(OKm,
%%\%moB0Rj=8bL&k7rPR\=Bc>$o41D@]=eaWc!=NcmaKM,^o[bhkDpO)M7/:XS2ie34A2(&fupB5(;#t^,L5.Og=-jY4qOTB\mcQ`
%WG)\%4=XBnPg0e5f7#>@eG&#mBu)9YJ:;g2fA>91SLks9CpIN%S?^>jS6qI@;X`X8a._k?[0ba*WEO8nn^N2VGkZ+/h.\$'KY'o%
%!&FZX4fdU?K:G@.[$s[%*F-heBLU5=lt(lYXjiqj]lXF>AOLQH*daZt`Je2$FO/SfEYP`qqf&u1[I3o<RHjdWT5VY0KqpeiMNK7J
%DG1)H;,YPiiF2&^:6Y>X4*_etZ?g^]<>\fn95A>cn1s-bMeiK.O$g.E&X71l^6TNDj&a]![D.LiE"MbqOI-^GG?FTtNW-s!A`[g*
%aT42o\Go1'1o.BZ@8Gi2P#=Q@F>l/Bj8^^[8EkjVMl4k5rL3D3X+Y7W[$`'2>PJ(KE-0i3pZG8U"#0s1&NkhhS+ogbp8'gZYN=4W
%]Pcl&G_[+:Kg)*XqJ$-AY47[eHd">g&b!GAdPfo?Ze"XnBPgKOAI"h6#"\"Q!G"TrrKBi\hWuQbcTon@:r7g1b[e'm8gOVgdJG'b
%d-q:=h'H$Z/TDr:nQtOBBXa9.N6Ym>"o_3EA6gIT_KK-qG+0tnT']QnpHB54m^<%EFrso95j_^^QrL;CnmG8bQ;Vf6qmmQ0*M!;g
%ZI68.&1)Y+o]=?SU*[QLOtq8@L;X/dO%UFZWjl\5T,nfP_U@DCXn`+O'ds`eebSc:LStc)gII)hn.MM0&f1=X*p&%B)15"e%NV53
%eJ:1na5gRk%qt\'[S0',#0jTL3;a67jCX=m#bP!=2I*t"PD#--gNc]_^H.bM?_9iD6"asr\%1W$*?@M2fRBEu9S6YCP"Bk,Vpj@b
%=!Kn@FJdtc\3!f[)rRl)L2id8(RA7Yr4XT*!P_>rBQh*F/IY)%\Y>Q=5,;=Il<I5+gqPY3kIEc,TCAF]*L!O^H-LIX+PQ%WQbg25
%,=n\%fD>=*2UJ5_YMDYeY!bRtN-FQ>*j$^!h9%9rbqO#.l@I3[d)p]Sff#p:YT`,Ub-G=e%-O,Be!V:fT:`0XQd=!^5_:5?3d_$X
%d\FQ,5l#ZP,\5VHdolhTjVPmMR<C1s!U6m:B)j5R5c!V/LCR.j<#2!?UWeTI6/tRH*tMD`4%Mh!47DIs7M-A0[;*pS2HNA`pKs$g
%d$,V"(%D0#l0]>/Xh1!P,Of#gf@!?LYj0'=jhZ=#8Y])+q_d8dH`qmEY5Z.,c"9N$^YJe2j/gHMhX\mm$D'(FW_(^YK_a5md<lef
%1tjliqg.*#DsX2oqu>As\"60sloOK]JGp)P6@aA)*@EK&@R#ul)PBrZCdEY%(rfrgCeun$)VIKikkb%6FZU2cRDZ5Ob->-#0u2!l
%;4/<2F4kp-[F^k\7sGo##'m:p[B'_B]TL7TG:RlnDa/+[BkU5(^'7bu,>@$H;f^K(J^^Y@ali^kkpNMBI5TgBUEefuA3@9mp5:6W
%WQeeGn\bZUFPA^IjO`t8e6'?]]YVMs;/T&KF$IG":Cl.<a1jgIT>16Wj0sO0qnN1+]<=Hti@k2I#QFRtJ+sPhkFlt52tAF,G5Zrc
%cFNqGs0I)4E:DofqSR7NHs-KgLQ?pA3VorYmU(G@[t";4Ie^*2r:t:2mqqmfq;MA9_k6tZhj3B5kGQXUq0#!8m<c$0P.o,uI%qf8
%Pk-g!idUU[IAIu,ls[t^,nOF_2$nOQg1cX[<@Nc\Qu1Y1?j0*(;\B]13=IuHHK^>`o$k6J3<I88$4Ssaifh**-4.A0*VS0[g2j,N
%OSrCbI#\!ENnfW77^ogMkG!`(%28l?o8,5@h/T02Is6]/n&m%<=^o_T11nF;]4;MM.?245\^'1epSaR*W).=:%P$h\O<icM%E-Ce
%X_,2<`Qc2Ffe!cWP!aktn@CP!itKkm2fq%GdVi[JhRTGTm7fWtB21m9*'j)>a/Xsir&WO9cfGFfB-[]nV%(S%(3B+PUW2pLGtRLZ
%r&XIs=+0^#kL-g'U\c\BdnB->=M`t"Z^-`WT6jeo@;/gg-f%6@5"=6j;VJ]Z0Xt-j-LfccB(4BT;Sos\SZgb>go3u(*Eoq.NN-d.
%1RL-h.UH_roP>b-7QR=#,\lc/?p?r'oR%d1CNOna/??GL.KSPp(XW_g#Tj*jQ%Q;$60HkG;1V?B'k'$E1je()D&YGG&3FQ/^]_As
%[NI^!]V]"@Q#5;7V$($JFh#o>>_e,Oo#hRs=?-U_cVacLo@"ePq)FBd<0P<V:pYZ4f296ESU^6.Nu2]0\obl[N=/(qB)4PhnAS`^
%\+h0YTC]4&QBJ&$P5lqh":0Km+Aq$HP6`KOaI%3J+FI%JZn6@?SkI%GE9m\0B(l\0)u5]\SR(h/_/3Tm%l06%`WFlI47<;udg*:1
%=gI,?WIco_PU^^Pc']Y8"Y$Bt:t_W2)R2C]b/-GahADX<5P!!Ric:86"]VlGNn?hd@e548(?T>(P%4b_!kJ0n[d`>H=e+I><C4gk
%&g\$51fc.&>rlP<n5M&3e:uh'Sf/bkf>p*^<*<;I:!O)o*K9l!NEEJ#7nmE`#8SbaV,iaV;8^Ee`-K@@UC3\]VN"Qa0kJ\[ioG)[
%^na%*q*S^_G4kjuDq@FjT>N;>OOu]@B--A;976Ch`H"0"2e6b12_13'c_i>m>2:JSB7>d%)R1@\/iE^UY%uoX"[JK\j>hK[c!5oo
%ZZ/N:F'RW7Xi^4jG#&knB$hJlI8R7p?_V`SnlMsmG/O$MYm-f%B\d+H@An3,kYj)F.]6HXE/ABje3H57Df2Pc+jLS-B':&)15.&>
%*n,Rq4aat#kc+8NZ-S\]>b$l<(<#5!VXnchHgIY5?AmCsLQ6r-H5IIW?#q4`KgsGZZ.2I+g8JDDe:#$4E+(s9H<G>#9Ak0(\fLu:
%cWST*K!rdq=]S&dkQY7T64%&L3F&p\Nif_ZHrB:hn,i5,Nf@hbAgFZNRG9NLidrVSh)&;\=Bg._J#)(:nZ9YeXW[e[eSO'"_i?Xa
%Q1GQFpq.r<"LRh'',+^W8e-^jG4kZo6b$m7fXl<:I_16M8TF4T<B^2gC^SefKFKp'?#ni1*q52o6?0dbhP*G%mqBFs)9).8H!/n%
%:U^IN[*dr$c9aD1=X^?<g_Hdtg.^_cYrZt#a.O`md^cb7i&a%)4.UH%qq$+qjB-FAfiGWaIXE3WIXDC2g-JI0`SMtY*E111?4YrC
%q<,:VT.(U$F<ns1)1;MgJU^"(ejD@P&f'i8RWKEYA"]&Se<VgX_.lHh"J87D7L#cM#LS.fHp.#Nq5dPL_Er4%St_S#AjDA'-3\e$
%'@d)617a#gh<[.n$!)PE8:/Q)3iHm&8$FXdKgetq'a,TN[WaM:k-%[dBfCH-HR76HXX,Oc*Em/;LCuoH*d\8UQu\O6g/6<:M9)hL
%O9.mnKlNb;CZF._ZJg']Ejr!(?\uHF4u0b<P@Gb#4'3`48%)^`MD?!=D7)d1[9M4E^.\_Cg:U;)`^P;a0S;NF^cQ;=$K[TAWR7[!
%`4o-J;V4i76.Z='AW=O$]Ft9MPd(Q0=+#ai9(<dW)@8"#5&+4D.OWCAMB+8G-o_:`/eMXdl69b72M7PolPEDY"U.`d>e/pi0*`U&
%Sp'/dD:Imtk'$//?G(P$CJcY-pPo5='iOIm$O8M6H)AkA+ORX1*8V/:59+2'0kD1-1X7k)(DE0#WKV7L6Qi=2f,P*JK7`Ah7!b/<
%%WW'`:9I-(SO#QqlWQj_MtMt^$)PqTO^X.;F4sdubL!J*[6HLCg7?8f`'$)m((Mu#BQSDh7\JZEiLp?](8cs6Bs!Lk`;&Php!,F$
%EtCK@N90!*Vu<mH.?+%fcN?2oETm?_L/n530e]R5EsgQ0Up-Rg"r;ICae537BJWhuK'esF:DUaL04(7MP=s)iJn\C!cag?>!i35"
%.3iFDN>)rNH3"$nW.GD_)D)83h=?"`2OkNtUtUc;6-pQ@F8igCg`HG7>5I_K1kktn=#gD;<(@ZFI99oq(U0fikDN>ZJG`_V/4:/>
%/bb*`@o@).73;\"A$*H30>/^8dH?9bQ?J87,/JZr_UlI7kf[0_'4\3c>.55`e(@*G.5HCue]Q$L_DrSO%+J#@r*tM8_YB3*s.1nF
%fe^7gYuiH7@^7I)#3sT_EI:l#(d$+J7,l?=nP1"?/o1X67egiSLZ'(i)1DC$g4M7CHP=ItN3PjRD6R@b]L"*t1/Cd>:oXgYM<PnP
%l!BMWBXj^E_(;!l$d%%G=Haj*lLWbf&)374ON.X$i#(-`5Pj]-YkCSl^2ad9-$^i:3kQs<L]<*Q2T4WJ8$Oab5"7D6X^'NrZ.kg2
%$?P>cA7HU;("BDm>g'8=f_qDgUZ@DSp.[fmDJ-q*F#s\k&+1W$7/"fbhNWpNI9e4dEF`F0HV:>5:)*$S)!BD0hgcJm#adAr1rQ(5
%U9.ark@*I:C\-?6MW$Ad7hjc,IT.t2o1H0,/I;Ecq3pQVbai44Q5f/FJ@AfK)1Y+W)%QNuXiXVtKPYWQ>4h>)\>X(b)?r`pgmS1@
%ZMkunn<S.XAt$S]Kh$;uk)E",pRW\5m"Ss]E37Dh@Fq?]fHT!5hE/pE)QdR_XfNceq!^!P['Y`3j0lADiC5fI)MiJA3ec67!.gnK
%O]+-CV6<rj)dH/q8=!XnKJ9f51#M&bD=3V=f8J7W(27P*>;[/lP+!sLoZ@<HYP3r^]V8j=(P[r[$aBp&!SS!eS-WOlW_7I;74$4R
%/p8?^*Bj!2FE0C<?n"c]?c6Hqf/5jMYfl585KP:6'KFLu\S<aMBi]jK5Pj]'kA](^;`Ks`#eG^J#MR>_3]5]PD:?sm&MD3.%d;7e
%QU?':fP1PPZ=+"UFojG\'f`;;2YJd-_Iu4Of"lcP;^u<hTV,eT*7)ON>f!\1BZE7/n+b9g046cm;1qS!C7T#P]!aW3n[Y5m/9<F-
%:jSu/M:C[uM*+c=faVD"c<GI%@>AnM,f![$58nFe>Jg#Q-I.8!aa$ii%8[3se#7"r/0?`n6oncG+/n#idVai2->[SCGG\H";^`W$
%i::FE>W."Y[51A6NT*T=gIp'!Z,&_BTH@Kl'5o9mm.??H$3aPq@+^G/LVAe!6DNu$D`bou7YS$%M^Fp,OFb*'J5:QR;44jp*)!E-
%PNZ4ghaQh(4URgF`?Ir@K\#+f15?JL8'7g(Rp]WXA7U.[H;s1tW!6W+IJlK]Xf*,P.QA9Oe.W=7)m3mG*6-.6k31EFA*2qP3`FLD
%k":J?K5!-%GmQHJW<&026`AB/3]*X:YfXI9MIEcNish`P1G]$@UVR91"eTah%YVQUA,,c4j$tiY>CKOj(p^;-4edZ.7\iq:2VE1,
%JeF>B@pGq#8C<^PHJ1q.M$&_.Coa_okj'Hd&2:](VuK,:$RuNh..OL0<hP#h2d@M*PCL(/:]n8OT55uA2K#*T5KF/(r+C!nct=(&
%q9MC[*5W*s>j4$h_m,ZD*FPBq,91n('S9)W:MdP+(rSt=&spd#M6F8;=hRVo6F9bg-SNck@=9D^8GV`>-]Rrllf\rqG$P1e5\JmA
%1%9Ot4YjF/X3iCo2LZ[S:_$5G"PdD)Onp;+Q$mZqp3N/ureki@\N(\Q/1heFNXkef*7Gg[VQ/ok[g,F;KU-l0n+>"Cf)X-d1BTdo
%hXOD`8J4?7b+?L+bbIbB_"9OS5QMb1*1MK[Lgblmqdbr?dXI#iLcp@R^rdCtNGE0>a-rkZ3jK'_Z_^DYHXA>VIjP>1k9D1&I[DVi
%*bZj3NPX6"Hj-5%K5\%kq#r\Jo""K&s"u<$T!p>4IH4htpPn?C28XCDDDC25pa4mp/@1ri_a`Ju/(_N_\)^>^[B2jPX/hWeTI.^V
%Q&[Dd\eM>).<+lt+1i=],_%kaIdo*NN/.,H3I3Z`q.*OOdFkXN==8jZ0o(MM\`E,KK#Yqn[(4ZSa..NW$umo:9e&-c4"AKt-9`Xl
%4m6m':@!"FW9f<I0f0JQEjTpIa"f!irG7A*Y/lf>DZn(bg.RBX`'@a9Mopa"'8:5I):<O)cWaa82n,hR""2].,*ohT4$nn;&2<Y`
%rmAtbARfK*0@ZQd'ffM%Y0Op)Ai`&_gYom(%^T$ur..kg/6059n520l*<8u*k_sHk*VSNGl8;o_+m'pif0%L4/0^BAd"#k6fKQmi
%X=aQ9QC7BUM6/-u=KAruAU`(!*&&<bbVko*Jijio9+*OI:`4*6J\(&_hP6?3<oQBa#Fq0^Vf#Sq;PJ#bm]*$0(W'CANtph$bJ;u0
%p%;Js"u*dLM2nGGoWF0Tr^7_S8EGJndRdrNbcMDFC9m5M<8Qb76u!l>Xm+F2A+&)6]W#M%*51k.Cg1=o`@=>3j08"spButS:s?'U
%D::BHH;s`0`$G1JEZLEmmtp>ZDHqkE2MkSbq[ahC+34dc4:C&LK67j'Qntla=3e2n`b2Q.$[YtW&$c(9W9:]TcO('8Qd(1MV`^`4
%JVG=;*6<P=&HRT&0j;-r1"s6;a[Q3gN>!X1CmAW'U0j_^2h)DH(9(sW">#/^DEI#iV@*_Z(7JC=T`@$A0\!m9lM>mnkW^q,Q>IJ`
%/5l%+H%iJAh'L1?DpQV.-!G=Z$'\UdoH0cfTj*1_T,/h(M],!ddkl$9'V@6(*&n8@`4DtSX=pd&?s&:t?3O>-j)8XQP=ph[mBQX8
%^J56QeV=GMn6#5BLaPLq*V%7%3&L42@(>D]0H0-HcF*ifo\\3:5]S<doet2Cj/Kk7`71?`%m<t14;7B.>h$>@`TR`@q:iXT2+]9Y
%0h-kC%4;k*CBE%CnofT4%$W4%".:6t#[r9^W<q3S+('`kc`.VRY?Vco)r&kdFfcYn':LDo(=HJcX,nOT`Cq?(!gGo8dt+JX50DRs
%I0\#s_Bp3%LOqeNM1Ll/'1&$V!%$sO.R-ieRb@FYg_-8D0l<kn:r/:Uo@6>J0m>tK**>1dkSS<$OtReUb1l.hkhf%l53Y7km8aFD
%KMF#/>8W<LX-h>n(lR1ToH[!4a!TIAXm.6U+^Ed%e(7DO%D*j)p++l+L$@>b9!FL/+ut:\q>hZM<i@8nYY^;CpnQ:m'>!o,gA@1@
%^S]hR)4kITb5CG:WLEdOkHVYY+O#K=)/Yn#5r,o,iSd>GW!\ta@cpV1*["ll,nJ%l'M:4l?]SENp%?:l$4cM4@l<?*HtRdKqL/qI
%:<qN4lF_3u>DNQs>9;n$&"<U1)u\nRj`k<r.d&@HoU99hY^$Z;Y_GIN'o3S_'2K]B;Eqn*Cj,76[=c:lOM-1SE%Xgt+s`'`lH\RA
%K7=*g_+H@3]!I^>pKaWkWZ>Fp(L@eVY;a<lMa:!LL^4:u+siD3X0/OhK:scLep\?TG)pW8^i3!NUpNfTXG&dkK>U"a`;NcN#KJgE
%UWs=@<Pqu*PrOugC[<MJ3P6"KfZ5Y_$gf5t++d"`=/C!51dR6okak1b<,MmW-JC/@<h)]?2F:as:hhQK0P0STeJrY("+SKrg3np4
%(9^CD6la$=)nTP1%p:n$.;JAt6C)(>-G>NISDC6m&sTGOU4C#T+`YdX.:]N!D"["P5*uKI!&3P6p$+!`ff1$6ejtW%koZb[WA%q+
%%j2-D<$2sG^OEe=lt$3Z%V',_ALa`C@5$*h$*9k3==.M)!k5NRNC2/ighu*tC@;-u5TE3,=#W?))4tq!Zn+u!ORZFdC"Po)kRlS)
%gRY_/#]AClo8H#A-3;m,kgDcu`hq3a[I#F&7FRMcC@kfOH7_2lLXOf8pk*Ln\NERmfB(p##knCRgJP7Yb4*l\djA#H!jFUI;?#Xe
%'R214>8gV:6as41J6AZ[a-]m!OL]V0aoS_2"I3#ZH_uW<lqZ!>$*/#BKa,g14hC@i[M5s8DVt9Z(UMSX&tXA$1Wj4EHq^3!F&s$p
%bf,-=6r&6#mj\3)921njh/)!p9md&b++mgHF<oJ<qojS*ZKf"i8JCSIn#9==D3P)B8RF4@<Z6EpB<+YTH4UmW9cGbbE6tbkT>PcL
%%;udBK:Si"HfLo7a5FM2LX>BE7/^DllEcCl4+;N>R`gjPm6SR)ASH%q_BTrClf>&c%V8I?`COI'C-8HWH`CU4%I%Ge_2F/$"11TT
%l[*FUfRRgN^bSgh,iE,Sp=59>;P7>`H?T-STD1u496<UBa^IYnMMd$<O,Raf,!/=PDAO0B1$N(P]C4Wf:dA)Mm]3>;6+1cUY-\RQ
%;C6AfXbF_IJDCRp2cm]YOcoT<RHXe[GCc$H#cLR&O&Y&9?`.!-E[,noY^R@!A\5dtKlr]UW5B/mKKG3r.Yr0>7ac^+BQiA$=KBY9
%D(-L@pK<X7QFmsK\C8P]JXKrTdQ1KjEc3=/l1dHQ$&ud?)e!OWd:YkLAY,k$4h\Bb36JDLUp2LO2(re?-k+g&MKJrqBm8HI+s-2k
%Os9Ds0m9^EO-US6;<3gN!#IF]eU*,"^]DEcXTkI"m5^V*X>2-qCA_X7\sBi;olOf<7nJqONkDcad.Qc`?!B9>rJ31"=qHZJ=#qX"
%&A2W@'<+V#HG.?p%a"%`?H,74:DP`G6qgpDeqofQ8hXK`5763F86OVG7b1,L-Cc7m24R32s(l[!SQ"r]bT"rcMSkuG[/dnE\nC(J
%RU^>J3Wr8LI/rO5>0Xsl^&tTLYr'XEA%<]#3<c?3AkF22&o4Cuc&/5GT`?32=&T_9QjG2tF@C5p@&^9M&eI%'aFRh(><\J$U-oR:
%P=$>=)OAD.oh]b[h.\-j,u&\5=DQ,CWCjb9R(&eEJe-4M;/J;he]iM!@]llu*naG3#@H#?P'ouS(VAG5\s\76G%`('jUVSilD)r5
%W@gs;7+c[)s"sg&T=5Xm/\?S4+!dF7cY\dof'nS/NJWu.;Nc?Q1)N#R<+S4Bj!)r[=Lq8>,R:N;II(ZP,i-%lfdDBSa2okLJ`IBG
%.(LY+p`^k<PIT.<eboli.+D)Kg/4E7@(-c%KuIRhN8Vurf&05d!dTrc]pMms7-AVl(ti"&1-:APhV/#BUrJcjcB>:APkJj@Yc,-+
%S^couED.+rRY3jrO`no*JE,-;U^F/'#lp;COA_(kaPr3L#;jc/$?]gSqs7BO,EqiJULYDFG,q6_EnXNu:^:DB",-*Yqr0DWjf?;;
%T#!H]5&,ucCeA<"euOWC=JABa<UDe'$/trVI@%V<6h!Ps="i]DBWl(#bQah([$e"0g]4o&(;I<`"VpoFnQ/RO-n=Og'N'aI:.>fV
%_ZWM!'sl3h*hdnt?miKTjiH&G7hnfhf\<S0p&K*WgrA;F2IR--IWMfe4-,is89Ep;m#/Ic\BrW^Kh4/91t!+XC_Gbj_KeGIWu?'D
%=-4?4]l9X1W;3Mf$KUO&**ZL2.*1XVS11cX6$S'-JO;:0D</d>a;!Zh;R.2#!k9Jgq%p'1;9S;7Fn]XK/c2,VV?T$]=&EePD(uWf
%'Wt1.bRp@Q]ce"_h+d`CpOV\;Cqn])Rp9)^*30=T6AC/D3%S"77NsOID3IiCMPKde0ko!KNMbX@+r`:9MD5udYC&lNEP!1X8%ff,
%FHD#(G2cdWI,%juK%RN$d]10#GN\I0n);@H=?citmC*9`Mi>sNPD[7+PC>BJPm?anbI8Q]DE$0a9b0:S/]FVje[h\P9tq.X*euPM
%9N?<EL7?'XP*cLS3h)P"FaHWqrkE%TQpsq>iPfr"9s+6R>^l7sh+rUSN;?qXgmQFNel4g3OpGKl<.guPX#%oMS./gF"fbr2jA=9'
%JE6"X"sZ'cmqFdt[=:hA<`Q$Am&m>Ummr0p4JO_JKFm$Ih"YpNRbI,T#.Ic/8WO8*PNCoTT4ldPJ-sNrf>^%qJF3jF8AiBV-CsVG
%?n[nERWi.>i%]^n0X>5VCc.bP%C@1nJ"+']^,Wn@r]>fUa=#Q-\]5kTTt9a=rG$+cZY#&ho&(\_d+u5g0Ej1'Mq`\jXAOI4Ok?q7
%'rIfR"38&4!Ap/X8^:P:7"PC8j=6?YEKoCeP3dmOM1WP'-E)I*VSo&g']lf>U`5+=CYI5p-nN=fTA(]N%@a[L1GD9-2#!tY]MAN.
%NM9me:&+OYd*9^4YGP^3qULJ-em!%pl>1?sWnE_HnY,.M(b2d57;c`&eZ1!=Ybf'e*659#\E^d>`g[De1'K[3)8!be2YW7Jll9gm
%Ol6=LMWP2)PVQ[9?;)%BMoR!hfpL!NeRT9]Q5C-)%/pP0-l5<!_+o4`^hB@e*rCep+_91f+b$5lLnR:M0K<CYHC##ATU$.g96J1e
%YD7.K:D/PX3fjZ-j6Bd%6r4Jc*hkKr0s.I;aXH-W*18DO\2'krbX"H3"\H?80bHJ>(Q"8M*K2&I%Y8+[@Z9Sa*)um%g0u1=QU!"W
%PF@N_3B9nYeQZeB.L.b9&P81?,.c#E\-5#\]ipIkR1rX4oLd@/dnLitFK]-;&T_WTFn0R<7VXJH+kYq?;G)O[KW2;2ZHXSC=kmN1
%)@gg]Pe(p)k*18l6-`9_&<Frl==04GE\J?%bRA1'^>p+&8="[eGdAk/[GZ;'.r2h(dg'>^3DKADd3lT[QEXT'V5M,/fXaer!Ac0L
%bT3'T`!gpJi\LWC^-_G/I3'dCqe[l2afluU*0_atjT+'pKR,r[=^c<5h(N@CGi_`?RiDNsW`HG/^8>#nF?*eK!$&ZpY9$@GAGV[U
%S.ef3of1ZA=c[nZhSeJe;6-%/ro0aa`tCX5$PG^gMo4G1j:/3sPp.mM[5N62[JMDr]$9-(4k+!_mtnJP$rgEBl#Hn?E'QMWhLl<;
%e6d,;[9;&lZY=^uL0;>g)%$3gWLl'U,-l,#cp`4eWZ>l9FTE@;$>>t:BZKCU;oe4/7b#/``teX>g*R.fLBle,^n%Zi?$74A;JFk?
%;ao5rY'>$9RDJQ!>%AXW[K?B*m<M0'\_@N?QYdM+QYW:f84d>N<,la@mH3Kelrns:e+'t-5ZOCG1''42.C4S8\CRE,R6H59lE^0O
%b0^Qi*58c29u[[dFWtT;[=kXJr(lFLBe/%gng_k"EBcAp#&=Qs?*-O#9U/G_5oqjgI7s#p4!k2\1HNd2\^-BmgU&9cb*fKYeuSDp
%iFM7h!h=W;Aq%*@c6N/J<i=qlF%$0aBXuWFQ40JoM#f80?%KQuC=>Yh3RV#NA][;tlfKB_+NiJP6uRV62F%!hh-;8es6tSn4/P<'
%*B_MW:135'0Jr_RJpqQEs%K8>a9:>8=i"QNb&dgGkI6mO?i1tf,#$cY.m2rP6.g0oH_%.LFX'^QOG#/k$DTSFo[<RQ%$eVD1->nE
%WTH"6E"&1#\hogQa:U1(oW]>-&=uE\Yn?Jr.O=*2N'0>-HV("&fIfSo@L2ni"m4-CFm,YQ1?2fhWDPNTdAt7VnKGXpNr/h[.Ra^Y
%VU5lFfsFMP$prd+'#j&7k,d1fX>TXhMlrX:$a!@#Nr\u#a<ans0$XH088\98@)3r@Aj=]V3\%O5[0n,>P()#k>X0P)IEaY[9\!UF
%hCjR4bXI?jTf/`X^Go^!A.1_+-mk_N>"9LW0pIY*N$+!mi6:IBRW4>?Qd'qDgB]8uc41p\Vls/P3n1.(&$09/3bcKX+ik0g)QpD6
%$`pil:&3osoTH(6+Km[XROhMDiXU[&1r]R-Aa8mLi5*(H)A.6?#Z_`KK(6hQe*qp((l<>r;AINR9c^S8)h-Qc:,Ud`iW(k]CoImr
%PNYM@0-Z,3[d^Uha;rV`24j@lD$&inau#EQV1J2[2<b4^e%X3_<Ytfam'qF<kAR>CgSQG/.6pc^WVs\jfNfe?P?Ph6W]b4m23q3\
%D;=Q4MGO%'di[#nRI;E?_SY?B:0Uao\)YIm@)f!.HUOHs)2F*1kRS5hG!phRV7l2Ya+APjR+o&RKE(4aEgJ^d`8>GD'h0%.h+c*%
%IW>RJ>\;IiAAp$:bM:/uA6imPc!@F'4\.MYU@ff+fb<2q'u+!N+)]nk_Ts%+?_(@kgO`c6H",8l=DWZDfttfS!3#f$;Bcbta)]tq
%(MO8?D77Fp0AG0MQ-+)d3hcj%&Hakrg&urFV%;'=S)pq[i3gc1!CC$[;dbu9C&1HN9s(j;LM^$QZYsop]CUq>ET(2*=X/FR>ficW
%Rh/SA,=uF?pC#G;5Wkk<<]mTh7c5oE*G_c!Siu'La%^B5Q'>E/%l_+uM%E1KD;WSMhb@S,HEi.`"4An!f6*^%s/p8&YF]1Rn#Fi!
%mKa(rNW/E+O0fOp%%PGL3IGrgHlt`&`-]1/Sk"GNcs&0=K%QnqjB;N%\XlqHDUjlmT>DbQcV*]]EEq6OotVUXN_2*ta<Fd5$uIDV
%-"@85<j%C<O4]V';ag'DD7k&G$]e5_[E/a?ZT!\(<F%ILaCuAD^DW3]NnHb=C!k5#FJ$On-8uu$p#;mYqo_:7lPAjgp\)$e-#]"A
%9nT+h=pd&k_-n"`7_7pUFlC0$:o1/n5,W?'&J3nbI=9>qH)/Ko9o_fuB<1W'%:*n+F&I<!6XdsbNmPYb-).T_A/s&NE@dHt%sb@A
%^,R\8`M]f277P9"H,-<lU#T7G9csoW:/%+%pX2T/7>_pQ5DL<%&`'_"KEB`!aof(E^RjXDASB4#D=gLDm]+`OF3E0]j,_$-E68TS
%q.7<LkZA*TBepr#JRjKh5ebo2?`2m5Jdk57D3*-;_k;F#p:/^:=qKe7+.p5=+4=,F+p.HN1T+WH[+LA,qZa#4N<3r8%oZCQ`3DO1
%?UJ1a<TYn:U0-@ZmH%@gMTR^6R<<6K,,,e[pC_r3,*dn#3m.d];59sK=pdB.elJhdO5<<dAi4NJWfhFNR^^$_(X8[-8X*>r<5c@d
%l+l3#*E$<h8Mg.9n?C/<E)qrq8.rD78(DidDM,cY2B'$cC;4=mWa`\k2.oddMNF/m\PsPA$Ot;6bG5b$m&G7A`$9kDGd+kAh_U%j
%m\ubP)ofqd8/;JkRuGORG<QmN04*3I7>U;aB$o:mdW[@]=PL2O&V6-D&F.ki2uM&Z_k@6E097jJk@Gn7`u(d[-B2g)\jk!4+p:rY
%l*_06%2'a9&,;tgi/1SjQ*N=N2:V/#_H:c7;QM^>.s9s`7/*L\dC(A8Y9pLMp6!"4eJK"+O9k:dUOY0T.]#]eC^]VJM<L0Bj";Le
%i?]Qtd;'ULXE!\H@:CAtPW0t^l4eEG8SHYA49\R&X^A_1`uU/M@8Ym+V3H>RgK?n_6%LatGB)TB5H:8!%>3m6k[ooK"&iOR.2h'p
%2=kL\/EQtDSuV5AiQ;%t$N8ie,UML2qDs8f,;LRI:2+&JDj1p=f.:D&OeJSP>fu,`3mIY1eG$V#*;sUP@.@F:`*pZVdUdit$sa'B
%IlrEc'c\`a!=;0SU1EUH?:-Km7P@#cS?=la$6h<(>#K>SCBj$[X%eAK8JmCbVj3fKVYWci)qi%shF`^Bp"'?AH?a3tVgUI#PNnVW
%Ob]\<>8:WiBg8KrQ)'!3@NL):+f"%4g,*\k9/c9l54uW;YW=CRqf^H(3L5U.[RS3&fR)g'jHj6*!'cFNjm,cX>Co1-J4H)2]<[fZ
%620ZTn,f*?F,k1.b>N/IphZ4N]uM)JEYbUBY0)H9R23_LUd[cR"qR3W!$i-7PDYmXh="sp1:=-dTXs]L?s&up#ZaqR4%rf>6A6:X
%rM11;@-pXaHl#2MV702CVg[jiTJ]S:9F&(r-Z9(Cm-#%"%:,K-[a0ZOV0eh'/Sj)QIBQu+@Kb%B!b4qs0r7RS((m%h#3FDgBF-Z.
%@Fp^]+:)+edBOP+Xe]!^!UXkX#/O3]Vc34aD]!([\,OIphX.@b:+SktQ"ZJ;QG_!/AL55M6rNB-!?3&`=!@2Jl6cOoEb0#SC!$#n
%`KBDk3Zs<V@[1XDX(DAV5:lcH8/6Zo*Y&l>R)HPs]:<1gd=Xg/.57=SFS3`%DQoUll?jI+(K>AGoq"pB51?hN)*s-2/+]Bm4=II1
%Lgf+<m-,#2pl*oBWJ`:<VTAA5Y(lb3CI0=6+fK5@ENW6-[[OYH!kJ_8r=WMmU9u_5_Q$k*Y8&`-\Jm*,]-.?c$VBnW1)Bfp9<8Nr
%FbT#"*Sfm`UB"G/I=@`#>3T*e"`@Zu(MK.)lE(<L`fDe;4%Qo#WnqU?a-5PY!1uF,/^g\*`/o`dqtg*+.etC%q'18T`[CYo=Up0>
%B?JV\\?=fHOi1B8jfag,,N<J;oYg+F&L.'oNBh8D@c[pIc=">k]1lH3kUhi;OLT-aVOm$+FlnU?aQuDb(+0*ZWAW0NhlJ;tQ\+aX
%OBOBDoTU?8+pd7fmn*X?ID<2C`13UV$$Ml-8&($<//+%_>%fNJAdl3RUjqr'IiXKs3q_mr-GpW/[;r*bZ`+n%NKK"f!R)mg9(rr!
%k,VW9F`)KskSceCg+79SG?g+cM-6PFB^L&K'.;+4W<MdYeWj/.Xn0^nS)tJM?u<7;rYt6&/IrPj80J5=QUsi.QXSaqV>?Wj27V6l
%:ogeo9^s1k;W_DJb.@tX:EK&0/aVKfg+O-Oh7K\kCn>ON1POg^kqo0f^?/u`pt9^9AkIoE.K-d[KTlcd6==gC]Aq\DK\);ZYX`t'
%4`s8&WGP\I&9XeeYt"@"T6/V;_2GNiX'=XGr<$G$832#N)6%HdJO3+7<.?QfEYJn`4mlc7E>c*qZI^'WK'M^[\4c1>Q*u46f^(@M
%S1d*R'sGV">G'08cCY6ubl6T;$`[5\6]_R2?IUAQl6hE3!i0/+A%J-ABhiU=<FZ-X5%H(HKf+PY5[@sOj:Hb3nce=Hd`!g^dLi&/
%<76**VcR@^Y\804DMgA-Qp'S`fZGH&'mh,-]'Nj6,&i4PJ4P3d0QMNX3_f(gTIt2)Z87D((Y[?k"38XJb!MD9O(7-G('8u[9JM&B
%mMC\>'KoRm6hDmm3LSTO7A,olO"`\:)mufR()<m?6'edsYZ$5UK!D%(:44RQS\oCuQ[K%/L_p)>C;/5to!(WiQ\kgtj7g0W)1*?F
%DH4KD]VIc;O62X4<N_lhn2=LYhX"Xo@Op`'i=6484$0PqBo7TY\T7NY8c[mWKs!e_R\.5mS(5u?iaMe+(C_Y1jame*]hn*Ep+>31
%6E_$<s!>s/LhQ.i]M)#3h7MIhkp3nPV#u!8UVYS'4>$1^oW+-T"(:CD-^70@`E\J/TF*PYrS4\aK&P,,D_=!\s,[W7RV)H;mc^k2
%?38*u&Ok9(L7nC6E4;^#^:Eb'XLh\ri(N&QHpH3%@k.(shtZ1]oqo3r,+quO9e3stFYJ'R)q8)WTS0%25tRQAj+dnk*B*65M85LD
%NC4;^[\PF/TV)]i8u.I9N`s"!pca@T[4Mfj7<=Dk/COUWBkR4BqOsW56%ief>kDa:!:Dul7_ehg;A3:S6(9)JPUW=*c($KNkAY$j
%gcbZ!'Gu$58JAP[T:ul2>XC#OV;@aca(23>g\kqd^UfN4a8)X0)cX[\/[K@iqZpX\1[g4i:Ski=b#@!B'8`)BnOPAHT@0MjB.0*7
%Y""4$rM@Pan45,NYMG5M7h"_;Eqb\VAi?m;3<^-<)j5m%nAhm[C@Y[t+B9tnT)Rs4SP*CuPq$Ze*f+?A$m3["\?CC]Q#h,l[WUkb
%p6ucr3BZ-HhBrc<a/OY^5ogFk,&TDQO!*'2_i<X(F(S[K[UrC;.TI]0"2dJ"BC:o=30'tK`;O)MT\`5YSfBr:-Us*VX$J(6aPFHE
%7u&:+b\"Gf[%>bI+-AMpc`J+!VpHeP/0^X0_k7E2:TL02dr)nD(P<`[89pS4JJ</X`OI)BJGD3p614\Ti5gdUjLFq`"!B?FIEd3"
%-RBaO$@YIlVpCr1\jO*eGA=a7+JpqSI%fgh'?W&Q2R5d\!S_QEmrkh9TqEmo")#W8![0,Ji%82p'X`\E:H@+\/QbIh1_V=HPd$.e
%2E`22KnYf64(ukW7?[=T"20?u1TWjd-/H];nkD?#8sICnB0sKO7Xj8nCcR7'!6YeRO3&\5$#Vqf_bG;BdR^.O5&RB6=[VC9-LmlO
%2d[R6$`/enOpR.a9hZqoPBHHJJ<5oP/\DcC1FrW[RZC$QRlo+^HQ*1QX:)8LA)2ng$rHt"LhenfQ*K&-LmSnJ7nU(9Fn1Kd>Xe3d
%Ak3\A3igsK]j7.XaqIB0lA1?QO(lQpVO/hoKSH:_DT[pZ[7+CcVTRAR8;AHR<>E!2C>t!2MR2\&iZTrhG!g<Z/NNL6Zg5ASp:gY[
%m?u&PB<1Ng.9k-372gS[C'llnpgQ7urJ:*;2"n`MO)$B*1-[WG<Vsp-/=)Zq[-Rgl_D6qQo;\9'1:!S.+&hARdA)W64Gu2MrXNe-
%Q\ea'IC.NR]19`m#;/SV/$WKh<)2IcFr<MI=LY&WJEsE8d<:mDh50m"A4Pf+2YbgpP\@g286OMIpB\<RGP?N*3H72?6d,:&DQD'B
%C]f3(M`6;om!>BSAW3d"P=ZV1r>0_r'Vda1Bi$+]37ZL0\%FcrJ4KjLWXc;[PA_nCiGmTsO=-)Ij5TXairFE`=8W$B;E2DDE%%OP
%q-2"`@KAYBHR]>-2?a(f^&]3m=9q%Y$5N]/1d%975[<4_kPLmq"A-iiQ<oe7<!,g680Drp/B,RKG0"-dk`a686nd6Q)..!$GN*++
%e4c:l0:6-EK'Vt)gdB8)lU43N9rUnp;NAcfDB\oiAdsjm/_>:$`O*O+pLT3XBtJTS&0hp?'?e,#1#m8Bf2ItCM8NaLk3,X*oH@10
%IJVI[n;FH>/B:J@+1r^$pIE.9gCetcijAL&!;R?Ri%9tBh.3jKig>*8;+u8<V3"PJ6)-cD>)l7E]ho/3[re27Ak*Oiem%g5FURqe
%3k/`U6JL`]2i4o0#mG,>gdlYL%;1FH=4\i[&5c!GqdH[mPQQe5gseu<le/F?]2-VU,sHlBbn3oiFlPXtDiq<E3^<H04C=XEQOpgk
%D7DWXVIG)B0!P<fM(7lsqsSaV4bF&FMX)Z;32o@XUA2-pnHo.ta'I`)hREX4=1=Km+"C/EYMEhq'kf.TT(bD^rV.o'PK)ud:[cin
%7h?jW0l*=V(QBet>;mt=o#6;e"%-#^*bUa?3njl5=\Gk?>j[hK[XO5B8lI;3nN"@q+9C+n5Yq%15C6"+^2[N9J%Fu\h:gY.o>U1R
%<7l=$p/G3DC;l4cI$X9=f#k_OQaT<3J3o02[@?qhZ3fkLH8^hNqV&qg/\8)5H'e<m_pqGlI5X00ZKJ2[QDR,6Mi7:DLA)=t8W.#1
%DQj?a6oH_GdeiFr?Ti=C8a"R:#t3\\6K1dQ>lY*\5!#Dd,dOap&^$ATo%G<RpuFqPqd08_++CPGpm45#\s5kK`ca#f/gC2Zm$1Xd
%%,,Z9CD<55P01&`VDWY6<&N.*,+\(0ZGP.$eg%[o[o.D_*O?-gh3q@^eK4.gGIu"<3FTdkA89>+QNirbf9W98l/tVU@#IRnidTKT
%??H+6TLun7Y'h3t7cOe\,G%$0oBZGULYr#*5Q'[<YBs:L(WnT7l6T<D_H0J]81@H(I#sp/1I9c_i5tRl^/#$k<E(IGTj(>-'p'PQ
%T)-dYp$Oe'd!bp7\FU??S&M"G)+kb.mI@9u:j!.<.l4.;C6X10"*/3r#-QG&@:dEu1VJ8kq\_GDa1]E\R>qo1\ip?9fA7nt>U*Wk
%c,=iP1ZOC5BZG>AJc;.rR.nUlGj*8khS#JfSJ1aahp)hofu<4<B.k)3h7G*?(IEp_GpX@2]G:9"8++#-Y_$SeJB-UUd)2hh]oA_%
%+IA),8p$]=pbu8rX8r<YP^$31?bQ8O(,CY[Y`SD;f9N:T$GAQnl.,M0!I4k(`IaE/YtY*7/rJLn?4<>Z"-gNrZIZ/+n7M=E@a%)e
%[DkD%m+&SoVMo5ofKO6:b4.qPVb+s.a4>_$lZd\mV?1N8S*c\PRH$/H>K,"YB;^(EB"!/k'^[u"`bJ/cp2[a00iubbVWSPZ-l-u<
%/-0;%(%BM,Ie3Fl;'-8-C-DFhR9ohqqO5YD6t!7$7*@U-]NCsLW[]AR;@tMms&=8R9q?[qPAdTmN7lSGU>4e.?N"((PWi==\+nVm
%ULkR12<A=jok=GS$P@`RXY>!>O>,hQN2b"-PZ1[):A*m21Y)g@Xkl-'],kM)aCWMtQ<8aJED%UV`ELaGa8fI;YtMIbQMBW+3SCIj
%c'Sn_E2g1ii.5&PEf%dZB<<t:.o,>P-D3/p.[.H7_boJ-g?+T?^%g^IfiqBj2?'JbBlV#$;=UD\KNYu8BC9m2OOT"Lb.Ee$MmXg"
%cd)QsPJ-bQOGYMSfK-0sL3=5B%Rgs,@`$IWf'U]<h-kiuc0rjhV+\HESt,/tDl4T+IJ/,nRgJ9b$p>o12;2[3/.@N.oe^[N(4VQ-
%K;g"*%0DM):&<PB?N"K//m+j<3;4>75"OG79XT^ol9R$=c\k!QdT37/qW^KLP06`70<p[fEisWTjpXbo,M'fkZ!?_Z_NO2NMnM,]
%Vl0CQOTfngY,m@X75\6p)1;#pZSPjSf'eYIHhV^/iOj*Dr-#NJ4hS=qR<#Ad$-UhMg+@L!QYRgY2:gh^!:f!Hk\c,4J9p!?St53'
%];]T%a*6<5bG,6[1"mLllpTK)1rUg/^'7hll>[kb:;@:5UBg5lHr?sBQ#HmKch6_NXCkT.MauL9rS]]q_k6se%tAdMq>]LBn)_Go
%iP5B[T3dhcZUDe4r7tHP^]4<2l[M!WrR2#4nK7bns(2#qpHP2Jpof/Y,u8i6.+o1O;1hM6h)$"f)N"m]*oHEL"X8J9I_b8[e\RH&
%")EmA&2e`,d;dKcYhsjY`:#G2_(5t"1`GUaFe$PrNJ)r7F!9R5SPA63!qfWA#V]=8?[0775YN10[_PI4OOd=K_NIcKZ-%^_3$XDC
%J@Flhi19pW!fQ#/[`7R+p.M`AAp[nkL`3t`oU:?n8reWAU;Sr3?I3J-a8gOJ&i1u8F]D@"fcW6u)4uB,26fAEGJ5G-P\MX(:s\Ll
%Ll/&KP\nLoC'):q],Ed\?6`56H7?8gdirI'Vb"m>d2[7fWES.&-:VPc$+oT(::ZQ`_JIUq0k8=rVJ[caa5okmUfG@II@^)!4^pc'
%R]@o0M(;^]-PZu6b2@St%I=iH_/$(A5C)V1!"4JMqpNX`T*l"e''V;Eo5iEjDkRM;nP#CF74!:#qK`mB3A@=n'Y-JI?EY)VZ[G+h
%NfWB"B3/[nBPagCn(;3G)I8,tM">402HZlrBFN2&Cmu#%S(;7mKuhNkn[aKbpirf_n"l?=5QYYgm%UoBaE0)OBQ8b"%q$E+\2.n-
%@q-kBUfJ)J7H2^C.A-g548!QuGOFT%H2@4T_:bCq=`PFd47tX/NeV]2+;AD(h6Pm8)D#',?s4$l]l.3\%TNRsY[jArlb/e`Xslp<
%QuV[`Dl)6Hp#_QS":iLK]sV5ic[;V/6'%=Dlg8"`5=MT]QtZ6=R9k:d>=rjSjI'pT%:gc"em7U3/#jl3jgCJC0j)em0?'GQZV@'_
%lIGW,o;G]BICbb^lKGS`OM58PXQtjZ3%[PO.DL0P;pWLX$R`LOft#tOR:G"+nJsR;glo7MOuW:(kIRI7S+Ll=b54N\U7aSN?-h.c
%Rrp)u0qq?tjOPAIo]in@<TDGt3+ZO`eG!-@#bmQt_:Hlt%,FR@_cpqcGVd^M;Bs2i7d0@3A1rB`8'&f.G?LjBllk?n]1qD(4r:)5
%guJR1E@T*IC1Vp(FZ1TJg*3=kUZ16C07Gk#3[JEoG4#VS$:811Vo#9e8@#B^3W>ZoMNnD6L[eMNZ+/`+7>C7#>d&T6>83J:"@=g'
%Z\OBE_d;AQ$GAU50-/L%e\+?l&X=WI=5FQIX-%0.`U:jY?N"JJF'>shaCd_>CN(@=AG%\?JNM/%1Ll<heI+A*ZXFm+D+0E(;n`%H
%9X.Z6m?pU=a)Y5UESZBoBR'QCW;m[j4*V(B.MYbG[qn3BYc7m7St55eDl-9Y?n7RG*1j6)I]1DH-9gco_%QQd1IjtuE;W")q9=8I
%f7cjkqsdoEIPp[%01r[_idUTRc-;4.7Up1V`DK3N;c?\2#*[oXfmb-p,bM$UF1lcRBB&_M&S=aMJ%t5poP#g,!H=c=1_`ckmi(aZ
%I'r[5M>m2#O@nn;VGocEf6d6Il9;oa/ZVgsX'71UZNl='Y$<rig:`FC$:X0DA$qGJO8\qs%?\@nDu]?<n(l7a$HI?5R5IPNL%JI<
%^L5T_RU<Dm!k`nu26s[2ib*.i_c#]:hL=7]4+sk$3Rp4c;Th'7rX4M\i&.-]l!8.2&lUXFe!`@5fh-2=-to_XY?>6fda!K7J/Za<
%*3l[.Fb$up"o>/VPH@$Fk)V>nO"4[!6D'qqQoG1p]2VGC<IBSrDj)GKakF4BTkm(/;b?7t;o0Q:5Lk1"mbOP1fHnR>X:5/,97>+&
%$^)4YXPnjudU'Cr/PuSUh;j1.!)m,3e@Y$ZA%MTFfS+eI8)<idR8TaA=4uLiDF0ZP]Tm1W@OlGF`\ni^(ADj!IK#sj%G%t4=eQ:o
%4i-ZDF]Rk#.6r]5W-iTc[mtu"B$2tH#oJhJD`.FWjd=)i(Jp/c<!uS6C>5eO6A@UT_i#:A?3jd%MXVH(*B1<7=+.q'*MlKR;KEI^
%dPdX3@;DMt6Ed:"@o0MoP-rP(n`nAgma%&J3c%IkD`hsGA\H=oqF:fa(htJYjDjYoOuGl1ZNi--F.hIks3:JAhTU=S0Tu*M.Jh#6
%kGuF,LnC'/<\/71i<'"SLdn<['b-L>WeTqC'aaGk.^2__W7aG'P.,05>"rUXG-ZU@Y:aY&CqlJVMNObJ]iokb9jCUEegM%FArT]-
%aePXp@Q_h-h.nUWDB@mXe"=Yo]mCu:K`'$Zo]);@))g*/=D*hc<BM&GFX^"c*<MBbL=p5TC*M2G@m8_m1_N:D!-Mus:A)oGXNPmP
%?_0Mk?5\gAFur-Jd.^PGM6#S>@>2CE%\##IPKa6^_cuGrT15dZDGGS&ZM3eL]B12XOj$Kb?*m)?H90mKG,JrQS:#@ld5U#t[&A]&
%GBGQ?oOG#,-`;:\X\e@uUrt/g0K#<KB>6t7#*7J'FZ"k!X`n@tebuKN6*NBg^C`DREjAd(boVl3h)#Goc/_P?S&je5HH*RYW)%7\
%'I'A#!fQM^e:Bo.O8?3hY"qgdhVF]Ych>Ot6"?O+cEU_F3p9J07t'%@O;kG:&?%@e%e((tX/326(B<OQbl'fJBGk>FT'F:5#,[F0
%&W=9_B.qgc3ReaGWTHB2R(h.W)Aa-M5&7/Gckssi)i4P9ch696Zdl%8Gc6>hEu$cu,AS,&Qj.FMkna_rj2n("h`+-Q&[UV!F'nID
%PJ-hCm,%7ficR%]W^4mC-g/n=jV?:-%c%WT2Uru.S@)HQV_9jBq>%!rrF/CqLlqT:OOLmRVsgLsE"9BI2f9T@bUq5(^oTr*XBShG
%+f0tYj/HA`=r'nnDT)Xuo_%R<(c\lnU!B6_lBX3a%rU[@5%!)uq<!Ik!X#07JjGI\HLZ?5cp\9)1Kd?&&)?6F^pts0RG?O<hD$@3
%=9o3)g!BKVVr=Rl`.dHt\R,2Cef#&68D!q%e]f)U&V_f:>S/.e]3bHIQl9_j#<@oL``r.GM55b)YAsD`Z<+f0=eS"-6h\"RDUsoP
%+JYhnZb#NG'Z-GjEG?DLgpLB$C7)DIbSEKPQB]g];n[B.8):m,b(QLRgsdLj&51c_0CrL>KH0a]GHk(#KfT^B\:Tq"o]D-8<2:.%
%fTT7IG;"B/j-QP5"*2bONstLSZaUu+8=nF"X#N[pb*d1UIG>VLaOkOjC(=aCIcf*gk/ka%]:3sJ&AK4=*bG2+6fK[\mar&e8i=SW
%@?l+dBl*e.!GQ$"jsF]r9mB3RO)S*EG-6%,Am;_:QWJfgSS2u?=D_.<W1bA'<S]LmdO7QPDfq]+U/m+`m@ZoXii(>r[&"Z9R,V\b
%8+tm\*u='dM&D;/bk>gLclb]:@`m^1q%ot.2;*VfH`uOC;J4(K0#DU1f.i-T)ni)^>$$fOW8]`.PcdOpPc5S4^siZfO%Te_e$2PV
%^1q3EnSu:sidjQP/5..'<=[^"S+_:kqb<q<FK=!VDG<#XT;'M)IeC+.&;D#J^*L\S37UYHC9])uAUq#l;UT6Z''QZeq%l[R<QRi"
%1NL5E5npUF_DW/Ih4lEEO-NX./;57F8nP"\j-!Pn^mDKk&T/_$M;A*7WiAl"\k"q<<m_on1.%768HXP*G%crCZV+f#]p]Aq6XR9:
%"iZ=Z:/@(mFR&JS@=G,7X6o=4Jpm`;RYSBpI*cL]5_?U*VOp$L?N;mR=1m&]59&eX]P5M5INXn?YrPgcQ=DY/S#c4-N(i;4UPK96
%*&4+'/^=2>G1aP!0EOZL/XL.'4e1i//`7U0q_+k;T"e((S555sQJ,ha-3&Ac.S,u3[4Kn6:@X=H1eZRT'<si`PW+4je)?cT"-DWt
%akjY!#&_gA^Dfuc.3$9-(WRHde(J9%ZRo'^5*(iam`E*Z^--sSJ?J"U*(BqK\R#A<?7Oh!j14$YR<,BX#9s4K4E#0"10N`SHF\mp
%(nHut($)a/FMF8uC/eLpdbi!"HmTfO&I:=k-R\e(n)eu[+C1YAWEo@:fq_Kn)1i>]fpF-=C#D%R=o$$j;X^%;Q1'TEq.]!0UbjS`
%Ilu>@Dl+T\CZs0:L.r?s7TDrV[VAbUgf]g"neW+%h;E9h<uW/Dm>ZNeDt&sS^%uU^1Ds#Qg<J4.'fM$`Gq<B&F2O^j($Yq/Pli(N
%O&X5sV29(sV[D5*:\<M'S?`!9&:u=:k#N=MLS%l/GMD<s1KN_UM>2_uLq:_19maI2Jr],&8n=r1D^rZ/LNC0(V9fTJN`4!;Tu.Tp
%Fep$oh$%FAh?BM)`eFFb2@'oW1'\Zc;['+H9gSFA<%i\Rn4oeO0XK/oRG\['T'pF:,lB1,,PgPbq$:R^qBb.\n?e#eGDBialTLj(
%`NKHD%Z(cSn_R3f_?DCrUY`=Fp@b:5Fe:dF!d7mal_247ZVYWi?rW$RjBO?e0.^cj%bZ_sk+DU`'Y>PM&Y!BUO>,Xl(-%t<#+Gf.
%_d@Kb#g]BkanYZ#ls)2m1])!!gYC$M3L;-i+gYa:#^\k9[l/*_M9aRd-N7WT=Bq@kG@1X-O6:iZRfQ>1a5u\p1.?r%33H=m13$9"
%$)Z"LAaNFF&;hf:o7[,P1K:pOBi0=AeVdeY(5a`qh]$0RbS1@"/''!IjWn7ZQ29L/Mg%FtNi/2&`OI;)("<'%a^4mW:obA?#rSPh
%=XQ%=`m`=5bbie8ibkm_D?a98<>pV2GjK:a=WUMl65iYFp"ms[k<o'*&/.*^d^.^LK`oZk_HcINa_P%)<PUDffbd70re4r_oJ^EZ
%^@aO`AfjhBhVF]1_KX@%8YR[(j1/1j[.A([@jaC;^:MTJo[`2u57ascKKtS3"[q2UPWOW#7uGBK-[Y<"lF)0Im;u$7/m<VqT^ui$
%(6hg/klB43"IC_WAe27XI9OEYA/)Zo"k\b]27.biEBKiY]ph#@M>uR\Vs)!0lhtkaQE:bNUa$G?L[iS?rd[Ztjhc/.=[kN%3.RCR
%`ig850<8"^;'(SJ8<L=t?]e%rR:"F8#Sr2*M:2mM)86o9H`;1rTckg=#:PLD;;'_l8]YP$O_3LFIQGW)JH/jF<"-oaLI%AQC>1t6
%M/Q,)#\'bM<MHl$W$[5bP=l[,Mh7(:EEF3&p/:JST0MsTJPa!E=N+e^N^[QD2D7F8\8&F2,A<;%_o;Hb$!ld8k3!"N/=HlLkgao@
%>Al3YVJJ&N5Bah?*J1*rKI^O^WYdYNj-L(+O)E8lb(6c.M@u8u6;4uCO"h-f%j7Wh*IF$/rJ]`hq(9:V5nHYq+s,8\*QMa+0n@?H
%OP.[?.O?Jl<H;3.g@l.`_Nsq-M^:?9#\9gH8EH4JKsQuJ9M<9Ob%/dueD7k#r0XMCL[129TGhrXo[$-;Ur<7bqIa]>:Z2[5+XPRY
%1qo6j;X56pWlV,,%N<j&>>i<ahr^66=9dNqUW$DoRSAqa5$(uE2S]*`0d*TDl0C'h!TdV1k:q0Z]Zk,]6jiLJpa#._JT.UN9<lK!
%eC>m4(^t2H1Q.gZ).]Ng=4I#Bi>%OlY&en0d,,RK06q0!>'NUp>ua7=O*]AhV_S1F<OT=fm=M"\CKgkYAoO7p]./DooTtdE"YZ5f
%Xu<D12M$@#K'']^]s6Sj0T!k%@HA$#Qh-RY'N$E"2=k:Hrl8N6Ouq#..tVrD130ahqV.A$abf3?:;SoYU9RU#Ddphf8PgHTAK`MK
%Up;'j`%PuWF"([:;IYt3;GZTY1eKW(@D9BMdWA*TI>_)Mq>m[uZ!T7p>PaUMDcZ4m_4"BQao4''KTKe<5c_!K69fbb^PY_j6AH7>
%U[i=_5$a)Q2g;IfisHUR8^V*^TkeK+Qjm'G_[4ArIZ9rg%e+Yb;Ff8(l,uLJDa8SP&]ZXm'q3fG9t8m4jZL2pk@+491ZVLk8F&4,
%#:PCBXW=+jGPEEY=#]M.\u0t>1Y*Bci:<tl3I?%;,O7"Y+`0N$GXjh#SFAM2&FKgK^bPF>^KH]ZnA1Ju8m*/2l3pdYXf9\]CDHC@
%:V+FQl3`*^o[;RO3':0B0"*l0o't7e]JWu\LbT!2Ls:S6rk93VE6fL$9gj&Q&a'k9Q^fDN9!s\]^<TN7EH_eMD[oH[/6(Cr<^>;H
%UVpZf&OrtKmZ/Y0VlU!"I<\],LC_nID29ieS'(97M]OE4lWl.res"?qr:le=gs$g>%FAm=O<2\aaAYQ,q^Z;QA59<n!:<s99>d?.
%f0&'PV4E^*Wl$P+A"AkDSW9&S-!23e#.nbMQ3.58O`=4.6?Hc9@b$T8Us6SI>#]48jL;5JN:Ot()51rW26rOT$DKu>EheX]^7'(M
%.J`+3qosoHpeCQJ')a8d,,)#J^P,nUAbP\`jqA_-EjMbe,U"Ds/XLee#UEY7k?8Kj5e<7s!tpBfM3OYmfXJ>"T7dTM-m8Hsrm5K%
%_&<S_3KmHMjEe-p'-);mY_*TGlce1iR<ig3KVR)J7C_"+8]7PpdE1F[r+]0&s7BFQEUdT1](FY`>6;F$(`FVC]fKHA7>p!GMZYEP
%&b2Z-Q"a1G2C48b(OFd[lX]c8oMp@VA*RKkXT.S(k*)!Fqo?uNM%6SlB0W2iq:-ib)eTd6>c3qLHDcTOe!(O&3c<#UP6GkRC@3ET
%^Uhl?X]6\D*Si@%r2BS5HN[<Q)qqs"hopVTR6!YQ-;lsQ9CIk9F6>O'hOc^q^k2ugmF%L/cP6:Fl=hS:Rr6mWU>qT^3S>G<'.U4g
%m66HNPgA<?&OR3@Ssj5(T=YmH[?=GCiHW5EZ\Nh:\_6_@!SGXG_//#`@ek\1Jkg)LAGZdkY8qJPed.@T;7l3:2\$g;=V/eX&TT8$
%;Z>>)Uu()_"`@6NZs;`T-IlP'/U,jC2>(6Y,VtU@41L2eO@\*BXPL?WKfg!UJA86UFg6lA8jqNJb'i%$k;,GE;Y6_7YV%Xh^utX<
%?',"qpt&Mt'e3^prN9ZOf^$k3A*6e"SHT"oks5IbR5K8r'_G4+0g&bn*j%,0%3^\=@)Z,!a^l#&Qsn>u<fbfr.qt][-94J`Jl.`$
%ZPBO7L-r$Tb^O:M!qo3H+^&4S,)Y2[Qn/ln-F8Qf97aL0K[/<TlO]%krp]"]'na2Bb9J3JC3[CKUBo;6ohO`WX10Rk4d;t;4"eIk
%'XCQEP(^A#`?k9=Z5c0;jW_k_J3?U+f2Cp@YeRI60t2:7fBMEQUpeLqA=M6)@a]tqh_"MY-'6j=_J[r5Qm-sIpl+5gh.00[ll:aY
%>LH:uYVT0JKN#1&Jbr9Po?$nK<0\0j;H'-.W&(hA[-:D<P03uigqc7I@M$J/a-\jB3e`d-FP&?a<;Vf;BcT[C^?j_Q)BmV,>b8ZG
%HIDr-,_H?&?e\e_:HNh2O&,c,O=UKW0Ed-cW`pMRH(&0X@u1d6.Salc>].P*D4:DD9?^]"cX@tC[40J#@o*+A+UMkiN`^I#cW#R"
%MksbIoaUdnGC`mB=uO@CKNW&1(>uZZ[GWK8N!TOjEPqVEIffF6?u!@o=L<"NS!@();UqMXNK9?8Q%r#41$m37JH(p!0WtcuZI5h&
%I."a1?qjps98#0s++f$*&fTiiO%o)gcO@f`X]RXZM"NctNgI_Z+mD^CleSmuPt0L7F89=&j`='LKnF70s8:5!5/G'Or*6tb>q]I:
%^XW]1;Xnb&\^"m[DBGV^FVVoAT6;rGn1h_&XbT[ngl%0QSd]])bpTl..]Wu[e;8hG=+_YN8uM$(Wo#G<@mVJT2'K]_ibFBZcY0r;
%9gMrX#YPlG6?H-+ns[R>[__U7!O%(GZ/I+/?k^[;gqomU!MQIaMAQM+_he83auru*%R:Y6@gkqhfiKE"l6*pt2n&5NoNo..$Q7I*
%[Z-c(/q=`qSrt+gA7dldmPg\NJ1kd?4k?!"TG(2YCe*4<n2\Bga(9;8QA$Nun<b=mM19<313%`Pie\uRWbenK-#Cng?)gN:P'.$#
%BVDZY5jL5M7ID7Y\(/iN%ri;1/6`Ir5(?1S.c$Q^b2\RRd@)&UNTgIT1ZATRB@<6:L+._VrME5CYH(`^_U*$$Vj'Vc&kP91-/8"$
%J=-%8oT0,(aG9>g,BlQ<ZB]>a'B1AsDX&p%bZK(sU2a,Bk"F'*:(<`LI=oW!Fd4PGgWsg9=19D;Iku%"_X`C>UPTVp!0>@uEomdW
%FLW>(U=RPBTM?(X'\?@OK>r%jp"rkM<NNXn@\0H_-B8CD(=J9,Qrn8*_%a-:alA\`.XmWsp)6C'/]/0l5_$@5r>b90nS"JR<Qo63
%Te'-_CM?pYMM%8b)D(#QG4TN(pP^XZh6^rGJI1_496>.[!3*"<V2<lE=0`cSW+H17hQnr:rH72Yr(4tGVmnpffd^RNQ.;/$-d\Cp
%bk<a4Au;Ji[jeiYZdJ:jYi58<\rEaZ&Vm,1[Nm7$M+NWrC0*R<&&fQ2<7U)TC$_(L7VnPn2#`#i"S_8$:JUrT)ha>,PPNJWpRcj_
%E<FPbC299b+Dipf)AN+9_CJ`*Ma-GYGgc0rAZpZblm$<SJT"?alMJJB`1R27AEm@HPEMS`D6C-_g[h?Gh-dr4F@J$OUAhjm6dKUN
%:cF*rUWJ67$q%"0D.$D?ah`jg%4+i"O;rUgnB:s?&fuF`.p0(os5r_fm#udBE@B;5.Q/?o$oQf#l/SuQ1L^WUfB97a%iA'6DU7;N
%@/SDi6)(R^W1k0b\.h>HF0&GIRG+dkm:>'ZX&]tc\7eW64dE`F^])gh)*ENi&@"W?kpj^gHAUq9rt\VI->/=@U='jU3d"NF0HXm[
%#/7WTKr]aA^)d-OP0(`PGjuolmoj:q3@p;,I%8)N`"h:uNGE`!Ak?V>.CL<lQM0HJYbpbq#1/QT^&2cF9l4YcA\+:OMBb<N@5_jI
%7NR*OV6cIo!u>@Oj9k#IS^@+6h;Znfkk1>Q91H5,K=LUIlB-A)W)jMY29jkI:7pi6#V;-NUF-Tt$<.G9e8JfP<p^=Ek2%(1oFCTH
%qu3uP!2I7DCDK^krp&ScAIFKee[u4!(RI\TXJ%*'R)a%uNrR)5i;E<X+?0+d,1Y2A=A@r)7mg4pa[Vsrgr&qpH\ZgRn&N1,O8[Vd
%*l%ZChuEYqhgPIf%tF*ckCGkp++Eqp5Q.'9r9ce^rUbjeIe+*Mpq&1DIJDXeIudt6l$kqtl,,a`iMV2'5QBacIerPps8G7^'9;!D
%o*^'AB7KNVrjs8$oD\g/`8WW~>
%AI9_PrivateDataEnd
